<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | 网络书屋(Web Reading Room)]]></title>
  <link href="http://jueqingsizhe66.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://jueqingsizhe66.github.io/"/>
  <updated>2017-02-08T17:30:44+08:00</updated>
  <id>http://jueqingsizhe66.github.io/</id>
  <author>
    <name><![CDATA[Ye Zhaoliang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[搭建gitlab服务器及使用]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2015/06/09/da-jian-gitlabfu-wu-qi-ji-shi-yong/"/>
    <updated>2015-06-09T19:22:07+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2015/06/09/da-jian-gitlabfu-wu-qi-ji-shi-yong</id>
    <content type="html"><![CDATA[<p>现在有很多的公开的代码服务器
比如最为出名的是<a href="http://github.com">github</a>
Haskell开发的<a href="http://darcs.net/Binaries">Darcs</a>
国内比较出名的是</p>

<ul>
<li><a href="http://git.oschina.net">开源中国</a></li>
<li><a href="https://code.jd.com">京东</a></li>
</ul>


<p>然而，很多时候我们并不想把所有的东西都公开，于是想有一个私有的云平台，这样
我们就可以让很多内部的人员(局域网)使用了，gitlab正是为一堆比较懒的人设计的基于git的平台搭建。</p>

<!--more-->


<h2>参考链接</h2>

<ul>
<li><a href="http://blog.csdn.net/yanjiangbo/article/details/39154573">CentOS下一键安装GitLab</a></li>
<li><a href="http://www.2cto.com/os/201411/353292.html">gitlab一键安装笔记</a></li>
<li><a href="http://segmentfault.com/a/1190000002439923">使用Gitlab一键安装包后的日常备份恢复与迁移</a></li>
<li><a href="http://www.2cto.com/os/201408/323795.html">一键安装 gitlab7 on rhel6.4 并设置邮件发送</a></li>
</ul>


<h3>开始安装</h3>

<p>官网下载(我现在下载的版本是7.11.4.0  之前用的是7.1.1.0)
<a href="https://bitnami.com/stack/gitlab/installer">https://bitnami.com/stack/gitlab/installer</a></p>

<p>```
gitlab(更新版本的采用的是图形界面，之前的版本采用的是命令流,全面的图形化更方便些。现在是连启动都是图形界面了,比如gitlabci 也直接不需要用./ctlscript.sh start)
EmaikAddress : -977962857@qq.com
Login :xinran
passowrd:+++++++</p>

<p>配置gmail（省的自己配置)
```</p>

<p>使用的过程既可以是在网页中直接使用，也可以直接使用类似github的命令流操作，
但是前提是必须配置好服务器，类似于<a href="https://help.github.com/articles/set-up-git/">github的配置过程</a></p>

<h2>安装完毕，进行ssh配置的注意点</h2>

<h3>问题是rakegemes.rb里的一个block 有问题，提醒rake is not the part of the gem</h3>

<p>我分享一下解决方法，我的登录用户假如是fluid,那么我们现在使用</p>

<p>``` sh
ssh-keygen -t rsa -C &ldquo;你的登录邮箱gitlab账户&rdquo;</p>

<p>```
然后你就可以复制在/home/fluid/.ssh/id_rsa.pub，粘帖到你的gitlab的网页管理中添加ssh keys ,
以前我犯的错误是以为提取gitlab在安装的时候新建的git 用户的authority_keys,现在看来还真是跟github的配置有点像，这样之后还有一个小问题，
你得是在登录用户fluid才是可以git push等基本操作，而在root用户则是有权限限制，但是紧接着我在root用户下再次ssh-keygen…
这样在/root/.ssh/id_rsa.pub又有一个新的key，你只要也把他添加到gitlab管理界面的profile setting里的ssh keys 添加一下就可以了.
所以变成和github一样可以用root用户，其实罗嗦那么久还是ssh-keygen问题，还有记得对应用户的key问题</p>

<h2>开始使用</h2>

<h3>我在网页上创建了一个项目</h3>

<p>得到了如下信息:</p>

<p>Global Setting
``` sh
git config &mdash;global user.name &ldquo;Administrator&rdquo;
git config &mdash;global user.email &ldquo;977962857@qq.com&rdquo;</p>

<p>```</p>

<p>Create a new repository
<code>sh
git clone git@127.0.1.1:xinran/f708OpenFoam.git cd f708OpenFoam
touch README.md
git add README.md
git commit -m "add README"
git push -u origin master
</code></p>

<p>Existing folder or Git repository
<code>sh
cd existing_folder
git init
git remote add origin git@127.0.1.1:xinran/f708OpenFoam.git git push -u origin master
</code></p>

<p>然后我cd /root/.ssh/
因为我之前已经设置好了git配置，不懂的人可以参考<a href="http://jueqingsizhe66.github.io/blog/2015/05/29/githe-githubpei-zhi">git和github的配置</a>
然后拷贝id.pub的内容</p>

<h3>测试是否走通了</h3>

<p>我们很想知道到底我们已经配置好了服务器?也很想知道局域网内的客户端是否可以访问服务器？</p>

<p>测试方法：</p>

<p><code>sh
root at fluidman-OptiPlex-990 in /opt/gitlab-7.1.1-0[21:17:36下午]
$ ssh -T git@127.0.1.1
Welcome to GitLab, Anonymous!
</code></p>

<p>局域网人员测试:
<code>sh
比如我的127.195.172.64别人只要在浏览器输入 127.195.172.64:80然后就可以了！！
</code></p>

<h3>reate Repository（创建仓库）</h3>

<p><code>sh
mkdir common-util
cd common-util
git init
touch README
git add README
git commit -m 'first commit'
git remote add origin git@127.0.0.1:devteam/common-util.git
git push -u origin master
</code></p>

<h3>对于已存在Git项目：</h3>

<p>```sh
cd existing_git_repo
git remote add origin git@127.0.0.1:devteam/common-util.git
git push -u origin master</p>

<p>```</p>

<p>开发完之后，你进行</p>

<ul>
<li>测试</li>
<li>检查</li>
<li>再测试等过程</li>
</ul>


<p>还需要进行提交.</p>

<h2>多用户问题</h2>

<h3>注意验证用户</h3>

<p>会被弄到垃圾邮件当中，
并且验证链接需要注意的是一定得改一下IP，
比如：</p>

<p><code>sh
http://127.0.1.1/users/confirmation?confirmation_token=AEHLjx2WR21sb3zULW5h
</code>
我的内网IP是(ubuntu :ifconfig    windows: cmd&mdash;> ipconfig 进行查看)
121.195.172.217
那么就变为
<code>sh
http://121.195.172.217/users/confirmation?confirmation_token=AEHLjx2WR21sb3zULW5h
</code>
<strong>这步的一个完美解决方案是在装gitlab的时候domain不要填127.0.1.1而应该填你的固有IP（动态获取的IP的话，最好保持不断网，基本上也能够维持IP不变）这样以后就不许要修改了</strong></p>

<h3>我的目录分门别类(目的是一个项目一个文件夹)</h3>

<p>```sh
/
├── dns-of-incompact3d
├── dns-of-semtex
├── fortran-learning-and-some-tools
├── lisper
├── nreal-fast</p>

<p>```</p>

<h3>我的一次使用提交</h3>

<p><code>sh
root at fluidman-OptiPlex-990 in /latex-chines-english[10:05:08上午]  on git:develop running make, make, make, and make
$ git push -u origin develop
Counting objects: 208, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (205/205), done.
Writing objects: 100% (208/208), 23.27 MiB | 7.67 MiB/s, done.
Total 208 (delta 40), reused 0 (delta 0)
To git@127.0.1.1:xinran/latex-chines-english.git
 * [new branch]      develop -&gt; develop
分支 develop 设置为跟踪来自 origin 的远程分支 develop。
</code></p>

<p>很多事情关键在于<strong>坚持</strong>,代码服务器现在有了，关键是几个人协力合作的问题,比如一起往openfoam的风电(疯癫)方向发展。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git和github配置]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2015/05/29/githe-githubpei-zhi/"/>
    <updated>2015-05-29T21:14:39+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2015/05/29/githe-githubpei-zhi</id>
    <content type="html"><![CDATA[<p>git是一个Linus开发的一个版本控制系统，其实就是一个文件系统而已。
下面是我总结的一些操作步骤，最终的目的是你可以提交信息到github，
并了解git和github之间的关系。</p>

<!--more-->


<h2>1. 打开git</h2>

<p><img src="/images/git/1.png" alt="打开" /></p>

<h2>2. 配置本地git环境</h2>

<p><img src="/images/git/config.png" alt="配置" /></p>

<h2>3. Github 注册用户</h2>

<p><img src="/images/git/register.png" alt="注册" /></p>

<p>账号邮箱最好是你刚才git本地配置！ 密码自己选</p>

<h2>4. ssh 公匙生成（一路回车 就好，由于我已经配置好了公匙所以显示是否覆盖。。。。。）</h2>

<p><img src="/images/git/ssh.png" alt="ssh" /></p>

<h2>5. 拷贝公匙到黏贴板（ubuntu 得安装clip命令： apt-get install clip</h2>

<p><img src="/images/git/copy.png" alt="拷贝" /></p>

<h2>6. 登陆你的github用户</h2>

<p><img src="/images/git/enter.png" alt="登录" />
自动切换到登陆后的界面
<img src="/images/git/interface.png" alt="界面1" />
然后，你点击配置，如上图所示。
<img src="/images/git/interface2.png" alt="界面2" /></p>

<p>按照上图，打开添加公匙界面，然后利用下图的Add SSH key添加公匙。Title的内容随便写。。。。。。。主要是把公匙框填好即可
<img src="/images/git/interface3.png" alt="界面3" />
<img src="/images/git/name.png" alt="取名字" /></p>

<p>网上说要测试，但是大部分情况，这样就算通过了，你也可以按照<a href="https://help.github.com/articles/generating-ssh-keys/">https://help.github.com/articles/generating-ssh-keys/</a></p>

<pre><code> 这个连接的说法进行测试，。。。。。。我现在一般不测试。。。。
</code></pre>

<h2>7. 现在开始下载RupengFanYi/fanyi 的原始版本内容</h2>

<p>我是想把已经翻译的放在Finished文件夹下
<img src="/images/git/folder.png" alt="文件夹" /></p>

<p>我们现在开始克隆这个项目《&mdash;&mdash;-做正事了！！</p>

<p>Git clone
<img src="/images/git/clone.png" alt="复制gtk项目" /></p>

<p>记住，你可以切换到任意目录下进行git clone,你也可以把你的这个fanyi文件夹拷贝到任意文件夹
Cd f:/  就表示切换到f盘
<img src="/images/git/changedirectory.png" alt="切换目录" /></p>

<p>既然已经git clone 了之后，我们现在开始进行第八步</p>

<h2>8.  把你已经翻译的文件 比如*.html 复制到Finished 文件夹表示已经翻译的</h2>

<p>一般不动fanyi文件夹里面的内容！我们只是把翻译好的文件拷贝到Finished然后上传</p>

<p>然后再切回到主工作区（表示 fanyi文件夹下）
<img src="/images/git/finished.png" alt="完成" /></p>

<p>下面字符界面操作流程：
<img src="/images/git/solve.png" alt="添加" /></p>

<p>但是也可能push出现问题，
比如Gtk翻译01犯的错误
<img src="/images/git/oneeroor.png" alt="一个错误" /></p>

<p>这个是因为，我实现更新了文件，而他的当前文件夹没有！所以发生了冲突</p>

<p><img src="/images/git/errorContent.png" alt="报错内容" />
这就是报错的内容，所以你现在的解决办法办法是：
<img src="/images/git/solve.png" alt="解决" />
然后就ok了
<img src="/images/git/ok.png" alt="可以" /></p>

<h2>总结</h2>

<p>以后我们可以这样做
<img src="/images/git/future.png" alt="步骤1" />
<img src="/images/git/future2.png" alt="步骤2" /></p>

<p>Gtk翻译01说有一个小问题：（仅供大家参考）
<img src="/images/git/note.png" alt="注意" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2014/05/11/git/"/>
    <updated>2014-05-11T12:39:32+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2014/05/11/git</id>
    <content type="html"><![CDATA[<!--more-->


<h3>How to utilize the git?</h3>

<blockquote><p>They say</p></blockquote>

<h1>What I say</h1>
]]></content>
  </entry>
  
</feed>

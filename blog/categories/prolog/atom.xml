<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Prolog | 网络书屋(Web Reading Room)]]></title>
  <link href="http://jueqingsizhe66.github.io/blog/categories/prolog/atom.xml" rel="self"/>
  <link href="http://jueqingsizhe66.github.io/"/>
  <updated>2017-02-08T09:06:06+08:00</updated>
  <id>http://jueqingsizhe66.github.io/</id>
  <author>
    <name><![CDATA[Ye Zhaoliang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Tool to Navigate the Achivement in the Source Tree]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/09/21/a-tool-to-navigate-the-achivement-in-the-source-tree/"/>
    <updated>2016-09-21T02:13:20+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/09/21/a-tool-to-navigate-the-achivement-in-the-source-tree</id>
    <content type="html"><![CDATA[<p>We go to <a href="http://github.com/">github</a>, then download the souce code,
go on looking into the code, dame it! So many codes ,so many branches,
how to figure out the develop process?</p>

<p>Maybe you can use the <a href="https://www.sourcetreeapp.com/">sourceTree</a> to help you visulize the source tree,
or the right below tool for helping navigating the source tree in the time
and compare with each other continually.</p>

<ul>
<li><a href="#compare">1. 源码比较目录</a></li>
<li><a href="#detail">2. 文件细节</a></li>
<li><a href="#time">3. 时间变化表</a></li>
<li><a href="#short">4. 列出简要信息</a></li>
<li><a href="#code">5. shell code for navigating the source tree in the git repository</a></li>
</ul>


<!--more-->




<h2 id="compare">1. 比较目录</h2>


<p><a href="http://pygments.org/docs/lexers/">color block languages</a> for modify,maybe you need sometimes in your blogs writing life.</p>

<ul>
<li><a href="#1">1: 正在比较变动前 6ced089 和变动后 3d8b517</a></li>
<li><a href="#2">2: 正在比较变动前 3d8b517 和变动后 ccd942c</a></li>
<li><a href="#3">3: 正在比较变动前 ccd942c 和变动后 0b3607d</a></li>
<li><a href="#4">4: 正在比较变动前 0b3607d 和变动后 acf4ec3</a></li>
<li><a href="#5">5: 正在比较变动前 acf4ec3 和变动后 c1ad93f</a></li>
<li><a href="#6">6: 正在比较变动前 c1ad93f 和变动后 c7c8226</a></li>
<li><a href="#7">7: 正在比较变动前 c7c8226 和变动后 0cd29ea</a></li>
<li><a href="#8">8: 正在比较变动前 0cd29ea 和变动后 13f7fbf</a></li>
<li><a href="#9">9: 正在比较变动前 13f7fbf 和变动后 5520d75</a></li>
<li><a href="#10">10: 正在比较变动前 5520d75 和变动后 8656a39</a></li>
<li><a href="#11">11: 正在比较变动前 8656a39 和变动后 7421981</a></li>
<li><a href="#12">12: 正在比较变动前 7421981 和变动后 bfcb63b</a></li>
<li><a href="#13">13: 正在比较变动前 bfcb63b 和变动后 84afd69</a></li>
<li><a href="#14">14: 正在比较变动前 84afd69 和变动后 c2bfd3f</a></li>
<li><a href="#15">15: 正在比较变动前 c2bfd3f 和变动后 fa364fc</a></li>
<li><a href="#16">16: 正在比较变动前 fa364fc 和变动后 3c900f4</a></li>
<li><a href="#17">17: 正在比较变动前 3c900f4 和变动后 65cc1c3</a></li>
<li><a href="#18">18: 正在比较变动前 65cc1c3 和变动后 20e1f21</a></li>
<li><a href="#19">19: 正在比较变动前 20e1f21 和变动后 e2e9fc1</a></li>
<li><a href="#20">20: 正在比较变动前 e2e9fc1 和变动后 4b72d15</a></li>
<li><a href="#21">21: 正在比较变动前 4b72d15 和变动后 54248f7</a></li>
<li><a href="#22">22: 正在比较变动前 54248f7 和变动后 3b9a773</a></li>
<li><a href="#23">23: 正在比较变动前 3b9a773 和变动后 1e9a910</a></li>
<li><a href="#24">24: 正在比较变动前 1e9a910 和变动后 6dc1cf5</a></li>
<li><a href="#25">25: 正在比较变动前 6dc1cf5 和变动后 76ea35d</a></li>
<li><a href="#26">26: 正在比较变动前 76ea35d 和变动后 2a2728b</a></li>
<li><a href="#27">27: 正在比较变动前 2a2728b 和变动后 7f9fc82</a></li>
<li><a href="#28">28: 正在比较变动前 7f9fc82 和变动后 5baddb5</a></li>
<li><a href="#29">29: 正在比较变动前 5baddb5 和变动后 95bfe7f</a></li>
<li><a href="#30">30: 正在比较变动前 95bfe7f 和变动后 f1322fa</a></li>
<li><a href="#31">31: 正在比较变动前 f1322fa 和变动后 474bea8</a></li>
<li><a href="#32">32: 正在比较变动前 474bea8 和变动后 262cb2a</a></li>
<li><a href="#33">33: 正在比较变动前 262cb2a 和变动后 e7e6033</a></li>
<li><a href="#34">34: 正在比较变动前 e7e6033 和变动后 e17bf44</a></li>
<li><a href="#35">35: 正在比较变动前 e17bf44 和变动后 6596aa1</a></li>
<li><a href="#36">36: 正在比较变动前 6596aa1 和变动后 87e8982</a></li>
<li><a href="#37">37: 正在比较变动前 87e8982 和变动后 cb6aada</a></li>
<li><a href="#38">38: 正在比较变动前 cb6aada 和变动后 7c8125b</a></li>
<li><a href="#39">39: 正在比较变动前 7c8125b 和变动后 6a38f95</a></li>
<li><a href="#40">40: 正在比较变动前 6a38f95 和变动后 ebb86cd</a></li>
<li><a href="#41">41: 正在比较变动前 ebb86cd 和变动后 1549e44</a></li>
<li><a href="#42">42: 正在比较变动前 1549e44 和变动后 61ddca2</a></li>
<li><a href="#43">43: 正在比较变动前 61ddca2 和变动后 26f07e7</a></li>
<li><a href="#44">44: 正在比较变动前 26f07e7 和变动后 f78b4f8</a></li>
<li><a href="#45">45: 正在比较变动前 f78b4f8 和变动后 3109362</a></li>
<li><a href="#46">46: 正在比较变动前 3109362 和变动后 df0ab09</a></li>
<li><a href="#47">47: 正在比较变动前 df0ab09 和变动后 73e976b</a></li>
<li><a href="#48">48: 正在比较变动前 73e976b 和变动后 090c25d</a></li>
<li><a href="#49">49: 正在比较变动前 090c25d 和变动后 daed8bf</a></li>
<li><a href="#50">50: 正在比较变动前 daed8bf 和变动后 528b9af</a></li>
<li><a href="#51">51: 正在比较变动前 528b9af 和变动后 e594ae6</a></li>
<li><a href="#52">52: 正在比较变动前 e594ae6 和变动后 bbefbf7</a></li>
<li><a href="#53">53: 正在比较变动前 bbefbf7 和变动后 0cc5421</a></li>
<li><a href="#54">54: 正在比较变动前 0cc5421 和变动后 dbc602d</a></li>
<li><a href="#55">55: 正在比较变动前 dbc602d 和变动后 a2456df</a></li>
<li><a href="#56">56: 正在比较变动前 a2456df 和变动后 20c6017</a></li>
<li><a href="#57">57: 正在比较变动前 20c6017 和变动后 f694d77</a></li>
<li><a href="#58">58: 正在比较变动前 f694d77 和变动后 af5d96d</a></li>
<li><a href="#59">59: 正在比较变动前 af5d96d 和变动后 ab4b616</a></li>
<li><a href="#60">60: 正在比较变动前 ab4b616 和变动后 74bd19d</a></li>
<li><a href="#61">61: 正在比较变动前 74bd19d 和变动后 8ffff6f</a></li>
<li><a href="#62">62: 正在比较变动前 8ffff6f 和变动后 ac3423a</a></li>
<li><a href="#63">63: 正在比较变动前 ac3423a 和变动后 57932e4</a></li>
<li><a href="#64">64: 正在比较变动前 57932e4 和变动后 315b16e</a></li>
<li><a href="#65">65: 正在比较变动前 315b16e 和变动后 898b5d2</a></li>
<li><a href="#66">66: 正在比较变动前 898b5d2 和变动后 4279a49</a></li>
<li><a href="#67">67: 正在比较变动前 4279a49 和变动后 c173073</a></li>
<li><a href="#68">68: 正在比较变动前 c173073 和变动后 107c515</a></li>
<li><a href="#69">69: 正在比较变动前 107c515 和变动后 8f574bb</a></li>
<li><a href="#70">70: 正在比较变动前 8f574bb 和变动后 d7088dd</a></li>
<li><a href="#71">71: 正在比较变动前 d7088dd 和变动后 94ed05d</a></li>
<li><a href="#72">72: 正在比较变动前 94ed05d 和变动后 f481060</a></li>
<li><a href="#73">73: 正在比较变动前 f481060 和变动后 ce492ef</a></li>
<li><a href="#74">74: 正在比较变动前 ce492ef 和变动后 ddef555</a></li>
<li><a href="#75">75: 正在比较变动前 ddef555 和变动后 af27fdd</a></li>
<li><a href="#76">76: 正在比较变动前 af27fdd 和变动后 f390238</a></li>
<li><a href="#77">77: 正在比较变动前 f390238 和变动后 c5f7d82</a></li>
<li><a href="#78">78: 正在比较变动前 c5f7d82 和变动后 acf6467</a></li>
<li><a href="#79">79: 正在比较变动前 acf6467 和变动后 6656a2d</a></li>
<li><a href="#80">80: 正在比较变动前 6656a2d 和变动后 256c9ce</a></li>
<li><a href="#81">81: 正在比较变动前 256c9ce 和变动后 bf4ebea</a></li>
<li><a href="#82">82: 正在比较变动前 bf4ebea 和变动后 70aec99</a></li>
<li><a href="#83">83: 正在比较变动前 70aec99 和变动后 e06e6ba</a></li>
<li><a href="#84">84: 正在比较变动前 e06e6ba 和变动后 0fd12ca</a></li>
<li><a href="#85">85: 正在比较变动前 0fd12ca 和变动后 67c4157</a></li>
<li><a href="#86">86: 正在比较变动前 67c4157 和变动后 b972e2b</a></li>
<li><a href="#87">87: 正在比较变动前 b972e2b 和变动后 8bbc84c</a></li>
<li><a href="#88">88: 正在比较变动前 8bbc84c 和变动后 033fa14</a></li>
<li><a href="#89">89: 正在比较变动前 033fa14 和变动后 fdb5a9e</a></li>
<li><a href="#90">90: 正在比较变动前 fdb5a9e 和变动后 6ec582e</a></li>
<li><a href="#91">91: 正在比较变动前 6ec582e 和变动后 68b53b8</a></li>
<li><a href="#92">92: 正在比较变动前 68b53b8 和变动后 46e8f3c</a></li>
<li><a href="#93">93: 正在比较变动前 46e8f3c 和变动后 3162d88</a></li>
<li><a href="#94">94: 正在比较变动前 3162d88 和变动后 714b2e0</a></li>
<li><a href="#95">95: 正在比较变动前 714b2e0 和变动后 af7a387</a></li>
<li><a href="#96">96: 正在比较变动前 af7a387 和变动后 7b434e3</a></li>
<li><a href="#97">97: 正在比较变动前 7b434e3 和变动后 dcbcb4d</a></li>
<li><a href="#98">98: 正在比较变动前 dcbcb4d 和变动后 50a3dbc</a></li>
<li><a href="#99">99: 正在比较变动前 50a3dbc 和变动后 a97e8e1</a></li>
<li><a href="#100">100: 正在比较变动前 a97e8e1 和变动后 9513a9b</a></li>
<li><a href="#101">101: 正在比较变动前 9513a9b 和变动后 7163f60</a></li>
<li><a href="#102">102: 正在比较变动前 7163f60 和变动后 b2f4aef</a></li>
<li><a href="#103">103: 正在比较变动前 b2f4aef 和变动后 ba30c25</a></li>
<li><a href="#104">104: 正在比较变动前 ba30c25 和变动后 0eea41b</a></li>
<li><a href="#105">105: 正在比较变动前 0eea41b 和变动后 c1691bd</a></li>
<li><a href="#106">106: 正在比较变动前 c1691bd 和变动后 3de9fc2</a></li>
<li><a href="#107">107: 正在比较变动前 3de9fc2 和变动后 cb34d89</a></li>
<li><a href="#108">108: 正在比较变动前 cb34d89 和变动后 7f0e20f</a></li>
<li><a href="#109">109: 正在比较变动前 7f0e20f 和变动后 c16a7a7</a></li>
<li><a href="#110">110: 正在比较变动前 c16a7a7 和变动后 8bbb08c</a></li>
<li><a href="#111">111: 正在比较变动前 8bbb08c 和变动后 34c8b1a</a></li>
<li><a href="#112">112: 正在比较变动前 34c8b1a 和变动后 d883d06</a></li>
<li><a href="#113">113: 正在比较变动前 d883d06 和变动后 66ac0a0</a></li>
<li><a href="#114">114: 正在比较变动前 66ac0a0 和变动后 ab5a102</a></li>
<li><a href="#115">115: 正在比较变动前 ab5a102 和变动后 65f43b8</a></li>
<li><a href="#116">116: 正在比较变动前 65f43b8 和变动后 c6de3d1</a></li>
<li><a href="#117">117: 正在比较变动前 c6de3d1 和变动后 cab2231</a></li>
<li><a href="#118">118: 正在比较变动前 cab2231 和变动后 008c5e6</a></li>
<li><a href="#119">119: 正在比较变动前 008c5e6 和变动后 dba5c72</a></li>
<li><a href="#120">120: 正在比较变动前 dba5c72 和变动后 eff64ee</a></li>
<li><a href="#121">121: 正在比较变动前 eff64ee 和变动后 89eb423</a></li>
<li><a href="#122">122: 正在比较变动前 89eb423 和变动后 2346997</a></li>
<li><a href="#123">123: 正在比较变动前 2346997 和变动后 d22d50e</a></li>
<li><a href="#124">124: 正在比较变动前 d22d50e 和变动后 e64cc35</a></li>
<li><a href="#125">125: 正在比较变动前 e64cc35 和变动后 763a529</a></li>
<li><a href="#126">126: 正在比较变动前 763a529 和变动后 d962f81</a></li>
<li><a href="#127">127: 正在比较变动前 d962f81 和变动后 63a5cd7</a></li>
<li><a href="#128">128: 正在比较变动前 63a5cd7 和变动后 ce95c3c</a></li>
<li><a href="#129">129: 正在比较变动前 ce95c3c 和变动后 44cd5a6</a></li>
<li><a href="#130">130: 正在比较变动前 44cd5a6 和变动后 c0c5e18</a></li>
<li><a href="#131">131: 正在比较变动前 c0c5e18 和变动后 603344f</a></li>
<li><a href="#132">132: 正在比较变动前 603344f 和变动后 2679253</a></li>
<li><a href="#133">133: 正在比较变动前 2679253 和变动后 a5e20f8</a></li>
<li><a href="#134">134: 正在比较变动前 a5e20f8 和变动后 bc3c502</a></li>
<li><a href="#135">135: 正在比较变动前 bc3c502 和变动后 7ec98aa</a></li>
<li><a href="#136">136: 正在比较变动前 7ec98aa 和变动后 984d3b9</a></li>
<li><a href="#137">137: 正在比较变动前 984d3b9 和变动后 4401e20</a></li>
<li><a href="#138">138: 正在比较变动前 4401e20 和变动后 2247466</a></li>
<li><a href="#139">139: 正在比较变动前 2247466 和变动后 f4a9322</a></li>
<li><a href="#140">140: 正在比较变动前 f4a9322 和变动后 0d2712a</a></li>
<li><a href="#141">141: 正在比较变动前 0d2712a 和变动后 3518985</a></li>
<li><a href="#142">142: 正在比较变动前 3518985 和变动后 322ca62</a></li>
<li><a href="#143">143: 正在比较变动前 322ca62 和变动后 c4bf9ea</a></li>
<li><a href="#144">144: 正在比较变动前 c4bf9ea 和变动后 2a6dafd</a></li>
<li><a href="#145">145: 正在比较变动前 2a6dafd 和变动后 145615e</a></li>
<li><a href="#146">146: 正在比较变动前 145615e 和变动后 f16acca</a></li>
<li><a href="#147">147: 正在比较变动前 f16acca 和变动后 4e2d9f1</a></li>
<li><a href="#148">148: 正在比较变动前 4e2d9f1 和变动后 6359c9c</a></li>
<li><a href="#149">149: 正在比较变动前 6359c9c 和变动后 00537d0</a></li>
<li><a href="#150">150: 正在比较变动前 00537d0 和变动后 acadc39</a></li>
<li><a href="#151">151: 正在比较变动前 acadc39 和变动后 51359c6</a></li>
<li><a href="#152">152: 正在比较变动前 51359c6 和变动后 73047b3</a></li>
<li><a href="#153">153: 正在比较变动前 73047b3 和变动后 e4c4586</a></li>
<li><a href="#154">154: 正在比较变动前 e4c4586 和变动后 7b991bb</a></li>
<li><a href="#155">155: 正在比较变动前 7b991bb 和变动后 fa1518f</a></li>
<li><a href="#156">156: 正在比较变动前 fa1518f 和变动后 8593ed6</a></li>
<li><a href="#157">157: 正在比较变动前 8593ed6 和变动后 cc53b1e</a></li>
<li><a href="#158">158: 正在比较变动前 cc53b1e 和变动后 202a241</a></li>
<li><a href="#159">159: 正在比较变动前 202a241 和变动后 858b5fb</a></li>
<li><a href="#160">160: 正在比较变动前 858b5fb 和变动后 260b62d</a></li>
<li><a href="#161">161: 正在比较变动前 260b62d 和变动后 a6886ca</a></li>
<li><a href="#162">162: 正在比较变动前 a6886ca 和变动后 41914a2</a></li>
<li><a href="#163">163: 正在比较变动前 41914a2 和变动后 05a5fd2</a></li>
<li><a href="#164">164: 正在比较变动前 05a5fd2 和变动后 fd6c59b</a></li>
<li><a href="#165">165: 正在比较变动前 fd6c59b 和变动后 121e68f</a></li>
</ul>


<h2 id="detail">2. 文件细节</h2>




<h2 id="1"> 1: 正在比较变动前 6ced089 和变动后 3d8b517 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
index f1b9cf5..a63cbff 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -1,3 +1,6 @@
 [submodule &ldquo;Prolog-Library-Collection&rdquo;]</p>

<pre><code>path = Prolog-Library-Collection
url = https://github.com/wouterbeek/Prolog-Library-Collection.git
</code></pre>

<p>+[submodule &ldquo;plHtml&rdquo;]
+   path = plHtml
+   url = <a href="https://github.com/wouterbeek/plHtml.git">https://github.com/wouterbeek/plHtml.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 4a51c6e..184c33e 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 4a51c6e0936179bff57fda23686219e6a6cd3c9b
+Subproject commit 184c33eecf561c109919a7f765de0b1e53d99d00
diff &mdash;git a/plHtml b/plHtml
new file mode 160000
index 0000000..2c45ebc
&mdash;&ndash; /dev/null
+++ b/plHtml
@@ -0,0 +1 @@
+Subproject commit 2c45ebcd3f946c1e207a69ece1e2d730d4d090ed</p>

<p>```</p>

<h2 id="2"> 2: 正在比较变动前 3d8b517 和变动后 ccd942c </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 184c33e..03d4b46 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 184c33eecf561c109919a7f765de0b1e53d99d00
+Subproject commit 03d4b46ba9c6f658828ff843e5785c221ffc3a57
diff &mdash;git a/plHtml b/plHtml
index 2c45ebc..50743da 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 2c45ebcd3f946c1e207a69ece1e2d730d4d090ed
+Subproject commit 50743daad8dd0f3664e1cafbc14523a423314f84</p>

<p>```</p>

<h2 id="3"> 3: 正在比较变动前 ccd942c 和变动后 0b3607d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index c62d146..200c034 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -41,7 +41,7 @@
   ]
 ).
 :&ndash; reexport(
&ndash;  gv(gv_color),
+  plGraphViz(gv_color),
   [</p>

<pre><code> color//1, % +Color:compound
 colorList//1 % +ColorList:list(compound)
</code></pre>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 81d51df..728640e 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -68,7 +68,7 @@ check_minimum(V, Min1):&ndash;</p>

<p> gv_attrs_download:&ndash;
   gv_attrs_url(Url),
&ndash;  download_html(Url, Dom, [html_dialect(html4)]),
+  download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),</p>

<p>   xpath(Dom, //table(@align=center), TableDom),
   % @tbd This does not work, since in <code>record_name(Element, Name)</code>,
diff &mdash;git a/gv_color.pl b/gv_color.pl
index fd22d35..ad18728 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -81,7 +81,7 @@ gv_color_url(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).</p>

<p> gv_color_download:&ndash;
   gv_color_url(Url),
&ndash;  download_html(Url, Dom, [html_dialect(html4)]),
+  download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),
   xpath(Dom, //table(1), TableDom1),
   xpath(Dom, //table(2), TableDom2),
   maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2]).</p>

<p>```</p>

<h2 id="4"> 4: 正在比较变动前 0b3607d 和变动后 acf4ec3 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 728640e..b360039 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -14,16 +14,21 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p> :&ndash; use_module(dcg(dcg_content)).
 :&ndash; use_module(dcg(dcg_generic)).
+:&ndash; use_module(generics(db_ext)).
+:&ndash; use_module(os(file_ext)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attr_type)). % DCGs implementing attribute types.</p>

<p>+:&ndash; db_add_novel(user:prolog_file_type(log, logging)).
+
 %! gv_attr(
 %!   ?Name:atom,
 %!   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
@@ -33,9 +38,18 @@
 %!   ?Notes:atom
 %! ) is nondet.</p>

<p>&ndash;:&ndash; dynamic(gv_attr/6).
+:&ndash; persistent(
+  gv_attr(
+    name:atom,
+    used_by:list(oneof([cluster,edge,graph,node,subgraph])),
+    types:list(atom),
+    default,
+    minimum,
+    notes:atom
+  )
+).</p>

<p>&ndash;:&ndash; initialization(gv_attrs_download).
+:&ndash; initialization(gv_attrs_init).</p>

<p>@@ -64,7 +78,20 @@ check_minimum(V, Min1):&ndash;</p>

<p>&ndash;% Download attributes from graphviz.org
+% INITIALIZATION
+
+%! assert_gv_attr_row(+Row:list(atom)) is det.
+
+assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
+  dcg_phrase(translate_usedby(UsedBy2), UsedBy1),
+  once(dcg_phrase(translate_type(Types2), Types1)),
+  sort(UsedBy2, UsedBy3),
+  translate_default(Default1, Default2),
+  assert_gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes).
+
+
+%! gv_attrs_downloads is det.
+% Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.</p>

<p> gv_attrs_download:&ndash;
   gv_attrs_url(Url),
@@ -76,16 +103,56 @@ gv_attrs_download:&ndash;
   %%%%xpath(Dom, /html/body/table, TableDom),</p>

<p>   html_to_table(TableDom, <em>, Rows),
&ndash;  maplist(assert_gv_attr, Rows).
+  maplist(assert_gv_attr_row, Rows).
+
+
+%! gv_attrs_file(-File:atom) is det.
+
+gv_attrs_file(File):&ndash;
+  absolute_file_name(
+    data(gv_attrs),
+    File,
+    [access(write),file_type(logging)]
+  ).
+
+
+%! gv_attrs_init is det.
+
+gv_attrs_init:&ndash;
+  gv_attrs_file(File),
+  safe_db_attach(File),
+  file_age(File, Age),
+  gv_attrs_update(Age).
+
+
+%! gv_attrs_update(+Age:float) is det.
+
+% The persistent store is still fresh.
+gv_attrs_update(Age):&ndash;
+  once(gv_attr(</em>, <em>, </em>, <em>, </em>, <em>)),
+  Age &lt; 3600, !.
+% The persistent store has become stale, so refresh it.
+gv_attrs_update(</em>):&ndash;
+  retractall_gv_attr(<em>, </em>, <em>, </em>, <em>, </em>),
+  gv_attrs_download.
+
+
+%! gv_attrs_url(-Url:url) is det.</p>

<p> gv_attrs_url(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</p>

<p>-assert_gv_attr([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
&ndash;  dcg_phrase(translate_usedby(UsedBy2), UsedBy1),
&ndash;  once(dcg_phrase(translate_type(Types2), Types1)),
&ndash;  sort(UsedBy2, UsedBy3),
&ndash;  translate_default(Default1, Default2),
&ndash;  assert(gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes)).
+
+%! safe_db_attach(+File:atom) is det.
+
+safe_db_attach(File):&ndash;
+  exists_file(File), !,
+  db_attach(File, []).
+safe_db_attach(File):&ndash;
+  touch_file(File),
+  safe_db_attach(File).
+
+
+%! translate_default(+Default1:atom, -Default2:atom) is det.</p>

<p> % The empty string is represented by the empty atom.
 translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
@@ -93,12 +160,20 @@ translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
 translate_default(&lsquo;<none>&rsquo;, _):&ndash; !.
 translate_default(Default, Default).</p>

<p>+
+%! translate_type(-Types:list(atom))// is det.
+
 translate_type([H|T]) &mdash;>
   {gv_attr_type(H)},
   atom(H),
   whites,
   translate_type(T).
-translate_type([]) &mdash;> [].
+translate_type([]) &mdash;> !, [].
+
+
+%! translated_usedby(
+%!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))
+%! )// is det.</p>

<p> translate_usedby([cluster|T]) &mdash;> <code>C</code>, !, translate_usedby(T).
 translate_usedby([edge|T]) &mdash;> <code>E</code>, !, translate_usedby(T).
diff &mdash;git a/gv_color.pl b/gv_color.pl
index ad18728..cf92f56 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -18,20 +18,25 @@</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(lists)).
+:&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p> :&ndash; use_module(dcg(dcg_abnf)).
 :&ndash; use_module(dcg(dcg_cardinal)).
+:&ndash; use_module(generics(db_ext)).
+:&ndash; use_module(os(file_ext)).
 :&ndash; use_module(sparql(sparql_char)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<p>+:&ndash; db_add_novel(user:prolog_file_type(log, logging)).
+
 %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.</p>

<p>&ndash;:&ndash; dynamic(gv_color/2).
+:&ndash; persistent(gv_color(colorscheme:oneof([svg,x11]),color:atom)).</p>

<p>&ndash;:&ndash; initialization(gv_color_download).
+:&ndash; initialization(gv_color_init).</p>

<p>@@ -75,9 +80,9 @@ wc_weight(Float) &mdash;></p>

<p>&ndash;% Initialization.
+% INITIALIZATION</p>

<p>-gv_color_url(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).
+%! gv_color_download is det.</p>

<p> gv_color_download:&ndash;
   gv_color_url(Url),
@@ -91,6 +96,52 @@ assert_color_table(Colorscheme, TableDom):&ndash;
   append(Rows, Cells),
   forall(</p>

<pre><code> member(Cell, Cells),
</code></pre>

<ul>
<li> assert(gv_color(Colorscheme, Cell))</li>
<li> assert_gv_color(Colorscheme, Cell)</li>
<li>).
+
+
+%! gv_color_file(-File:atom) is det.
+
+gv_color_file(File):&ndash;</li>
<li>absolute_file_name(</li>
<li> data(gv_color),</li>
<li> File,</li>
<li> [access(write),file_type(logging)]
).</li>
</ul>


<p>+
+%! gv_color_init is det.
+
+gv_color_init:&ndash;
+  gv_color_file(File),
+  safe_db_attach(File),
+  file_age(File, Age),
+  gv_color_update(Age).
+
+
+%! gv_color_update(+Age:float) is det.
+
+% The persistent store is still fresh.
+gv_color_update(Age):&ndash;
+  once(gv_color(<em>, </em>)),
+  Age &lt; 3600, !.
+% The persistent store has become stale, so refresh it.
+gv_color_update(<em>):&ndash;
+  retractall_gv_color(</em>, _),
+  gv_color_download.
+
+
+%! gv_color_url(-Url:url) is det.
+
+gv_color_url(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).
+
+
+%! safe_db_attach(+File:atom) is det.
+
+safe_db_attach(File):&ndash;
+  exists_file(File), !,
+  db_attach(File, []).
+safe_db_attach(File):&ndash;
+  touch_file(File),
+  safe_db_attach(File).
+</p>

<p>```</p>

<h2 id="5"> 5: 正在比较变动前 acf4ec3 和变动后 c1ad93f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index b360039..fa499d0 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -130,7 +130,7 @@ gv_attrs_init:&ndash;
 % The persistent store is still fresh.
 gv_attrs_update(Age):&ndash;
   once(gv_attr(<em>, </em>, <em>, </em>, <em>, </em>)),
&ndash;  Age &lt; 3600, !.
+  Age &lt; 8640000, !.
 % The persistent store has become stale, so refresh it.
 gv_attrs_update(<em>):&ndash;
   retractall_gv_attr(</em>, <em>, </em>, <em>, </em>, <em>),
diff &mdash;git a/gv_color.pl b/gv_color.pl
index cf92f56..70e0495 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -124,7 +124,7 @@ gv_color_init:&ndash;
 % The persistent store is still fresh.
 gv_color_update(Age):&ndash;
   once(gv_color(</em>, <em>)),
&ndash;  Age &lt; 3600, !.
+  Age &lt; 8640000, !.
 % The persistent store has become stale, so refresh it.
 gv_color_update(</em>):&ndash;
   retractall_gv_color(<em>, </em>),</p>

<p>```</p>

<h2 id="6"> 6: 正在比较变动前 c1ad93f 和变动后 c7c8226 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 03d4b46..af1a250 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 03d4b46ba9c6f658828ff843e5785c221ffc3a57
+Subproject commit af1a250d6074d0ab61a525fd064bfd555c5815a1
diff &mdash;git a/plHtml b/plHtml
index 50743da..81eb731 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 50743daad8dd0f3664e1cafbc14523a423314f84
+Subproject commit 81eb731eb46d98979c8f2862cfbf0e0aca9c1ef8</p>

<p>```</p>

<h2 id="7"> 7: 正在比较变动前 c7c8226 和变动后 0cd29ea </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/load.pl b/load.pl
index d502d58..4b117d1 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -1,11 +1,11 @@
 % Load file for plGraphViz.</p>

<p>&ndash;:&ndash; multifile(user:prolog/3).
 :&ndash; dynamic(user:prolog/3).
-user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).
+:&ndash; multifile(user:prolog/3).
+   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).</p>

<p> :&ndash; use_module(load_project).
&ndash;:&ndash; load_project([
+:&ndash; load_project(plGraphViz, [</p>

<pre><code> plc-'Prolog-Library-Collection',
 plHtml
</code></pre>

<p> ]).
diff &mdash;git a/load_project.pl b/load_project.pl
index 3eae83d..5599b5e 100644
&mdash;&ndash; a/load_project.pl
+++ b/load_project.pl
@@ -1,7 +1,8 @@
 :&ndash; module(
   load_project,
   [
&ndash;    load_project/1, % +ChildProjects:list(or([atom,pair(atom)]))
+    load_project/2, % +Parent:atom
+                    % +ChildProjects:list(or([atom,pair(atom)]))</p>

<pre><code> load_subproject/2, % +ParentFileSearchPath:atom
                    % +Child:or([atom,pair(atom)])
 set_data_subdirectory/1 % +ParentDirectory:atom
</code></pre>

<p>@@ -16,19 +17,24 @@ Generic code for loading a project:
   * Load the index of subprojects onto the file search path.</p>

<p> @author Wouter Beek
&ndash;@version 2014/05/27
+@version 2014/06/14
 */</p>

<p>&ndash;:&ndash; use_module(library(ansi_term)).
+:&ndash; use_module(library(ansi_term)). % Colorized terminal messages.
 :&ndash; use_module(library(apply)).</p>

<p>+:&ndash; dynamic(user:project/2).
+:&ndash; multifile(user:project/2).
+:&ndash; dynamic(user:project/3).
+:&ndash; multifile(user:project/3).</p>

<p>-load_project(ChildProjects):&ndash;
&ndash;  user:project(<em>, </em>, ParentFsp),
+
+load_project(Parent, ChildProjects):&ndash;
+  parent_alias(Parent, ParentFsp),</p>

<p>   % Entry point.
&ndash;  source_file(load_project(<em>), ThisFile),
+  source_file(load_project(</em>,_), ThisFile),
   file_directory_name(ThisFile, ThisDir),
   assert(user:file_search_path(ParentFsp, ThisDir)),
   assert(user:file_search_path(project, ThisDir)),
@@ -38,7 +44,7 @@ load_project(ChildProjects):&ndash;</p>

<p>   % Load the root of submodules onto the file search path.</p>

<h2>   maplist(load_subproject(ParentFsp), ChildProjects),</h2>

<p>+
   % Load the index into the file search path.
   load_project_index(ParentFsp).</p>

<p>@@ -77,8 +83,20 @@ load_subproject_file_search_path(_, ChildFsp, ChildDir):&ndash;</p>

<p> load_project_index(Fsp):&ndash;
   Spec =.. [Fsp,index],
&ndash;  absolute_file_name(Spec, File, [access(read),file_type(prolog)]),
+  absolute_file_name(
+    Spec,
+    File,
+    [access(read),file_errors(fail),file_type(prolog)]
+  ), !,
   ensure_loaded(File).
+load_project_index(<em>).
+
+
+%! parent_alias(+Parent:atom, -ParentFsp:atom) is det.
+
+parent_alias(Parent, ParentFsp):&ndash;
+  user:project(Parent, </em>, ParentFsp), !.
+parent_alias(Parent, Parent).</p>

<p> %! set_data_subdirectory(+ParentDirectory:atom) is det.</p>

<p>```</p>

<h2 id="8"> 8: 正在比较变动前 0cd29ea 和变动后 13f7fbf </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index af1a250..5b34b01 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit af1a250d6074d0ab61a525fd064bfd555c5815a1
+Subproject commit 5b34b01ab0cc82a56e6fd90fc26e75da22f5a0fe
diff &mdash;git a/plHtml b/plHtml
index 81eb731..08480c4 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 81eb731eb46d98979c8f2862cfbf0e0aca9c1ef8
+Subproject commit 08480c40acaee5f70bfb21e3c641bef1e7d258bd</p>

<p>```</p>

<h2 id="9"> 9: 正在比较变动前 13f7fbf 和变动后 5520d75 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 200c034..f9a0e7f 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -29,18 +29,13 @@</p>

<pre><code> smoothType//1, % +SmoothType:atom
 %splineType//1,
 %startType//1,
</code></pre>

<ul>
<li> string//1, % ?Content:atom
 style//2 % +Context:oneof([cluster,edge,node])
          % +Style:atom
 %viewPort//1
]
).
:&ndash; reexport(</li>
<li>library(dcg/basics),</li>
<li>[</li>
<li> string//1 % +String:atom</li>
<li>]
&ndash;).
&ndash;:&ndash; reexport(
plGraphViz(gv_color),
[
  color//1, % +Color:compound
@@ -383,6 +378,13 @@ smoothType(triangle).
% @tbd startType</li>
</ul>


<p>+%! string(?Content:atom)// .
+% A GraphViz string.
+
+string(Content) &mdash;>
+  atom(Content).
+
+
 %! style(?Context:oneof([cluster,edge,node]), ?Style:atom) is nondet.</p>

<p> style(Context, Style) &mdash;>
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index fa499d0..dd0145a 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -68,7 +68,7 @@ gv_attr(Context, N=V1, N=V2):&ndash;
   ;</p>

<pre><code> Dcg =.. [Type,V1]
</code></pre>

<p>   ),
&ndash;  dcg_phrase(Dcg, V2),
+  once(dcg_phrase(Dcg, V2)),
   check_minimum(V1, Minimum).</p>

<p> check_minimum(_, &lsquo;&rsquo;):&ndash; !.
diff &mdash;git a/gv_color.pl b/gv_color.pl
index 70e0495..19d6e05 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -23,6 +23,7 @@</p>

<p> :&ndash; use_module(dcg(dcg_abnf)).
 :&ndash; use_module(dcg(dcg_cardinal)).
+:&ndash; use_module(dcg(dcg_content)).
 :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(sparql(sparql_char)).
@@ -46,14 +47,17 @@
 %   2. <code>rgba(Red:nonneg,Green:nonneg,Blue:nonneg,Alpha:nonneg)</code>
 %   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code></p>

<p>-color(rgb(Red,Green,Blue)) &mdash;>
+color(rgb(Red,Green,Blue)) &mdash;> !,
   <code>#</code>,
   &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
-color(rgbs(Red,Green,Blue,Alpha)) &mdash;>
+color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   <code>#</code>,
   &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha]).
-color(hsv(Hue,Saturation,Value)) &mdash;>
+color(hsv(Hue,Saturation,Value)) &mdash;> !,
   &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value]).
+color(Name) &mdash;>
+  {gv_color(_, Name)},
+  atom(Name).</p>

<p> hex_color(I) &mdash;>
   {W1 is I / 16},
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 827f680..fe63e28 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -1,16 +1,13 @@
 :&ndash; module(
   gv_file,
   [
&ndash;    graph_to_gv_file/3, % +Options:list(nvpair)
+    gif_to_gv_file/3, % +Options:list(nvpair)</p>

<pre><code>                     % +GraphInterchangeFormat:compound
                     % ?ToFile:atom
 graph_to_svg_dom/3, % +Options:list(nvpair)
                     % +GraphInterchangeFormat:compound
                     % -SvgDom:list(compound)
</code></pre>

<ul>
<li> open_dot/1, % +File:file</li>
<li> tree_to_gv_file/3 % +Options:list(nvpair)</li>
<li><pre><code>               % +Tree:compound
</code></pre></li>
<li><pre><code>               % ?ToFile:atom
</code></pre></li>
<li> open_dot/1 % +File:file
]
).</li>
</ul>


<p>@@ -81,7 +78,7 @@ user:prolog_file_type(xdot, xdot).</p>

<p>&ndash;%! graph_to_gv_file(
+%! gif_to_gv_file(
 %!   +Options:list(nvpair),
 %!   +GIF:compound,
 %!   -ToFile:atom
@@ -99,7 +96,7 @@ user:prolog_file_type(xdot, xdot).
 % @arg GIF A compound term representing a graph.
 % @arg ToFile The atomic name of a file.</p>

<p>-graph_to_gv_file(O1, GIF, ToFile):&ndash;
+gif_to_gv_file(O1, GIF, ToFile):&ndash;
   once(phrase(gv_graph(GIF), Codes)),
   to_gv_file(O1, Codes, ToFile).</p>

<p>@@ -117,7 +114,7 @@ graph_to_gv_file(O1, GIF, ToFile):&ndash;
 graph_to_svg_dom(O1, GIF, SvgDom):&ndash;
   % Make sure the file type of the output file is SvgDom.
   merge_options([to_file_type=svg], O1, O2),
&ndash;  graph_to_gv_file(O2, GIF, ToFile),
+  gif_to_gv_file(O2, GIF, ToFile),
   file_to_svg(ToFile, SvgDom),
   safe_delete_file(ToFile).</p>

<p>@@ -133,33 +130,6 @@ open_dot(File):&ndash;
   run_program(Program, [File]).</p>

<p>&ndash;%! tree_to_gv_file(+Options:list(nvpair), +Tree:compound, ?ToFile:atom) is det.
&ndash;% Stores the given tree term into a GraphViz file.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([jpeg,pdf,svg,xdot])|=
&ndash;%     The file type of the generated GraphViz file.
&ndash;%
&ndash;% @arg Options A list of name-value pairs.
&ndash;% @arg Tree A compound term representing a tree.</p>

<h2>&ndash;% @arg ToFile The atomic name of the generated file.</h2>

<p>-tree_to_gv_file(O1, Tree, ToFile):&ndash;
&ndash;  once(phrase(gv_tree(O1, Tree), Codes)),</p>

<h2>&ndash;  to_gv_file(O1, Codes, ToFile).</h2>

<p>-gv_tree(O1, T) &mdash;>
&ndash;  {
&ndash;    tree_to_ugraph(T, UG),
&ndash;    merge_options([edge_labels(false)], O1, O2),
&ndash;    export_ugraph(O2, UG, G_Term)
&ndash;  },</p>

<h2>&ndash;  gv_graph(G_Term).</h2>

<p>&ndash;</p>

<p> % SUPPORT PREDICATES %</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
new file mode 100644
index 0000000..becf7e2
&mdash;&ndash; /dev/null
+++ b/gv_gif.pl
@@ -0,0 +1,109 @@
+:&ndash; module(
+  gv_gif,
+  [
+    create_gif/3, % +Edges:ordset
+                  % -Gif:compound
+                  % +Options:list(nvpair)
+    create_gif/4 % +Vertices:ordset
+                 % +Edges:ordset
+                 % -Gif:compound
+                 % +Options:list(nvpair)
+  ]
+).
+
+/<strong> <module> GraphViz Graph Interchange Format (GIF)
+
+Support for creating GIF representations.
+
+@author Wouter Beek
+@version 2014/06
+*/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(ordsets)).
+
+:&ndash; use_module(generics(list_ext)).
+
+:&ndash; use_module(plRdf(rdf_name)). % Meta-DCG.
+
+
+
+%! create_gif(+Edges:ordset, -Gif:compound, +Options:list(nvpair)) is det.
+
+create_gif(Es, Gif, Options):&ndash;
+  edges_to_vertices(Es, Vs),
+  create_gif(Vs, Es, Gif, Options).
+
+%! create_gif(
+%!   +Vertices:ordset,
+%!   +Edges:ordset,
+%!   -Gif:compound,
+%!   +Options:list(nvpair)
+%! ) is det.
+
+create_gif(Vs, Es, graph(V_Terms,E_Terms,G_Attrs), Options):&ndash;
+  maplist(vertex_term0(Vs, Options), Vs, V_Terms),
+  maplist(edge_term0(Vs, Options), Es, E_Terms),
+  G_Attrs = [directed=true].
+
+edge_term0(Vs, Options, E, E_Term):&ndash;
+  edge_term(Vs, E, E_Term, Options).
+
+vertex_term0(Vs, Options, V, V_Term):&ndash;
+  vertex_term(Vs, V, V_Term, Options).
+
+
+%! edge_term(
+%!   +Vertices:ordset,
+%!   +Edge:pair,
+%!   -EdgeTerm:compound,
+%!   +Options:list(nvpair)
+%! ) is det.
+
+edge_term(Vs, E, edge(FromId,ToId,E_Attrs), <em>):&ndash;
+  edge_components(E, FromV, </em>, ToV),
+  nth0chk(FromId, Vs, FromV),
+  nth0chk(ToId, Vs, ToV),
+  E_Attrs = [].
+
+
+%! vertex_term(
+%!   +Vertices:ordset,
+%!   +Vertex,
+%!   -VertexTerm:compound,
+%!   +Options:list(nvpair)
+%! ) is det.
+
+vertex_term(Vs, V, vertex(Id,V,V_Attrs), Options):&ndash;
+  nth0chk(Id, Vs, V),
+<br/>
+  % Label.
+  option(vertex_label(VertexLabel), Options, =),
+  call(VertexLabel, V, V_Label),
+<br/>
+  V_Attrs = [label=V_Label].
+
+vertex_label(V, V_Label):&ndash;
+  dcg_with_output_to(atom(V_Label), rdf_term_name([literal_ellipsis(50)], V)).
+
+
+
+% Helpers
+
+%! edge_components(+Edge:compound, -FromVertex, -EdgeType, -ToVertex) is det.
+%! edge_components(-Edge:compound, +FromVertex, ?EdgeType, +ToVertex) is det.
+
+edge_components(FromV-EdgeType-ToV, FromV, EdgeType, ToV):&ndash;
+  nonvar(EdgeType).
+edge_components(FromV-ToV, FromV, EdgeType, ToV):&ndash;
+  var(EdgeType).
+
+
+%! edges_to_vertices(+Edges:ordset, -Vertices:ordset) is det.
+
+edges_to_vertices([], []):&ndash; !.
+edges_to_vertices([S-_-O|T], S3):&ndash;
+  edges_to_vertices(T, S1),
+  ord_add_element(S1, S, S2),
+  ord_add_element(S2, O, S3).
+
diff &mdash;git a/gv_tree.pl b/gv_tree.pl
new file mode 100644
index 0000000..4412a90
&mdash;&ndash; /dev/null
+++ b/gv_tree.pl
@@ -0,0 +1,39 @@
+:&ndash; module(
+  gv_tree,
+  [
+    tree_to_gv_file/3 % +Options:list(nvpair)
+                      % +Tree:compound
+                      % ?ToFile:atom
+  ]
+).
+
+/</strong> <module> GraphViz tree
+
+Export trees to GraphViz.
+
+@author Wouter Beek
+@version 2014/06
+*/
+
+:&ndash; use_module(library(aggregate)).
+
+:&ndash; use_module(generics(trees)).
+
+:&ndash; use_module(plGraphViz(gv_file)).
+:&ndash; use_module(plGraphViz(gv_gif)).
+
+
+%! tree_to_gv_file(+Options:list(nvpair), +Tree:compound, ?ToFile:atom) is det.
+% Stores the given tree term into a GraphViz file.
+%
+% Options are passed on to create_gif/3 and gif_to_gv_file/3.
+
+tree_to_gv_file(Options, Tree, ToFile):&ndash;
+  tree_to_gif(Tree, Gif, Options),
+  gif_to_gv_file(Options, Gif, ToFile).
+
+
+tree_to_gif(H-T, Gif, Options):&ndash;
+  tree_to_vertices_edges(Tree, Vs, Es),
+  create_gif(Vs, Es, Gif, Options).
+</p>

<p>```</p>

<h2 id="10"> 10: 正在比较变动前 5520d75 和变动后 8656a39 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index f9a0e7f..7a64c82 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -191,7 +191,7 @@ doubleList1(Float) &mdash;>
   double(Float).</p>

<p>&ndash;%! escString(+String:atom)// ,
+%! escString(+String:atom)// .
 % @tbd Support for context-dependent replacements.</p>

<p> escString(String) &mdash;></p>

<p>```</p>

<h2 id="11"> 11: 正在比较变动前 8656a39 和变动后 7421981 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index fe63e28..c780692 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -1,12 +1,12 @@
 :&ndash; module(
   gv_file,
   [
&ndash;    gif_to_gv_file/3, % +Options:list(nvpair)
&ndash;                        % +GraphInterchangeFormat:compound
&ndash;                        % ?ToFile:atom
&ndash;    graph_to_svg_dom/3, % +Options:list(nvpair)
&ndash;                        % +GraphInterchangeFormat:compound
+    gif_to_gv_file/3, % +GraphInterchangeFormat:compound
+                      % ?ToFile:atom
+                      % +Options:list(nvpair)
+    graph_to_svg_dom/3, % +GraphInterchangeFormat:compound</p>

<pre><code>                     % -SvgDom:list(compound)
</code></pre>

<ul>
<li><pre><code>                 % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -20,11 +20,12 @@ Also converts between GraphViz DOT formatted files
and GraphViz output files or SVG DOM structures.</p></li>
</ul>


<p> @author Wouter Beek
&ndash;@version 2011-2013/09, 2013/11-2014/01, 2014/05
+@version 2011-2013/09, 2013/11-2014/01, 2014/05, 2014/07
 */</p>

<p> :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).
+:&ndash; use_module(library(predicate_options)). % Declarations.</p>

<p> :&ndash; use_module(generics(codes_ext)).
 :&ndash; use_module(generics(db_ext)).
@@ -48,73 +49,76 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; multifile(user:prolog_file_type/2).</p>

<p> % Register DOT.
-user:prolog_file_type(dot, dot).
-user:prolog_file_type(dot, graphviz).
-user:file_type_program(dot, dotty).
-user:file_type_program(dot, dotx).
-user:module_uses(gv_file, file_type(dot)).
+:&ndash; db_add_novel(user:prolog_file_type(dot, dot)).
+:&ndash; db_add_novel(user:prolog_file_type(dot, graphviz)).
+:&ndash; db_add_novel(user:file_type_program(dot, dotty)).
+:&ndash; db_add_novel(user:file_type_program(dot, dotx)).
+:&ndash; db_add_novel(user:module_uses(gv_file, file_type(dot))).</p>

<p> % Register JPG/JPEG.
-user:prolog_file_type(jpeg, jpeg).
-user:prolog_file_type(jpeg, graphviz_output).
-user:prolog_file_type(jpg, jpeg).
-user:prolog_file_type(jpg, graphviz_output).
+:&ndash; db_add_novel(user:prolog_file_type(jpeg, jpeg)).
+:&ndash; db_add_novel(user:prolog_file_type(jpeg, graphviz_output)).
+:&ndash; db_add_novel(user:prolog_file_type(jpg, jpeg)).
+:&ndash; db_add_novel(user:prolog_file_type(jpg, graphviz_output)).</p>

<p> % Register PDF.
-user:prolog_file_type(pdf, pdf).
-user:prolog_file_type(pdf, graphviz_output).
+:&ndash; db_add_novel(user:prolog_file_type(pdf, pdf)).
+:&ndash; db_add_novel(user:prolog_file_type(pdf, graphviz_output)).</p>

<p> % Register PNG.
-user:prolog_file_type(png, png).
-user:prolog_file_type(png, graphviz_output).
+:&ndash; db_add_novel(user:prolog_file_type(png, png)).
+:&ndash; db_add_novel(user:prolog_file_type(png, graphviz_output)).</p>

<p> % Register SVG.
-user:prolog_file_type(svg, graphviz_output).
-user:prolog_file_type(svg, svg).
+:&ndash; db_add_novel(user:prolog_file_type(svg, graphviz_output)).
+:&ndash; db_add_novel(user:prolog_file_type(svg, svg)).</p>

<p> % Register XDOT.
-user:prolog_file_type(xdot, graphviz_output).</p>

<h2>-user:prolog_file_type(xdot, xdot).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gif_to_gv_file(
&ndash;%!   +Options:list(nvpair),
&ndash;%!   +GIF:compound,
&ndash;%!   -ToFile:atom
&ndash;%! ) is det.
+:&ndash; db_add_novel(user:prolog_file_type(xdot, graphviz_output)).
+:&ndash; db_add_novel(user:prolog_file_type(xdot, xdot)).
+
+:&ndash; predicate_options(graph_to_svg_dom/3, 3, [
+     pass_to(gif_to_gv_file/3, 3)
+   ]).
+:&ndash; predicate_options(gif_to_gv_file/3, 3, [
+     pass_to(to_gv_file/3, 3)
+   ]).
+:&ndash; predicate_options(to_gv_file/3, 3, [
+     pass_to(convert_gv/3, 3)
+   ]).
+:&ndash; predicate_options(convert_gv/3, 3, [
+     method(+oneof([dot,sfdp])),
+     to_file_type(+oneof([dot,jpeg,pdf,svg,xdot]))
+   ]).
+
+
+
+%! gif_to_gv_file(+Gif:compound, -ToFile:atom, +Options:list(nvpair)) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
 %   * =|method(+Method:oneof([dot,sfdp])|=
 %     The algorithm used by GraphViz for positioning the tree nodes.
 %     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([jpeg,pdf,svg,xdot])|=
+%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
 %     The file type of the generated GraphViz file.
&ndash;%
&ndash;% @arg Options A list of name-value pairs.
&ndash;% @arg GIF A compound term representing a graph.
&ndash;% @arg ToFile The atomic name of a file.
+%     Default: <code>pdf</code>.</p>

<p>-gif_to_gv_file(O1, GIF, ToFile):&ndash;
&ndash;  once(phrase(gv_graph(GIF), Codes)),
&ndash;  to_gv_file(O1, Codes, ToFile).
+gif_to_gv_file(Gif, ToFile, Options):&ndash;
+  once(phrase(gv_graph(Gif), Codes)),
+  to_gv_file(Codes, ToFile, Options).</p>

<p> %! graph_to_svg_dom(
&ndash;%!   +Options:list(nvpair),
 %!   +GraphInterchangeFormat:compound,
&ndash;%!   -SvgDom:list(compound)
+%!   -SvgDom:list(compound),
+%!   +Options:list(nvpair)
 %! ) is det.
&ndash;% The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.</p>

<p>-graph_to_svg_dom(O1, GIF, SvgDom):&ndash;
+graph_to_svg_dom(Gif, SvgDom, Options1):&ndash;
   % Make sure the file type of the output file is SvgDom.
&ndash;  merge_options([to_file_type=svg], O1, O2),
&ndash;  gif_to_gv_file(O2, GIF, ToFile),
+  merge_options([to_file_type=svg], Options1, Options2),
+  gif_to_gv_file(Gif, ToFile, Options2),
   file_to_svg(ToFile, SvgDom),
   safe_delete_file(ToFile).</p>

<p>@@ -133,31 +137,23 @@ open_dot(File):&ndash;</p>

<p> % SUPPORT PREDICATES %</p>

<p>&ndash;%! convert_gv(+Options:list(nvpair), +FromFile:atom, ?ToFile:atom) is det.
+%! convert_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
 % Converts a GraphViz DOT file to an image file, using a specific
 % visualization method.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([jpeg,pdf,svg,xdot])|=
&ndash;%     The file type of the generated GraphViz file.
&ndash;%
&ndash;% @arg Options
&ndash;% @arg FromFile
&ndash;% @arg ToFile</p>

<p>-convert_gv(O1, FromFile, ToFile):&ndash;
+convert_gv(FromFile, ToFile, Options):&ndash;
+  option(to_file_type(dot), Options), !,
+  rename_file(FromFile, ToFile).
+convert_gv(FromFile, ToFile, Options):&ndash;
   % The input file must be readable.
   access_file(FromFile, read),</p>

<p>   % The method option.
&ndash;  option(method(Method), O1, dot),
+  option(method(Method), Options, dot),
   must_be(oneof([dot,sfdp]), Method),</p>

<p>   % The file type option.
&ndash;  option(to_file_type(ToFileType), O1, pdf),
+  option(to_file_type(ToFileType), Options, pdf),
   prolog_file_type(ToExtension, ToFileType),
   prolog_file_type(ToExtension, graphviz_output), !,</p>

<p>@@ -189,15 +185,10 @@ convert_gv(O1, FromFile, ToFile):&ndash;
   process_wait(PID, exit(ShellStatus)),
   exit_code_handler(&lsquo;GraphViz&rsquo;, ShellStatus).</p>

<p>&ndash;%! to_gv_file(+Options:list(nvpair), +Codes:list(code), ?ToFile:atom) is det.
&ndash;% The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([jpeg,pdf,svg,xdot])|=
&ndash;%     The file type of the generated GraphViz file.</p>

<p>-to_gv_file(O1, Codes, ToFile):&ndash;
+%! to_gv_file(+Codes:list(code), ?ToFile:atom, +Options:list(nvpair)) is det.
+
+to_gv_file(Codes, ToFile, Options):&ndash;
   absolute_file_name(</p>

<pre><code> data(tmp),
 FromFile,
</code></pre>

<p>@@ -208,13 +199,13 @@ to_gv_file(O1, Codes, ToFile):&ndash;</p>

<pre><code> put_codes(Out, Codes),
 close(Out)
</code></pre>

<p>   ),
&ndash;  convert_gv(O1, FromFile, ToFile),
+  convert_gv(FromFile, ToFile, Options),</p>

<ul>
<li>% DEB: Store DOT file.</li>
<li>ignore((</li>
<li> file_type_alternative(ToFile, graphviz, DOT_File),</li>
<li> safe_copy_file(FromFile, DOT_File)</li>
<li>)),</li>
<li>%%%%% DEB: Store DOT file.</li>
<li>%%%%ignore((</li>
<li>%%%%  file_type_alternative(ToFile, graphviz, DOT_File),</li>
<li>%%%%  safe_copy_file(FromFile, DOT_File)</li>
<li><p>%%%%)),</p>

<p>safe_delete_file(FromFile).</p></li>
</ul>


<p>diff &mdash;git a/gv_tree.pl b/gv_tree.pl
index 4412a90..afeb8f6 100644
&mdash;&ndash; a/gv_tree.pl
+++ b/gv_tree.pl
@@ -1,9 +1,9 @@
 :&ndash; module(
   gv_tree,
   [
&ndash;    tree_to_gv_file/3 % +Options:list(nvpair)
&ndash;                      % +Tree:compound
+    tree_to_gv_file/3 % +Tree:compound</p>

<pre><code>                   % ?ToFile:atom
</code></pre>

<ul>
<li><pre><code>               % +Options:list(nvpair)
</code></pre>

<p>]
).</p></li>
</ul>


<p>@@ -12,7 +12,7 @@
 Export trees to GraphViz.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06-2014/07
 */</p>

<p> :&ndash; use_module(library(aggregate)).
@@ -23,14 +23,18 @@ Export trees to GraphViz.
 :&ndash; use_module(plGraphViz(gv_gif)).</p>

<p>&ndash;%! tree_to_gv_file(+Options:list(nvpair), +Tree:compound, ?ToFile:atom) is det.
+%! tree_to_gv_file(
+%!   +Tree:compound,
+%!   ?ToFile:atom,
+%!   +Options:list(nvpair)
+%! ) is det.
 % Stores the given tree term into a GraphViz file.
 %
 % Options are passed on to create_gif/3 and gif_to_gv_file/3.</p>

<p>-tree_to_gv_file(Options, Tree, ToFile):&ndash;
+tree_to_gv_file(Tree, ToFile, Options):&ndash;
   tree_to_gif(Tree, Gif, Options),
&ndash;  gif_to_gv_file(Options, Gif, ToFile).
+  gif_to_gv_file(Gif, ToFile, Options).</p>

<p> tree_to_gif(H-T, Gif, Options):&ndash;</p>

<p>```</p>

<h2 id="12"> 12: 正在比较变动前 7421981 和变动后 bfcb63b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index c780692..9cb1f95 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -4,9 +4,9 @@</p>

<pre><code> gif_to_gv_file/3, % +GraphInterchangeFormat:compound
                   % ?ToFile:atom
                   % +Options:list(nvpair)
</code></pre>

<ul>
<li> graph_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>                 % -SvgDom:list(compound)
</code></pre></li>
<li><pre><code>                 % +Options:list(nvpair)
</code></pre></li>
<li> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % -SvgDom:list(compound)
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -77,7 +77,7 @@ and GraphViz output files or SVG DOM structures.
:&ndash; db_add_novel(user:prolog_file_type(xdot, graphviz_output)).
:&ndash; db_add_novel(user:prolog_file_type(xdot, xdot)).</p></li>
</ul>


<p>&ndash;:&ndash; predicate_options(graph_to_svg_dom/3, 3, [
+:&ndash; predicate_options(gif_to_svg_dom/3, 3, [</p>

<pre><code>  pass_to(gif_to_gv_file/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(gif_to_gv_file/3, 3, [
@@ -109,13 +109,13 @@ gif_to_gv_file(Gif, ToFile, Options):&ndash;
   to_gv_file(Codes, ToFile, Options).</p>

<p>&ndash;%! graph_to_svg_dom(
+%! gif_to_svg_dom(
 %!   +GraphInterchangeFormat:compound,
 %!   -SvgDom:list(compound),
 %!   +Options:list(nvpair)
 %! ) is det.</p>

<p>-graph_to_svg_dom(Gif, SvgDom, Options1):&ndash;
+gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;
   % Make sure the file type of the output file is SvgDom.
   merge_options([to_file_type=svg], Options1, Options2),
   gif_to_gv_file(Gif, ToFile, Options2),</p>

<p>```</p>

<h2 id="13"> 13: 正在比较变动前 bfcb63b 和变动后 84afd69 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 9cb1f95..98cb0a2 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -1,8 +1,13 @@
 :&ndash; module(
   gv_file,
   [
+    file_to_gv/2, % +File:atom
+                  % +Options:list(nvpair)
+    file_to_gv/3, % +FromFile:atom
+                  % ?ToFile:atom
+                  % +Options:list(nvpair)</p>

<pre><code> gif_to_gv_file/3, % +GraphInterchangeFormat:compound
</code></pre>

<ul>
<li><pre><code>               % ?ToFile:atom
</code></pre></li>
<li><pre><code>               % +ToFile:atom
               % +Options:list(nvpair)
</code></pre>

<p> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound
                   % -SvgDom:list(compound)
@@ -23,6 +28,7 @@ and GraphViz output files or SVG DOM structures.
@version 2011-2013/09, 2013/11-2014/01, 2014/05, 2014/07
*/</p></li>
</ul>


<p>+:&ndash; use_module(library(memfile)).
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).
 :&ndash; use_module(library(predicate_options)). % Declarations.
@@ -77,74 +83,60 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; db_add_novel(user:prolog_file_type(xdot, graphviz_output)).
 :&ndash; db_add_novel(user:prolog_file_type(xdot, xdot)).</p>

<p>&ndash;:&ndash; predicate_options(gif_to_svg_dom/3, 3, [
&ndash;     pass_to(gif_to_gv_file/3, 3)
&ndash;   ]).
&ndash;:&ndash; predicate_options(gif_to_gv_file/3, 3, [
&ndash;     pass_to(to_gv_file/3, 3)
+:&ndash; predicate_options(codes_to_gv_file/3, 3, [
+     pass_to(file_to_gv/3, 3)</p>

<pre><code>]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(to_gv_file/3, 3, [
&ndash;     pass_to(convert_gv/3, 3)
+:&ndash; predicate_options(file_to_gv/2, 2, [
+     pass_to(file_to_gv/3, 3)</p>

<pre><code>]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(convert_gv/3, 3, [
+:&ndash; predicate_options(file_to_gv/3, 3, [</p>

<pre><code>  method(+oneof([dot,sfdp])),
  to_file_type(+oneof([dot,jpeg,pdf,svg,xdot]))
]).
</code></pre>

<p>+:&ndash; predicate_options(gif_to_svg_dom/3, 3, [
+     pass_to(gif_to_gv_file/3, 3)
+   ]).
+:&ndash; predicate_options(gif_to_gv_file/3, 3, [
+     pass_to(codes_to_gv_file/3, 3)
+   ]).</p>

<p>&ndash;%! gif_to_gv_file(+Gif:compound, -ToFile:atom, +Options:list(nvpair)) is det.
&ndash;% Returns a file containing a GraphViz visualization of the given graph.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
&ndash;%     The file type of the generated GraphViz file.</p>

<h2>&ndash;%     Default: <code>pdf</code>.</h2>

<p>-gif_to_gv_file(Gif, ToFile, Options):&ndash;
&ndash;  once(phrase(gv_graph(Gif), Codes)),</p>

<h2>&ndash;  to_gv_file(Codes, ToFile, Options).</h2>

<p>&ndash;
&ndash;%! gif_to_svg_dom(
&ndash;%!   +GraphInterchangeFormat:compound,
&ndash;%!   -SvgDom:list(compound),
+%! codes_to_gv_file(
+%!   +Codes:list(code),
+%!   +ToFile:atom,
 %!   +Options:list(nvpair)
 %! ) is det.</p>

<p>-gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;
&ndash;  % Make sure the file type of the output file is SvgDom.
&ndash;  merge_options([to_file_type=svg], Options1, Options2),
&ndash;  gif_to_gv_file(Gif, ToFile, Options2),
&ndash;  file_to_svg(ToFile, SvgDom),</p>

<h2>&ndash;  safe_delete_file(ToFile).</h2>

<p>&ndash;
&ndash;%! open_dot(+File:atom) is det.
&ndash;% Opens the given DOT file.
&ndash;%
&ndash;% @tbd Test support on Windows.</p>

<h2>&ndash;% @tbd Test support on OS-X.</h2>

<p>-open_dot(File):&ndash;
&ndash;  once(find_program_by_file_type(dot, Program)),
&ndash;  run_program(Program, [File]).
+codes_to_gv_file(Codes, ToFile, Options):&ndash;
+  access_file(ToFile, write),
+  setup_call_cleanup(
+    new_memory_file(MemFile),
+    (
+      setup_call_cleanup(
+        open(MemFile, write, Write, [encoding(utf8),type(test)]),
+        put_codes(Write, Codes),
+        close(Write)
+      ),
+      file_to_gv(MemFile, ToFile, Options)
+    ),
+    free_memory_file(MemFile)
+  ).</p>

<p>+%! file_to_gv(+FromFile:atom, +Options:list(nvpair)) is det.</p>

<p>&ndash;% SUPPORT PREDICATES %
+file_to_gv(FromFile, Options):&ndash;
+  file_to_gv(FromFile, _, Options).</p>

<p>&ndash;%! convert_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
+%! file_to_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
 % Converts a GraphViz DOT file to an image file, using a specific
 % visualization method.</p>

<p>-convert_gv(FromFile, ToFile, Options):&ndash;
+file_to_gv(FromFile, ToFile, Options):&ndash;
   option(to_file_type(dot), Options), !,
   rename_file(FromFile, ToFile).
-convert_gv(FromFile, ToFile, Options):&ndash;
+file_to_gv(FromFile, ToFile, Options):&ndash;
   % The input file must be readable.
   access_file(FromFile, read),</p>

<p>@@ -186,26 +178,43 @@ convert_gv(FromFile, ToFile, Options):&ndash;
   exit_code_handler(&lsquo;GraphViz&rsquo;, ShellStatus).</p>

<p>&ndash;%! to_gv_file(+Codes:list(code), ?ToFile:atom, +Options:list(nvpair)) is det.
+%! gif_to_gv_file(+Gif:compound, +ToFile:atom, +Options:list(nvpair)) is det.
+% Returns a file containing a GraphViz visualization of the given graph.
+%
+% The following options are supported:
+%   * =|method(+Method:oneof([dot,sfdp])|=
+%     The algorithm used by GraphViz for positioning the tree nodes.
+%     Either =dot= (default) or =sfdp=.
+%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
+%     The file type of the generated GraphViz file.
+%     Default: <code>pdf</code>.
+
+gif_to_gv_file(Gif, ToFile, Options):&ndash;
+  once(phrase(gv_graph(Gif), Codes)),
+  codes_to_gv_file(Codes, ToFile, Options).
+
+
+%! gif_to_svg_dom(
+%!   +GraphInterchangeFormat:compound,
+%!   -SvgDom:list(compound),
+%!   +Options:list(nvpair)
+%! ) is det.
+
+gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;
+  % Make sure the file type of the output file is SvgDom.
+  merge_options([to_file_type=svg], Options1, Options2),
+  gif_to_gv_file(Gif, ToFile, Options2),
+  file_to_svg(ToFile, SvgDom),
+  safe_delete_file(ToFile).</p>

<p>-to_gv_file(Codes, ToFile, Options):&ndash;
&ndash;  absolute_file_name(
&ndash;    data(tmp),
&ndash;    FromFile,
&ndash;    [access(write),file_type(graphviz)]
&ndash;  ),
&ndash;  setup_call_cleanup(
&ndash;    open(FromFile, write, Out, [encoding(utf8),type(test)]),
&ndash;    put_codes(Out, Codes),
&ndash;    close(Out)
&ndash;  ),
&ndash;  convert_gv(FromFile, ToFile, Options),</p>

<ul>
<li>%%%%% DEB: Store DOT file.</li>
<li>%%%%ignore((</li>
<li>%%%%  file_type_alternative(ToFile, graphviz, DOT_File),</li>
<li>%%%%  safe_copy_file(FromFile, DOT_File)</li>
<li><p>%%%%)),
+%! open_dot(+File:atom) is det.
+% Opens the given DOT file.
+%
+% @tbd Test support on Windows.
+% @tbd Test support on OS-X.</p></li>
<li><p>safe_delete_file(FromFile).
+open_dot(File):&ndash;</p></li>
<li>once(find_program_by_file_type(dot, Program)),</li>
<li>run_program(Program, [File]).</li>
</ul>


<p>```</p>

<h2 id="14"> 14: 正在比较变动前 84afd69 和变动后 c2bfd3f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index becf7e2..908b9bc 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -16,16 +16,35 @@
 Support for creating GIF representations.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06-2014/07
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(lambda)).
+:&ndash; use_module(library(option)).
 :&ndash; use_module(library(ordsets)).
+:&ndash; use_module(library(predicate_options)). % Declarations.</p>

<p> :&ndash; use_module(generics(list_ext)).
+:&ndash; use_module(generics(option_ext)).
+:&ndash; use_module(graph_theory(graph_generic)).</p>

<p> :&ndash; use_module(plRdf(rdf_name)). % Meta-DCG.</p>

<p>+:&ndash; predicate_options(create_gif/3, 3, [
+     pass_to(create_gif/4, 4)
+   ]).
+:&ndash; predicate_options(create_gif/4, 4, [
+     pass_to(vertex_term/3, 3),
+     pass_to(edge_term/3, 3),
+     graph_label(+atom)
+   ]).
+:&ndash; predicate_options(edge_term/3, 3, [
+   ]).
+:&ndash; predicate_options(vertex_term/3, 3, [
+     vertex_label(+atom)
+   ]).
+</p>

<p> %! create_gif(+Edges:ordset, -Gif:compound, +Options:list(nvpair)) is det.
@@ -40,17 +59,28 @@ create_gif(Es, Gif, Options):&ndash;
 %!   -Gif:compound,
 %!   +Options:list(nvpair)</p>

<h2> %! ) is det.</h2>

<p>-create_gif(Vs, Es, graph(V_Terms,E_Terms,G_Attrs), Options):&ndash;
&ndash;  maplist(vertex_term0(Vs, Options), Vs, V_Terms),
&ndash;  maplist(edge_term0(Vs, Options), Es, E_Terms),</p>

<h2>&ndash;  G_Attrs = [directed=true].</h2>

<p>-edge_term0(Vs, Options, E, E_Term):&ndash;</p>

<h2>&ndash;  edge_term(Vs, E, E_Term, Options).</h2>

<p>-vertex_term0(Vs, Options, V, V_Term):&ndash;
&ndash;  vertex_term(Vs, V, V_Term, Options).
+% The following options are supported:
+%   * =|graph_label(+LabelFunction)|=
+%     The functions that assigns names to graphs.
+%     No default.
+
+create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
+  % Vertex terms.
+  maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Options), Vs, VTerms),
+<br/>
+  % Edge terms.
+  maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Options), Es, ETerms),
+<br/>
+  % Graph attributes.
+  (
+    option(graph_label(LabelFunction), Options)
+  &ndash;>
+    call(LabelFunction, Graph, GraphLabel)
+  ;
+    true
+  ),
+<br/>
+  merge_options([directed=true,label=GraphLabel], GAttrs).</p>

<p> %! edge_term(
@@ -60,11 +90,13 @@ vertex_term0(Vs, Options, V, V_Term):&ndash;
 %!   +Options:list(nvpair)
 %! ) is det.</p>

<p>-edge_term(Vs, E, edge(FromId,ToId,E_Attrs), <em>):&ndash;
&ndash;  edge_components(E, FromV, </em>, ToV),
+edge_term(Vs, E, edge(FromId,ToId,EAttrs), _):&ndash;
+  edge_components(E, FromV, ToV),
+<br/>
   nth0chk(FromId, Vs, FromV),
   nth0chk(ToId, Vs, ToV),
&ndash;  E_Attrs = [].
+<br/>
+  EAttrs = [].</p>

<p> %! vertex_term(
@@ -73,37 +105,16 @@ edge_term(Vs, E, edge(FromId,ToId,E_Attrs), _):&ndash;
 %!   -VertexTerm:compound,
 %!   +Options:list(nvpair)
 %! ) is det.
+% The following options are supported:
+%   * =|vertex_label(+LabelFunction)|=
+%     A function that assigns labels to vertices.</p>

<p>-vertex_term(Vs, V, vertex(Id,V,V_Attrs), Options):&ndash;
+vertex_term(Vs, V, vertex(Id,V,VAttrs), Options):&ndash;
   nth0chk(Id, Vs, V),</p>

<p>   % Label.
&ndash;  option(vertex_label(VertexLabel), Options, =),
&ndash;  call(VertexLabel, V, V_Label),
+  option(vertex_label(LabelFunction), Options, =),
+  call(LabelFunction, V, VLabel),</p>

<h2>&ndash;  V_Attrs = [label=V_Label].</h2>

<p>-vertex_label(V, V_Label):&ndash;</p>

<h2>&ndash;  dcg_with_output_to(atom(V_Label), rdf_term_name([literal_ellipsis(50)], V)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% Helpers</h2>

<p>&ndash;%! edge_components(+Edge:compound, -FromVertex, -EdgeType, -ToVertex) is det.</p>

<h2>&ndash;%! edge_components(-Edge:compound, +FromVertex, ?EdgeType, +ToVertex) is det.</h2>

<p>-edge_components(FromV-EdgeType-ToV, FromV, EdgeType, ToV):&ndash;
&ndash;  nonvar(EdgeType).
-edge_components(FromV-ToV, FromV, EdgeType, ToV):&ndash;</p>

<h2>&ndash;  var(EdgeType).</h2>

<p>&ndash;</p>

<h2>&ndash;%! edges_to_vertices(+Edges:ordset, -Vertices:ordset) is det.</h2>

<p>-edges_to_vertices([], []):&ndash; !.
-edges_to_vertices([S-_-O|T], S3):&ndash;
&ndash;  edges_to_vertices(T, S1),
&ndash;  ord_add_element(S1, S, S2),
&ndash;  ord_add_element(S2, O, S3).
+  VAttrs = [label=VLabel].</p>

<p>```</p>

<h2 id="15"> 15: 正在比较变动前 c2bfd3f 和变动后 fa364fc </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 9888973..68443ba 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -76,13 +76,13 @@ gv_compass_pt(sw) &mdash;> <code>sw</code>.
 gv_compass_pt(w) &mdash;> <code>w</code>.</p>

<p>&ndash;%! gv_edge_operator(+Directed:boolean)// .
+%! gv_edge_operator(+Directedness:boolean)// .
 % The binary edge operator between two vertices.
 % The operator that is used depends on whether the graph is directed or
 % undirected.
 %
&ndash;% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
&ndash;%               undirected (operator <code>--</code>).
+% @arg Directedness Whether an edge is directed (operator <code>-&gt;</code>) or
+%                   undirected (operator <code>--</code>).</p>

<p> gv_edge_operator(false) &mdash;> !, <code>--</code>.
 gv_edge_operator(true) &mdash;> arrow(right, 2).
@@ -90,14 +90,14 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> %! gv_edge_statement(
 %!   +Indent:nonneg,
&ndash;%!   +Directed:boolean,
+%!   +Directedness:boolean,
 %!   +GraphAttributes:list(nvpair),
 %!   +EdgeTerm:compound
 %! )// is det.
 % A GraphViz statement describing an edge.
 %
 % @arg Indent The indentation level at which the edge statement is written.
&ndash;% @arg Directed Whether the graph is directed or not.
+% @arg Directedness Whether the graph is directed or not.
 % @arg GraphAttributes The attributes of the graph. Some of these attributes
 %      may be used in the edge statement (e.g., the colorscheme).
 % @arg EdgeTerm A compound term in the GIFormat, representing an edge.
@@ -106,11 +106,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).
 %      at the from and/or to location.
 % @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</p>

<p>-gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
+gv_edge_statement(I, Directedness, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
   gv_node_id(FromId), <code></code>,</p>

<ul>
<li>gv_edge_operator(Directed), <code></code>,</li>
<li><p>gv_edge_operator(Directedness), <code></code>,</p>

<p>gv_node_id(ToId), <code></code>,</p></li>
</ul>


<p>@@ -148,11 +148,11 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 %! gv_graph(+GraphTerm:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
&ndash;%   1. <code>directonality(+Directed:oneof([directed,undirected]))</code>
&ndash;%      A directed graph uses the keyword <code>digraph</code>.
&ndash;%      An undirected graph uses the keyword <code>graph</code>.
&ndash;%   2. <code>name(+GraphName:atom)</code>
&ndash;%   3. <code>strict(+StrictGraph:boolean)</code>
+%   * <code>directedness(+boolean)</code>
+%      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
+%      Default: <code>false</code>.
+%   * <code>name(+GraphName:atom)</code>
+%   * <code>strict(+StrictGraph:boolean)</code>
 %      This forbids the creation of self-arcs and multi-edges;
 %      they are ignored in the input file.
 %      Only in combinattion with directionality <code>directed</code>.
@@ -185,7 +185,7 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;></p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
 select_nvpair(strict=Strict, GAttrs1, GAttrs2, false),
</code></pre>

<ul>
<li> select_nvpair(directed=Directed, GAttrs2, GAttrs3, true),</li>
<li> select_nvpair(directedness=Directedness, GAttrs2, GAttrs3, true),
 select_nvpair(name=GName, GAttrs3, GAttrs4, noname),
 add_default_nvpair(GAttrs4, overlap, false, GAttrs5),
 I = 0
@@ -195,24 +195,24 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
% States that this file represents a graph according to the GraphViz format.
indent(I),
gv_strict(Strict),</li>
<li>gv_graph_type(Directed), <code></code>,</li>
<li>gv_graph_type(Directedness), <code></code>,
gv_id(GName), <code></code>,
bracketed(
  curly,</li>
<li> gv_graph1(</li>
<li> gv_graph0(
   I,
   NewVTerms, SharedVAttrs, RankedVTerms,
   NewETerms, SharedEAttrs,</li>
<li>   Directed, GAttrs5</li>
<li>   Directedness, GAttrs5
 )</li>
<li>),</li>
<li>),                                                    <br/>
newline.</li>
</ul>


<p>-gv_graph1(
+gv_graph0(
   I,
   NewVTerms, SharedVAttrs, RankedVTerms,
   NewETerms, SharedEAttrs,
&ndash;  Directed, GAttrs
+  Directedness, GAttrs
 ) &mdash;>
   newline,</p>

<p>@@ -254,10 +254,10 @@ gv_graph1(
   },</p>

<p>   % The rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), RankEdges),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), RankEdges),</p>

<p>   % The non-rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), NewETerms),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), NewETerms),</p>

<p>   % Note that we do not include a newline here.</p>

<p>@@ -265,7 +265,7 @@ gv_graph1(
   indent(I).</p>

<p>&ndash;%! gv_graph_type(+Directed:boolean)// .
+%! gv_graph_type(+Directedness:boolean)// .
 % The type of graph that is represented.</p>

<p> gv_graph_type(false) &mdash;> <code>graph</code>.
diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index 908b9bc..4a3e75f 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -35,14 +35,25 @@ Support for creating GIF representations.</p>

<pre><code>  pass_to(create_gif/4, 4)
]).
</code></pre>

<p> :&ndash; predicate_options(create_gif/4, 4, [
&ndash;     pass_to(vertex_term/3, 3),</p>

<pre><code>  pass_to(edge_term/3, 3),
</code></pre>

<ul>
<li>  graph_label(+atom)</li>
<li>  pass_to(graph_attributes/2, 2),</li>
<li>  pass_to(vertex_term/3, 3)
]).
:&ndash; predicate_options(edge_term/3, 3, [
]).
+:&ndash; predicate_options(graph_attributes/2, 2, [</li>
<li>  directedness(+boolean),</li>
<li>  graph_colorscheme(+oneof([none,svg,x11]),</li>
<li>  graph_label(+atom)</li>
<li>]).
+
:&ndash; predicate_options(vertex_term/3, 3, [</li>
<li>  vertex_label(+atom)</li>
<li>  vertex_color(+atom),</li>
<li>  vertex_coordinates(+atom),</li>
<li>  vertex_image(+atom),</li>
<li>  vertex_label(+atom),</li>
<li>  vertex_peripheries(+atom),</li>
<li>  vertex_shape(+atom)
]).</li>
</ul>


<p>@@ -60,6 +71,8 @@ create_gif(Es, Gif, Options):&ndash;
 %!   +Options:list(nvpair)
 %! ) is det.
 % The following options are supported:
+%   * =|graph_colorscheme(+oneof([none,svg,x11]))
+%     No default.
 %   * =|graph_label(+LabelFunction)|=
 %     The functions that assigns names to graphs.
 %     No default.
@@ -72,15 +85,7 @@ create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
   maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Options), Es, ETerms),</p>

<p>   % Graph attributes.
&ndash;  (
&ndash;    option(graph_label(LabelFunction), Options)
&ndash;  &ndash;>
&ndash;    call(LabelFunction, Graph, GraphLabel)
&ndash;  ;
&ndash;    true</p>

<h2>&ndash;  ),</h2>

<ul>
<li>merge_options([directed=true,label=GraphLabel], GAttrs).</li>
<li>graph_attributes(GAttrs, Options).</li>
</ul>


<p> %! edge_term(
@@ -89,14 +94,69 @@ create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
 %!   -EdgeTerm:compound,
 %!   +Options:list(nvpair)
 %! ) is det.
+% The following options are supported:
+%   * =|edge_arrowhead(+atom)|=
+%   * =|edge_color(+atom)|=
+%   * =|edge_label(+atom)|=
+%   * =|edge_style(+atom)|=</p>

<p> edge_term(Vs, E, edge(FromId,ToId,EAttrs), _):&ndash;</p>

<h2>   edge_components(E, FromV, ToV),</h2>

<p>   nth0chk(FromId, Vs, FromV),
   nth0chk(ToId, Vs, ToV),</p>

<ul>
<li>EAttrs = [].</li>
<li>% Arrowhead</li>
<li>if_option(edge_arrowhead(ArrowheadFunction), Options,</li>
<li> call(ArrowheadFunction, E, EArrowhead)</li>
<li>),</li>
<li></li>
<li>% Color.</li>
<li>if_option(edge_color(ColorFunction), Options,</li>
<li> call(ColorFunction, E, EColor)</li>
<li>),</li>
<li></li>
<li>% Label.</li>
<li>if_option(edge_label(LabelFunction), Options,</li>
<li> call(LabelFunction, E, ELabel)</li>
<li>),</li>
<li></li>
<li>% Style.</li>
<li>if_option(edge_style(StyleFunction), Options,</li>
<li> call(StyleFunction, E, EStyle)</li>
<li>),</li>
<li></li>
<li>EAttrs = [arrowHead=EArrowhead,color=EColor,label=ELabel,style=EStyle].
+
+
+%! graph_attributes(
+%!   -GraphAttributes:list(nvpair),
+%!   +Options:list(nvpair)
+%! ) is det.
+% The following options are supported:
+%   * =|directedness(+boolean)|=
+%     Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
+%     Default: <code>false</code>.
+%   * =|graph_colorscheme(+oneof([none,svg,x11]))|=
+%     The colorscheme from which the color in this graph are taken.
+%     Default: <code>svg</code>.
+%   * =|graph_label(+atom)|=
+%     The graph label.
+%     No default.
+
+graph_attributes(GAttrs, Options):&ndash;</li>
<li>% Directedness.</li>
<li>option(directedness(Directedness), Options, false),</li>
<li></li>
<li>% Colorscheme.</li>
<li>if_option(graph_colorscheme(Colorscheme), Options, true),</li>
<li></li>
<li>% Label.</li>
<li>if_option(graph_label(GLabel), Options, true),</li>
<li></li>
<li>merge_options(</li>
<li> [colorscheme=Colorscheme,directedness=Directedness,label=GLabel],</li>
<li> GAttrs</li>
<li>).</li>
</ul>


<p> %! vertex_term(
@@ -106,15 +166,66 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), _):&ndash;
 %!   +Options:list(nvpair)
 %! ) is det.
 % The following options are supported:
+%   * =|vertex_color(+ColorFunction)|=
+%     A function that assigns colors to vertices.
+%     No default.
+%   * =|vertex_coordinate(+CoordinateFunction)|=
+%     A function that assigns coordinates to vertices.
+%     No default.
+%   * =|vertex_image(+ImageFunction)|=
+%     A function that assinges images to vertices.
+%     No default.
 %   * =|vertex_label(+LabelFunction)|=
 %     A function that assigns labels to vertices.
+%     No default.
+%   * =|vertex_peripheries(+PeripheriesFunction)|=
+%     A function that assinges peripheries to vertices.
+%     No default.
+%   * =|vertex_shape(+ShapeFunction)|=
+%     A function that assinges shapes to vertices.
+%     No default.</p>

<p> vertex_term(Vs, V, vertex(Id,V,VAttrs), Options):&ndash;
   nth0chk(Id, Vs, V),</p>

<ul>
<li>% Color.</li>
<li>if_option(vertex_color(ColorFunction), Options,</li>
<li> call(ColorFunction, V, VColor)</li>
<li>),</li>
<li></li>
<li>% Coordinates.</li>
<li>%%%%if_option(vertex_coordinate(CoordinateFunction), Options,</li>
<li>%%%%  call(CoordinateFunction, V, VCoordinates)</li>
<li>%%%%),</li>
<li></li>
<li>% Image.</li>
<li>if_option(image(ImageFunction), Options,</li>
<li> call(ImageFunction, V, VImage)</li>
<li>),</li>
<li><p>% Label.</p></li>
<li>option(vertex_label(LabelFunction), Options, =),</li>
<li>call(LabelFunction, V, VLabel),</li>
<li>if_option(vertex_label(LabelFunction), Options,</li>
<li> call(LabelFunction, V, VLabel)</li>
<li>),</li>
<li></li>
<li>% Peripheries.</li>
<li>if_option(vertex_peripheries(PeripheriesFunction), Options,</li>
<li> call(PeripheriesFunction, V, VPeripheries)</li>
<li>),</li>
<li></li>
<li>% Shape.</li>
<li>if_option(vertex_shape(ShapeFunction), Options,</li>
<li> call(ShapeFunction, V, VShape)</li>
<li><p>),</p></li>
<li><p>VAttrs = [label=VLabel].</p></li>
<li>merge_options(</li>
<li> [</li>
<li>   color=VColor,</li>
<li>   image=VImage,</li>
<li>   label=VLabel,</li>
<li>   peripheries=VPeripheries,</li>
<li>   shape=VShape</li>
<li> ],</li>
<li> VAttrs</li>
<li>).</li>
</ul>


<p>```</p>

<h2 id="16"> 16: 正在比较变动前 fa364fc 和变动后 3c900f4 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index 4a3e75f..ef2f7f2 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -43,7 +43,7 @@ Support for creating GIF representations.</p>

<pre><code>]).
</code></pre>

<p> :&ndash; predicate_options(graph_attributes/2, 2, [</p>

<pre><code>  directedness(+boolean),
</code></pre>

<ul>
<li>  graph_colorscheme(+oneof([none,svg,x11]),</li>
<li>  graph_colorscheme(+oneof([none,svg,x11])),
  graph_label(+atom)
]).</li>
</ul>


<p>@@ -109,23 +109,23 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), _):&ndash;
   if_option(edge_arrowhead(ArrowheadFunction), Options,</p>

<pre><code> call(ArrowheadFunction, E, EArrowhead)
</code></pre>

<h2>   ),</h2>

<p>   % Color.
   if_option(edge_color(ColorFunction), Options,</p>

<pre><code> call(ColorFunction, E, EColor)
</code></pre>

<h2>   ),</h2>

<p>   % Label.
   if_option(edge_label(LabelFunction), Options,</p>

<pre><code> call(LabelFunction, E, ELabel)
</code></pre>

<h2>   ),</h2>

<p>   % Style.
   if_option(edge_style(StyleFunction), Options,</p>

<pre><code> call(StyleFunction, E, EStyle)
</code></pre>

<p>   ),</p>

<ul>
<li>EAttrs = [arrowHead=EArrowhead,color=EColor,label=ELabel,style=EStyle].</li>
<li>merge_options(</li>
<li> [arrowHead=EArrowhead,color=EColor,label=ELabel,style=EStyle],</li>
<li> EAttrs</li>
<li>).</li>
</ul>


<p> %! graph_attributes(
@@ -146,10 +146,8 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), _):&ndash;
 graph_attributes(GAttrs, Options):&ndash;
   % Directedness.</p>

<h2>   option(directedness(Directedness), Options, false),</h2>

<p>   % Colorscheme.</p>

<h2>   if_option(graph_colorscheme(Colorscheme), Options, true),</h2>

<p>   % Label.
   if_option(graph_label(GLabel), Options, true),</p>

<p>@@ -169,9 +167,6 @@ graph_attributes(GAttrs, Options):&ndash;
 %   * =|vertex_color(+ColorFunction)|=
 %     A function that assigns colors to vertices.
 %     No default.
&ndash;%   * =|vertex_coordinate(+CoordinateFunction)|=
&ndash;%     A function that assigns coordinates to vertices.
&ndash;%     No default.
 %   * =|vertex_image(+ImageFunction)|=
 %     A function that assinges images to vertices.
 %     No default.
@@ -192,27 +187,18 @@ vertex_term(Vs, V, vertex(Id,V,VAttrs), Options):&ndash;
   if_option(vertex_color(ColorFunction), Options,</p>

<pre><code> call(ColorFunction, V, VColor)
</code></pre>

<h2>   ),</h2>

<ul>
<li>% Coordinates.</li>
<li>%%%%if_option(vertex_coordinate(CoordinateFunction), Options,</li>
<li>%%%%  call(CoordinateFunction, V, VCoordinates)

<ul>
<li>%%%%),</li>
</ul>
</li>
<li><p>% Image.
if_option(image(ImageFunction), Options,
  call(ImageFunction, V, VImage)
),</p></li>
<li><p>% Label.
if_option(vertex_label(LabelFunction), Options,
  call(LabelFunction, V, VLabel)
),</p></li>
<li><p>% Peripheries.
if_option(vertex_peripheries(PeripheriesFunction), Options,
  call(PeripheriesFunction, V, VPeripheries)
),</p></li>
<li><p>% Shape.
if_option(vertex_shape(ShapeFunction), Options,
  call(ShapeFunction, V, VShape)</p></li>
</ul>


<p>```</p>

<h2 id="17"> 17: 正在比较变动前 3c900f4 和变动后 65cc1c3 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index ef2f7f2..6d78ac3 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -40,6 +40,10 @@ Support for creating GIF representations.</p>

<pre><code>  pass_to(vertex_term/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(edge_term/3, 3, [
+     edge_arrowhead(+atom),
+     edge_color(+atom),
+     edge_label(+atom),
+     edge_style(+atom)</p>

<pre><code>]).
</code></pre>

<p> :&ndash; predicate_options(graph_attributes/2, 2, [</p>

<pre><code>  directedness(+boolean),
</code></pre>

<p>```</p>

<h2 id="18"> 18: 正在比较变动前 65cc1c3 和变动后 20e1f21 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 98cb0a2..25b0cd3 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -110,18 +110,14 @@ and GraphViz output files or SVG DOM structures.</p>

<p> codes_to_gv_file(Codes, ToFile, Options):&ndash;
   access_file(ToFile, write),
+  absolute_file_name(data(tmp), TmpFile, [access(write),file_type(dot)]),
   setup_call_cleanup(
&ndash;    new_memory_file(MemFile),
&ndash;    (
&ndash;      setup_call_cleanup(
&ndash;        open(MemFile, write, Write, [encoding(utf8),type(test)]),
&ndash;        put_codes(Write, Codes),
&ndash;        close(Write)
&ndash;      ),
&ndash;      file_to_gv(MemFile, ToFile, Options)
&ndash;    ),
&ndash;    free_memory_file(MemFile)
&ndash;  ).
+    open(TmpFile, write, Write, [encoding(utf8)]),
+    put_codes(Write, Codes),
+    close(Write)
+  ),
+  file_to_gv(TmpFile, ToFile, Options),
+  delete_file(TmpFile).</p>

<p> %! file_to_gv(+FromFile:atom, +Options:list(nvpair)) is det.
@@ -137,9 +133,6 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   option(to_file_type(dot), Options), !,
   rename_file(FromFile, ToFile).
 file_to_gv(FromFile, ToFile, Options):&ndash;
&ndash;  % The input file must be readable.</p>

<h2>&ndash;  access_file(FromFile, read),</h2>

<p>   % The method option.
   option(method(Method), Options, dot),
   must_be(oneof([dot,sfdp]), Method),
diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index 6d78ac3..e3a6933 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -84,10 +84,10 @@ create_gif(Es, Gif, Options):&ndash;
 create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
   % Vertex terms.</p>

<h2>   maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Options), Vs, VTerms),</h2>

<p>+
   % Edge terms.</p>

<h2>   maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Options), Es, ETerms),</h2>

<p>+
   % Graph attributes.
   graph_attributes(GAttrs, Options).</p>

<p>@@ -104,11 +104,11 @@ create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
 %   * =|edge_label(+atom)|=
 %   * =|edge_style(+atom)|=</p>

<p>-edge_term(Vs, E, edge(FromId,ToId,EAttrs), _):&ndash;
+edge_term(Vs, E, edge(FromId,ToId,EAttrs), Options):&ndash;
   edge_components(E, FromV, ToV),
   nth0chk(FromId, Vs, FromV),</p>

<h2>   nth0chk(ToId, Vs, ToV),</h2>

<p>+
   % Arrowhead
   if_option(edge_arrowhead(ArrowheadFunction), Options,</p>

<pre><code> call(ArrowheadFunction, E, EArrowhead)
</code></pre>

<p>@@ -125,9 +125,9 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), _):&ndash;
   if_option(edge_style(StyleFunction), Options,</p>

<pre><code> call(StyleFunction, E, EStyle)
</code></pre>

<h2>   ),</h2>

<p>+
   merge_options(
&ndash;    [arrowHead=EArrowhead,color=EColor,label=ELabel,style=EStyle],
+    [arrowhead=EArrowhead,color=EColor,label=ELabel,style=EStyle],</p>

<pre><code> EAttrs
</code></pre>

<p>   ).</p>

<p>@@ -154,7 +154,7 @@ graph_attributes(GAttrs, Options):&ndash;
   if_option(graph_colorscheme(Colorscheme), Options, true),
   % Label.</p>

<h2>   if_option(graph_label(GLabel), Options, true),</h2>

<p>+
   merge_options(</p>

<pre><code> [colorscheme=Colorscheme,directedness=Directedness,label=GLabel],
 GAttrs
</code></pre>

<p>@@ -186,7 +186,7 @@ graph_attributes(GAttrs, Options):&ndash;</p>

<p> vertex_term(Vs, V, vertex(Id,V,VAttrs), Options):&ndash;</p>

<h2>   nth0chk(Id, Vs, V),</h2>

<p>+
   % Color.
   if_option(vertex_color(ColorFunction), Options,</p>

<pre><code> call(ColorFunction, V, VColor)
</code></pre>

<p>@@ -207,7 +207,7 @@ vertex_term(Vs, V, vertex(Id,V,VAttrs), Options):&ndash;
   if_option(vertex_shape(ShapeFunction), Options,</p>

<pre><code> call(ShapeFunction, V, VShape)
</code></pre>

<h2>   ),</h2>

<p>+
   merge_options(</p>

<pre><code> [
   color=VColor,
</code></pre>

<p>```</p>

<h2 id="19"> 19: 正在比较变动前 20e1f21 和变动后 e2e9fc1 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 25b0cd3..2d2ed12 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -146,11 +146,8 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   (</p>

<pre><code> var(ToFile)
</code></pre>

<p>   &ndash;>
&ndash;    absolute_file_name(
&ndash;      data(export),
&ndash;      ToFile,
&ndash;      [access(write),file_type(ToFileType)]
&ndash;    )
+    user:prolog_file_type(ToExtension, ToFileType),
+    file_alternative(FromFile, <em>, </em>, ToExtension, ToFile)
   ;</p>

<pre><code> is_absolute_file_name(ToFile),
 % The given output file must match a certain file extension.
</code></pre>

<p>```</p>

<h2 id="20"> 20: 正在比较变动前 e2e9fc1 和变动后 4b72d15 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 2d2ed12..9eaf66b 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -28,20 +28,16 @@ and GraphViz output files or SVG DOM structures.
 @version 2011-2013/09, 2013/11-2014/01, 2014/05, 2014/07
 */</p>

<p>&ndash;:&ndash; use_module(library(memfile)).
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).
 :&ndash; use_module(library(predicate_options)). % Declarations.</p>

<p> :&ndash; use_module(generics(codes_ext)).
 :&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(generics(error_ext)).
&ndash;:&ndash; use_module(generics(trees)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(run_ext)).
 :&ndash; use_module(os(safe_file)).
 :&ndash; use_module(svg(svg_file)).
&ndash;:&ndash; use_module(ugraph(ugraph_export)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index e3a6933..48ecd2f 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -27,7 +27,7 @@ Support for creating GIF representations.</p>

<p> :&ndash; use_module(generics(list_ext)).
 :&ndash; use_module(generics(option_ext)).
&ndash;:&ndash; use_module(graph_theory(graph_generic)).
+:&ndash; use_module(graph_theory(graph_theory)).</p>

<p> :&ndash; use_module(plRdf(rdf_name)). % Meta-DCG.</p>

<p>```</p>

<h2 id="21"> 21: 正在比较变动前 4b72d15 和变动后 54248f7 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index 48ecd2f..2fad4c4 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -105,7 +105,7 @@ create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
 %   * =|edge_style(+atom)|=</p>

<p> edge_term(Vs, E, edge(FromId,ToId,EAttrs), Options):&ndash;
&ndash;  edge_components(E, FromV, ToV),
+  edge(E, FromV, ToV),
   nth0chk(FromId, Vs, FromV),
   nth0chk(ToId, Vs, ToV),</p>

<p>```</p>

<h2 id="22"> 22: 正在比较变动前 54248f7 和变动后 3b9a773 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index 2fad4c4..48ecd2f 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -105,7 +105,7 @@ create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
 %   * =|edge_style(+atom)|=</p>

<p> edge_term(Vs, E, edge(FromId,ToId,EAttrs), Options):&ndash;
&ndash;  edge(E, FromV, ToV),
+  edge_components(E, FromV, ToV),
   nth0chk(FromId, Vs, FromV),
   nth0chk(ToId, Vs, ToV),</p>

<p>```</p>

<h2 id="23"> 23: 正在比较变动前 3b9a773 和变动后 1e9a910 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
index 48ecd2f..d59e5f8 100644
&mdash;&ndash; a/gv_gif.pl
+++ b/gv_gif.pl
@@ -65,7 +65,7 @@ Support for creating GIF representations.
 %! create_gif(+Edges:ordset, -Gif:compound, +Options:list(nvpair)) is det.</p>

<p> create_gif(Es, Gif, Options):&ndash;
&ndash;  edges_to_vertices(Es, Vs),
+  graph_theory:edges_to_vertices(Es, Vs),
   create_gif(Vs, Es, Gif, Options).</p>

<p> %! create_gif(
@@ -105,7 +105,7 @@ create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;
 %   * =|edge_style(+atom)|=</p>

<p> edge_term(Vs, E, edge(FromId,ToId,EAttrs), Options):&ndash;
&ndash;  edge_components(E, FromV, ToV),
+  graph_theory:edge_components(E, FromV, ToV),
   nth0chk(FromId, Vs, FromV),
   nth0chk(ToId, Vs, ToV),</p>

<p>```</p>

<h2 id="24"> 24: 正在比较变动前 1e9a910 和变动后 6dc1cf5 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index b25c15b..bd24270 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1 +1,3 @@
 <em>~
+</em>#
+<em>.db
diff &mdash;git a/.gitmodules b/.gitmodules
deleted file mode 100644
index a63cbff..0000000
&mdash;&ndash; a/.gitmodules
+++ /dev/null
@@ -1,6 +0,0 @@
&ndash;[submodule &ldquo;Prolog-Library-Collection&rdquo;]
&ndash;   path = Prolog-Library-Collection
&ndash;   url = <a href="https://github.com/wouterbeek/Prolog-Library-Collection.git">https://github.com/wouterbeek/Prolog-Library-Collection.git</a>
&ndash;[submodule &ldquo;plHtml&rdquo;]
&ndash;   path = plHtml
&ndash;   url = <a href="https://github.com/wouterbeek/plHtml.git">https://github.com/wouterbeek/plHtml.git</a>
diff &mdash;git a/LICENSE.txt b/LICENSE.txt
new file mode 100644
index 0000000..c7b7798
&mdash;&ndash; /dev/null
+++ b/LICENSE.txt
@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright &copy; 2015 Wouter Beek
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the &ldquo;Software&rdquo;), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED &ldquo;AS IS&rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
deleted file mode 160000
index 5b34b01..0000000
&mdash;&ndash; a/Prolog-Library-Collection
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 5b34b01ab0cc82a56e6fd90fc26e75da22f5a0fe
diff &mdash;git a/README.md b/README.md
new file mode 100644
index 0000000..23a45db
&mdash;&ndash; /dev/null
+++ b/README.md
@@ -0,0 +1,151 @@
+plGraphViz
+==========
+
+This library allows you to easily export graphs represented as Prolog terms
+using <a href="http://www.graphviz.org/">GraphViz</a>, an advanced graph drawing library.
+The Prolog terms have the following form:
+
+<del>prolog
+graph(Vertices, Edges, GraphAttrs)
+</del>
+
+<code>Vertices</code> and <code>Edges</code> are lists of compound terms of the following form:
+
+<del>prolog
+vertex(Id, VertexAttrs)
+edge(FromId, ToId, EdgeAttrs)
+</del>
+
+<code>Id</code> identifies a vertex and may or may not occur in any of the edges
+(i.e., unconnected vertices are allowed).
+<code>FromId</code> and <code>ToId</code> may occur in the list of vertices,
+in order to draw an edge between vertices with set attributes.
+
+Attributes have the form <code>Name=Value</code>.
+<code>GraphAttrs</code> are attributes of the graph.
+<code>VertexAttrs</code> are attributes of the vertex.
+<code>EdgeAttrs</code> are attributes of the edge.
+
+Attribute values are given as Prolog terms as well,
+and are type-checked before exporting.
+Many of the GraphViz attributes are supported.
+New ones are added on an as-needed bases
+(open an issue on Github if you want to see a specific feature added!).
+HTML-like labels are supported, allowing complex tables to be shown
+inside vertices.
+
+&mdash;&ndash;
+
+### Installation
+
+<del>shell
+$ git clone <a href="https://github.com/wouterbeek/plGraphViz.git">https://github.com/wouterbeek/plGraphViz.git</a>
+$ cd plGraphViz
+$ git submodule update &mdash;init
+</del>
+
+### Example
+
+<del>prolog
+$ swipl run.pl
+?&ndash; export_graph_to_gv_file(
+     graph([vertex(1,[]),vertex(2,[])],[edge(1,2,[])],[]),
+     File,
+     [method(sfdp),output(png)]
+   ).
+   File = &lsquo;PATH/plGraphViz/data/tmp.png&rsquo;
+</del>
+
+<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example1.png" title="Example graph." alt="" />
+
+The graphic can be saved to a different file by instantiating
+the <code>File</code> argument.
+
+&mdash;&ndash;
+
+### &lsquo;Method&rsquo; option
+
+Option <code>method(+atom)</code> sets the drawing method that is used by GraphViz
+ to place the vertices and edges.
+The following values are supported.
+
+| <strong>Value</strong>       | <strong>Description</strong>         |
+| <code>circo</code>         | Circular layout.        |
+| <code>dot</code> (default) | Directed graph.         |
+| <code>fdp</code>           | Undirected graph.       |
+| <code>neato</code>         | Undirected graph.       |
+| <code>osage</code>         | Tree map.               |
+| <code>sfdp</code>          | Large undirected graph. |
+| <code>twopi</code>         | Radical layouts.        |
+
+&mdash;&ndash;
+
+### &lsquo;Output&rsquo; option
+
+Option <code>output(+atom)</code> sets the type of file the graph is written to.
+The following values are supported.
+
+| <strong>Value</strong>             | <strong>Description</strong>                       |
+|:&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;:|:&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;|
+| <code>bmp</code>                 | Windows Bitmap Format                 |
+| <code>canon</code>               |                                       |
+| <code>dot</code>                 |                                       |
+| <code>gv</code>,  <code>xdot</code>, <code>xdot1.2</code>, <code>xdot1.4</code> | DOT                     |
+| <code>cgimage</code>             | CGImage bitmap format                 |
+| <code>cmap</code>                | Client-side imagemap (deprecated)     |
+| <code>eps</code>                 | Encapsulated PostScript               |
+| <code>exr</code>                 | OpenEXR                               |
+| <code>fig</code>                 |                                       |
+| <code>gd</code>, <code>gd2</code>           | GD/GD2 formats                        |
+| <code>gif</code>                 |                                       |
+| <code>gtk</code>                 | GTK canvas                            |
+| <code>ico</code>                 | Icon Image File Format                |
+| <code>imap</code>                |                                       |
+| <code>cmapx</code>               | Server-side and client-side imagemaps |
+| <code>imap_np</code>, <code>cmapx_np</code> | Server-side and client-side imagemaps |
+| <code>ismap</code>               | Server-side imagemap (deprecated)     |
+| <code>jp2</code>                 | JPEG 2000                             |
+| <code>jpg</code>, <code>jpeg</code>, <code>jpe</code>  | JPEG                                  |
+| <code>pct</code>, <code>pict</code>         | PICT                                  |
+| <code>pdf</code> (default)       | Portable Document Format (PDF)        |
+| <code>pic</code>                 | Kernighan&rsquo;s PIC graphics language     |
+| <code>plain</code>, <code>plain-ext</code>  | Simple text format                    |
+| <code>png</code>                 | Portable Network Graphics format      |
+| <code>pov</code>                 | POV-Ray markup language (prototype)   |
+| <code>ps</code>                  | PostScript                            |
+| <code>ps2</code>                 | PostScript for PDF                    |
+| <code>psd</code>                 | PSD                                   |
+| <code>sgi</code>                 | SGI                                   |
+| <code>svg</code>, <code>svgz</code>         | Scalable Vector Graphics              |
+| <code>tga</code>                 | Truevision TGA                        |
+| <code>tif</code>, <code>tiff</code>         | TIFF (Tag Image File Format)          |
+| <code>tk</code>                  | TK graphics                           |
+| <code>vml</code>, <code>vmlz</code>         | Vector Markup Language (VML)          |
+| <code>vrml</code>                | VRML                                  |
+| <code>wbmp</code>                | Wireless BitMap format                |
+| <code>webp</code>                | Image format for the Web              |
+| <code>xlib</code>, <code>x11</code>         | Xlib canvas                           |
+
+&mdash;&ndash;
+
+### HTML-like labels
+
+Example of using HTML-like labels:
+
+<del>prolog
+export_graph_to_gv_file(
+  graph(
+    [vertex(1,[]),vertex(2,[label=html(table([tr([td(a),td(b)]),tr([td&copy;,td(d)])]))])],
+    [edge(1,2,[label=&lsquo;From 1 to 2.&rsquo;])],
+    []
+  ),
+  File,
+  []
+).
+</del>
+
+<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example2.png" title="Example graph with HTML-like labels." alt="" />
+
+&mdash;&ndash;
+
+Developed during 2013-2014 by <a href="http://www.wouterbeek.com">Wouter Beek</a>.
diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
new file mode 100644
index 0000000..bcc7654
&mdash;&ndash; /dev/null
+++ b/data/gv_attrs_scrape.pl
@@ -0,0 +1,119 @@
+:&ndash; module(
+  gv_attrs_scrape,
+  [
+    gv_attrs_scrape/1 % +File
+  ]
+).
+
+/** <module> GraphViz: Scrape attributes
+
+Writes compound terms of the following form to file:
+
+<code>prolog
+gv_attr(
+  ?Name,
+  ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
+  ?Types:list(atom),
+  ?Default,
+  ?Minimum,
+  ?Notes
+) is nondet.
+</code>
+
+@author Wouter Beek
+@version 2015/10, 2016/07
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(debug)).
+:&ndash; use_module(library(gv/gv_attr_type)).
+:&ndash; use_module(library(http/http_download)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/io)).
+:&ndash; use_module(library(pl_term)).
+:&ndash; use_module(library(print_ext)).
+:&ndash; use_module(library(xpath)).
+:&ndash; use_module(library(xpath/xpath_table)).
+:&ndash; use_module(library(yall)).
+
+
+
+
+
+%! gv_attrs_scrape(+File) is det.
+
+gv_attrs_scrape(File):&ndash;
+  debug(gv, &ldquo;Updating the GraphViz attributes table.&rdquo;, []),
+  call_to_stream(File, [In,Meta,Meta]>>gv_attrs_download(In)).
+
+
+gv_attrs_download(Write):&ndash;
+  gv_attrs_iri(Iri),
+  html_download(Iri, Dom),
+  xpath_chk(Dom, //table(@align=lower_case(center)), TableDom),
+  xpath_table(TableDom, <em>, Rows),
+  maplist(write_attr_row(Write), Rows).
+
+
+write_attr_row(Write, [Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
+  atom_phrase(translate_usedby(UsedBy2), UsedBy1),
+  once(atom_phrase(translate_type(Types2), Types1)),
+  sort(UsedBy2, UsedBy3),
+  translate_default(Default1, Default2),
+  with_output_to(
+    Write,
+    write_fact(gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes))
+  ).
+
+gv_attrs_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).
+
+
+
+
+
+% HELPERS %
+
+%! translate_default(+Default1, -Default2) is det.
+
+% The empty string is represented by the empty atom.
+translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
+% The absence of a default value is represented by an uninstantiated variable.
+translate_default(&lsquo;<none>&rsquo;, </em>):&ndash; !.
+translate_default(Default, Default).
+
+
+
+%! translate_type(-Types:list(atom))// is det.
+
+translate_type([H|T]) &mdash;>
+  gv_attr_type(H),
+  whites,
+  translate_type(T).
+translate_type([H]) &mdash;>
+  gv_attr_type(H).
+translate_type([]) &mdash;> &ldquo;&rdquo;.
+
+
+
+%! translated_usedby(
+%!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))
+%! )// is det.
+
+translate_usedby([cluster|T]) &mdash;>
+  &ldquo;C&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([edge|T]) &mdash;>
+  &ldquo;E&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([graph|T]) &mdash;>
+  &ldquo;G&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([node|T]) &mdash;>
+  &ldquo;N&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([subgraph|T]) &mdash;>
+  &ldquo;S&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([]) &mdash;>
+  &ldquo;&rdquo;.
diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
new file mode 100644
index 0000000..102a02a
&mdash;&ndash; /dev/null
+++ b/data/gv_color_scrape.pl
@@ -0,0 +1,52 @@
+:&ndash; module(
+  gv_color_scrape,
+  [
+    gv_color_scrape/1 % +File
+  ]
+).
+
+/<em>* <module> GraphViz: Scrape colors
+
+@author Wouter Beek
+@version 2015/10, 2016/07
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(debug)).
+:&ndash; use_module(library(http/http_download)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/io)).
+:&ndash; use_module(library(pl_term)).
+:&ndash; use_module(library(print_ext)).
+:&ndash; use_module(library(xpath)).
+:&ndash; use_module(library(xpath/xpath_table)).
+:&ndash; use_module(library(yall)).
+
+
+
+
+
+%! gv_color_scrape(+File) is det.
+
+gv_color_scrape(File):&ndash;
+  debug(io, &ldquo;Updating the GraphViz color table.&rdquo;, []),
+  call_to_stream(File, [In,Meta,Meta]>>gv_color_download(In)).
+
+
+gv_color_download(Write):&ndash;
+  gv_color_iri(Iri),
+  html_download(Iri, Dom),
+  xpath_chk(Dom, //table(1), TableDom1),
+  xpath_chk(Dom, //table(2), TableDom2),
+  maplist(write_color_table(Write), [x11,svg], [TableDom1,TableDom2]).
+
+
+write_color_table(Write, Colorscheme, TableDom):&ndash;
+  xpath_table(TableDom, _, Rows),
+  append(Rows, Cells),
+  forall(
+    member(Cell, Cells),
+    with_output_to(Write, write_fact(gv_color(Colorscheme, Cell)))
+  ).
+
+gv_color_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).
diff &mdash;git a/example1.png b/example1.png
new file mode 100644
index 0000000..31e7ba6
Binary files /dev/null and b/example1.png differ
diff &mdash;git a/example2.png b/example2.png
new file mode 100644
index 0000000..6e44b16
Binary files /dev/null and b/example2.png differ
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
deleted file mode 100644
index 7a64c82..0000000
&mdash;&ndash; a/gv_attr_type.pl
+++ /dev/null
@@ -1,417 +0,0 @@
&ndash;:&ndash; module(
&ndash;  gv_attr_type,
&ndash;  [
&ndash;    gv_attr_type/1, % ?Type:atom
&ndash;    addDouble//1, % +Double:float
&ndash;    addPoint//1, % +Point:compound
&ndash;    arrowType//1, % +ArrowType:atom
&ndash;    bool//1, % +Boolean:boolean
&ndash;    clusterMode//1, % +ClusterMode:atom
&ndash;    dirType//1, % +DirectionType:oneof([back,both,forward,none])
&ndash;    double//1, % +Double:float
&ndash;    doubleList//1, % +Doubles:list(float)
&ndash;    escString//1,
&ndash;    %layerList//1,
&ndash;    %layerRange//1,
&ndash;    lblString//1,
&ndash;    int//1, % +Integer:integer
&ndash;    outputMode//1, % +OutputMode:atom
&ndash;    %packMode//1,
&ndash;    pagedir//1, % +Pagedir:atom
&ndash;    point//1, % +Point:compound
&ndash;    pointList//1, % +Points:list(compound)
&ndash;    %portPos//1,
&ndash;    quadType//1, % +QuadType:atom
&ndash;    rankType//1, % +RankType:atom
&ndash;    rankdir//1, % +RankDirection:atom
&ndash;    rect//1, % +Rectangle:compound
&ndash;    shape//1,
&ndash;    smoothType//1, % +SmoothType:atom
&ndash;    %splineType//1,
&ndash;    %startType//1,
&ndash;    string//1, % ?Content:atom
&ndash;    style//2 % +Context:oneof([cluster,edge,node])
&ndash;             % +Style:atom
&ndash;    %viewPort//1
&ndash;  ]
&ndash;).
&ndash;:&ndash; reexport(
&ndash;  plGraphViz(gv_color),
&ndash;  [
&ndash;    color//1, % +Color:compound
&ndash;    colorList//1 % +ColorList:list(compound)
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz attribute types</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2014/06</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_cardinal)).</p>

<h2>&ndash;:&ndash; use_module(dcg(dcg_content)).</h2>

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_html)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_attr_type(?Type:atom) is nondet.</h2>

<p>-gv_attr_type(addDouble).
-gv_attr_type(addPoint).
-gv_attr_type(arrowType).
-gv_attr_type(bool).
-gv_attr_type(color).
-gv_attr_type(colorList).
-gv_attr_type(clusterMode).
-gv_attr_type(dirType).
-gv_attr_type(double).
-gv_attr_type(doubleList).
-gv_attr_type(escString).
-gv_attr_type(layerList).
-gv_attr_type(layerRange).
-gv_attr_type(lblString).
-gv_attr_type(int).
-gv_attr_type(outputMode).
-gv_attr_type(packMode).
-gv_attr_type(pagedir).
-gv_attr_type(point).
-gv_attr_type(pointList).
-gv_attr_type(portPos).
-gv_attr_type(quadType).
-gv_attr_type(rankType).
-gv_attr_type(rankdir).
-gv_attr_type(rect).
-gv_attr_type(shape).
-gv_attr_type(smoothType).
-gv_attr_type(splineType).
-gv_attr_type(startType).
-gv_attr_type(string).
-gv_attr_type(style).</p>

<h2>-gv_attr_type(viewPort).</h2>

<p>&ndash;
&ndash;%! addDouble(+Float:float)// .</p>

<h2>&ndash;% An <em>addDouble</em> is represented by a Prolog float.</h2>

<p>-addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>),</p>

<h2>&ndash;  double(Float).</h2>

<p>&ndash;
&ndash;%! addPoint(+Point:compound)// .
&ndash;% An <em>addPoint</em> is represented by a compound of the following form:</p>

<h2>&ndash;% <code>point(X:float,Y:float,InputOnly:boolean)</code>.</h2>

<p>-addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>),</p>

<h2>&ndash;  point(Point).</h2>

<p>&ndash;</p>

<h2>&ndash;%! arrowType(+ArrowType:atom)// .</h2>

<p>-arrowType(V) &mdash;>
&ndash;  {arrowType(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-arrowType(V):&ndash;
&ndash;  primitive_shape(V).
-arrowType(V):&ndash;
&ndash;  derived(V).
-arrowType(V):&ndash;</p>

<h2>&ndash;  backwards_compatible(V).</h2>

<p>-primitive_shape(box).
-primitive_shape(crow).
-primitive_shape(circle).
-primitive_shape(diamond).
-primitive_shape(dot).
-primitive_shape(inv).
-primitive_shape(none).
-primitive_shape(normal).
-primitive_shape(tee).</p>

<h2>-primitive_shape(vee).</h2>

<p>-derived(odot).
-derived(invdot).
-derived(invodot).
-derived(obox).</p>

<h2>-derived(odiamond).</h2>

<p>-backwards_compatible(ediamond).
-backwards_compatible(empty).
-backwards_compatible(halfopen).
-backwards_compatible(invempty).</p>

<h2>-backwards_compatible(open).</h2>

<p>&ndash;
-bool(false) &mdash;> <code>false</code>.
-bool(false) &mdash;> <code>no</code>.
-bool(true) &mdash;> <code>true</code>.</p>

<h2>-bool(true) &mdash;> <code>yes</code>.</h2>

<p>&ndash;</p>

<h2>&ndash;%! clusterMode(+ClusterMode:atom)// .</h2>

<p>-clusterMode(V) &mdash;>
&ndash;  {clusterMode(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-clusterMode(global).
-clusterMode(local).</p>

<h2>-clusterMode(none).</h2>

<p>&ndash;</p>

<h2>&ndash;%! dirType(+DirectionType:oneof([back,both,forward,none]))// .</h2>

<p>-dirType(DirType) &mdash;>
&ndash;  {dirType(DirType)},</p>

<h2>&ndash;  atom(DirType).</h2>

<p>-dirType(back).
-dirType(both).
-dirType(forward).</p>

<h2>-dirType(none).</h2>

<p>&ndash;
-double(Double1) &mdash;>
&ndash;  % float//1 will check for float type.
&ndash;  {Double2 is Double1 * 1.0},</p>

<h2>&ndash;  float(Double2).</h2>

<p>&ndash;
-doubleList([H|T]) &mdash;>
&ndash;  double(H),</p>

<h2>&ndash;  &lsquo;*&rsquo;(doubleList1, T).</h2>

<p>-doubleList1(Float) &mdash;>
&ndash;  <code>:</code>,</p>

<h2>&ndash;  double(Float).</h2>

<p>&ndash;
&ndash;%! escString(+String:atom)// .</p>

<h2>&ndash;% @tbd Support for context-dependent replacements.</h2>

<p>-escString(String) &mdash;></p>

<h2>&ndash;  atom(String).</h2>

<p>&ndash;</p>

<h2>&ndash;% @tbd layerList</h2>

<p>&ndash;</p>

<h2>&ndash;% @tbd layerRange</h2>

<p>&ndash;
-lblString(V) &mdash;>
&ndash;  escString(V).
-lblString(V) &mdash;></p>

<h2>&ndash;  gv_html_like_label(V).</h2>

<p>&ndash;
-int(V) &mdash;></p>

<h2>&ndash;  integer(V).</h2>

<p>&ndash;
-outputMode(V) &mdash;>
&ndash;  {outputMode(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-outputMode(breadthfirst).
-outputMode(edgesfirst).</p>

<h2>-outputMode(nodesfirst).</h2>

<p>&ndash;</p>

<h2>&ndash;% @tbd packMode</h2>

<p>&ndash;
-pagedir(V) &mdash;>
&ndash;  {pagedir(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-pagedir(&lsquo;BL&rsquo;).
-pagedir(&lsquo;BR&rsquo;).
-pagedir(&lsquo;LB&rsquo;).
-pagedir(&lsquo;LT&rsquo;).
-pagedir(&lsquo;RB&rsquo;).
-pagedir(&lsquo;RT&rsquo;).
-pagedir(&lsquo;TL&rsquo;).</p>

<h2>-pagedir(&lsquo;TR&rsquo;).</h2>

<p>&ndash;
&ndash;%! point(+Point:compound)// .
&ndash;% A <em>point</em> is represented by a compound of the following form:</p>

<h2>&ndash;% <code>point(X:float,Y:float,InputOnly:boolean)</code>.</h2>

<p>-point(point(X,Y,InputOnly)) &mdash;>
&ndash;  float(X),
&ndash;  <code>,</code>,
&ndash;  float(Y),</p>

<h2>&ndash;  input_only(InputOnly).</h2>

<p>-input_only(false) &mdash;> [].</p>

<h2>-input_only(true) &mdash;> <code>!</code>.</h2>

<p>&ndash;
-pointList(Points) &mdash;></p>

<h2>&ndash;  &lsquo;*&rsquo;(point, Points).</h2>

<p>&ndash;</p>

<h2>&ndash;% @tbd portPos</h2>

<p>&ndash;
-quadType(V) &mdash;>
&ndash;  {quadType(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-quadType(fast).
-quadType(none).</p>

<h2>-quadType(normal).</h2>

<p>&ndash;
-rankType(V) &mdash;>
&ndash;  {rankType(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-rankType(max).
-rankType(min).
-rankType(same).
-rankType(sink).</p>

<h2>-rankType(source).</h2>

<p>&ndash;
-rankdir(V) &mdash;>
&ndash;  {rankdir(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-rankdir(&lsquo;BT&rsquo;).
-rankdir(&lsquo;LR&rsquo;).
-rankdir(&lsquo;RL&rsquo;).</p>

<h2>-rankdir(&lsquo;TB&rsquo;).</h2>

<p>&ndash;
-rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  float(LowerLeftX), <code>,</code>,
&ndash;  float(LowerLeftY), <code>,</code>,
&ndash;  float(UpperRightX), <code>,</code>,</p>

<h2>&ndash;  float(UpperRightY).</h2>

<p>&ndash;
-shape(V) &mdash;>
&ndash;  {polygon_based_shape(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-polygon_based_shape(assembly).
-polygon_based_shape(box).
-polygon_based_shape(box3d).
-polygon_based_shape(cds).
-polygon_based_shape(circle).
-polygon_based_shape(component).
-polygon_based_shape(diamond).
-polygon_based_shape(doublecircle).
-polygon_based_shape(doubleoctagon).
-polygon_based_shape(egg).
-polygon_based_shape(ellipse).
-polygon_based_shape(fivepoverhang).
-polygon_based_shape(folder).
-polygon_based_shape(hexagon).
-polygon_based_shape(house).
-polygon_based_shape(insulator).
-polygon_based_shape(invhouse).
-polygon_based_shape(invtrapezium).
-polygon_based_shape(invtriangle).
-polygon_based_shape(larrow).
-polygon_based_shape(lpromoter).
-polygon_based_shape(&lsquo;Mcircle&rsquo;).
-polygon_based_shape(&lsquo;Mdiamond&rsquo;).
-polygon_based_shape(&lsquo;Msquare&rsquo;).
-polygon_based_shape(none).
-polygon_based_shape(note).
-polygon_based_shape(noverhang).
-polygon_based_shape(octagon).
-polygon_based_shape(oval).
-polygon_based_shape(parallelogram).
-polygon_based_shape(pentagon).
-polygon_based_shape(plaintext).
-polygon_based_shape(point).
-polygon_based_shape(polygon).
-polygon_based_shape(primersite).
-polygon_based_shape(promoter).
-polygon_based_shape(proteasesite).
-polygon_based_shape(proteinstab).
-polygon_based_shape(rarrow).
-polygon_based_shape(rect).
-polygon_based_shape(rectangle).
-polygon_based_shape(restrictionsite).
-polygon_based_shape(ribosite).
-polygon_based_shape(rnastab).
-polygon_based_shape(rpromoter).
-polygon_based_shape(septagon).
-polygon_based_shape(signature).
-polygon_based_shape(square).
-polygon_based_shape(tab).
-polygon_based_shape(terminator).
-polygon_based_shape(threepoverhang).
-polygon_based_shape(trapezium).
-polygon_based_shape(triangle).
-polygon_based_shape(tripleoctagon).</p>

<h2>-polygon_based_shape(utr).</h2>

<p>&ndash;
-smoothType(V) &mdash;>
&ndash;  {smoothType(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-smoothType(avg_dist).
-smoothType(graph_dist).
-smoothType(none).
-smoothType(power_dist).
-smoothType(rng).
-smoothType(spring).</p>

<h2>-smoothType(triangle).</h2>

<p>&ndash;</p>

<h2>&ndash;% @tbd splineType</h2>

<p>&ndash;</p>

<h2>&ndash;% @tbd startType</h2>

<p>&ndash;
&ndash;%! string(?Content:atom)// .</p>

<h2>&ndash;% A GraphViz string.</h2>

<p>-string(Content) &mdash;></p>

<h2>&ndash;  atom(Content).</h2>

<p>&ndash;</p>

<h2>&ndash;%! style(?Context:oneof([cluster,edge,node]), ?Style:atom) is nondet.</h2>

<p>-style(Context, Style) &mdash;>
&ndash;  {style(Context, Style)},</p>

<h2>&ndash;  atom(Style).</h2>

<p>-style(cluster, bold).
-style(cluster, dashed).
-style(cluster, dotted).
-style(cluster, filled).
-style(cluster, rounded).
-style(cluster, solid).
-style(cluster, striped).
-style(edge, bold).
-style(edge, dashed).
-style(edge, dotted).
-style(edge, solid).
-style(node, bold).
-style(node, dashed).
-style(node, diagonals).
-style(node, dotted).
-style(node, filled).
-style(node, rounded).
-style(node, solid).
-style(node, striped).</p>

<h2>-style(node, wedged).</h2>

<p>&ndash;</p>

<h2>&ndash;% @tbd viewPort</h2>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
deleted file mode 100644
index dd0145a..0000000
&mdash;&ndash; a/gv_attrs.pl
+++ /dev/null
@@ -1,184 +0,0 @@
&ndash;:&ndash; module(
&ndash;  gv_attrs,
&ndash;  [
&ndash;    gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
&ndash;              % +Attr1:nvpair
&ndash;              % +Attr2:nvpair
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz attributes v2</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2014/06</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(persistency)).</p>

<h2>&ndash;:&ndash; use_module(library(xpath)).</h2>

<p>&ndash;:&ndash; use_module(dcg(dcg_content)).
&ndash;:&ndash; use_module(dcg(dcg_generic)).
&ndash;:&ndash; use_module(generics(db_ext)).</p>

<h2>&ndash;:&ndash; use_module(os(file_ext)).</h2>

<p>&ndash;:&ndash; use_module(plHtml(html)).</p>

<h2>&ndash;:&ndash; use_module(plHtml(html_table)).</h2>

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_attr_type)). % DCGs implementing attribute types.</h2>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(log, logging)).</h2>

<p>&ndash;%! gv_attr(
&ndash;%!   ?Name:atom,
&ndash;%!   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
&ndash;%!   ?Types:list(atom),
&ndash;%!   ?Default,
&ndash;%!   ?Minimum,
&ndash;%!   ?Notes:atom</p>

<h2>&ndash;%! ) is nondet.</h2>

<p>&ndash;:&ndash; persistent(
&ndash;  gv_attr(
&ndash;    name:atom,
&ndash;    used_by:list(oneof([cluster,edge,graph,node,subgraph])),
&ndash;    types:list(atom),
&ndash;    default,
&ndash;    minimum,
&ndash;    notes:atom
&ndash;  )</p>

<h2>&ndash;).</h2>

<h2>&ndash;:&ndash; initialization(gv_attrs_init).</h2>

<h2>&ndash;</h2>

<p>-gv_attr(Context, N=V, N=V):&ndash;
&ndash;  var(V), !,
&ndash;  gv_attr(N, UsedBy, <em>, V, </em>, <em>),
&ndash;  memberchk(Context, UsedBy).
-gv_attr(Context, N=V1, N=V2):&ndash;
&ndash;  gv_attr(N, UsedBy, Types, </em>, Minimum, _),
&ndash;  memberchk(Context, UsedBy),
&ndash;  member(Type, Types),
&ndash;  (
&ndash;    Type == style
&ndash;  &ndash;>
&ndash;    Dcg =.. [Type,Context,V1]
&ndash;  ;
&ndash;    Dcg =.. [Type,V1]
&ndash;  ),
&ndash;  once(dcg_phrase(Dcg, V2)),</p>

<h2>&ndash;  check_minimum(V1, Minimum).</h2>

<p>-check_minimum(_, &lsquo;&rsquo;):&ndash; !.
-check_minimum(V, Min1):&ndash;
&ndash;  atom_number(Min1, Min2),</p>

<h2>&ndash;  Min2 =&lt; V.</h2>

<h2>&ndash;</h2>

<h2>&ndash;% INITIALIZATION</h2>

<h2>&ndash;%! assert_gv_attr_row(+Row:list(atom)) is det.</h2>

<p>-assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
&ndash;  dcg_phrase(translate_usedby(UsedBy2), UsedBy1),
&ndash;  once(dcg_phrase(translate_type(Types2), Types1)),
&ndash;  sort(UsedBy2, UsedBy3),
&ndash;  translate_default(Default1, Default2),</p>

<h2>&ndash;  assert_gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes).</h2>

<p>&ndash;
&ndash;%! gv_attrs_downloads is det.</p>

<h2>&ndash;% Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.</h2>

<p>-gv_attrs_download:&ndash;
&ndash;  gv_attrs_url(Url),</p>

<h2>&ndash;  download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),</h2>

<ul>
<li>xpath(Dom, //table(@align=center), TableDom),</li>
<li>% @tbd This does not work, since in <code>record_name(Element, Name)</code>,</li>
<li>%      <code>Element</code> is a signleton list whereas a compound term is expected.

<h2>&ndash;  %%%%xpath(Dom, /html/body/table, TableDom),</h2></li>
<li>html_to_table(TableDom, _, Rows),

<h2>&ndash;  maplist(assert_gv_attr_row, Rows).</h2>

&ndash;

<h2>&ndash;%! gv_attrs_file(-File:atom) is det.</h2>

<p>-gv_attrs_file(File):&ndash;</p></li>
<li>absolute_file_name(</li>
<li> data(gv_attrs),</li>
<li> File,</li>
<li> [access(write),file_type(logging)]

<h2>&ndash;  ).</h2>

&ndash;

<h2>&ndash;%! gv_attrs_init is det.</h2>

<p>-gv_attrs_init:&ndash;</p></li>
<li>gv_attrs_file(File),</li>
<li>safe_db_attach(File),</li>
<li>file_age(File, Age),

<h2>&ndash;  gv_attrs_update(Age).</h2>

&ndash;

<h2>&ndash;%! gv_attrs_update(+Age:float) is det.</h2>

<p>&ndash;% The persistent store is still fresh.
-gv_attrs_update(Age):&ndash;</p></li>
<li>once(gv_attr(<em>, </em>, <em>, </em>, <em>, </em>)),</li>
<li>Age &lt; 8640000, !.
&ndash;% The persistent store has become stale, so refresh it.
-gv_attrs_update(_):&ndash;</li>
<li>retractall_gv_attr(<em>, </em>, <em>, </em>, <em>, </em>),

<h2>&ndash;  gv_attrs_download.</h2>

&ndash;

<h2>&ndash;%! gv_attrs_url(-Url:url) is det.</h2>

<h2>-gv_attrs_url(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</h2>

&ndash;

<h2>&ndash;%! safe_db_attach(+File:atom) is det.</h2>

<p>-safe_db_attach(File):&ndash;</p></li>
<li>exists_file(File), !,</li>
<li>db_attach(File, []).
-safe_db_attach(File):&ndash;</li>
<li>touch_file(File),

<h2>&ndash;  safe_db_attach(File).</h2>

&ndash;

<h2>&ndash;%! translate_default(+Default1:atom, -Default2:atom) is det.</h2>

&ndash;% The empty string is represented by the empty atom.
-translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
&ndash;% The absence of a default value is represented by an uninstantiated variable.
-translate_default(&lsquo;<none>&rsquo;, _):&ndash; !.

<h2>-translate_default(Default, Default).</h2>

&ndash;

<h2>&ndash;%! translate_type(-Types:list(atom))// is det.</h2>

<p>-translate_type([H|T]) &mdash;></p></li>
<li>{gv_attr_type(H)},</li>
<li>atom(H),</li>
<li>whites,</li>
<li>translate_type(T).

<h2>-translate_type([]) &mdash;> !, [].</h2>

&ndash;
&ndash;%! translated_usedby(
&ndash;%!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))

<h2>&ndash;%! )// is det.</h2>

-translate_usedby([cluster|T]) &mdash;> <code>C</code>, !, translate_usedby(T).
-translate_usedby([edge|T]) &mdash;> <code>E</code>, !, translate_usedby(T).
-translate_usedby([graph|T]) &mdash;> <code>G</code>, !, translate_usedby(T).
-translate_usedby([node|T]) &mdash;> <code>N</code>, !, translate_usedby(T).
-translate_usedby([subgraph|T]) &mdash;> <code>S</code>, !, translate_usedby(T).

<h2>-translate_usedby([]) &mdash;> [].</h2>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
deleted file mode 100644
index 19d6e05..0000000
&mdash;&ndash; a/gv_color.pl
+++ /dev/null
@@ -1,151 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_color,</li>
<li>[</li>
<li> gv_color/2, % ?Colorscheme:oneof([svg,x11])</li>
<li><pre><code>         % ?Color:atom
</code></pre></li>
<li> color//1, % +Color:compound</li>
<li> colorList//1 % +Pairs:list(pair(compound,float))</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz color</h2>

<p>&ndash;@author Wouter Beek
&ndash;@tbd Color value <code>transparent</code> is only available in the output formats</p></li>
<li>  ps, svg, fig, vmrl, and the bitmap formats.
&ndash;@version 2014/06

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(persistency)).

<h2>&ndash;:&ndash; use_module(library(xpath)).</h2>

&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_cardinal)).
&ndash;:&ndash; use_module(dcg(dcg_content)).
&ndash;:&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(os(file_ext)).

<h2>&ndash;:&ndash; use_module(sparql(sparql_char)).</h2>

&ndash;:&ndash; use_module(plHtml(html)).

<h2>&ndash;:&ndash; use_module(plHtml(html_table)).</h2>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(log, logging)).</h2>

<h2>&ndash;%! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.</h2>

<h2>&ndash;:&ndash; persistent(gv_color(colorscheme:oneof([svg,x11]),color:atom)).</h2>

<h2>&ndash;:&ndash; initialization(gv_color_init).</h2>

<h2>&ndash;</h2>

&ndash;% color(+Color:compound)// .
&ndash;% A <em>color</em> is represented by a compound term of one of the following forms:
&ndash;%   1. <code>rgb(Red:nonneg,Green:nonneg,Blue:nonneg)</code>
&ndash;%   2. <code>rgba(Red:nonneg,Green:nonneg,Blue:nonneg,Alpha:nonneg)</code>

<h2>&ndash;%   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code></h2>

<p>-color(rgb(Red,Green,Blue)) &mdash;> !,</p></li>
<li><code>#</code>,</li>
<li>&lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
-color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,</li>
<li><code>#</code>,</li>
<li>&lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha]).
-color(hsv(Hue,Saturation,Value)) &mdash;> !,</li>
<li>&lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value]).
-color(Name) &mdash;></li>
<li>{gv_color(_, Name)},

<h2>&ndash;  atom(Name).</h2>

<p>-hex_color(I) &mdash;></p></li>
<li>{W1 is I / 16},</li>
<li>&lsquo;HEX&rsquo;(W1),</li>
<li>{W2 is I mod 16},

<h2>&ndash;  &lsquo;HEX&rsquo;(W2).</h2>

-hsv_color(D, Head, Tail):&ndash;

<h2>&ndash;  format(codes(Head,Tail), &lsquo;~2f&rsquo;, [D]).</h2>

&ndash;

<h2>&ndash;%! colorList(+Pairs:list(pair(compound,float)))// .</h2>

-colorList(Pairs) &mdash;>

<h2>&ndash;  &lsquo;+&rsquo;(wc, Pairs).</h2>

<p>-wc(Color-Float) &mdash;></p></li>
<li>color(Color),

<h2>&ndash;  &lsquo;?&rsquo;(wc_weight(Float)).</h2>

<p>-wc_weight(Float) &mdash;></p></li>
<li><code>;</code>,

<h2>&ndash;  float(Float).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% INITIALIZATION</h2>

<h2>&ndash;%! gv_color_download is det.</h2>

<p>-gv_color_download:&ndash;</p></li>
<li>gv_color_url(Url),</li>
<li>download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),</li>
<li>xpath(Dom, //table(1), TableDom1),</li>
<li>xpath(Dom, //table(2), TableDom2),

<h2>&ndash;  maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2]).</h2>

<p>-assert_color_table(Colorscheme, TableDom):&ndash;</p></li>
<li>html_to_table(TableDom, _, Rows),</li>
<li>append(Rows, Cells),</li>
<li>forall(</li>
<li> member(Cell, Cells),</li>
<li> assert_gv_color(Colorscheme, Cell)

<h2>&ndash;  ).</h2>

&ndash;

<h2>&ndash;%! gv_color_file(-File:atom) is det.</h2>

<p>-gv_color_file(File):&ndash;</p></li>
<li>absolute_file_name(</li>
<li> data(gv_color),</li>
<li> File,</li>
<li> [access(write),file_type(logging)]

<h2>&ndash;  ).</h2>

&ndash;

<h2>&ndash;%! gv_color_init is det.</h2>

<p>-gv_color_init:&ndash;</p></li>
<li>gv_color_file(File),</li>
<li>safe_db_attach(File),</li>
<li>file_age(File, Age),

<h2>&ndash;  gv_color_update(Age).</h2>

&ndash;

<h2>&ndash;%! gv_color_update(+Age:float) is det.</h2>

<p>&ndash;% The persistent store is still fresh.
-gv_color_update(Age):&ndash;</p></li>
<li>once(gv_color(<em>, </em>)),</li>
<li>Age &lt; 8640000, !.
&ndash;% The persistent store has become stale, so refresh it.
-gv_color_update(_):&ndash;</li>
<li>retractall_gv_color(<em>, </em>),

<h2>&ndash;  gv_color_download.</h2>

&ndash;

<h2>&ndash;%! gv_color_url(-Url:url) is det.</h2>

<h2>-gv_color_url(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).</h2>

&ndash;

<h2>&ndash;%! safe_db_attach(+File:atom) is det.</h2>

<p>-safe_db_attach(File):&ndash;</p></li>
<li>exists_file(File), !,</li>
<li>db_attach(File, []).
-safe_db_attach(File):&ndash;</li>
<li>touch_file(File),

<h2>&ndash;  safe_db_attach(File).</h2>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
deleted file mode 100644
index 68443ba..0000000
&mdash;&ndash; a/gv_dot.pl
+++ /dev/null
@@ -1,496 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_dot,</li>
<li>[</li>
<li> gv_graph//1 % +GraphTerm:compound</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz DOT generator</h2>

<h2>-DCG rules for GraphViz DOT file generation.</h2>

<h2>-Methods for writing to the GraphViz DOT format.</h2>

<h2>-In GraphViz vertices are called &lsquo;nodes&rsquo;.</h2>

&ndash;@author Wouter Beek
&ndash;@see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists)).

<h2>&ndash;:&ndash; use_module(library(ordsets)).</h2>

&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_ascii)).
&ndash;:&ndash; use_module(dcg(dcg_content)).
&ndash;:&ndash; use_module(dcg(dcg_generic)).
&ndash;:&ndash; use_module(dcg(dcg_meta)).

<h2>&ndash;:&ndash; use_module(dcg(dcg_os)).</h2>

&ndash;:&ndash; use_module(plGraphViz(gv_attrs)).
&ndash;:&ndash; use_module(plGraphViz(gv_html)).

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_numeral)).</h2>

<h2>&ndash;</h2>

&ndash;%! gv_attribute(+Attribute:nvpair)// is det.
&ndash;% A single GraphViz attribute.

<h2>&ndash;% We assume that the attribute has already been validated.</h2>

-gv_attribute(Name=Val) &mdash;>

<h2>&ndash;  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.</h2>

&ndash;
&ndash;%! gv_attribute_list(
&ndash;%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +GraphAttributes:list(nvpair),
&ndash;%!   +Attributes:list(nvpair)
&ndash;%! )// .
&ndash;% ~~~{.abnf}
&ndash;% attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
&ndash;% a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]

<h2>&ndash;% ~~~</h2>

<p>&ndash;% Attributes occur between square brackets.
-gv_attribute_list(Context, _, Attrs1) &mdash;></p></li>
<li>{maplist(gv_attr(Context), Attrs1, Attrs2)},

<h2>&ndash;  bracketed(square, &lsquo;*&rsquo;(gv_attribute, Attrs2)).</h2>

&ndash;
&ndash;%! gv_compass_pt(+Direction:oneof([&lsquo;<em>&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
&ndash;% ~~~
&ndash;% compass_pt : (n | ne | e | se | s | sw | w | nw | c | </em>)

<h2>&ndash;% ~~~</h2>

-gv_compass_pt(&lsquo;_&rsquo;) &mdash;> <code>_</code>.
-gv_compass_pt&copy; &mdash;> <code>c</code>.
-gv_compass_pt(e) &mdash;> <code>e</code>.
-gv_compass_pt(n) &mdash;> <code>n</code>.
-gv_compass_pt(ne) &mdash;> <code>ne</code>.
-gv_compass_pt(nw) &mdash;> <code>nw</code>.
-gv_compass_pt(s) &mdash;> <code>s</code>.
-gv_compass_pt(se) &mdash;> <code>se</code>.
-gv_compass_pt(sw) &mdash;> <code>sw</code>.

<h2>-gv_compass_pt(w) &mdash;> <code>w</code>.</h2>

&ndash;
&ndash;%! gv_edge_operator(+Directedness:boolean)// .
&ndash;% The binary edge operator between two vertices.
&ndash;% The operator that is used depends on whether the graph is directed or
&ndash;% undirected.
&ndash;%
&ndash;% @arg Directedness Whether an edge is directed (operator <code>-&gt;</code>) or

<h2>&ndash;%                   undirected (operator <code>--</code>).</h2>

-gv_edge_operator(false) &mdash;> !, <code>--</code>.

<h2>-gv_edge_operator(true) &mdash;> arrow(right, 2).</h2>

&ndash;
&ndash;%! gv_edge_statement(
&ndash;%!   +Indent:nonneg,
&ndash;%!   +Directedness:boolean,
&ndash;%!   +GraphAttributes:list(nvpair),
&ndash;%!   +EdgeTerm:compound
&ndash;%! )// is det.
&ndash;% A GraphViz statement describing an edge.
&ndash;%
&ndash;% @arg Indent The indentation level at which the edge statement is written.
&ndash;% @arg Directedness Whether the graph is directed or not.
&ndash;% @arg GraphAttributes The attributes of the graph. Some of these attributes
&ndash;%      may be used in the edge statement (e.g., the colorscheme).
&ndash;% @arg EdgeTerm A compound term in the GIFormat, representing an edge.
&ndash;%
&ndash;% @tbd Instead of gv_node_id//1 we could have a gv_subgraph//1
&ndash;%      at the from and/or to location.

<h2>&ndash;% @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</h2>

<p>-gv_edge_statement(I, Directedness, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;></p></li>
<li>indent(I),

<h2>&ndash;  gv_node_id(FromId), <code></code>,</h2>

<h2>&ndash;  gv_edge_operator(Directedness), <code></code>,</h2>

<h2>&ndash;  gv_node_id(ToId), <code></code>,</h2></li>
<li>% We want <code>colorscheme/1</code> from the edges and</li>
<li>% <code>directionality/1</code> from the graph.</li>
<li>gv_attribute_list(edge, GAttrs, EAttrs),

<h2>&ndash;  newline.</h2>

&ndash;
&ndash;%! gv_generic_attributes_statement(
&ndash;%!   +Kind:oneof([edge,graph,node]),
&ndash;%!   +Indent:integer,
&ndash;%!   +GraphAttributes:list(nvpair),
&ndash;%!   +CategoryAttributes:list(nvpair)
&ndash;%! )//
&ndash;% A GraphViz statement describing generic attributes for a category of items.
&ndash;%
&ndash;% @arg Kind The category of items for to the attributes apply.
&ndash;%      Possible values: <code>edge</code>, <code>graph</code>, and <code>node</code>.
&ndash;% @arg Indent An integer indicating the number of tabs.
&ndash;% @arg GraphAttributes A list of name-value pairs.
&ndash;% @arg CategoryAttributes A list of name-value pairs.
&ndash;%
&ndash;% ~~~
&ndash;% attr_stmt = (graph / node / edge) attr_list

<h2>&ndash;% ~~~</h2>

<p>-gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
-gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;></p></li>
<li>indent(I),</li>
<li>gv_kind(Kind), <code></code>,

<h2>&ndash;  gv_attribute_list(Kind, GraphAttrs, KindAttrs), newline.</h2>

&ndash;
&ndash;%! gv_graph(+GraphTerm:compound)//
&ndash;% The follow graph attributes are supported,
&ndash;% beyond the GraphViz attributes for graphs:
&ndash;%   * <code>directedness(+boolean)</code>
&ndash;%      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
&ndash;%      Default: <code>false</code>.
&ndash;%   * <code>name(+GraphName:atom)</code>
&ndash;%   * <code>strict(+StrictGraph:boolean)</code>
&ndash;%      This forbids the creation of self-arcs and multi-edges;
&ndash;%      they are ignored in the input file.
&ndash;%      Only in combinattion with directionality <code>directed</code>.
&ndash;%
&ndash;% <del>{.abnf}
&ndash;% graph = [&ldquo;strict&rdquo;] (&ldquo;graph&rdquo; / &ldquo;digraph&rdquo;) [ID] &ldquo;{&rdquo; stmt_list &ldquo;}&rdquo;
&ndash;% </del>
&ndash;%
&ndash;% <code>GraphTerm</code> is a compound term of the following form:
&ndash;% <del>{.pl}
&ndash;% graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
&ndash;% </del>
&ndash;%
&ndash;% <code>RankedVertexTerms</code> is a list of compound terms of the following form:
&ndash;% <del>{.pl}
&ndash;% rank(RankNode,ContentNodes)
&ndash;% </del>
&ndash;%
&ndash;% @tbd Add support for subgraphs (arbitrary nesting).
&ndash;% @tbd Add support for escape strings:
&ndash;%      <a href="http://www.graphviz.org/doc/info/attrs.html#k:escString">http://www.graphviz.org/doc/info/attrs.html#k:escString</a>
&ndash;% @tbd Assert attributes that are generic with respect to a subgraph.

<h2>&ndash;% @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</h2>

-gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>

<h2>&ndash;  gv_graph(graph(VTerms, [], ETerms, GAttrs)).</h2>

<p>-gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;></p></li>
<li>{</li>
<li> shared_attributes(VTerms, SharedVAttrs, NewVTerms),</li>
<li> shared_attributes(ETerms, SharedEAttrs, NewETerms),</li>
<li> select_nvpair(strict=Strict, GAttrs1, GAttrs2, false),</li>
<li> select_nvpair(directedness=Directedness, GAttrs2, GAttrs3, true),</li>
<li> select_nvpair(name=GName, GAttrs3, GAttrs4, noname),</li>
<li> add_default_nvpair(GAttrs4, overlap, false, GAttrs5),</li>
<li> I = 0

<h2>&ndash;  },</h2></li>
<li>% The first statement in the GraphViz output.</li>
<li>% States that this file represents a graph according to the GraphViz format.</li>
<li>indent(I),</li>
<li>gv_strict(Strict),</li>
<li>gv_graph_type(Directedness), <code></code>,</li>
<li>gv_id(GName), <code></code>,</li>
<li>bracketed(</li>
<li> curly,</li>
<li> gv_graph0(</li>
<li>   I,</li>
<li>   NewVTerms, SharedVAttrs, RankedVTerms,</li>
<li>   NewETerms, SharedEAttrs,</li>
<li>   Directedness, GAttrs5</li>
<li> )</li>
<li>),

<h2>&ndash;  newline.</h2>

<p>-gv_graph0(</p></li>
<li>I,</li>
<li>NewVTerms, SharedVAttrs, RankedVTerms,</li>
<li>NewETerms, SharedEAttrs,</li>
<li>Directedness, GAttrs
&ndash;) &mdash;>

<h2>&ndash;  newline,</h2></li>
<li>% The following lines are indented.

<h2>&ndash;  {NewI is I + 1},</h2></li>
<li>% Attributes that apply to the graph as a whole.

<h2>&ndash;  gv_generic_attributes_statement(graph, NewI, GAttrs, GAttrs),</h2></li>
<li>% Attributes that are the same for all nodes.

<h2>&ndash;  gv_generic_attributes_statement(node, NewI, GAttrs, SharedVAttrs),</h2></li>
<li>% Attributes that are the same for all edges.

<h2>&ndash;  gv_generic_attributes_statement(edge, NewI, GAttrs, SharedEAttrs),</h2></li>
<li>% Only add a newline if some content was written in the previous three</li>
<li>% lines.

<h2>&ndash;  ({(GAttrs == [], SharedVAttrs == [], SharedEAttrs == [])} &ndash;> `` ; newline),</h2></li>
<li>% The list of GraphViz nodes.</li>
<li>&lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms),

<h2>&ndash;  ({NewVTerms == []} &ndash;> `` ; newline),</h2></li>
<li>% The ranked GraphViz nodes (displayed at the same height).</li>
<li>&lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms),

<h2>&ndash;  ({RankedVTerms == []} &ndash;> `` ; newline),</h2></li>
<li>{</li>
<li> findall(</li>
<li>   edge(FromId,ToId,[]),</li>
<li>   (</li>
<li><pre><code> nth0(Index1, RankedVTerms, rank(vertex(FromId,_,_),_)),
</code></pre></li>
<li><pre><code> nth0(Index2, RankedVTerms, rank(vertex(ToId,_,_),_)),
</code></pre></li>
<li><pre><code> % We assume that the rank vertices are nicely ordered.
</code></pre></li>
<li><pre><code> succ(Index1, Index2)
</code></pre></li>
<li>   ),</li>
<li>   RankEdges</li>
<li> )

<h2>&ndash;  },</h2></li>
<li>% The rank edges.

<h2>&ndash;  &lsquo;*&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), RankEdges),</h2></li>
<li>% The non-rank edges.

<h2>&ndash;  &lsquo;*&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), NewETerms),</h2>

<h2>&ndash;  % Note that we do not include a newline here.</h2></li>
<li>% We want to indent the closing curly brace.

<h2>&ndash;  indent(I).</h2>

&ndash;
&ndash;%! gv_graph_type(+Directedness:boolean)// .

<h2>&ndash;% The type of graph that is represented.</h2>

-gv_graph_type(false) &mdash;> <code>graph</code>.

<h2>-gv_graph_type(true) &mdash;> <code>digraph</code>.</h2>

&ndash;
&ndash;%! gv_id(?Atom:atom)// is det.
&ndash;% Parse a GraphViz identifier.
&ndash;% There are 4 variants:
&ndash;%   1. Any string of alphabetic (<code>[a-zA-Z'200-'377]</code>) characters,
&ndash;%      underscores (<code>_</code>) or digits (<code>[0-9]</code>), not beginning with a digit.
&ndash;%   2. A numeral <code>[-]?(.[0-9]+ | [0-9]+(.[0-9]*)? )</code>.
&ndash;%   3. Any double-quoted string (<code>"..."</code>) possibly containing
&ndash;%      escaped quotes (<code>\"</code>).
&ndash;%      In quoted strings in DOT, the only escaped character is
&ndash;%      double-quote (<code>"</code>). That is, in quoted strings, the dyad <code>\"</code>
&ndash;%      is converted to <code>"</code>. All other characters are left unchanged.
&ndash;%      In particular, <code>\\</code> remains <code>\\</code>.
&ndash;%      Layout engines may apply additional escape sequences.
&ndash;%   4. An HTML string (<code>&lt;...&gt;</code>).
&ndash;%
&ndash;% @tbd Add support for HTML-like labels:
&ndash;%      <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a>

<h2>&ndash;%      This requires an XML grammar!</h2>

<p>&ndash;% HTML strings (variant 4).
-gv_id(Atom) &mdash;></p></li>
<li>dcg_atom_codes(gv_html_like_label, Atom), !.
&ndash;% Alpha-numeric strings (variant 1).
-gv_id(Atom) &mdash;></li>
<li>{atom_codes(Atom, [H|T])},</li>
<li>gv_id_first(H),</li>
<li>gv_id_rest(T), !,</li>
<li>% Variant 1 identifiers should not be (case-variants of) a</li>
<li>% GraphViz keyword.</li>
<li>{+ gv_keyword([H|T])}.
&ndash;% Numerals (variant 2)
-gv_id(N) &mdash;></li>
<li>{number(N)}, !,</li>
<li>gv_numeral(N).
&ndash;% Double-quoted strings (variant 3).
&ndash;% The quotes are already part of the given atom.
-gv_id(Atom) &mdash;></li>
<li>{</li>
<li> atom_codes(Atom, [H|T]),</li>
<li> append(S, [H], T)</li>
<li>},</li>
<li>dcg_between(double_quote(H), gv_quoted_string(S)), !.
&ndash;% Double-quoted strings (variant 3).
&ndash;% The quotes are not in the given atom. They are written anyway.
-gv_id(Atom) &mdash;>

<h2>&ndash;  quoted(double_quote, dcg_atom_codes(gv_quoted_string, Atom)), !.</h2>

-gv_id_first(X) &mdash;> ascii_letter(X).

<h2>-gv_id_first(X) &mdash;> underscore(X).</h2>

<p>-gv_id_rest([]) &mdash;> [].
-gv_id_rest([H|T]) &mdash;></p></li>
<li>(ascii_alpha_numeric(H) ; underscore(H)),

<h2>&ndash;  gv_id_rest(T).</h2>

&ndash;
&ndash;%! gv_keyword(+Codes:list(code)) is semidet.

<h2>&ndash;% Succeeds if the given codes for a GraphViz reserved keyword.</h2>

<p>-gv_keyword(Codes):&ndash;</p></li>
<li>% Obviously, the keywords do not occur on the difference list input.</li>
<li>% So we must use phrase/[2,3].

<h2>&ndash;  phrase(gv_keyword, Codes).</h2>

&ndash;%! gv_keyword// .
&ndash;% GraphViz has reserved keywords that cannot be used as identifiers.

<h2>&ndash;% GraphViz keywords are case-insensitive.</h2>

-gv_keyword &mdash;> <code>digraph</code>.
-gv_keyword &mdash;> <code>edge</code>.
-gv_keyword &mdash;> <code>graph</code>.
-gv_keyword &mdash;> <code>node</code>.
-gv_keyword &mdash;> <code>strict</code>.

<h2>-gv_keyword &mdash;> <code>subgraph</code>.</h2>

&ndash;

<h2>&ndash;%! gv_kind(+Kind:oneof([edge,graph,node]))// .</h2>

-gv_kind(edge) &mdash;> <code>edge</code>.
-gv_kind(graph) &mdash;> <code>graph</code>.

<h2>-gv_kind(node) &mdash;> <code>node</code>.</h2>

&ndash;
&ndash;%! gv_node_id(+NodeId:atom)// .
&ndash;% GraphViz node identifiers can be of the following two types:
&ndash;%   1. A GraphViz identifier, see gv_id//1.
&ndash;%   2. A GraphViz identifier plus a GraphViz port indicator, see gv_port//0.
&ndash;%
&ndash;% @tbd Add support for GraphViz port indicators

<h2>&ndash;%      inside GraphViz node identifiers.</h2>

<p>-gv_node_id(Id) &mdash;></p></li>
<li>gv_id(Id).
&ndash;%gv_node_id(<em>) &mdash;>
&ndash;%  gv_id(</em>),

<h2>&ndash;%  gv_port.</h2>

&ndash;
&ndash;%! gv_node_statement(
&ndash;%!   +Indent:integer,
&ndash;%!   +GraphAttributes,
&ndash;%!   +VertexTerm:compound
&ndash;%! )// .

<h2>&ndash;% A GraphViz statement describing a vertex (GraphViz calls vertices &lsquo;nodes&rsquo;).</h2>

<p>-gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;></p></li>
<li>indent(I),</li>
<li>gv_node_id(Id), <code></code>,

<h2>&ndash;  gv_attribute_list(node, GraphAttrs, VAttrs), newline.</h2>

<p>&ndash;
-gv_port &mdash;></p></li>
<li>gv_port_location,</li>
<li>&lsquo;?&rsquo;(gv_port_angle).
-gv_port &mdash;></li>
<li>gv_port_angle,</li>
<li>&lsquo;?&rsquo;(gv_port_location).
-gv_port &mdash;></li>
<li><code>:</code>,

<h2>&ndash;  gv_compass_pt(_).</h2>

<p>-gv_port_angle &mdash;></p></li>
<li><code>@</code>,

<h2>&ndash;  gv_id(_).</h2>

<p>-gv_port_location &mdash;></p></li>
<li><code>:</code>,</li>
<li>gv_id(_).
-gv_port_location &mdash;></li>
<li><code>:</code>,</li>
<li>bracketed(</li>
<li> round,</li>
<li> (</li>
<li>   gv_id(_),</li>
<li>   <code>,</code>,</li>
<li>   gv_id(_)</li>
<li> )

<h2>&ndash;  ).</h2>

<p>&ndash;
-gv_quoted_string([]) &mdash;> [].
&ndash;% Just to be sure, we do not allow the double quote
&ndash;% that closes the string to be escaped.
-gv_quoted_string([X]) &mdash;></p></li>
<li>{X \== 92}, !,</li>
<li>[X].
&ndash;% A double quote is only allowed if it is escaped by a backslash.
-gv_quoted_string([92,34|T]) &mdash;> !,</li>
<li>gv_quoted_string(T).
&ndash;% Add the backslash escape character.
-gv_quoted_string([34|T]) &mdash;> !,</li>
<li><code>\\\"</code>,</li>
<li>gv_quoted_string(T).
&ndash;% All other characters are allowed without escaping.
-gv_quoted_string([H|T]) &mdash;></li>
<li>[H],

<h2>&ndash;  gv_quoted_string(T).</h2>

<p>&ndash;
-gv_ranked_node_collection(</p></li>
<li>I,</li>
<li>GraphAttrs,</li>
<li>rank(Rank_V_Term,Content_V_Terms)
&ndash;) &mdash;></li>
<li>indent(I),</li>
<li>bracketed(curly, (

<h2>&ndash;    newline,</h2></li>
<li> % The rank attribute.</li>
<li> {NewI is I + 1},

<h2>&ndash;    indent(NewI), gv_attribute(rank=same), <code>;</code>, newline,</h2>

<h2>&ndash;    &lsquo;*&rsquo;(gv_node_statement(NewI, GraphAttrs), [Rank_V_Term|Content_V_Terms]),</h2></li>
<li> % We want to indent the closing curly brace.</li>
<li> indent(I)</li>
<li>)),

<h2>&ndash;  newline.</h2>

&ndash;
&ndash;%! gv_strict(+Strict:boolean)// is det.
&ndash;% The keyword denoting that the graph is strict, i.e., has no self-arcs and
&ndash;% no multi-edges.

<h2>&ndash;% This only applies to directed graphs.</h2>

-gv_strict(false) &mdash;> [].

<h2>-gv_strict(true) &mdash;> <code>strict</code>.</h2>

<h2>&ndash;</h2>

<h2>&ndash;% Helpers</h2>

-add_default_nvpair(Attrs1, N, Default, Attrs2):&ndash;

<h2>&ndash;  add_default_nvpair(Attrs1, N, Default, _, Attrs2).</h2>

<p>-add_default_nvpair(Attrs, N, _, V, Attrs):&ndash;</p></li>
<li>memberchk(N=V, Attrs), !.
-add_default_nvpair(Attrs1, N, Default, Default, Attrs2):&ndash;

<h2>&ndash;  ord_add_element(Attrs1, N=Default, Attrs2).</h2>

<p>-select_nvpair(N=V, Attrs1, Attrs2, _):&ndash;</p></li>
<li>memberchk(N=V, Attrs1), !,</li>
<li>select(N=V, Attrs1, Attrs2).

<h2>-select_nvpair(_=Default, Attrs, Attrs, Default).</h2>

&ndash;
-extract_shared([], []):&ndash; !.
-extract_shared(Argss, Shared):&ndash;

<h2>&ndash;  ord_intersection(Argss, Shared).</h2>

-remove_shared_attributes(Shared, Args1, Args2):&ndash;

<h2>&ndash;  ord_subtract(Args1, Shared, Args2).</h2>

<p>-shared_attributes(Terms1, Shared, Terms2):&ndash;</p></li>
<li>maplist(term_components(Func), Terms1, Args1, Args2, Args3a),</li>
<li>extract_shared(Args3a, Shared),</li>
<li>maplist(remove_shared_attributes(Shared), Args3a, Args3b),

<h2>&ndash;  maplist(term_components(Func), Terms2, Args1, Args2, Args3b).</h2>

-term_components(Func, Term, Arg1, Arg2, Arg3):&ndash;

<h2>&ndash;  Term =.. [Func,Arg1,Arg2,Arg3].</h2>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
deleted file mode 100644
index 9eaf66b..0000000
&mdash;&ndash; a/gv_file.pl
+++ /dev/null
@@ -1,206 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_file,</li>
<li>[</li>
<li> file_to_gv/2, % +File:atom</li>
<li><pre><code>           % +Options:list(nvpair)
</code></pre></li>
<li> file_to_gv/3, % +FromFile:atom</li>
<li><pre><code>           % ?ToFile:atom
</code></pre></li>
<li><pre><code>           % +Options:list(nvpair)
</code></pre></li>
<li> gif_to_gv_file/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % +ToFile:atom
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre></li>
<li> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % -SvgDom:list(compound)
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre></li>
<li> open_dot/1 % +File:file</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz file</h2>

-Predicates for converting GIF-formatted terms

<h2>-into GraphViz output files or SVG DOM structures.</h2>

-Also converts between GraphViz DOT formatted files

<h2>-and GraphViz output files or SVG DOM structures.</h2>

&ndash;@author Wouter Beek
&ndash;@version 2011-2013/09, 2013/11-2014/01, 2014/05, 2014/07

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(process)).

<h2>&ndash;:&ndash; use_module(library(predicate_options)). % Declarations.</h2>

&ndash;:&ndash; use_module(generics(codes_ext)).
&ndash;:&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(os(file_ext)).
&ndash;:&ndash; use_module(os(run_ext)).
&ndash;:&ndash; use_module(os(safe_file)).

<h2>&ndash;:&ndash; use_module(svg(svg_file)).</h2>

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_dot)).</h2>

&ndash;:&ndash; dynamic(user:file_type_program/2).

<h2>&ndash;:&ndash; multifile(user:file_type_program/2).</h2>

&ndash;:&ndash; dynamic(user:module_uses/2).

<h2>&ndash;:&ndash; multifile(user:module_uses/2).</h2>

&ndash;:&ndash; dynamic(user:prolog_file_type/2).

<h2>&ndash;:&ndash; multifile(user:prolog_file_type/2).</h2>

&ndash;% Register DOT.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(dot, dot)).
&ndash;:&ndash; db_add_novel(user:prolog_file_type(dot, graphviz)).
&ndash;:&ndash; db_add_novel(user:file_type_program(dot, dotty)).
&ndash;:&ndash; db_add_novel(user:file_type_program(dot, dotx)).

<h2>&ndash;:&ndash; db_add_novel(user:module_uses(gv_file, file_type(dot))).</h2>

&ndash;% Register JPG/JPEG.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpeg, jpeg)).
&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpeg, graphviz_output)).
&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpg, jpeg)).

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpg, graphviz_output)).</h2>

&ndash;% Register PDF.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(pdf, pdf)).

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(pdf, graphviz_output)).</h2>

&ndash;% Register PNG.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(png, png)).

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(png, graphviz_output)).</h2>

&ndash;% Register SVG.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(svg, graphviz_output)).

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(svg, svg)).</h2>

&ndash;% Register XDOT.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(xdot, graphviz_output)).

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(xdot, xdot)).</h2>

<p>&ndash;:&ndash; predicate_options(codes_to_gv_file/3, 3, [</p></li>
<li>  pass_to(file_to_gv/3, 3)</li>
<li>]).
&ndash;:&ndash; predicate_options(file_to_gv/2, 2, [</li>
<li>  pass_to(file_to_gv/3, 3)</li>
<li>]).
&ndash;:&ndash; predicate_options(file_to_gv/3, 3, [</li>
<li>  method(+oneof([dot,sfdp])),</li>
<li>  to_file_type(+oneof([dot,jpeg,pdf,svg,xdot]))</li>
<li>]).
&ndash;:&ndash; predicate_options(gif_to_svg_dom/3, 3, [</li>
<li>  pass_to(gif_to_gv_file/3, 3)</li>
<li>]).
&ndash;:&ndash; predicate_options(gif_to_gv_file/3, 3, [</li>
<li>  pass_to(codes_to_gv_file/3, 3)

<h2>&ndash;   ]).</h2>

<h2>&ndash;</h2>

&ndash;%! codes_to_gv_file(
&ndash;%!   +Codes:list(code),
&ndash;%!   +ToFile:atom,
&ndash;%!   +Options:list(nvpair)

<h2>&ndash;%! ) is det.</h2>

<p>-codes_to_gv_file(Codes, ToFile, Options):&ndash;</p></li>
<li>access_file(ToFile, write),</li>
<li>absolute_file_name(data(tmp), TmpFile, [access(write),file_type(dot)]),</li>
<li>setup_call_cleanup(</li>
<li> open(TmpFile, write, Write, [encoding(utf8)]),</li>
<li> put_codes(Write, Codes),</li>
<li> close(Write)</li>
<li>),</li>
<li>file_to_gv(TmpFile, ToFile, Options),

<h2>&ndash;  delete_file(TmpFile).</h2>

&ndash;

<h2>&ndash;%! file_to_gv(+FromFile:atom, +Options:list(nvpair)) is det.</h2>

-file_to_gv(FromFile, Options):&ndash;

<h2>&ndash;  file_to_gv(FromFile, _, Options).</h2>

&ndash;%! file_to_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
&ndash;% Converts a GraphViz DOT file to an image file, using a specific

<h2>&ndash;% visualization method.</h2>

<p>-file_to_gv(FromFile, ToFile, Options):&ndash;</p></li>
<li>option(to_file_type(dot), Options), !,</li>
<li>rename_file(FromFile, ToFile).
-file_to_gv(FromFile, ToFile, Options):&ndash;</li>
<li>% The method option.</li>
<li>option(method(Method), Options, dot),

<h2>&ndash;  must_be(oneof([dot,sfdp]), Method),</h2></li>
<li>% The file type option.</li>
<li>option(to_file_type(ToFileType), Options, pdf),</li>
<li>prolog_file_type(ToExtension, ToFileType),

<h2>&ndash;  prolog_file_type(ToExtension, graphviz_output), !,</h2></li>
<li>% The output file is either given or created.</li>
<li>(</li>
<li> var(ToFile)</li>
<li>&ndash;></li>
<li> user:prolog_file_type(ToExtension, ToFileType),</li>
<li> file_alternative(FromFile, <em>, </em>, ToExtension, ToFile)</li>
<li>;</li>
<li> is_absolute_file_name(ToFile),</li>
<li> % The given output file must match a certain file extension.</li>
<li> file_name_extension(_, ToExtension, ToFile)</li>
<li>),</li>
<li>% Now that we have the output file we can prevent the</li>
<li>% file type / file extension translation predicates from bakctracking.

<h2>&ndash;  !,</h2></li>
<li>% Run the GraphViz conversion command in the shell.</li>
<li>format(atom(OutputType), &lsquo;-T~w&rsquo;, [ToExtension]),</li>
<li>process_create(</li>
<li> path(Method),</li>
<li> [OutputType,FromFile,&lsquo;-o&rsquo;,ToFile],</li>
<li> [process(PID)]</li>
<li>),</li>
<li>process_wait(PID, exit(ShellStatus)),

<h2>&ndash;  exit_code_handler(&lsquo;GraphViz&rsquo;, ShellStatus).</h2>

&ndash;
&ndash;%! gif_to_gv_file(+Gif:compound, +ToFile:atom, +Options:list(nvpair)) is det.
&ndash;% Returns a file containing a GraphViz visualization of the given graph.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
&ndash;%     The file type of the generated GraphViz file.

<h2>&ndash;%     Default: <code>pdf</code>.</h2>

<p>-gif_to_gv_file(Gif, ToFile, Options):&ndash;</p></li>
<li>once(phrase(gv_graph(Gif), Codes)),

<h2>&ndash;  codes_to_gv_file(Codes, ToFile, Options).</h2>

&ndash;
&ndash;%! gif_to_svg_dom(
&ndash;%!   +GraphInterchangeFormat:compound,
&ndash;%!   -SvgDom:list(compound),
&ndash;%!   +Options:list(nvpair)

<h2>&ndash;%! ) is det.</h2>

<p>-gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;</p></li>
<li>% Make sure the file type of the output file is SvgDom.</li>
<li>merge_options([to_file_type=svg], Options1, Options2),</li>
<li>gif_to_gv_file(Gif, ToFile, Options2),</li>
<li>file_to_svg(ToFile, SvgDom),

<h2>&ndash;  safe_delete_file(ToFile).</h2>

&ndash;
&ndash;%! open_dot(+File:atom) is det.
&ndash;% Opens the given DOT file.
&ndash;%
&ndash;% @tbd Test support on Windows.

<h2>&ndash;% @tbd Test support on OS-X.</h2>

<p>-open_dot(File):&ndash;</p></li>
<li>once(find_program_by_file_type(dot, Program)),

<h2>&ndash;  run_program(Program, [File]).</h2>

<p>diff &mdash;git a/gv_gif.pl b/gv_gif.pl
deleted file mode 100644
index d59e5f8..0000000
&mdash;&ndash; a/gv_gif.pl
+++ /dev/null
@@ -1,221 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_gif,</li>
<li>[</li>
<li> create_gif/3, % +Edges:ordset</li>
<li><pre><code>           % -Gif:compound
</code></pre></li>
<li><pre><code>           % +Options:list(nvpair)
</code></pre></li>
<li> create_gif/4 % +Vertices:ordset</li>
<li><pre><code>          % +Edges:ordset
</code></pre></li>
<li><pre><code>          % -Gif:compound
</code></pre></li>
<li><pre><code>          % +Options:list(nvpair)
</code></pre></li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz Graph Interchange Format (GIF)</h2>

<h2>-Support for creating GIF representations.</h2>

&ndash;@author Wouter Beek
&ndash;@version 2014/06-2014/07

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lambda)).
&ndash;:&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(ordsets)).

<h2>&ndash;:&ndash; use_module(library(predicate_options)). % Declarations.</h2>

&ndash;:&ndash; use_module(generics(list_ext)).
&ndash;:&ndash; use_module(generics(option_ext)).

<h2>&ndash;:&ndash; use_module(graph_theory(graph_theory)).</h2>

<h2>&ndash;:&ndash; use_module(plRdf(rdf_name)). % Meta-DCG.</h2>

<p>&ndash;:&ndash; predicate_options(create_gif/3, 3, [</p></li>
<li>  pass_to(create_gif/4, 4)</li>
<li>]).
&ndash;:&ndash; predicate_options(create_gif/4, 4, [</li>
<li>  pass_to(edge_term/3, 3),</li>
<li>  pass_to(graph_attributes/2, 2),</li>
<li>  pass_to(vertex_term/3, 3)</li>
<li>]).
&ndash;:&ndash; predicate_options(edge_term/3, 3, [</li>
<li>  edge_arrowhead(+atom),</li>
<li>  edge_color(+atom),</li>
<li>  edge_label(+atom),</li>
<li>  edge_style(+atom)</li>
<li>]).
&ndash;:&ndash; predicate_options(graph_attributes/2, 2, [</li>
<li>  directedness(+boolean),</li>
<li>  graph_colorscheme(+oneof([none,svg,x11])),</li>
<li>  graph_label(+atom)

<h2>&ndash;   ]).</h2>

<p>&ndash;:&ndash; predicate_options(vertex_term/3, 3, [</p></li>
<li>  vertex_color(+atom),</li>
<li>  vertex_coordinates(+atom),</li>
<li>  vertex_image(+atom),</li>
<li>  vertex_label(+atom),</li>
<li>  vertex_peripheries(+atom),</li>
<li>  vertex_shape(+atom)

<h2>&ndash;   ]).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! create_gif(+Edges:ordset, -Gif:compound, +Options:list(nvpair)) is det.</h2>

<p>-create_gif(Es, Gif, Options):&ndash;</p></li>
<li>graph_theory:edges_to_vertices(Es, Vs),

<h2>&ndash;  create_gif(Vs, Es, Gif, Options).</h2>

&ndash;%! create_gif(
&ndash;%!   +Vertices:ordset,
&ndash;%!   +Edges:ordset,
&ndash;%!   -Gif:compound,
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
&ndash;% The following options are supported:
&ndash;%   * =|graph_colorscheme(+oneof([none,svg,x11]))
&ndash;%     No default.
&ndash;%   * =|graph_label(+LabelFunction)|=
&ndash;%     The functions that assigns names to graphs.

<h2>&ndash;%     No default.</h2>

<p>-create_gif(Vs, Es, graph(VTerms,ETerms,GAttrs), Options):&ndash;</p></li>
<li>% Vertex terms.

<h2>&ndash;  maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Options), Vs, VTerms),</h2></li>
<li>% Edge terms.

<h2>&ndash;  maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Options), Es, ETerms),</h2></li>
<li>% Graph attributes.

<h2>&ndash;  graph_attributes(GAttrs, Options).</h2>

&ndash;
&ndash;%! edge_term(
&ndash;%!   +Vertices:ordset,
&ndash;%!   +Edge:pair,
&ndash;%!   -EdgeTerm:compound,
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
&ndash;% The following options are supported:
&ndash;%   * =|edge_arrowhead(+atom)|=
&ndash;%   * =|edge_color(+atom)|=
&ndash;%   * =|edge_label(+atom)|=

<h2>&ndash;%   * =|edge_style(+atom)|=</h2>

<p>-edge_term(Vs, E, edge(FromId,ToId,EAttrs), Options):&ndash;</p></li>
<li>graph_theory:edge_components(E, FromV, ToV),</li>
<li>nth0chk(FromId, Vs, FromV),

<h2>&ndash;  nth0chk(ToId, Vs, ToV),</h2></li>
<li>% Arrowhead</li>
<li>if_option(edge_arrowhead(ArrowheadFunction), Options,</li>
<li> call(ArrowheadFunction, E, EArrowhead)</li>
<li>),</li>
<li>% Color.</li>
<li>if_option(edge_color(ColorFunction), Options,</li>
<li> call(ColorFunction, E, EColor)</li>
<li>),</li>
<li>% Label.</li>
<li>if_option(edge_label(LabelFunction), Options,</li>
<li> call(LabelFunction, E, ELabel)</li>
<li>),</li>
<li>% Style.</li>
<li>if_option(edge_style(StyleFunction), Options,</li>
<li> call(StyleFunction, E, EStyle)

<h2>&ndash;  ),</h2></li>
<li>merge_options(</li>
<li> [arrowhead=EArrowhead,color=EColor,label=ELabel,style=EStyle],</li>
<li> EAttrs

<h2>&ndash;  ).</h2>

&ndash;
&ndash;%! graph_attributes(
&ndash;%!   -GraphAttributes:list(nvpair),
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
&ndash;% The following options are supported:
&ndash;%   * =|directedness(+boolean)|=
&ndash;%     Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
&ndash;%     Default: <code>false</code>.
&ndash;%   * =|graph_colorscheme(+oneof([none,svg,x11]))|=
&ndash;%     The colorscheme from which the color in this graph are taken.
&ndash;%     Default: <code>svg</code>.
&ndash;%   * =|graph_label(+atom)|=
&ndash;%     The graph label.

<h2>&ndash;%     No default.</h2>

<p>-graph_attributes(GAttrs, Options):&ndash;</p></li>
<li>% Directedness.</li>
<li>option(directedness(Directedness), Options, false),</li>
<li>% Colorscheme.</li>
<li>if_option(graph_colorscheme(Colorscheme), Options, true),</li>
<li>% Label.

<h2>&ndash;  if_option(graph_label(GLabel), Options, true),</h2></li>
<li>merge_options(</li>
<li> [colorscheme=Colorscheme,directedness=Directedness,label=GLabel],</li>
<li> GAttrs

<h2>&ndash;  ).</h2>

&ndash;
&ndash;%! vertex_term(
&ndash;%!   +Vertices:ordset,
&ndash;%!   +Vertex,
&ndash;%!   -VertexTerm:compound,
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
&ndash;% The following options are supported:
&ndash;%   * =|vertex_color(+ColorFunction)|=
&ndash;%     A function that assigns colors to vertices.
&ndash;%     No default.
&ndash;%   * =|vertex_image(+ImageFunction)|=
&ndash;%     A function that assinges images to vertices.
&ndash;%     No default.
&ndash;%   * =|vertex_label(+LabelFunction)|=
&ndash;%     A function that assigns labels to vertices.
&ndash;%     No default.
&ndash;%   * =|vertex_peripheries(+PeripheriesFunction)|=
&ndash;%     A function that assinges peripheries to vertices.
&ndash;%     No default.
&ndash;%   * =|vertex_shape(+ShapeFunction)|=
&ndash;%     A function that assinges shapes to vertices.

<h2>&ndash;%     No default.</h2>

-vertex_term(Vs, V, vertex(Id,V,VAttrs), Options):&ndash;

<h2>&ndash;  nth0chk(Id, Vs, V),</h2></li>
<li>% Color.</li>
<li>if_option(vertex_color(ColorFunction), Options,</li>
<li> call(ColorFunction, V, VColor)</li>
<li>),</li>
<li>% Image.</li>
<li>if_option(image(ImageFunction), Options,</li>
<li> call(ImageFunction, V, VImage)</li>
<li>),</li>
<li>% Label.</li>
<li>if_option(vertex_label(LabelFunction), Options,</li>
<li> call(LabelFunction, V, VLabel)</li>
<li>),</li>
<li>% Peripheries.</li>
<li>if_option(vertex_peripheries(PeripheriesFunction), Options,</li>
<li> call(PeripheriesFunction, V, VPeripheries)</li>
<li>),</li>
<li>% Shape.</li>
<li>if_option(vertex_shape(ShapeFunction), Options,</li>
<li> call(ShapeFunction, V, VShape)

<h2>&ndash;  ),</h2></li>
<li>merge_options(</li>
<li> [</li>
<li>   color=VColor,</li>
<li>   image=VImage,</li>
<li>   label=VLabel,</li>
<li>   peripheries=VPeripheries,</li>
<li>   shape=VShape</li>
<li> ],</li>
<li> VAttrs

<h2>&ndash;  ).</h2>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
deleted file mode 100644
index b8d3190..0000000
&mdash;&ndash; a/gv_html.pl
+++ /dev/null
@@ -1,60 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_html,</li>
<li>[</li>
<li> gv_html_like_label//1 % +Codes:list(code)</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz HTML</h2>

&ndash;@author Wouter Beek
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06

<h2>&ndash;*/</h2>

<h2>&ndash;:&ndash; use_module(dcg(dcg_content)).</h2>

<h2>&ndash;:&ndash; use_module(plHtml(html_dcg)).</h2>

<h2>&ndash;</h2>

&ndash;%! gv_html_label(+Codes:list(code))// .
&ndash;%

<h2>&ndash;% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a></h2>

-gv_html_label &mdash;> gv_html_text, !.
-gv_html_label &mdash;> gv_html_table, !.

<h2>-gv_html_label &mdash;> [].</h2>

<h2>-gv_html_like_label &mdash;> bracketed(angular, gv_html_label).</h2>

<h2>-gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).</h2>

-gv_html_table &mdash;> html_element(table, _, gv_html_rows).

<h2>-gv_html_table &mdash;> html_element(font, <em>, html_element(table, </em>, gv_html_rows)).</h2>

-gv_html_rows &mdash;> gv_html_row, gv_html_rows.
-gv_html_rows &mdash;> gv_html_row, html_element(hr, _), gv_html_rows.

<h2>-gv_html_rows &mdash;> gv_html_row.</h2>

<h2>-gv_html_row &mdash;> html_element(tr, _, gv_html_cells).</h2>

-gv_html_cell &mdash;> html_element(td, _, gv_html_label).

<h2>-gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).</h2>

-gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
-gv_html_cells &mdash;> gv_html_cell.

<h2>-gv_html_cells &mdash;> gv_html_cell, html_element(vr, _), gv_html_cells.</h2>

-gv_html_text &mdash;> gv_html_textitem, gv_html_text.

<h2>-gv_html_text &mdash;> gv_html_textitem.</h2>

-gv_html_textitem &mdash;> html_string, !.
-gv_html_textitem &mdash;> html_entity, !.
-gv_html_textitem &mdash;> html_element(br, <em>), !.
-gv_html_textitem &mdash;> html_element(font, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(i, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(b, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(u, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(sub, </em>, gv_html_text), !.

<h2>-gv_html_textitem &mdash;> html_element(sup, _, gv_html_text), !.</h2>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
deleted file mode 100644
index 9b82fc0..0000000
&mdash;&ndash; a/gv_numeral.pl
+++ /dev/null
@@ -1,71 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_numeral,</li>
<li>[</li>
<li> gv_numeral//1 % ?Value:number</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz numeral</h2>

&ndash;@author Wouter Beek
&ndash;@version 2014/05-2014/06

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_cardinal)).

<h2>&ndash;:&ndash; use_module(math(math_ext)).</h2>

<h2>&ndash;</h2>

&ndash;%! gv_numeral(?Value:number)// .
&ndash;% ~~~{.bnf}
&ndash;% (&lsquo;&ndash;&rsquo;)? ( &lsquo;.&rsquo; [0-9]+ | [0-9]+ ( &lsquo;.&rsquo; [0-9]* )? )

<h2>&ndash;% ~~~</h2>

<p>-gv_numeral(N) &mdash;></p></li>
<li>{nonvar(N)},</li>
<li>{number_sign_parts(N, Sign, Abs)},</li>
<li>({Sign =:= -1} &ndash;> <code>-</code> ; ``),</li>
<li>gv_numeral_abs(Abs).
-gv_numeral(N) &mdash;></li>
<li>{var(N)},</li>
<li>&lsquo;sign?&rsquo;(Sign),</li>
<li>gv_numeral_abs(Abs),

<h2>&ndash;  {number_sign_parts(N, Sign, Abs)}.</h2>

<p>&ndash;
-gv_numeral_abs(N) &mdash;></p></li>
<li>{nonvar(N)},</li>
<li>{number_integer_parts(N, N1, N2)},</li>
<li>(</li>
<li> {N2 =:= 0}</li>
<li>&ndash;></li>
<li> integer(N1)</li>
<li>;</li>
<li> {N1 =:= 0}</li>
<li>&ndash;></li>
<li> <code>.</code>,</li>
<li> integer(N2)</li>
<li>;</li>
<li> integer(N1),</li>
<li> &lsquo;?&rsquo;((<code>.</code>, &lsquo;integer?&rsquo;(N2)))</li>
<li>).
-gv_numeral_abs(N) &mdash;></li>
<li>{var(N)},</li>
<li>(</li>
<li> <code>.</code>,</li>
<li> integer(N2)</li>
<li>&ndash;></li>
<li> {N1 = 0}</li>
<li>;</li>
<li> integer(N1),</li>
<li> (</li>
<li>   <code>.</code></li>
<li> &ndash;></li>
<li>   &lsquo;integer?&rsquo;(N2)</li>
<li> ;</li>
<li>   {N2 = 0}</li>
<li> )</li>
<li>),

<h2>&ndash;  {number_integer_parts(N, N1, N2)}.</h2>

<p>diff &mdash;git a/gv_tree.pl b/gv_tree.pl
deleted file mode 100644
index afeb8f6..0000000
&mdash;&ndash; a/gv_tree.pl
+++ /dev/null
@@ -1,43 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_tree,</li>
<li>[</li>
<li> tree_to_gv_file/3 % +Tree:compound</li>
<li><pre><code>               % ?ToFile:atom
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre></li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz tree</h2>

<h2>-Export trees to GraphViz.</h2>

&ndash;@author Wouter Beek
&ndash;@version 2014/06-2014/07

<h2>&ndash;*/</h2>

<h2>&ndash;:&ndash; use_module(library(aggregate)).</h2>

<h2>&ndash;:&ndash; use_module(generics(trees)).</h2>

&ndash;:&ndash; use_module(plGraphViz(gv_file)).

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_gif)).</h2>

&ndash;
&ndash;%! tree_to_gv_file(
&ndash;%!   +Tree:compound,
&ndash;%!   ?ToFile:atom,
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
&ndash;% Stores the given tree term into a GraphViz file.
&ndash;%

<h2>&ndash;% Options are passed on to create_gif/3 and gif_to_gv_file/3.</h2>

<p>-tree_to_gv_file(Tree, ToFile, Options):&ndash;</p></li>
<li>tree_to_gif(Tree, Gif, Options),

<h2>&ndash;  gif_to_gv_file(Gif, ToFile, Options).</h2>

<p>&ndash;
-tree_to_gif(H-T, Gif, Options):&ndash;</p></li>
<li>tree_to_vertices_edges(Tree, Vs, Es),

<h2>&ndash;  create_gif(Vs, Es, Gif, Options).</h2>

diff &mdash;git a/index.pl b/index.pl
deleted file mode 100644
index 7461d13..0000000
&mdash;&ndash; a/index.pl
+++ /dev/null
@@ -1,2 +0,0 @@

<h2>&ndash;% Index of project plGraphViz (empty).</h2>

diff &mdash;git a/load.pl b/load.pl
deleted file mode 100644
index 4b117d1..0000000
&mdash;&ndash; a/load.pl
+++ /dev/null
@@ -1,12 +0,0 @@

<h2>&ndash;% Load file for plGraphViz.</h2>

&ndash;:&ndash; dynamic(user:prolog/3).
&ndash;:&ndash; multifile(user:prolog/3).

<h2>&ndash;   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).</h2>

<p>&ndash;:&ndash; use_module(load_project).
&ndash;:&ndash; load_project(plGraphViz, [</p></li>
<li> plc-&lsquo;Prolog-Library-Collection&rsquo;,</li>
<li> plHtml

<h2>&ndash;]).</h2>

<p>diff &mdash;git a/load_project.pl b/load_project.pl
deleted file mode 100644
index 5599b5e..0000000
&mdash;&ndash; a/load_project.pl
+++ /dev/null
@@ -1,120 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>load_project,</li>
<li>[</li>
<li> load_project/2, % +Parent:atom</li>
<li><pre><code>             % +ChildProjects:list(or([atom,pair(atom)]))
</code></pre></li>
<li> load_subproject/2, % +ParentFileSearchPath:atom</li>
<li><pre><code>                % +Child:or([atom,pair(atom)])
</code></pre></li>
<li> set_data_subdirectory/1 % +ParentDirectory:atom</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> Load project</h2>

<p>-Generic code for loading a project:</p></li>
<li><ul>
<li>Create a subdirectory for data.</li>
</ul>
</li>
<li><ul>
<li>Load the root of subprojects onto the file search path.

<h2>&ndash;  * Load the index of subprojects onto the file search path.</h2>

&ndash;@author Wouter Beek
&ndash;@version 2014/06/14

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(ansi_term)). % Colorized terminal messages.

<h2>&ndash;:&ndash; use_module(library(apply)).</h2>

&ndash;:&ndash; dynamic(user:project/2).
&ndash;:&ndash; multifile(user:project/2).
&ndash;:&ndash; dynamic(user:project/3).

<h2>&ndash;:&ndash; multifile(user:project/3).</h2>

<h2>&ndash;</h2>

-load_project(Parent, ChildProjects):&ndash;

<h2>&ndash;  parent_alias(Parent, ParentFsp),</h2></li>
</ul>
</li>
<li>% Entry point.</li>
<li>source_file(load_project(<em>,</em>), ThisFile),</li>
<li>file_directory_name(ThisFile, ThisDir),</li>
<li>assert(user:file_search_path(ParentFsp, ThisDir)),

<h2>&ndash;  assert(user:file_search_path(project, ThisDir)),</h2></li>
<li>% Set the data subdirectory.

<h2>&ndash;  set_data_subdirectory(ThisDir),</h2></li>
<li>% Load the root of submodules onto the file search path.

<h2>&ndash;  maplist(load_subproject(ParentFsp), ChildProjects),</h2></li>
<li>% Load the index into the file search path.

<h2>&ndash;  load_project_index(ParentFsp).</h2>

<h2>&ndash;</h2>

&ndash;%! load_subproject(
&ndash;%!   +ParentFileSearchPath:atom,
&ndash;%!   +Child:or([atom,pair(atom)])

<h2>&ndash;%! ) is det.</h2>

<p>-load_subproject(ParentFsp, ChildFsp-ChildDir):&ndash; !,</p></li>
<li>load_subproject_file_search_path(ParentFsp, ChildFsp, ChildDir),</li>
<li>load_project_index(ChildFsp).
-load_subproject(ParentFsp, Child):&ndash;

<h2>&ndash;  load_subproject(ParentFsp, Child-Child).</h2>

&ndash;
&ndash;%! load_subproject_file_search_path(
&ndash;%!   +ParentFileSearchPath:atom,
&ndash;%!   +ChildFileSearchPath:atom,
&ndash;%!   +ChildDirectory:atom

<h2>&ndash;%! ) is det.</h2>

<p>&ndash;% The file search path for the subproject has already been set.
-load_subproject_file_search_path(<em>, ChildFsp, </em>):&ndash;</p></li>
<li>user:file_search_path(ChildFsp, _).
-load_subproject_file_search_path(ParentFsp, ChildFsp, ChildDir):&ndash;</li>
<li>Spec =.. [ParentFsp,ChildDir],</li>
<li>absolute_file_name(Spec, _, [access(read),file_type(directory)]), !,</li>
<li>assert(user:file_search_path(ChildFsp, Spec)).
-load_subproject_file_search_path(_, ChildFsp, ChildDir):&ndash;

<h2>&ndash;  print_message(warning, missing_subproject_directory(ChildFsp,ChildDir)).</h2>

&ndash;

<h2>&ndash;%! load_project_index(+FileSearchPath:atom) is det.</h2>

<p>-load_project_index(Fsp):&ndash;</p></li>
<li>Spec =.. [Fsp,index],</li>
<li>absolute_file_name(</li>
<li> Spec,</li>
<li> File,</li>
<li> [access(read),file_errors(fail),file_type(prolog)]</li>
<li>), !,</li>
<li>ensure_loaded(File).

<h2>-load_project_index(_).</h2>

&ndash;

<h2>&ndash;%! parent_alias(+Parent:atom, -ParentFsp:atom) is det.</h2>

<p>-parent_alias(Parent, ParentFsp):&ndash;</p></li>
<li>user:project(Parent, _, ParentFsp), !.

<h2>-parent_alias(Parent, Parent).</h2>

&ndash;

<h2>&ndash;%! set_data_subdirectory(+ParentDirectory:atom) is det.</h2>

<p>-set_data_subdirectory(ParentDir):&ndash;</p></li>
<li>directory_file_path(ParentDir, data, DataDir),</li>
<li>make_directory_path(DataDir),

<h2>&ndash;  assert(user:file_search_path(data, DataDir)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;:&ndash; multifile(prolog:message//1).</h2>

<p>-prolog:message(missing_subproject_directory(ChildFsp,ChildDir)) &mdash;></p></li>
<li>[</li>
<li> &lsquo;The ~a submodule is not present.&rsquo;&ndash;[ChildFsp], nl,</li>
<li> &lsquo;Check whether subdirectory ~a is present in your project directory:&rsquo;&ndash;[ChildDir], nl,</li>
<li> &lsquo;    git submodule init&rsquo;, nl,</li>
<li> &lsquo;    git submodule update&rsquo;

<h2>&ndash;  ].</h2>

<p>diff &mdash;git a/pack.pl b/pack.pl
new file mode 100644
index 0000000..989108a
&mdash;&ndash; /dev/null
+++ b/pack.pl
@@ -0,0 +1,9 @@
+author(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#97;&#x69;&#108;&#x74;&#x6f;&#58;&#x6d;&#x65;&#x40;&#119;&#x6f;&#117;&#x74;&#101;&#x72;&#x62;&#101;&#x65;&#x6b;&#46;&#x63;&#111;&#x6d;">&#109;&#x65;&#64;&#x77;&#x6f;&#x75;&#x74;&#x65;&#114;&#98;&#x65;&#x65;&#x6b;&#x2e;&#99;&#111;&#109;</a>&rsquo;).
+download(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz/release/*.zip">https://github.com/wouterbeek/plGraphViz/release/*.zip</a>&rsquo;).
+home(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz">https://github.com/wouterbeek/plGraphViz</a>&rsquo;).
+maintainer(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#111;&#x3a;&#109;&#x65;&#64;&#119;&#111;&#x75;&#x74;&#x65;&#114;&#x62;&#101;&#101;&#x6b;&#x2e;&#x63;&#x6f;&#x6d;">&#109;&#101;&#x40;&#x77;&#x6f;&#x75;&#x74;&#101;&#x72;&#98;&#101;&#101;&#107;&#x2e;&#99;&#111;&#109;</a>&rsquo;).
+name(plGraphViz).
+packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x6d;&#x65;&#64;&#119;&#111;&#x75;&#116;&#101;&#x72;&#x62;&#x65;&#101;&#107;&#x2e;&#99;&#x6f;&#x6d;">&#109;&#101;&#64;&#119;&#111;&#117;&#116;&#x65;&#114;&#x62;&#101;&#101;&#107;&#x2e;&#x63;&#111;&#x6d;</a>&rsquo;).
+requires(&lsquo;Prolog-Library-Collection&rsquo;).
+title(plGraphViz).
+version(&lsquo;0.0.1&rsquo;).
diff &mdash;git a/plHtml b/plHtml
deleted file mode 160000
index 08480c4..0000000
&mdash;&ndash; a/plHtml
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 08480c40acaee5f70bfb21e3c641bef1e7d258bd
diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
new file mode 100644
index 0000000..083dbb2
&mdash;&ndash; /dev/null
+++ b/prolog/fca/fca_viz.pl
@@ -0,0 +1,101 @@
+:&ndash; module(</p></li>
<li>fca_viz,</li>
<li>[</li>
<li> fca_export_graph/2, % +Context, -ExportGraph</li>
<li> fca_export_graph/3, % +Context, -ExportGraph, :Opts</li>
<li> fca_viz/2,          % +Context, ?File</li>
<li> fca_viz/3           % +Context, ?File, :Opts</li>
<li>]
+).
+
+/<em>* <module> FCA visualization
+
+@author Wouter Beek
+@version 2015/11-2016/01
+</em>/
+
+:&ndash; use_module(library(aggregate)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(dcg/dcg_pl)).
+:&ndash; use_module(library(fca/fca)).
+:&ndash; use_module(library(graph/build_export_graph)).
+:&ndash; use_module(library(graph/s/s_graph)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(option)).
+:&ndash; use_module(library(ordsets)).
+
+:&ndash; meta_predicate(fca_export_graph(+,?,:)).
+:&ndash; meta_predicate(fca_viz(+,?,:)).
+
+:&ndash; predicate_options(fca_export_graph/3, 3, [</li>
<li>  concept_label(+callable)</li>
<li>]).
+:&ndash; predicate_options(fca_viz/3, 3, [</li>
<li>  pass_to(fca_export_graph/3, 3),</li>
<li>  pass_to(graph_viz/3, 3)</li>
<li>]).
+
+is_meta(concept_label).
+
+
+
+
+
+%! fca_export_graph(+Context:compound, -ExportGraph:compound) is det.
+% Wrapper around fca_export_graph/3 with default options.
+
+fca_export_graph(Context, ExportG):&ndash;</li>
<li>fca_export_graph(Context, ExportG, []).
+
+
+%! fca_export_graph(
+%!   +Context:compound,
+%!   -ExportGraph:compound,
+%!   :Options:list(compound)
+%! ) is det.
+% The following optios are supported:
+%   * concept_label(+callable)
+%     DCG writing the labels for individual concepts.
+
+fca_export_graph(Context, ExportG, Opts1):&ndash;</li>
<li>fca_hasse(Context, Hasse),</li>
<li>meta_options(is_meta, Opts1, Opts2),</li>
<li>option(concept_label(Label_3), Opts2, concept_label),</li>
<li>merge_options(</li>
<li> [</li>
<li>   vertex_label(Label_3),</li>
<li>   vertex_rank(fca:concept_cardinality)</li>
<li> ],</li>
<li> Opts2,</li>
<li> Opts3</li>
<li>),</li>
<li>build_export_graph(Hasse, ExportG, Opts3).
+
+
+
+%! fca_viz(+Context:compound, ?File:atom) is det.
+% Wrapper around fca_viz/3 with default options.
+
+fca_viz(Context, File):&ndash;</li>
<li>fca_viz(Context, File, []).
+
+
+%! fca_viz(+Context:compound, ?File:atom, :Options:list(compound)) is det.
+
+fca_viz(Context, File, Opts1):&ndash;</li>
<li>meta_options(is_meta, Opts1, Opts2),</li>
<li>statistics(process_cputime, Time1),</li>
<li>fca_export_graph(Context, ExportG, Opts2),</li>
<li>ExportG = graph(<em>,</em>,Es,_),</li>
<li>aggregate_all(max(N), (member(edge(V1,V2,_), Es), (N = V1 ; N = V2)), N),</li>
<li>ignore(option(number_of_vertices(N), Opts2)),</li>
<li>statistics(process_cputime, Time2),</li>
<li>Time is Time2 &ndash; Time1,</li>
<li>ignore(option(process_cputime(Time), Opts2)),</li>
<li>graph_viz(ExportG, File, Opts2).
+
+
+
+%! concept_label(+Concept:compound)// is det.
+
+concept_label(concept(Os,As)) &mdash;> set(Os), &ldquo; / &rdquo;, set(As).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
new file mode 100644
index 0000000..5134069
&mdash;&ndash; /dev/null
+++ b/prolog/graph/build_export_graph.pl
@@ -0,0 +1,369 @@
+:&ndash; module(</li>
<li>build_export_graph,</li>
<li>[</li>
<li> build_export_graph/2, % +Graph, -ExportGraph</li>
<li> build_export_graph/3 % +Graph</li>
<li><pre><code>                  % -ExportGraph:compound
</code></pre></li>
<li><pre><code>                  % +Options:list(compound)
</code></pre></li>
<li>]
+).
+
+/** <module> Build graph representation for exporting
+
+Support for building GIF representations.
+
+# Graph Intermediate Format (GIF)
+
+## Graph
+
+<code>prolog
+graph(Vs:ordset(compound),Ranks,Es:compound,Attributes:list(compound))
+</code>
+
+### Edge
+
+<code>prolog
+edge(FromVertexId,ToVertexId,Attributes:list(compound))
+</code>
+
+### Rank
+
+<code>prolog
+RankVertex:compound-ContentVertices:ordset(compound)
+</code>
+
+### Vertex
+
+<code>prolog
+vertex(Id,Attributes:list(compound))
+</code>
+
+# Property functions
+
+Edge label:</li>
<li><ol>
<li>[[graph_edge]] edge_label/2
+
+Vertex coordinates:</li>
</ol>
</li>
<li><ol>
<li>[[circle_coords]] circular_coord/4</li>
</ol>
</li>
<li><ol>
<li>[[random_coords]] random_coord/4
+
+&mdash;&ndash;
+
+@author Wouter Beek
+@version 2015/07, 2015/09-2016/01
+*/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(graph/s/s_graph)).
+:&ndash; use_module(library(list_ext)).
+:&ndash; use_module(library(option_ext)).
+:&ndash; use_module(library(ordsets)).
+:&ndash; use_module(library(pairs)).
+
+:&ndash; predicate_options(build_export_graph/4, 4, [</li>
</ol>
</li>
<li>  pass_to(edge_term/3, 3),</li>
<li>  pass_to(graph_attributes/2, 2),</li>
<li>  pass_to(vertex_term/3, 3)</li>
<li>]).
+:&ndash; predicate_options(edge_term/3, 3, [</li>
<li>  edge_arrowhead(+callable),</li>
<li>  edge_color(+callable),</li>
<li>  edge_id(+callable),</li>
<li>  edge_label(+callable),</li>
<li>  edge_penwidth(+callable),</li>
<li>  edge_style(+callable)</li>
<li>]).
+:&ndash; predicate_options(graph_attributes/2, 2, [</li>
<li>  graph_charset(+oneof([&lsquo;iso-8859-1&rsquo;,&lsquo;Latin1&rsquo;,&lsquo;UTF-8&rsquo;])),</li>
<li>  graph_colorscheme(+oneof([none,svg,x11])),</li>
<li>  graph_directed(+boolean),</li>
<li>  graph_fontsize(+float),</li>
<li>  graph_label(+atom),</li>
<li>  graph_overlap(+boolean)</li>
<li>]).
+:&ndash; predicate_options(vertex_term/3, 3, [</li>
<li>  vertex_color(+callable),</li>
<li>  vertex_id(+callable),</li>
<li>  vertex_image(+callable),</li>
<li>  vertex_label(+callable),</li>
<li>  vertex_peripheries(+callable),</li>
<li>  vertex_position(+callable),</li>
<li>  vertex_rank(+callable),</li>
<li>  vertex_shape(+callable),</li>
<li>  vertex_uri(+callable)</li>
<li>]).
+
+:&ndash; meta_predicate(build_export_graph(+,&ndash;,:)).
+
+is_meta(edge_arrowhead).
+is_meta(edge_color).
+is_meta(edge_id).
+is_meta(edge_label).
+is_meta(edge_penwidth).
+is_meta(edge_style).
+is_meta(vertex_color).
+is_meta(vertex_id).
+is_meta(vertex_image).
+is_meta(vertex_label).
+is_meta(vertex_peripheries).
+is_meta(vertex_position).
+is_meta(vertex_rank).
+is_meta(vertex_shape).
+is_meta(vertex_uri).
+
+
+
+
+
+%! build_export_graph(+Graph, -ExportGraph:compound) is det.
+% Wrapper around build_export_graph/3 with default options.
+
+build_export_graph(G, ExportG):&ndash;</li>
<li>build_export_graph(G, ExportG, []).
+
+
+%! build_export_graph(
+%!   +Graph,
+%!   -ExportGraph:compound,
+%!   +Options:list(compound)
+%! ) is det.
+% Graph is either:
+%   * a coumpound term <code>graph(Vs,Es)</code>, or
+%   * an unlabeled graph as defined by <code>library(ugraph)</code>.
+%
+% The following options are supported:
+%   * <code>vertex_rank(:RankFunction)</code>
+%     Assigns a non-negative integer to each vertex.
+%     No default.
+
+build_export_graph(G, graph(VTerms2,VRanks,ETerms,GAttrs), Opts1):&ndash;</li>
<li>graph_components(G, Vs, Es),</li>
<li>meta_options(is_meta, Opts1, Opts2),</li>
<li>maplist(vertex_term0(Vs, Opts2), Vs, VTerms1),</li>
<li>build_export_ranks(Vs, VTerms1, VRanks, VTerms2, Opts2),</li>
<li>maplist(edge_term0(Vs, Opts2), Es, ETerms),</li>
<li>graph_attributes(GAttrs, Opts2).
+
+vertex_term0(Vs, Opts, V, VTerm) :&ndash; vertex_term(Vs, V, VTerm, Opts).
+
+edge_term0(Vs, Opts, E, ETerm) :&ndash; edge_term(Vs, E, ETerm, Opts).
+
+graph_components(graph(Vs,Es), Vs, Es):&ndash; !.
+graph_components(G, Vs, Es):&ndash;</li>
<li>s_graph_components(G, Vs, Es).
+
+build_export_ranks(Vs, VTerms, VRanks, [], Opts):&ndash;</li>
<li>option(vertex_rank(VRank_2), Opts), !,</li>
<li>maplist(VRank_2, Vs, Ranks),</li>
<li>pairs_keys_values(Pairs, Ranks, VTerms),</li>
<li>group_pairs_by_key(Pairs, GroupedPairs),</li>
<li>build_export_rank_terms(GroupedPairs, VRanks).
+build_export_ranks(<em>, VTerms, [], VTerms, </em>).
+
+build_export_rank_terms([N-VTerms|T1], [RankTerm-VTerms|T2]):&ndash; !,</li>
<li>build_export_rank_term(N, RankTerm),</li>
<li>build_export_rank_terms(T1, T2).
+build_export_rank_terms([], []).
+
+build_export_rank_term(N, vertex(Id,[label(&ldquo;&rdquo;),shape(none)])):&ndash;</li>
<li>format(atom(Id), &ldquo;r~d&rdquo;, [N]).
+
+
+
+%! edge_term(
+%!   +Vertices:ordset(compound),
+%!   +Edge:compound,
+%!   -EdgeTerm:compound,
+%!   +Options:list(compound)
+%! ) is det.
+% The following options are supported:
+%   * <code>edge_arrowhead(+callable)</code>
+%     No default.
+%   * <code>edge_color(+callable)</code>
+%     No default.
+%   * <code>edge_id(+callable)</code>
+%     Function that assignes the unique identifiers for an edge&rsquo;s
+%     incident vertices.
+%   * <code>edge_label(+callable)</code>
+%     No default.
+%   * <code>edge_penwidth(+callable)</code>
+%     No default.
+%   * <code>edge_style(+callable)</code>
+%     No default.
+
+edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;</li>
<li>% Arrowhead</li>
<li>if_option(edge_arrowhead(Arrowhead_2), Opts,</li>
<li> call(Arrowhead_2, E, EArrowhead)</li>
<li>),</li>
<li></li>
<li>% Color.</li>
<li>if_option(edge_color(ColorFunction), Opts, call(ColorFunction, E, EColor)),</li>
<li></li>
<li>% Id.</li>
<li>(   option(edge_id(Id_2), Opts)</li>
<li>&ndash;>  call(Id_2, E, FromId, ToId)</li>
<li>;   edge_components(E, FromV, ToV),</li>
<li>   nth0chk(FromId, Vs, FromV),</li>
<li>   nth0chk(ToId, Vs, ToV)</li>
<li>),</li>
<li></li>
<li>% Label.</li>
<li>if_option(edge_label(ELabel_3), Opts, string_phrase(dcg_call(ELabel_3, E), ELabel)),</li>
<li></li>
<li>% Penwidth.</li>
<li>if_option(edge_penwidth(Penwidth_2), Opts, call(Penwidth_2, E, EPenwidth)),</li>
<li></li>
<li>% Style.</li>
<li>if_option(edge_style(Style_2), Opts, call(Style_2, E, EStyle)),</li>
<li></li>
<li>exclude(</li>
<li> option_has_var_value,</li>
<li> [</li>
<li>   arrowhead(EArrowhead),</li>
<li>   color(EColor),</li>
<li>   label(ELabel),</li>
<li>   penwidth(EPenwidth),</li>
<li>   style(EStyle)</li>
<li> ],</li>
<li> EAttrs</li>
<li>).
+
+
+
+%! graph_attributes(
+%!   -GraphAttributes:list(compound),
+%!   +Options:list(compound)
+%! ) is det.
+% The following options are supported:
+%   * <code>graph_charset(+oneof(['iso-8859-1','Latin1','UTF-8']))</code>
+%     The name of the character set that is used to encode text in the graph.
+%     Default: <code>UTF-8</code>.
+%   * <code>graph_colorscheme(+oneof([none,svg,x11]))</code>
+%     The colorscheme from which the color in this graph are taken.
+%     Default: <code>x11</code>.
+%   * <code>graph_directed(+boolean)</code>
+%     Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
+%     Default: <code>false</code>.
+%   * <code>graph_fontsize(+float)</code>
+%     The font size of text in the graph.
+%     Default: <code>11.0</code>.
+%   * <code>graph_label(+atom)</code>
+%     The graph label.
+%     No default.
+%   * <code>graph_overlap(+boolean)</code>
+%     Whether the vertices are allowed to overlap.
+%     Default: <code>false</code>.
+
+graph_attributes(GAttrs, Opts):&ndash;</li>
<li>% Characer set.</li>
<li>option(graph_charset(Charset), Opts, &lsquo;UTF-8&rsquo;),</li>
<li>% Colorscheme.</li>
<li>option(graph_colorscheme(Colorscheme), Opts, x11),</li>
<li>% Directed.</li>
<li>option(graph_directed(Directed), Opts, false),</li>
<li>% Fontsize.</li>
<li>option(graph_fontsize(Fontsize), Opts, 11.0),</li>
<li>% Label.</li>
<li>% Defaults to the empty string.</li>
<li>option(graph_label(GLabel), Opts, &lsquo;&ldquo;&rdquo;&rsquo;),</li>
<li>% Overlap.</li>
<li>option(graph_overlap(Overlap), Opts, false),</li>
<li>exclude(</li>
<li> option_has_var_value,</li>
<li> [</li>
<li>   charset(Charset),</li>
<li>   colorscheme(Colorscheme),</li>
<li>   directed(Directed),</li>
<li>   fontsize(Fontsize),</li>
<li>   label(GLabel),</li>
<li>   overlap(Overlap)</li>
<li> ],</li>
<li> GAttrs</li>
<li>).
+
+
+
+%! vertex_term(
+%!   +Vertices:ordset(compound),
+%!   +Vertex:compound,
+%!   -VertexTerm:compound,
+%!   +Options:list(compound)
+%! ) is det.
+% The following options are supported:
+%   * <code>vertex_color(:ColorFunction)</code>
+%     A function that assigns colors to vertices.
+%     No default.
+%   * <code>vertex_id(:ColorFunction)</code>
+%     A functions that assigns unique identifiers to vertices.
+%   * <code>vertex_image(:ImageFunction)</code>
+%     A function that assigns images to vertices.
+%     No default.
+%   * <code>vertex_label(:LabelFunction)</code>
+%     A function that assigns labels to vertices.
+%     No default.
+%   * <code>vertex_peripheries(:PeripheriesFunction)</code>
+%     A function that assinges peripheries to vertices.
+%     No default.
+%   * <code>vertex_position(:PositionFunction)</code>
+%     No default.
+%   * <code>vertex_shape(:ShapeFunction)</code>
+%     A function that assinges shapes to vertices.
+%     No default.
+%   * <code>vertex_uri(:UriFunction)</code>
+
+vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;</li>
<li>% Color.</li>
<li>if_option(vertex_color(Color_2), Opts, call(Color_2, V, VColor)),</li>
<li></li>
<li>% Id.</li>
<li>(option(vertex_id(Id_2), Opts) &ndash;> call(Id_2, V, VId) ; nth0chk(VId, Vs, V)),</li>
<li></li>
<li>% Image.</li>
<li>ignore(if_option(vertex_image(Image_2), Opts, call(Image_2, V, VImage))),
+</li>
<li>% Label.</li>
<li>if_option(vertex_label(VLabel_2), Opts, string_phrase(dcg_call(VLabel_2, V), VLabel)),
+</li>
<li>% Peripheries.</li>
<li>if_option(vertex_peripheries(Peripheries_2), Opts,</li>
<li> call(Peripheries_2, V, VPeripheries)</li>
<li>),
+</li>
<li>% Position.</li>
<li>if_option(vertex_position(Position_4), Opts,</li>
<li> call(Position_4, Vs, Opts, V, VPosition)</li>
<li>),
+</li>
<li>% Shape.</li>
<li>if_option(vertex_shape(Shape_2), Opts, call(Shape_2, V, VShape)),</li>
<li></li>
<li>% URI</li>
<li>if_option(vertex_uri(Uri_2), Opts, call(Uri_2, V, VUri)),
+</li>
<li>exclude(</li>
<li> option_has_var_value,</li>
<li> [</li>
<li>   color(VColor),</li>
<li>   image(VImage),</li>
<li>   label(VLabel),</li>
<li>   peripheries(VPeripheries),</li>
<li>   pos(VPosition),</li>
<li>   shape(VShape),</li>
<li>   &lsquo;URL&rsquo;(VUri)</li>
<li> ],</li>
<li> VAttrs</li>
<li>).
+
+
+
+
+
+% HELPERS %
+
+%! edge_components(+Edge:compound, -FromV, -ToV) is det.
+
+edge_components(edge(FromV,_,ToV), FromV, ToV):&ndash; !.
+edge_components(edge(FromV,ToV), FromV, ToV):&ndash; !.
+edge_components(FromV-ToV, FromV, ToV):&ndash; !.
diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
new file mode 100644
index 0000000..f55fce5
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_attr_type.pl
@@ -0,0 +1,421 @@
+:&ndash; module(</li>
<li>gv_attr_type,</li>
<li>[</li>
<li> gv_attr_type//1, % ?Type:atom</li>
<li> addDouble//1, % +Double:float</li>
<li> addPoint//1, % +Point:compound</li>
<li> arrowType//1, % +ArrowType:atom</li>
<li> bool//1, % +Boolean:boolean</li>
<li> clusterMode//1, % +ClusterMode:atom</li>
<li> dirType//1, % +DirectionType:oneof([back,both,forward,none])</li>
<li> double//1, % +Double:float</li>
<li> doubleList//1, % +Doubles:list(float)</li>
<li> escString//1,</li>
<li> %layerList//1,</li>
<li> %layerRange//1,</li>
<li> lblString//1,</li>
<li> int//1, % +Integer:integer</li>
<li> outputMode//1, % +OutputMode:atom</li>
<li> %packMode//1,</li>
<li> pagedir//1, % +Pagedir:atom</li>
<li> point//1, % +Point:compound</li>
<li> pointList//1, % +Points:list(compound)</li>
<li> %portPos//1,</li>
<li> quadType//1, % +QuadType:atom</li>
<li> rankType//1, % +RankType:atom</li>
<li> rankdir//1, % +RankDirection:atom</li>
<li> rect//1, % +Rectangle:compound</li>
<li> shape//1,</li>
<li> smoothType//1, % +SmoothType:atom</li>
<li> %splineType//1,</li>
<li> %startType//1,</li>
<li> string//1, % ?Content:atom</li>
<li> style//2 % +Context:oneof([cluster,edge,node])</li>
<li><pre><code>      % +Style:atom
</code></pre></li>
<li> %viewPort//1</li>
<li>]
+).
+:&ndash; reexport(</li>
<li>library(gv/gv_color),</li>
<li>[</li>
<li> color//1, % +Color:compound</li>
<li> colorList//1 % +ColorList:list(compound)</li>
<li>]
+).
+
+/<em><em> <module> GraphViz attribute types
+
+@author Wouter Beek
+@version 2015/07, 2015/11, 2016/02
+</em>/
+
+:&ndash; use_module(library(dcg/dcg_ext), except([string//1])).
+:&ndash; use_module(library(gv/gv_html)).
+
+
+
+
+
+%! gv_attr_type(?Type:atom) is nondet.
+
+gv_attr_type(addDouble)   &mdash;> &ldquo;addDouble&rdquo;.
+gv_attr_type(addPoint)    &mdash;> &ldquo;addPoint&rdquo;.
+gv_attr_type(arrowType)   &mdash;> &ldquo;arrowType&rdquo;.
+gv_attr_type(bool)        &mdash;> &ldquo;bool&rdquo;.
+gv_attr_type(color)       &mdash;> &ldquo;color&rdquo;.
+gv_attr_type(colorList)   &mdash;> &ldquo;colorList&rdquo;.
+gv_attr_type(clusterMode) &mdash;> &ldquo;clusterMode&rdquo;.
+gv_attr_type(dirType)     &mdash;> &ldquo;dirType&rdquo;.
+gv_attr_type(double)      &mdash;> &ldquo;double&rdquo;.
+gv_attr_type(doubleList)  &mdash;> &ldquo;doubleList&rdquo;.
+gv_attr_type(escString)   &mdash;> &ldquo;escString&rdquo;.
+gv_attr_type(layerList)   &mdash;> &ldquo;layerList&rdquo;.
+gv_attr_type(layerRange)  &mdash;> &ldquo;layerRange&rdquo;.
+gv_attr_type(lblString)   &mdash;> &ldquo;lblString&rdquo;.
+gv_attr_type(int)         &mdash;> &ldquo;int&rdquo;.
+gv_attr_type(outputMode)  &mdash;> &ldquo;outputMode&rdquo;.
+gv_attr_type(packMode)    &mdash;> &ldquo;packMode&rdquo;.
+gv_attr_type(pagedir)     &mdash;> &ldquo;pagedir&rdquo;.
+gv_attr_type(point)       &mdash;> &ldquo;point&rdquo;.
+gv_attr_type(pointList)   &mdash;> &ldquo;pointList&rdquo;.
+gv_attr_type(portPos)     &mdash;> &ldquo;portPos&rdquo;.
+gv_attr_type(quadType)    &mdash;> &ldquo;quadType&rdquo;.
+gv_attr_type(rankType)    &mdash;> &ldquo;rankType&rdquo;.
+gv_attr_type(rankdir)     &mdash;> &ldquo;rankdir&rdquo;.
+gv_attr_type(rect)        &mdash;> &ldquo;rect&rdquo;.
+gv_attr_type(shape)       &mdash;> &ldquo;shape&rdquo;.
+gv_attr_type(smoothType)  &mdash;> &ldquo;smoothType&rdquo;.
+gv_attr_type(splineType)  &mdash;> &ldquo;splineType&rdquo;.
+gv_attr_type(startType)   &mdash;> &ldquo;startType&rdquo;.
+gv_attr_type(string)      &mdash;> &ldquo;string&rdquo;.
+gv_attr_type(style)       &mdash;> &ldquo;style&rdquo;.
+gv_attr_type(viewPort)    &mdash;> &ldquo;viewPort&rdquo;.
+
+
+
+%! addDouble(+Float:float)// .
+% An </em>addDouble<em> is represented by a Prolog float.
+
+addDouble(N) &mdash;> (&ldquo;+&rdquo;, ! ; &ldquo;&rdquo;), float(N).
+
+
+
+%! addPoint(+Point:compound)// .
+% An </em>addPoint* is represented by a compound of the following form:
+% <code>point(X:float,Y:float,InputOnly:boolean)</code>.
+
+addPoint(Point) &mdash;> (&ldquo;+&rdquo;, ! ; &ldquo;&rdquo;), point(Point).
+
+
+
+%! arrowType(+ArrowType:atom)// .
+
+arrowType(V) &mdash;> primitive_shape(V).
+arrowType(V) &mdash;> derived(V).
+arrowType(V) &mdash;> backwards_compatible(V).
+
+primitive_shape(box)     &mdash;> &ldquo;box&rdquo;.
+primitive_shape(crow)    &mdash;> &ldquo;crow&rdquo;.
+primitive_shape(circle)  &mdash;> &ldquo;circle&rdquo;.
+primitive_shape(diamond) &mdash;> &ldquo;diamond&rdquo;.
+primitive_shape(dot)     &mdash;> &ldquo;dot&rdquo;.
+primitive_shape(inv)     &mdash;> &ldquo;inv&rdquo;.
+primitive_shape(none)    &mdash;> &ldquo;none&rdquo;.
+primitive_shape(normal)  &mdash;> &ldquo;normal&rdquo;.
+primitive_shape(tee)     &mdash;> &ldquo;tee&rdquo;.
+primitive_shape(vee)     &mdash;> &ldquo;vee&rdquo;.
+
+derived(odot)     &mdash;> &ldquo;odot&rdquo;.
+derived(invdot)   &mdash;> &ldquo;invdot&rdquo;.
+derived(invodot)  &mdash;> &ldquo;invodot&rdquo;.
+derived(obox)     &mdash;> &ldquo;obox&rdquo;.
+derived(odiamond) &mdash;> &ldquo;odiamond&rdquo;.
+
+backwards_compatible(ediamond) &mdash;> &ldquo;ediamond&rdquo;.
+backwards_compatible(empty)    &mdash;> &ldquo;empty&rdquo;.
+backwards_compatible(halfopen) &mdash;> &ldquo;halfopen&rdquo;.
+backwards_compatible(invempty) &mdash;> &ldquo;invempty&rdquo;.
+backwards_compatible(open)     &mdash;> &ldquo;open&rdquo;.
+
+
+
+%! bool(+Value:boolean)// .
+
+bool(false) &mdash;> &ldquo;false&rdquo;.
+bool(false) &mdash;> &ldquo;no&rdquo;.
+bool(true)  &mdash;> &ldquo;true&rdquo;.
+bool(true)  &mdash;> &ldquo;yes&rdquo;.
+
+
+
+%! clusterMode(+ClusterMode:atom)// .
+
+clusterMode(global) &mdash;> &ldquo;global&rdquo;.
+clusterMode(local) &mdash;> &ldquo;local&rdquo;.
+clusterMode(none) &mdash;> &ldquo;none&rdquo;.
+
+
+
+%! dirType(+DirectionType:oneof([back,both,forward,none]))// .
+
+dirType(back) &mdash;> &ldquo;back&rdquo;.
+dirType(both) &mdash;> &ldquo;both&rdquo;.
+dirType(forward) &mdash;> &ldquo;forward&rdquo;.
+dirType(none) &mdash;> &ldquo;none&rdquo;.
+
+
+
+%! double(+Double:float)// .
+
+double(N) &mdash;> float(N).
+
+
+
+%! doubleList(+Doubles:list(float))// .
+
+doubleList([H|T]) &mdash;> double(H), (&ldquo;:&rdquo;, !, doubleList(T) ; {T = []}).
+
+
+
+%! escString(+String:or([atom,string]))// .
+% @tbd Support for context-dependent replacements.
+
+escString(S1) &mdash;></li>
<li>{(  string(S1)</li>
<li>&ndash;>  string_phrase(escape_double_quotes, S1, S2)</li>
<li>;   atom_phrase(escape_double_quotes, S1, S2)</li>
<li>)},</li>
<li>&ldquo;\&rdquo;&ldquo;, atom(S2), &rdquo;\&ldquo;&rdquo;.
+
+escape_double_quotes, [0'\,0'&ldquo;] &mdash;> [0'&rdquo;], !, escape_double_quotes.
+escape_double_quotes, [X]        &mdash;> [X],   !, escape_double_quotes.
+escape_double_quotes             &mdash;> &ldquo;&rdquo;.
+
+
+
+% @tbd layerList
+
+
+
+% @tbd layerRange
+
+
+
+%! lblString(+String:compound)// .
+
+lblString(html_like_label(V)) &mdash;> gv_html_like_label(V).
+lblString(V) &mdash;> escString(V).
+
+
+
+%! int(+Integer:integer)// .
+
+int(V) &mdash;> integer(V).
+
+
+
+%! outputMode(+OutputMode:atom)// .
+
+outputMode(breadthfirst) &mdash;> &ldquo;breadthfirst&rdquo;.
+outputMode(edgesfirst)   &mdash;> &ldquo;edgesfirst&rdquo;.
+outputMode(nodesfirst)   &mdash;> &ldquo;nodesfirst&rdquo;.
+
+
+
+% @tbd packMode
+
+
+
+%! pagedir(+PageDirection:atom)// .
+
+pagedir(&lsquo;BL&rsquo;) &mdash;> &ldquo;BL&rdquo;.
+pagedir(&lsquo;BR&rsquo;) &mdash;> &ldquo;BR&rdquo;.
+pagedir(&lsquo;LB&rsquo;) &mdash;> &ldquo;LB&rdquo;.
+pagedir(&lsquo;LT&rsquo;) &mdash;> &ldquo;LT&rdquo;.
+pagedir(&lsquo;RB&rsquo;) &mdash;> &ldquo;RB&rdquo;.
+pagedir(&lsquo;RT&rsquo;) &mdash;> &ldquo;RT&rdquo;.
+pagedir(&lsquo;TL&rsquo;) &mdash;> &ldquo;TL&rdquo;.
+pagedir(&lsquo;TR&rsquo;) &mdash;> &ldquo;TR&rdquo;.
+
+
+
+%! point(+Point:compound)// .
+% A <em>point</em> is represented by a compound of the following form:
+% <code>point(X:float,Y:float,Changeable:boolean)</code>.
+
+point(point(X,Y,Changeable)) &mdash;></li>
<li>float(X), &ldquo;,&rdquo;, float(Y),</li>
<li>input_changeable(Changeable).
+
+input_changeable(false) &mdash;> &ldquo;&rdquo;.
+input_changeable(true) &mdash;> &ldquo;!&rdquo;.
+
+
+
+%! pointList(+Points:list(compound))// .
+
+pointList(Points) &mdash;></li>
<li>*(point, Points).
+
+
+
+% @tbd portPos
+
+
+
+%! quadType(+QuadType:atom)// .
+
+quadType(fast) &mdash;> &ldquo;fast&rdquo;.
+quadType(none) &mdash;> &ldquo;none&rdquo;.
+quadType(normal) &mdash;> &ldquo;normal&rdquo;.
+
+
+
+%! rankType(+RankType:atom)// .
+
+rankType(max) &mdash;> &ldquo;max&rdquo;.
+rankType(min) &mdash;> &ldquo;min&rdquo;.
+rankType(same) &mdash;> &ldquo;same&rdquo;.
+rankType(sink) &mdash;> &ldquo;sink&rdquo;.
+rankType(source) &mdash;> &ldquo;source&rdquo;.
+
+
+
+%! rankdir(+RankDirection:oneof([&lsquo;BT&rsquo;,&lsquo;LR&rsquo;,&lsquo;RL&rsquo;,&lsquo;TB&rsquo;]))// .
+
+rankdir(&lsquo;BT&rsquo;) &mdash;> &ldquo;BT&rdquo;.
+rankdir(&lsquo;LR&rsquo;) &mdash;> &ldquo;LR&rdquo;.
+rankdir(&lsquo;RL&rsquo;) &mdash;> &ldquo;RL&rdquo;.
+rankdir(&lsquo;TB&rsquo;) &mdash;> &ldquo;TB&rdquo;.
+
+
+
+%! rect(+Rectangle:compound)// .
+
+rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;></li>
<li>float(LowerLeftX), &ldquo;,&rdquo;,</li>
<li>float(LowerLeftY), &ldquo;,&rdquo;,</li>
<li>float(UpperRightX), &ldquo;,&rdquo;,</li>
<li>float(UpperRightY).
+
+
+
+%! shape(+Shape:atom)// .
+
+shape(V) &mdash;> {polygon_based_shape(V)}, atom(V).
+
+polygon_based_shape(assembly).
+polygon_based_shape(box).
+polygon_based_shape(box3d).
+polygon_based_shape(cds).
+polygon_based_shape(circle).
+polygon_based_shape(component).
+polygon_based_shape(diamond).
+polygon_based_shape(doublecircle).
+polygon_based_shape(doubleoctagon).
+polygon_based_shape(egg).
+polygon_based_shape(ellipse).
+polygon_based_shape(fivepoverhang).
+polygon_based_shape(folder).
+polygon_based_shape(hexagon).
+polygon_based_shape(house).
+polygon_based_shape(insulator).
+polygon_based_shape(invhouse).
+polygon_based_shape(invtrapezium).
+polygon_based_shape(invtriangle).
+polygon_based_shape(larrow).
+polygon_based_shape(lpromoter).
+polygon_based_shape(&lsquo;Mcircle&rsquo;).
+polygon_based_shape(&lsquo;Mdiamond&rsquo;).
+polygon_based_shape(&lsquo;Msquare&rsquo;).
+polygon_based_shape(none).
+polygon_based_shape(note).
+polygon_based_shape(noverhang).
+polygon_based_shape(octagon).
+polygon_based_shape(oval).
+polygon_based_shape(parallelogram).
+polygon_based_shape(pentagon).
+polygon_based_shape(plaintext).
+polygon_based_shape(point).
+polygon_based_shape(polygon).
+polygon_based_shape(primersite).
+polygon_based_shape(promoter).
+polygon_based_shape(proteasesite).
+polygon_based_shape(proteinstab).
+polygon_based_shape(rarrow).
+polygon_based_shape(rect).
+polygon_based_shape(rectangle).
+polygon_based_shape(restrictionsite).
+polygon_based_shape(ribosite).
+polygon_based_shape(rnastab).
+polygon_based_shape(rpromoter).
+polygon_based_shape(septagon).
+polygon_based_shape(signature).
+polygon_based_shape(square).
+polygon_based_shape(tab).
+polygon_based_shape(terminator).
+polygon_based_shape(threepoverhang).
+polygon_based_shape(trapezium).
+polygon_based_shape(triangle).
+polygon_based_shape(tripleoctagon).
+polygon_based_shape(utr).
+
+
+
+%! smoothType(+SmoothType:atom)// .
+
+smoothType(V) &mdash;> {smoothType(V)}, atom(V).
+
+smoothType(avg_dist).
+smoothType(graph_dist).
+smoothType(none).
+smoothType(power_dist).
+smoothType(rng).
+smoothType(spring).
+smoothType(triangle).
+
+
+
+% @tbd splineType
+
+
+
+% @tbd startType
+
+
+
+%! string(?String:atom)// .
+% A GraphViz string.
+
+string(Content) &mdash;> &ldquo;\&rdquo;&ldquo;, atom(Content), &rdquo;\&ldquo;&rdquo;.
+
+
+
+%! style(?Context:oneof([cluster,edge,node]), ?Style:atom) is nondet.
+
+style(Context, Style) &mdash;> {style(Context, Style)}, atom(Style).
+
+style(cluster, bold).
+style(cluster, dashed).
+style(cluster, dotted).
+style(cluster, filled).
+style(cluster, rounded).
+style(cluster, solid).
+style(cluster, striped).
+style(edge, bold).
+style(edge, dashed).
+style(edge, dotted).
+style(edge, solid).
+style(node, bold).
+style(node, dashed).
+style(node, diagonals).
+style(node, dotted).
+style(node, filled).
+style(node, rounded).
+style(node, solid).
+style(node, striped).
+style(node, wedged).
+
+
+
+% @tbd viewPort
diff &mdash;git a/prolog/gv/gv_attrs.data b/prolog/gv/gv_attrs.data
new file mode 100644
index 0000000..95fc680
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_attrs.data
@@ -0,0 +1,169 @@
+gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;).
+gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>G59448,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
+gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>G59644,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;).
+gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>G60571,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)*sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;).
+gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;).
+gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;).
+gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;).
+gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(edgetarget,[edge],[escString],<em>G63711,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;).
+gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(headtarget,[edge],[escString],</em>G4892,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;).
+gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
+gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
+gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(inputscale,[graph],[double],<em>G6250,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labeltarget,[edge],[escString],</em>G8276,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;).
+gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;).
+gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(nslimitnslimit1,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;).
+gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;).
+gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
+gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;).
+gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;).
+gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;).
+gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
+gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
+gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;).
+gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(tailtarget,[edge],[escString],<em>G21528,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>G21878,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;).
+gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;).
+gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;).
+gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;).
+gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
new file mode 100644
index 0000000..4a92d5b
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_attrs.pl
@@ -0,0 +1,76 @@
+:&ndash; module(</li>
<li>gv_attrs,</li>
<li>[</li>
<li> gv_attr_value//2 % +Context:oneof([cluster,edge,graph,node,subgraph])</li>
<li><pre><code>              % +Attr
</code></pre></li>
<li>]
+).
+:&ndash; ensure_loaded(library(&lsquo;gv/gv_attrs.data&rsquo;)).
+
+/<em>* <module> GraphViz attributes
+
+@author Wouter Beek
+@version 2015/07-2015/08, 2015/10, 2016/03
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(error)).
+:&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/file_ext)).
+
+
+
+
+
+%! gv_attr_value(+Context, +Attr)// is det.
+% Uses the default value in case Value is uninstantiated.
+% Otherwise, performs a typecheck and converts the given value.
+%
+% Context can be either <code>cluster</code>, <code>edge</code>, <code>graph</code>, <code>node</code> or <code>subgraph</code>.
+
+% Use the default if no value is given.
+gv_attr_value(Context, Name=Value) &mdash;></li>
<li>{</li>
<li> var(Value),</li>
<li> gv_attr(Name, UsedBy, <em>, DefaultValue, </em>, _),</li>
<li> % Check validity of context.</li>
<li> memberchk(Context, UsedBy)</li>
<li>}, !,</li>
<li>gv_attr_value(Context, Name=DefaultValue).
+gv_attr_value(Context, Name=Value) &mdash;></li>
<li>{</li>
<li> % Check the validity of the context argument.</li>
<li> gv_attr(Name, UsedBy, Types, <em>, Minimum, </em>),</li>
<li> memberchk(Context, UsedBy),
+</li>
<li> %  Pick a value type non-deterministically.</li>
<li> member(Type, Types),
+</li>
<li> % The <code>style</code> type is the only one that requires the context argument.</li>
<li> (   Type == style</li>
<li> &ndash;>  Dcg =.. [Type,Context]</li>
<li> ;   Dcg =.. [Type]</li>
<li> ),
+</li>
<li> % Check validity of Value w.r.t. minimum value &mdash; if available.</li>
<li> check_minimum(Value, Minimum)</li>
<li>}, !,</li>
<li>dcg_call(gv_attr_type:Dcg, Value).
+gv_attr_value(<em>, Name=</em>) &mdash;></li>
<li>{existence_error(gv_attr, Name)}.
+
+
+
+
+
+% HELPERS %
+
+%! check_minimum(+Value:atom, +Minimum:number) is semidet.
+% Trivially succeeds if no minimum value is available for a given attribute.
+
+check_minimum(_, &lsquo;&rsquo;):&ndash; !.
+check_minimum(V, Min1):&ndash;</li>
<li>atom_number(Min1, Min2),</li>
<li>Min2 =&lt; V.
diff &mdash;git a/prolog/gv/gv_color.data b/prolog/gv/gv_color.data
new file mode 100644
index 0000000..166b13c
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_color.data
@@ -0,0 +1,802 @@
+gv_color(x11,aliceblue).
+gv_color(x11,antiquewhite).
+gv_color(x11,antiquewhite1).
+gv_color(x11,antiquewhite2).
+gv_color(x11,antiquewhite3).
+gv_color(x11,antiquewhite4).
+gv_color(x11,aquamarine).
+gv_color(x11,aquamarine1).
+gv_color(x11,aquamarine2).
+gv_color(x11,aquamarine3).
+gv_color(x11,aquamarine4).
+gv_color(x11,azure).
+gv_color(x11,azure1).
+gv_color(x11,azure2).
+gv_color(x11,azure3).
+gv_color(x11,azure4).
+gv_color(x11,beige).
+gv_color(x11,bisque).
+gv_color(x11,bisque1).
+gv_color(x11,bisque2).
+gv_color(x11,bisque3).
+gv_color(x11,bisque4).
+gv_color(x11,black).
+gv_color(x11,blanchedalmond).
+gv_color(x11,blue).
+gv_color(x11,blue1).
+gv_color(x11,blue2).
+gv_color(x11,blue3).
+gv_color(x11,blue4).
+gv_color(x11,blueviolet).
+gv_color(x11,brown).
+gv_color(x11,brown1).
+gv_color(x11,brown2).
+gv_color(x11,brown3).
+gv_color(x11,brown4).
+gv_color(x11,burlywood).
+gv_color(x11,burlywood1).
+gv_color(x11,burlywood2).
+gv_color(x11,burlywood3).
+gv_color(x11,burlywood4).
+gv_color(x11,cadetblue).
+gv_color(x11,cadetblue1).
+gv_color(x11,cadetblue2).
+gv_color(x11,cadetblue3).
+gv_color(x11,cadetblue4).
+gv_color(x11,chartreuse).
+gv_color(x11,chartreuse1).
+gv_color(x11,chartreuse2).
+gv_color(x11,chartreuse3).
+gv_color(x11,chartreuse4).
+gv_color(x11,chocolate).
+gv_color(x11,chocolate1).
+gv_color(x11,chocolate2).
+gv_color(x11,chocolate3).
+gv_color(x11,chocolate4).
+gv_color(x11,coral).
+gv_color(x11,coral1).
+gv_color(x11,coral2).
+gv_color(x11,coral3).
+gv_color(x11,coral4).
+gv_color(x11,cornflowerblue).
+gv_color(x11,cornsilk).
+gv_color(x11,cornsilk1).
+gv_color(x11,cornsilk2).
+gv_color(x11,cornsilk3).
+gv_color(x11,cornsilk4).
+gv_color(x11,crimson).
+gv_color(x11,cyan).
+gv_color(x11,cyan1).
+gv_color(x11,cyan2).
+gv_color(x11,cyan3).
+gv_color(x11,cyan4).
+gv_color(x11,darkgoldenrod).
+gv_color(x11,darkgoldenrod1).
+gv_color(x11,darkgoldenrod2).
+gv_color(x11,darkgoldenrod3).
+gv_color(x11,darkgoldenrod4).
+gv_color(x11,darkgreen).
+gv_color(x11,darkkhaki).
+gv_color(x11,darkolivegreen).
+gv_color(x11,darkolivegreen1).
+gv_color(x11,darkolivegreen2).
+gv_color(x11,darkolivegreen3).
+gv_color(x11,darkolivegreen4).
+gv_color(x11,darkorange).
+gv_color(x11,darkorange1).
+gv_color(x11,darkorange2).
+gv_color(x11,darkorange3).
+gv_color(x11,darkorange4).
+gv_color(x11,darkorchid).
+gv_color(x11,darkorchid1).
+gv_color(x11,darkorchid2).
+gv_color(x11,darkorchid3).
+gv_color(x11,darkorchid4).
+gv_color(x11,darksalmon).
+gv_color(x11,darkseagreen).
+gv_color(x11,darkseagreen1).
+gv_color(x11,darkseagreen2).
+gv_color(x11,darkseagreen3).
+gv_color(x11,darkseagreen4).
+gv_color(x11,darkslateblue).
+gv_color(x11,darkslategray).
+gv_color(x11,darkslategray1).
+gv_color(x11,darkslategray2).
+gv_color(x11,darkslategray3).
+gv_color(x11,darkslategray4).
+gv_color(x11,darkslategrey).
+gv_color(x11,darkturquoise).
+gv_color(x11,darkviolet).
+gv_color(x11,deeppink).
+gv_color(x11,deeppink1).
+gv_color(x11,deeppink2).
+gv_color(x11,deeppink3).
+gv_color(x11,deeppink4).
+gv_color(x11,deepskyblue).
+gv_color(x11,deepskyblue1).
+gv_color(x11,deepskyblue2).
+gv_color(x11,deepskyblue3).
+gv_color(x11,deepskyblue4).
+gv_color(x11,dimgray).
+gv_color(x11,dimgrey).
+gv_color(x11,dodgerblue).
+gv_color(x11,dodgerblue1).
+gv_color(x11,dodgerblue2).
+gv_color(x11,dodgerblue3).
+gv_color(x11,dodgerblue4).
+gv_color(x11,firebrick).
+gv_color(x11,firebrick1).
+gv_color(x11,firebrick2).
+gv_color(x11,firebrick3).
+gv_color(x11,firebrick4).
+gv_color(x11,floralwhite).
+gv_color(x11,forestgreen).
+gv_color(x11,gainsboro).
+gv_color(x11,ghostwhite).
+gv_color(x11,gold).
+gv_color(x11,gold1).
+gv_color(x11,gold2).
+gv_color(x11,gold3).
+gv_color(x11,gold4).
+gv_color(x11,goldenrod).
+gv_color(x11,goldenrod1).
+gv_color(x11,goldenrod2).
+gv_color(x11,goldenrod3).
+gv_color(x11,goldenrod4).
+gv_color(x11,gray).
+gv_color(x11,gray0).
+gv_color(x11,gray1).
+gv_color(x11,gray10).
+gv_color(x11,gray100).
+gv_color(x11,gray11).
+gv_color(x11,gray12).
+gv_color(x11,gray13).
+gv_color(x11,gray14).
+gv_color(x11,gray15).
+gv_color(x11,gray16).
+gv_color(x11,gray17).
+gv_color(x11,gray18).
+gv_color(x11,gray19).
+gv_color(x11,gray2).
+gv_color(x11,gray20).
+gv_color(x11,gray21).
+gv_color(x11,gray22).
+gv_color(x11,gray23).
+gv_color(x11,gray24).
+gv_color(x11,gray25).
+gv_color(x11,gray26).
+gv_color(x11,gray27).
+gv_color(x11,gray28).
+gv_color(x11,gray29).
+gv_color(x11,gray3).
+gv_color(x11,gray30).
+gv_color(x11,gray31).
+gv_color(x11,gray32).
+gv_color(x11,gray33).
+gv_color(x11,gray34).
+gv_color(x11,gray35).
+gv_color(x11,gray36).
+gv_color(x11,gray37).
+gv_color(x11,gray38).
+gv_color(x11,gray39).
+gv_color(x11,gray4).
+gv_color(x11,gray40).
+gv_color(x11,gray41).
+gv_color(x11,gray42).
+gv_color(x11,gray43).
+gv_color(x11,gray44).
+gv_color(x11,gray45).
+gv_color(x11,gray46).
+gv_color(x11,gray47).
+gv_color(x11,gray48).
+gv_color(x11,gray49).
+gv_color(x11,gray5).
+gv_color(x11,gray50).
+gv_color(x11,gray51).
+gv_color(x11,gray52).
+gv_color(x11,gray53).
+gv_color(x11,gray54).
+gv_color(x11,gray55).
+gv_color(x11,gray56).
+gv_color(x11,gray57).
+gv_color(x11,gray58).
+gv_color(x11,gray59).
+gv_color(x11,gray6).
+gv_color(x11,gray60).
+gv_color(x11,gray61).
+gv_color(x11,gray62).
+gv_color(x11,gray63).
+gv_color(x11,gray64).
+gv_color(x11,gray65).
+gv_color(x11,gray66).
+gv_color(x11,gray67).
+gv_color(x11,gray68).
+gv_color(x11,gray69).
+gv_color(x11,gray7).
+gv_color(x11,gray70).
+gv_color(x11,gray71).
+gv_color(x11,gray72).
+gv_color(x11,gray73).
+gv_color(x11,gray74).
+gv_color(x11,gray75).
+gv_color(x11,gray76).
+gv_color(x11,gray77).
+gv_color(x11,gray78).
+gv_color(x11,gray79).
+gv_color(x11,gray8).
+gv_color(x11,gray80).
+gv_color(x11,gray81).
+gv_color(x11,gray82).
+gv_color(x11,gray83).
+gv_color(x11,gray84).
+gv_color(x11,gray85).
+gv_color(x11,gray86).
+gv_color(x11,gray87).
+gv_color(x11,gray88).
+gv_color(x11,gray89).
+gv_color(x11,gray9).
+gv_color(x11,gray90).
+gv_color(x11,gray91).
+gv_color(x11,gray92).
+gv_color(x11,gray93).
+gv_color(x11,gray94).
+gv_color(x11,gray95).
+gv_color(x11,gray96).
+gv_color(x11,gray97).
+gv_color(x11,gray98).
+gv_color(x11,gray99).
+gv_color(x11,green).
+gv_color(x11,green1).
+gv_color(x11,green2).
+gv_color(x11,green3).
+gv_color(x11,green4).
+gv_color(x11,greenyellow).
+gv_color(x11,grey).
+gv_color(x11,grey0).
+gv_color(x11,grey1).
+gv_color(x11,grey10).
+gv_color(x11,grey100).
+gv_color(x11,grey11).
+gv_color(x11,grey12).
+gv_color(x11,grey13).
+gv_color(x11,grey14).
+gv_color(x11,grey15).
+gv_color(x11,grey16).
+gv_color(x11,grey17).
+gv_color(x11,grey18).
+gv_color(x11,grey19).
+gv_color(x11,grey2).
+gv_color(x11,grey20).
+gv_color(x11,grey21).
+gv_color(x11,grey22).
+gv_color(x11,grey23).
+gv_color(x11,grey24).
+gv_color(x11,grey25).
+gv_color(x11,grey26).
+gv_color(x11,grey27).
+gv_color(x11,grey28).
+gv_color(x11,grey29).
+gv_color(x11,grey3).
+gv_color(x11,grey30).
+gv_color(x11,grey31).
+gv_color(x11,grey32).
+gv_color(x11,grey33).
+gv_color(x11,grey34).
+gv_color(x11,grey35).
+gv_color(x11,grey36).
+gv_color(x11,grey37).
+gv_color(x11,grey38).
+gv_color(x11,grey39).
+gv_color(x11,grey4).
+gv_color(x11,grey40).
+gv_color(x11,grey41).
+gv_color(x11,grey42).
+gv_color(x11,grey43).
+gv_color(x11,grey44).
+gv_color(x11,grey45).
+gv_color(x11,grey46).
+gv_color(x11,grey47).
+gv_color(x11,grey48).
+gv_color(x11,grey49).
+gv_color(x11,grey5).
+gv_color(x11,grey50).
+gv_color(x11,grey51).
+gv_color(x11,grey52).
+gv_color(x11,grey53).
+gv_color(x11,grey54).
+gv_color(x11,grey55).
+gv_color(x11,grey56).
+gv_color(x11,grey57).
+gv_color(x11,grey58).
+gv_color(x11,grey59).
+gv_color(x11,grey6).
+gv_color(x11,grey60).
+gv_color(x11,grey61).
+gv_color(x11,grey62).
+gv_color(x11,grey63).
+gv_color(x11,grey64).
+gv_color(x11,grey65).
+gv_color(x11,grey66).
+gv_color(x11,grey67).
+gv_color(x11,grey68).
+gv_color(x11,grey69).
+gv_color(x11,grey7).
+gv_color(x11,grey70).
+gv_color(x11,grey71).
+gv_color(x11,grey72).
+gv_color(x11,grey73).
+gv_color(x11,grey74).
+gv_color(x11,grey75).
+gv_color(x11,grey76).
+gv_color(x11,grey77).
+gv_color(x11,grey78).
+gv_color(x11,grey79).
+gv_color(x11,grey8).
+gv_color(x11,grey80).
+gv_color(x11,grey81).
+gv_color(x11,grey82).
+gv_color(x11,grey83).
+gv_color(x11,grey84).
+gv_color(x11,grey85).
+gv_color(x11,grey86).
+gv_color(x11,grey87).
+gv_color(x11,grey88).
+gv_color(x11,grey89).
+gv_color(x11,grey9).
+gv_color(x11,grey90).
+gv_color(x11,grey91).
+gv_color(x11,grey92).
+gv_color(x11,grey93).
+gv_color(x11,grey94).
+gv_color(x11,grey95).
+gv_color(x11,grey96).
+gv_color(x11,grey97).
+gv_color(x11,grey98).
+gv_color(x11,grey99).
+gv_color(x11,honeydew).
+gv_color(x11,honeydew1).
+gv_color(x11,honeydew2).
+gv_color(x11,honeydew3).
+gv_color(x11,honeydew4).
+gv_color(x11,hotpink).
+gv_color(x11,hotpink1).
+gv_color(x11,hotpink2).
+gv_color(x11,hotpink3).
+gv_color(x11,hotpink4).
+gv_color(x11,indianred).
+gv_color(x11,indianred1).
+gv_color(x11,indianred2).
+gv_color(x11,indianred3).
+gv_color(x11,indianred4).
+gv_color(x11,indigo).
+gv_color(x11,invis).
+gv_color(x11,ivory).
+gv_color(x11,ivory1).
+gv_color(x11,ivory2).
+gv_color(x11,ivory3).
+gv_color(x11,ivory4).
+gv_color(x11,khaki).
+gv_color(x11,khaki1).
+gv_color(x11,khaki2).
+gv_color(x11,khaki3).
+gv_color(x11,khaki4).
+gv_color(x11,lavender).
+gv_color(x11,lavenderblush).
+gv_color(x11,lavenderblush1).
+gv_color(x11,lavenderblush2).
+gv_color(x11,lavenderblush3).
+gv_color(x11,lavenderblush4).
+gv_color(x11,lawngreen).
+gv_color(x11,lemonchiffon).
+gv_color(x11,lemonchiffon1).
+gv_color(x11,lemonchiffon2).
+gv_color(x11,lemonchiffon3).
+gv_color(x11,lemonchiffon4).
+gv_color(x11,lightblue).
+gv_color(x11,lightblue1).
+gv_color(x11,lightblue2).
+gv_color(x11,lightblue3).
+gv_color(x11,lightblue4).
+gv_color(x11,lightcoral).
+gv_color(x11,lightcyan).
+gv_color(x11,lightcyan1).
+gv_color(x11,lightcyan2).
+gv_color(x11,lightcyan3).
+gv_color(x11,lightcyan4).
+gv_color(x11,lightgoldenrod).
+gv_color(x11,lightgoldenrod1).
+gv_color(x11,lightgoldenrod2).
+gv_color(x11,lightgoldenrod3).
+gv_color(x11,lightgoldenrod4).
+gv_color(x11,lightgoldenrodyellow).
+gv_color(x11,lightgray).
+gv_color(x11,lightgrey).
+gv_color(x11,lightpink).
+gv_color(x11,lightpink1).
+gv_color(x11,lightpink2).
+gv_color(x11,lightpink3).
+gv_color(x11,lightpink4).
+gv_color(x11,lightsalmon).
+gv_color(x11,lightsalmon1).
+gv_color(x11,lightsalmon2).
+gv_color(x11,lightsalmon3).
+gv_color(x11,lightsalmon4).
+gv_color(x11,lightseagreen).
+gv_color(x11,lightskyblue).
+gv_color(x11,lightskyblue1).
+gv_color(x11,lightskyblue2).
+gv_color(x11,lightskyblue3).
+gv_color(x11,lightskyblue4).
+gv_color(x11,lightslateblue).
+gv_color(x11,lightslategray).
+gv_color(x11,lightslategrey).
+gv_color(x11,lightsteelblue).
+gv_color(x11,lightsteelblue1).
+gv_color(x11,lightsteelblue2).
+gv_color(x11,lightsteelblue3).
+gv_color(x11,lightsteelblue4).
+gv_color(x11,lightyellow).
+gv_color(x11,lightyellow1).
+gv_color(x11,lightyellow2).
+gv_color(x11,lightyellow3).
+gv_color(x11,lightyellow4).
+gv_color(x11,limegreen).
+gv_color(x11,linen).
+gv_color(x11,magenta).
+gv_color(x11,magenta1).
+gv_color(x11,magenta2).
+gv_color(x11,magenta3).
+gv_color(x11,magenta4).
+gv_color(x11,maroon).
+gv_color(x11,maroon1).
+gv_color(x11,maroon2).
+gv_color(x11,maroon3).
+gv_color(x11,maroon4).
+gv_color(x11,mediumaquamarine).
+gv_color(x11,mediumblue).
+gv_color(x11,mediumorchid).
+gv_color(x11,mediumorchid1).
+gv_color(x11,mediumorchid2).
+gv_color(x11,mediumorchid3).
+gv_color(x11,mediumorchid4).
+gv_color(x11,mediumpurple).
+gv_color(x11,mediumpurple1).
+gv_color(x11,mediumpurple2).
+gv_color(x11,mediumpurple3).
+gv_color(x11,mediumpurple4).
+gv_color(x11,mediumseagreen).
+gv_color(x11,mediumslateblue).
+gv_color(x11,mediumspringgreen).
+gv_color(x11,mediumturquoise).
+gv_color(x11,mediumvioletred).
+gv_color(x11,midnightblue).
+gv_color(x11,mintcream).
+gv_color(x11,mistyrose).
+gv_color(x11,mistyrose1).
+gv_color(x11,mistyrose2).
+gv_color(x11,mistyrose3).
+gv_color(x11,mistyrose4).
+gv_color(x11,moccasin).
+gv_color(x11,navajowhite).
+gv_color(x11,navajowhite1).
+gv_color(x11,navajowhite2).
+gv_color(x11,navajowhite3).
+gv_color(x11,navajowhite4).
+gv_color(x11,navy).
+gv_color(x11,navyblue).
+gv_color(x11,none).
+gv_color(x11,oldlace).
+gv_color(x11,olivedrab).
+gv_color(x11,olivedrab1).
+gv_color(x11,olivedrab2).
+gv_color(x11,olivedrab3).
+gv_color(x11,olivedrab4).
+gv_color(x11,orange).
+gv_color(x11,orange1).
+gv_color(x11,orange2).
+gv_color(x11,orange3).
+gv_color(x11,orange4).
+gv_color(x11,orangered).
+gv_color(x11,orangered1).
+gv_color(x11,orangered2).
+gv_color(x11,orangered3).
+gv_color(x11,orangered4).
+gv_color(x11,orchid).
+gv_color(x11,orchid1).
+gv_color(x11,orchid2).
+gv_color(x11,orchid3).
+gv_color(x11,orchid4).
+gv_color(x11,palegoldenrod).
+gv_color(x11,palegreen).
+gv_color(x11,palegreen1).
+gv_color(x11,palegreen2).
+gv_color(x11,palegreen3).
+gv_color(x11,palegreen4).
+gv_color(x11,paleturquoise).
+gv_color(x11,paleturquoise1).
+gv_color(x11,paleturquoise2).
+gv_color(x11,paleturquoise3).
+gv_color(x11,paleturquoise4).
+gv_color(x11,palevioletred).
+gv_color(x11,palevioletred1).
+gv_color(x11,palevioletred2).
+gv_color(x11,palevioletred3).
+gv_color(x11,palevioletred4).
+gv_color(x11,papayawhip).
+gv_color(x11,peachpuff).
+gv_color(x11,peachpuff1).
+gv_color(x11,peachpuff2).
+gv_color(x11,peachpuff3).
+gv_color(x11,peachpuff4).
+gv_color(x11,peru).
+gv_color(x11,pink).
+gv_color(x11,pink1).
+gv_color(x11,pink2).
+gv_color(x11,pink3).
+gv_color(x11,pink4).
+gv_color(x11,plum).
+gv_color(x11,plum1).
+gv_color(x11,plum2).
+gv_color(x11,plum3).
+gv_color(x11,plum4).
+gv_color(x11,powderblue).
+gv_color(x11,purple).
+gv_color(x11,purple1).
+gv_color(x11,purple2).
+gv_color(x11,purple3).
+gv_color(x11,purple4).
+gv_color(x11,red).
+gv_color(x11,red1).
+gv_color(x11,red2).
+gv_color(x11,red3).
+gv_color(x11,red4).
+gv_color(x11,rosybrown).
+gv_color(x11,rosybrown1).
+gv_color(x11,rosybrown2).
+gv_color(x11,rosybrown3).
+gv_color(x11,rosybrown4).
+gv_color(x11,royalblue).
+gv_color(x11,royalblue1).
+gv_color(x11,royalblue2).
+gv_color(x11,royalblue3).
+gv_color(x11,royalblue4).
+gv_color(x11,saddlebrown).
+gv_color(x11,salmon).
+gv_color(x11,salmon1).
+gv_color(x11,salmon2).
+gv_color(x11,salmon3).
+gv_color(x11,salmon4).
+gv_color(x11,sandybrown).
+gv_color(x11,seagreen).
+gv_color(x11,seagreen1).
+gv_color(x11,seagreen2).
+gv_color(x11,seagreen3).
+gv_color(x11,seagreen4).
+gv_color(x11,seashell).
+gv_color(x11,seashell1).
+gv_color(x11,seashell2).
+gv_color(x11,seashell3).
+gv_color(x11,seashell4).
+gv_color(x11,sienna).
+gv_color(x11,sienna1).
+gv_color(x11,sienna2).
+gv_color(x11,sienna3).
+gv_color(x11,sienna4).
+gv_color(x11,skyblue).
+gv_color(x11,skyblue1).
+gv_color(x11,skyblue2).
+gv_color(x11,skyblue3).
+gv_color(x11,skyblue4).
+gv_color(x11,slateblue).
+gv_color(x11,slateblue1).
+gv_color(x11,slateblue2).
+gv_color(x11,slateblue3).
+gv_color(x11,slateblue4).
+gv_color(x11,slategray).
+gv_color(x11,slategray1).
+gv_color(x11,slategray2).
+gv_color(x11,slategray3).
+gv_color(x11,slategray4).
+gv_color(x11,slategrey).
+gv_color(x11,snow).
+gv_color(x11,snow1).
+gv_color(x11,snow2).
+gv_color(x11,snow3).
+gv_color(x11,snow4).
+gv_color(x11,springgreen).
+gv_color(x11,springgreen1).
+gv_color(x11,springgreen2).
+gv_color(x11,springgreen3).
+gv_color(x11,springgreen4).
+gv_color(x11,steelblue).
+gv_color(x11,steelblue1).
+gv_color(x11,steelblue2).
+gv_color(x11,steelblue3).
+gv_color(x11,steelblue4).
+gv_color(x11,tan).
+gv_color(x11,tan1).
+gv_color(x11,tan2).
+gv_color(x11,tan3).
+gv_color(x11,tan4).
+gv_color(x11,thistle).
+gv_color(x11,thistle1).
+gv_color(x11,thistle2).
+gv_color(x11,thistle3).
+gv_color(x11,thistle4).
+gv_color(x11,tomato).
+gv_color(x11,tomato1).
+gv_color(x11,tomato2).
+gv_color(x11,tomato3).
+gv_color(x11,tomato4).
+gv_color(x11,transparent).
+gv_color(x11,turquoise).
+gv_color(x11,turquoise1).
+gv_color(x11,turquoise2).
+gv_color(x11,turquoise3).
+gv_color(x11,turquoise4).
+gv_color(x11,violet).
+gv_color(x11,violetred).
+gv_color(x11,violetred1).
+gv_color(x11,violetred2).
+gv_color(x11,violetred3).
+gv_color(x11,violetred4).
+gv_color(x11,wheat).
+gv_color(x11,wheat1).
+gv_color(x11,wheat2).
+gv_color(x11,wheat3).
+gv_color(x11,wheat4).
+gv_color(x11,white).
+gv_color(x11,whitesmoke).
+gv_color(x11,yellow).
+gv_color(x11,yellow1).
+gv_color(x11,yellow2).
+gv_color(x11,yellow3).
+gv_color(x11,yellow4).
+gv_color(x11,yellowgreen).
+gv_color(svg,aliceblue).
+gv_color(svg,antiquewhite).
+gv_color(svg,aqua).
+gv_color(svg,aquamarine).
+gv_color(svg,azure).
+gv_color(svg,beige).
+gv_color(svg,bisque).
+gv_color(svg,black).
+gv_color(svg,blanchedalmond).
+gv_color(svg,blue).
+gv_color(svg,blueviolet).
+gv_color(svg,brown).
+gv_color(svg,burlywood).
+gv_color(svg,cadetblue).
+gv_color(svg,chartreuse).
+gv_color(svg,chocolate).
+gv_color(svg,coral).
+gv_color(svg,cornflowerblue).
+gv_color(svg,cornsilk).
+gv_color(svg,crimson).
+gv_color(svg,cyan).
+gv_color(svg,darkblue).
+gv_color(svg,darkcyan).
+gv_color(svg,darkgoldenrod).
+gv_color(svg,darkgray).
+gv_color(svg,darkgreen).
+gv_color(svg,darkgrey).
+gv_color(svg,darkkhaki).
+gv_color(svg,darkmagenta).
+gv_color(svg,darkolivegreen).
+gv_color(svg,darkorange).
+gv_color(svg,darkorchid).
+gv_color(svg,darkred).
+gv_color(svg,darksalmon).
+gv_color(svg,darkseagreen).
+gv_color(svg,darkslateblue).
+gv_color(svg,darkslategray).
+gv_color(svg,darkslategrey).
+gv_color(svg,darkturquoise).
+gv_color(svg,darkviolet).
+gv_color(svg,deeppink).
+gv_color(svg,deepskyblue).
+gv_color(svg,dimgray).
+gv_color(svg,dimgrey).
+gv_color(svg,dodgerblue).
+gv_color(svg,firebrick).
+gv_color(svg,floralwhite).
+gv_color(svg,forestgreen).
+gv_color(svg,fuchsia).
+gv_color(svg,gainsboro).
+gv_color(svg,ghostwhite).
+gv_color(svg,gold).
+gv_color(svg,goldenrod).
+gv_color(svg,gray).
+gv_color(svg,grey).
+gv_color(svg,green).
+gv_color(svg,greenyellow).
+gv_color(svg,honeydew).
+gv_color(svg,hotpink).
+gv_color(svg,indianred).
+gv_color(svg,indigo).
+gv_color(svg,ivory).
+gv_color(svg,khaki).
+gv_color(svg,lavender).
+gv_color(svg,lavenderblush).
+gv_color(svg,lawngreen).
+gv_color(svg,lemonchiffon).
+gv_color(svg,lightblue).
+gv_color(svg,lightcoral).
+gv_color(svg,lightcyan).
+gv_color(svg,lightgoldenrodyellow).
+gv_color(svg,lightgray).
+gv_color(svg,lightgreen).
+gv_color(svg,lightgrey).
+gv_color(svg,lightpink).
+gv_color(svg,lightsalmon).
+gv_color(svg,lightseagreen).
+gv_color(svg,lightskyblue).
+gv_color(svg,lightslategray).
+gv_color(svg,lightslategrey).
+gv_color(svg,lightsteelblue).
+gv_color(svg,lightyellow).
+gv_color(svg,lime).
+gv_color(svg,limegreen).
+gv_color(svg,linen).
+gv_color(svg,magenta).
+gv_color(svg,maroon).
+gv_color(svg,mediumaquamarine).
+gv_color(svg,mediumblue).
+gv_color(svg,mediumorchid).
+gv_color(svg,mediumpurple).
+gv_color(svg,mediumseagreen).
+gv_color(svg,mediumslateblue).
+gv_color(svg,mediumspringgreen).
+gv_color(svg,mediumturquoise).
+gv_color(svg,mediumvioletred).
+gv_color(svg,midnightblue).
+gv_color(svg,mintcream).
+gv_color(svg,mistyrose).
+gv_color(svg,moccasin).
+gv_color(svg,navajowhite).
+gv_color(svg,navy).
+gv_color(svg,oldlace).
+gv_color(svg,olive).
+gv_color(svg,olivedrab).
+gv_color(svg,orange).
+gv_color(svg,orangered).
+gv_color(svg,orchid).
+gv_color(svg,palegoldenrod).
+gv_color(svg,palegreen).
+gv_color(svg,paleturquoise).
+gv_color(svg,palevioletred).
+gv_color(svg,papayawhip).
+gv_color(svg,peachpuff).
+gv_color(svg,peru).
+gv_color(svg,pink).
+gv_color(svg,plum).
+gv_color(svg,powderblue).
+gv_color(svg,purple).
+gv_color(svg,red).
+gv_color(svg,rosybrown).
+gv_color(svg,royalblue).
+gv_color(svg,saddlebrown).
+gv_color(svg,salmon).
+gv_color(svg,sandybrown).
+gv_color(svg,seagreen).
+gv_color(svg,seashell).
+gv_color(svg,sienna).
+gv_color(svg,silver).
+gv_color(svg,skyblue).
+gv_color(svg,slateblue).
+gv_color(svg,slategray).
+gv_color(svg,slategrey).
+gv_color(svg,snow).
+gv_color(svg,springgreen).
+gv_color(svg,steelblue).
+gv_color(svg,tan).
+gv_color(svg,teal).
+gv_color(svg,thistle).
+gv_color(svg,tomato).
+gv_color(svg,turquoise).
+gv_color(svg,violet).
+gv_color(svg,wheat).
+gv_color(svg,white).
+gv_color(svg,whitesmoke).
+gv_color(svg,yellow).
+gv_color(svg,yellowgreen).
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
new file mode 100644
index 0000000..ac319dc
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_color.pl
@@ -0,0 +1,68 @@
+:&ndash; module(</li>
<li>gv_color,</li>
<li>[</li>
<li> gv_color/2, % ?Colorscheme:oneof([svg,x11])</li>
<li><pre><code>         % ?Color:atom
</code></pre></li>
<li> color//1, % +Color:compound</li>
<li> colorList//1 % +Pairs:list(pair(compound,float))</li>
<li>]
+).
+:&ndash; ensure_loaded(library(&lsquo;gv/gv_color.data&rsquo;)).
+
+/** <module> GraphViz color
+
+@author Wouter Beek
+@tbd Color value <code>transparent</code> is only available in the output formats</li>
<li>  ps, svg, fig, vmrl, and the bitmap formats.
+@version 2015/08, 2015/10, 2016/02
+<em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/file_ext)).
+
+
+
+
+
+% color(+Color:compound)// .
+% A </em>color* is represented by a compound term of one of the following forms:
+%   1. <code>rgb(Red:nonneg,Green:nonneg,Blue:nonneg)</code>
+%   2. <code>rgba(Red:nonneg,Green:nonneg,Blue:nonneg,Alpha:nonneg)</code>
+%   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code>
+
+color(rgb(Red,Green,Blue)) &mdash;> !,</li>
<li>&ldquo;#&rdquo;,</li>
<li><h1>(3, hex_color, [Red,Green,Blue]).</h1>

<p>+color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,</p></li>
<li>color(rgb(Red,Green,Blue)),</li>
<li>hex_color(Alpha).
+color(hsv(Hue,Saturation,Value)) &mdash;> !,</li>
<li><h1>(3, hsv_color, [Hue,Saturation,Value]).</h1>

<p>+color(Name) &mdash;></p></li>
<li>{gv_color(_, Name)},</li>
<li>atom(Name).
+
+hex_color(I) &mdash;></li>
<li>xinteger(I).
+
+hsv_color(D, Head, Tail):&ndash;</li>
<li>format(codes(Head,Tail), &lsquo;~2f&rsquo;, [D]).
+
+
+
+%! colorList(+Pairs:list(pair(compound,float)))// .
+
+colorList(L) &mdash;></li>
<li>&lsquo;+&rsquo;(wc, L).
+
+wc(Color-Float) &mdash;></li>
<li>color(Color),</li>
<li>(   wc_weight(Float)</li>
<li>;   &ldquo;&rdquo;</li>
<li>).
+
+wc_weight(Float) &mdash;></li>
<li>&ldquo;;&rdquo;,</li>
<li>float(Float).
diff &mdash;git a/prolog/gv/gv_dom.pl b/prolog/gv/gv_dom.pl
new file mode 100644
index 0000000..30c4263
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_dom.pl
@@ -0,0 +1,29 @@
+:&ndash; module(</li>
<li>gv_dom,</li>
<li>[</li>
<li> gv_dom/3 % +ExportG, -Dom, +Opts</li>
<li>]
+).
+
+/<em>* <module> GraphViz DOM
+
+@author Wouter Beek
+@version 2015/07, 2016/01
+</em>/
+
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(option)).
+:&ndash; use_module(library(svg/svg_ext)).
+
+
+
+
+
+%! gv_dom(+ExportG, -Dom, +Opts) is det.
+
+gv_dom(ExportG, Dom, Opts1):&ndash;</li>
<li>% Make sure the file type of the output file is SvgDom.</li>
<li>merge_options([output(svg)], Opts1, Opts2),</li>
<li>graph_viz(ExportG, ToFile, Opts2),</li>
<li>svg_dom(ToFile, Dom),</li>
<li>delete_file(ToFile).
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
new file mode 100644
index 0000000..993fcee
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_file.pl
@@ -0,0 +1,175 @@
+:&ndash; module(</li>
<li>gv_file,</li>
<li>[</li>
<li> graph_viz/2, % +ExportG, ?File</li>
<li> graph_viz/3  % +ExportG, ?File, +Opts</li>
<li>]
+).
+
+/<em>* <module> GraphViz file
+
+@author Wouter Beek
+@version 2015/07, 2015/10-2015/11, 2016/01
+</em>/
+
+:&ndash; use_module(library(code_ext)).
+:&ndash; use_module(library(error)).
+:&ndash; use_module(library(gv/gv_graph)).
+:&ndash; use_module(library(option)).
+:&ndash; use_module(library(os/external_program)).
+:&ndash; use_module(library(os/process_ext)).
+:&ndash; use_module(library(string_ext)).
+
+:&ndash; predicate_options(graph_viz/3, 3, [</li>
<li>  pass_to(file_to_gv/3, 3)</li>
<li>]).
+:&ndash; predicate_options(file_to_gv/3, 3, [</li>
<li>  method(+oneof([circo,dot,fdp,neato,osage,sfdp,twopi])),</li>
<li>  output(+atom)</li>
<li>]).
+
+:&ndash; dynamic(user:module_uses/2).
+:&ndash; multifile(user:module_uses/2).
+
+user:module_uses(gv_file, program(dot)).
+
+
+
+
+
+%! graph_viz(+ExportGraph:compound, ?File:atom) is det.
+%! graph_viz(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
+% Returns a file containing a GraphViz visualization of the given graph.
+%
+% The following options are supported:
+%   * method(+oneof([circo,dot,fdp,neato,osage,sfdp,twopi])
+%     The algorithm used by GraphViz for positioning the tree nodes.
+%     Default is <code>dot'.
+%     For possible values see gv_method/1.
+%   * output(+atom)</code>
+%     The file type of the generated GraphViz file.
+%     Default is <code>pdf</code>.
+%     For possible values see gv_output_type/1.
+
+graph_viz(ExportG, File):&ndash;</li>
<li>graph_viz(ExportG, File, []).
+graph_viz(ExportG, File, Opts):&ndash;</li>
<li>once(phrase(gv_graph(ExportG), Cs)),
+</li>
<li>% Be thread-safe.</li>
<li>thread_self(Id),</li>
<li>string_list_concat([&ldquo;gv_file&rdquo;,Id], &ldquo;_&rdquo;, ThreadName),</li>
<li>absolute_file_name(ThreadName, TmpFile, [access(write),extensions([dot])]),</li>
<li>setup_call_cleanup(</li>
<li> open(TmpFile, write, Write, [encoding(utf8)]),</li>
<li> with_output_to(Write, put_codes(Cs)),</li>
<li> close(Write)</li>
<li>),</li>
<li>file_to_gv(TmpFile, File, Opts).
+
+
+%! file_to_gv(
+%!   +InputFile:atom,
+%!   ?OutputFile:atom,
+%!   +Options:list(compound)
+%! ) is det.
+% Converts a GraphViz DOT file to an image file, using a specific
+% visualization method.
+
+file_to_gv(InputFile, OutputFile, Opts):&ndash;</li>
<li>var(OutputFile), !,</li>
<li>option(output(Ext), Opts, pdf),</li>
<li>file_name_extension(out, Ext, LocalName),</li>
<li>absolute_file_name(LocalName, OutputFile, Opts),</li>
<li>file_to_gv(InputFile, OutputFile, Opts).
+file_to_gv(InputFile, OutputFile, Opts):&ndash;</li>
<li>option(output(dot), Opts), !,</li>
<li>(   var(OutputFile)</li>
<li>&ndash;>  OutputFile = InputFile</li>
<li>;   rename_file(InputFile, OutputFile)</li>
<li>).
+file_to_gv(InputFile, OutputFile, Opts):&ndash;</li>
<li>% Typecheck for <code>method</code> option.</li>
<li>option(method(Method), Opts, dot),</li>
<li>findall(Method0, gv_method(Method0), Methods),</li>
<li>must_be(oneof(Methods), Method),
+</li>
<li>% Typecheck for <code>output</code> option.</li>
<li>option(output(OutputType), Opts, pdf),</li>
<li>findall(OutputType0, gv_output_type(OutputType0), OutputTypes),</li>
<li>must_be(oneof(OutputTypes), OutputType),
+</li>
<li>% Run the GraphViz conversion command in the shell.</li>
<li>format(atom(OutputTypeFlag), &ldquo;-T~a&rdquo;, [OutputType]),</li>
<li>format(atom(OutputFileFlag), &ldquo;-o~a&rdquo;, [OutputFile]),</li>
<li>run_process(</li>
<li> Method,</li>
<li> [OutputTypeFlag,file(InputFile),OutputFileFlag]</li>
<li>).
+
+
+
+
+
+% HELPERS %
+
+gv_method(circo).
+gv_method(dot).
+gv_method(fdp).
+gv_method(neato).
+gv_method(osage).
+gv_method(sfdp).
+gv_method(twopi).
+
+
+gv_output_type(bmp).
+gv_output_type(canon).
+gv_output_type(dot).
+gv_output_type(gv).
+gv_output_type(xdot).
+gv_output_type(&lsquo;xdot1.2&rsquo;).
+gv_output_type(&lsquo;xdot1.4&rsquo;).
+gv_output_type(cgimage).
+gv_output_type(cmap).
+gv_output_type(eps).
+gv_output_type(exr).
+gv_output_type(fig).
+gv_output_type(gd).
+gv_output_type(gd2).
+gv_output_type(gif).
+gv_output_type(gtk).
+gv_output_type(ico).
+gv_output_type(imap).
+gv_output_type(cmapx).
+gv_output_type(imap_np).
+gv_output_type(cmapx_np).
+gv_output_type(ismap).
+gv_output_type(jp2).
+gv_output_type(jpg).
+gv_output_type(jpeg).
+gv_output_type(jpe).
+gv_output_type(pct).
+gv_output_type(pict).
+gv_output_type(pdf).
+gv_output_type(pic).
+gv_output_type(plain).
+gv_output_type(&lsquo;plain-ext&rsquo;).
+gv_output_type(png).
+gv_output_type(pov).
+gv_output_type(ps).
+gv_output_type(ps2).
+gv_output_type(psd).
+gv_output_type(sgi).
+gv_output_type(svg).
+gv_output_type(svgz).
+gv_output_type(tga).
+gv_output_type(tif).
+gv_output_type(tiff).
+gv_output_type(tk).
+gv_output_type(vml).
+gv_output_type(vmlz).
+gv_output_type(vrml).
+gv_output_type(wbmp).
+gv_output_type(webp).
+gv_output_type(xlib).
+gv_output_type(x11).
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
new file mode 100644
index 0000000..c95c9cc
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_graph.pl
@@ -0,0 +1,252 @@
+:&ndash; module(</li>
<li>gv_graph,</li>
<li>[</li>
<li> gv_graph//1 % +Graph:compound</li>
<li>]
+).
+
+/<em>* <module> GraphViz graph
+
+Generates GraphViz graphs in the DOT format based on
+a Prolog representation of a graph.
+
+In GraphViz vertices are called &lsquo;nodes&rsquo;.
+
+&mdash;&ndash;
+
+@author Wouter Beek
+@version 2015/07, 2015/12
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(gv/gv_graph_comp)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(option)).
+
+
+
+
+
+%! gv_graph(+Graph:compound)// is det.
+% Wrapper around gv_graph//2 with no indentation.
+
+gv_graph(G) &mdash;> gv_graph(G, 0).
+
+
+%! gv_graph(+Graph:compound, +Indent:nonneg)// is det.
+% The follow graph attributes are supported,
+% beyond the GraphViz attributes for graphs:
+%   * <code>directed(+boolean)</code>
+%      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
+%      Default: <code>false</code>.
+%   * <code>name(+GraphName:atom)</code>
+%   * <code>strict(+StrictGraph:boolean)</code>
+%      This forbids the creation of self-arcs and multi-edges;
+%      they are ignored in the input file.
+%      Only in combinattion with directionality <code>directed</code>.
+%
+% <code>abnf
+% graph = ["strict"] ("graph" / "digraph") [ID] "{" stmt_list "}"
+%</code>
+%
+% <code>GraphTerm</code> is a compound term of the following form:
+% <code>prolog
+% graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
+%</code>
+%
+% <code>RankedVertexTerms</code> is a list of compound terms of the following form:
+% <code>prolog
+% RankVertex-ContentVertices
+%</code>
+%
+% @tbd Add support for subgraphs (arbitrary nesting).
+% @tbd Add support for escape strings:
+%      <a href="http://www.graphviz.org/doc/info/attrs.html#k:escString">http://www.graphviz.org/doc/info/attrs.html#k:escString</a>
+% @tbd Assert attributes that are generic with respect to a subgraph.
+% @tbd Not all vertex and edge properties can be shared it seems (e.g., label).
+
+gv_graph(G1, I) &mdash;></li>
<li>{</li>
<li> include_ranks(G1, G2),</li>
<li> G2 = graph(VTerms,RankedVTerms,ETerms,GAttrs1),</li>
<li> shared_attributes(VTerms, SharedVAttrs, NewVTerms),</li>
<li> shared_attributes(ETerms, SharedEAttrs, NewETerms),</li>
<li> add_default(GAttrs1, overlap(false), GAttrs2),</li>
<li> I = 0</li>
<li>},
+</li>
<li>% The first statement in the GraphViz output.</li>
<li>% States that this file represents a graph according to the GraphViz format.</li>
<li>tab(I),</li>
<li></li>
<li>% Strictness.</li>
<li>{select_option(strict(Strict), GAttrs2, GAttrs3, false)},</li>
<li>gv_strict(Strict),</li>
<li></li>
<li>% Directedness.</li>
<li>{select_option(directed(Directed), GAttrs3, GAttrs4, true)},</li>
<li>gv_graph_type(Directed),</li>
<li>&ldquo; &rdquo;,</li>
<li></li>
<li>% Graph name.</li>
<li>(   {select_option(name(GName), GAttrs4, GAttrs5)}</li>
<li>&ndash;>  gv_id(GName),</li>
<li>   &ldquo; &rdquo;</li>
<li>;   {GAttrs5 = GAttrs4}</li>
<li>),
+</li>
<li>% The body of the DOT file appears between curly braces.</li>
<li>&ldquo;{\n&rdquo;,
+</li>
<li>% The following lines are indented.</li>
<li>{NewI is I + 1},
+</li>
<li>% Attributes that apply to the graph as a whole.</li>
<li>gv_generic_attributes_statement(graph, NewI, GAttrs5),
+</li>
<li>% Attributes that are the same for all nodes.</li>
<li>gv_generic_attributes_statement(node, NewI, SharedVAttrs),
+</li>
<li>% Attributes that are the same for all edges.</li>
<li>gv_generic_attributes_statement(edge, NewI, SharedEAttrs),
+</li>
<li>% Only add a line_feed if some content was already written</li>
<li>% and some content is about to be written.</li>
<li>(   % Succeeds if no content was written.</li>
<li>   {(GAttrs5 == [], SharedVAttrs == [], SharedEAttrs == [])}</li>
<li>&ndash;>  &ldquo;&rdquo;</li>
<li>;   % Succeeds if no content is about to be written.</li>
<li>   {(NewVTerms == [], RankedVTerms == [])}</li>
<li>&ndash;>  &ldquo;&rdquo;</li>
<li>;   &ldquo;\n&rdquo;</li>
<li>),
+</li>
<li>% The list of GraphViz nodes.</li>
<li>gv_node_statements(NewI, NewVTerms),</li>
<li>({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; &ldquo;\n&rdquo;),
+</li>
<li>% The ranked GraphViz nodes (displayed at the same height).</li>
<li>gv_ranked_node_collections(NewI, RankedVTerms),</li>
<li>({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; &ldquo;\n&rdquo;),
+</li>
<li>{</li>
<li> findall(</li>
<li>   edge(FromId,ToId,[]),</li>
<li>   (</li>
<li><pre><code> nth0(J1, RankedVTerms, rank(vertex(FromId,_),_)),
</code></pre></li>
<li><pre><code> nth0(J2, RankedVTerms, rank(vertex(ToId,_),_)),
</code></pre></li>
<li><pre><code> % We assume that the rank vertices are nicely ordered.
</code></pre></li>
<li><pre><code> succ(J1, J2)
</code></pre></li>
<li>   ),</li>
<li>   RankEdges</li>
<li> )</li>
<li>},
+</li>
<li>% The rank edges.</li>
<li>gv_edge_statements(NewI, Directed, RankEdges),
+</li>
<li>% The non-rank edges.</li>
<li>gv_edge_statements(NewI, Directed, NewETerms),</li>
<li></li>
<li>% Note that we do not include a line_feed here.
+</li>
<li>% We want to indent the closing curly brace.</li>
<li>tab(I),</li>
<li>&ldquo;}\n&rdquo;.
+
+
+
+%! gv_edge_statements(
+%!   +Indent:nonneg,
+%!   +Directed:boolean,
+%!   +Statements:list(compound)
+%! )// is det.
+
+gv_edge_statements(I, Dir, L) &mdash;> <em>(gv_edge_statement(I, Dir), L).
+
+
+
+%! gv_edge_statements(+Indent:nonneg, +Statements:list(compound))// is det.
+
+gv_node_statements(I, L) &mdash;> </em>(gv_node_statement(I), L).
+
+
+
+%! gv_ranked_node_collections(+Indent:nonneg, +Collections:list)// is det.
+
+gv_ranked_node_collections(I, L) &mdash;> *(gv_ranked_node_collection(I), L).
+
+
+
+
+
+% HELPERS %
+
+%! add_default_option(
+%!   +Options:list(compound),
+%!   +Default:compound,
+%!   -NewOptions:list(compound)
+%! ) is det.
+
+add_default(L1, Opt, L2):&ndash;</li>
<li>Opt =.. [N,_Value],</li>
<li>Opt0 =.. [N,_FreshVar],</li>
<li>(   option(Opt0, L1)</li>
<li>&ndash;>  L2 = L1</li>
<li>;   L2 = [Opt|L1]</li>
<li>).
+
+
+
+%! gv_graph_type(+Directed:boolean)// is det.
+% The type of graph that is represented.
+
+gv_graph_type(false) &mdash;> !, &ldquo;graph&rdquo;.
+gv_graph_type(true)  &mdash;>    &ldquo;digraph&rdquo;.
+
+
+
+%! gv_strict(+Strict:boolean)// is det.
+% The keyword denoting that the graph is strict, i.e., has no self-arcs and
+% no multi-edges.
+% This only applies to directed graphs.
+
+gv_strict(false) &mdash;> !, &ldquo;&rdquo;.
+gv_strict(true)  &mdash;>    &ldquo;strict &rdquo;.
+
+
+
+%! invlude_ranges(+Graph:compound, -GraphWithRanks:compound) is det.
+% Ensures that there is a ranks components in
+% the graph-denoting compound term.
+
+include_ranks(graph(Vs,Rs,Es,L), graph(Vs,Rs,Es,L)):&ndash; !.
+include_ranks(graph(Vs,Es,L), graph(Vs,[],Es,L)).
+
+
+
+%! shared_attributes(
+%!   +Terms:list(compound),
+%!   -SharedAttributes:list(compound),
+%!   -NewTerms:list(compound)
+%! ) is det.
+
+shared_attributes(Ts1, Shared, Ts2):&ndash;</li>
<li>maplist(term_to_attrs, Ts1, L1),</li>
<li>extract_shared(L1, Shared),</li>
<li>maplist(remove_shared_attributes(Shared), L1, L2),</li>
<li>maplist(term_change_attrs, Ts1, L2, Ts2).
+
+term_to_attrs(edge(<em>,</em>,A), A).
+term_to_attrs(vertex(_,A), A).
+
+extract_shared([], []):&ndash; !.
+extract_shared(Argss, Shared):&ndash;</li>
<li>ord_intersection(Argss, Shared).
+
+remove_shared_attributes(Shared, Args1, Args2):&ndash;</li>
<li>ord_subtract(Args1, Shared, Args2).
+
+term_change_attrs(edge(From,To,<em>), A, edge(From,To,A)).
+term_change_attrs(vertex(Id,</em>), A, vertex(Id,A)).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
new file mode 100644
index 0000000..30ea9c5
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_graph_comp.pl
@@ -0,0 +1,309 @@
+:&ndash; module(</li>
<li>gv_graph_comp,</li>
<li>[</li>
<li> gv_edge_statement//3, % +Indent:nonneg</li>
<li><pre><code>                   % +Directed:boolean
</code></pre></li>
<li><pre><code>                   % +Edge:compound
</code></pre></li>
<li> gv_generic_attributes_statement//3, % +Kind:oneof([edge,graph,node])</li>
<li><pre><code>                                 % +Indent:nonneg
</code></pre></li>
<li><pre><code>                                 % +CategoryAttributes:list(compound)
</code></pre></li>
<li> gv_id//1, % +Name:compound</li>
<li> gv_node_statement//2, % +Indent:nonneg</li>
<li><pre><code>                   % +Vertex:compound
</code></pre></li>
<li> gv_ranked_node_collection//2 % +Indent:nonneg</li>
<li><pre><code>                          % +Rank
</code></pre></li>
<li>]
+).
+
+/<em>* <module> GraphViz graph components
+
+<code>abnf
+attr_list = "[" [a_list] "]" [attr_list]
+a_list = ID "=" ID [","] [a_list]
+</code>
+
+@author Wouter Beek
+@see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
+@version 2015/07-2015/08, 2015/10-2016/01
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(gv/gv_attrs)).
+:&ndash; use_module(library(gv/gv_html)).
+:&ndash; use_module(library(error)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(ordsets)).
+
+
+
+
+
+%! gv_edge_statement(
+%!   +Indent:nonneg,
+%!   +Directed:boolean,
+%!   +Edge:compound
+%! )// is det.
+% A GraphViz statement describing an edge.
+%
+% @arg Indent The indentation level at which the edge statement is written.
+% @arg Directed Whether the graph is directed or not.
+% @arg GraphAttributes The attributes of the graph. Some of these attributes
+%      may be used in the edge statement (e.g., the colorscheme).
+% @arg Edge A compound term in the GIFormat, representing an edge.
+%
+% @tbd Instead of gv_node_id//1 we could have a gv_subgraph//1
+%      at the from and/or to location.
+% @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.
+
+gv_edge_statement(I, Dir, edge(From,To,Attrs)) &mdash;></li>
<li>tab(I),
+</li>
<li>gv_node_id(From), &ldquo; &rdquo;,</li>
<li>gv_edge_operator(Dir), &ldquo; &rdquo;,</li>
<li>gv_node_id(To), &ldquo; &rdquo;,
+</li>
<li>% We want <code>colorscheme/1</code> from the edges and</li>
<li>% <code>directionality/1</code> from the graph.</li>
<li>gv_attrs(edge, Attrs),</li>
<li>&ldquo;\n&rdquo;.
+
+%! gv_edge_operator(+Directed:boolean)// .
+% The binary edge operator between two vertices.
+% The operator that is used depends on whether the graph is directed or
+% undirected.
+%
+% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
+%      undirected (operator <code>--</code>).
+
+gv_edge_operator(Dir) &mdash;></li>
<li>{must_be(boolean, Dir)},</li>
<li>({Dir == false} &ndash;> &ldquo;&mdash;&rdquo; ; {Dir == true} &ndash;> &ldquo;&ndash;>&rdquo;).
+
+
+
+%! gv_generic_attributes_statement(
+%!   +Kind:oneof([edge,graph,node]),
+%!   +Indent:nonneg,
+%!   +CategoryAttrs
+%! )//
+% A GraphViz statement describing generic attributes for a category of items.
+%
+% @arg Kind The category of items for to the attributes apply.
+%      Possible values: <code>edge</code>, <code>graph</code>, and <code>node</code>.
+% @arg Indent An integer indicating the number of tabs.
+% @arg GraphAttributes A list of name-value pairs.
+% @arg CategoryAttributes A list of name-value pairs.
+%
+% <code>
+% attr_stmt = (graph / node / edge) attr_list
+%</code>
+
+gv_generic_attributes_statement(<em>, </em>, []) &mdash;> !, &ldquo;&rdquo;.
+gv_generic_attributes_statement(Kind, I, Attrs) &mdash;></li>
<li>tab(I),</li>
<li>gv_kind(Kind), &ldquo; &rdquo;,</li>
<li>gv_attrs(Kind, Attrs),</li>
<li>&ldquo;\n&rdquo;, !.
+
+
+
+%! gv_kind(+Kind:oneof([edge,graph,node]))// .
+
+gv_kind(Kind) &mdash;> {must_be(oneof([edge,graph,node]), Kind)}, atom(Kind).
+
+
+
+%! gv_node_statement(+Indent:nonneg, +Vertex:compound)// is det.
+% A GraphViz statement describing a vertex (GraphViz calls vertices &lsquo;nodes&rsquo;).
+
+gv_node_statement(I, vertex(Id,Attrs)) &mdash;></li>
<li>tab(I),</li>
<li>gv_node_id(Id),</li>
<li>gv_attrs(node, Attrs),</li>
<li>&ldquo;\n&rdquo;.
+
+
+
+%! gv_ranked_node_collection(+Indent:nonneg, Rank:pair)// is det.
+
+gv_ranked_node_collection(I, RankVTerm-VTerms) &mdash;></li>
<li>tab(I),</li>
<li>&ldquo;{\n&rdquo;,
+</li>
<li>% The rank attribute.</li>
<li>{NewI is I + 1},</li>
<li>tab(NewI),</li>
<li>gv_attr(subgraph, rank(same)),</li>
<li>&ldquo;\n&rdquo;,
+</li>
<li>% Vertice statements.</li>
<li>*(gv_node_statement(NewI), [RankVTerm|VTerms]),
+</li>
<li>% We want to indent the closing curly brace.</li>
<li>tab(I),</li>
<li>&ldquo;\n}&rdquo;.
+
+
+
+
+
+% HELPERS %
+
+%! gv_attrs(
+%!   +Kind:oneof([edge,graph,node]),
+%!   +Attributes:list(compound)
+%! )// is det.
+
+gv_attrs(Kind, L) &mdash;> &ldquo;[&rdquo;, *(gv_attr(Kind), L), &ldquo;]&rdquo;.
+
+
+%! gv_attr(+Context:oneof([edge,graph,node]), +Attribute:compound)// is det.
+% A single GraphViz attribute.
+% We assume that the attribute has already been validated.
+
+gv_attr(Context, Attr) &mdash;></li>
<li>{Attr =.. [N,V]},</li>
<li>gv_id(N), &ldquo;=&rdquo;, gv_attr_value(Context, N=V), &ldquo;;&rdquo;.
+
+
+
+%! gv_id(+Id:compound)// is det.
+% Parse a GraphViz identifier.
+% There are 4 variants:
+%   1. Any string of alphabetic (<code>[a-zA-Z'200-'377]</code>) characters,
+%      underscores (<code>_</code>) or digits (<code>[0-9]</code>), not beginning with a digit.
+%   2. A numeral <code>[-]?(.[0-9]+ | [0-9]+(.[0-9]*)? )</code>.
+%   3. Any double-quoted string (<code>"..."</code>) possibly containing
+%      escaped quotes (<code>\"</code>).
+%      In quoted strings in DOT, the only escaped character is
+%      double-quote (<code>"</code>). That is, in quoted strings, the dyad <code>\"</code>
+%      is converted to <code>"</code>. All other characters are left unchanged.
+%      In particular, <code>\\</code> remains <code>\\</code>.
+%      Layout engines may apply additional escape sequences.
+%      Represented by a Prolog term of the form <code>double_quoted_string(ATOM)</code>.
+%   4. An HTML string (<code>&lt;...&gt;</code>).
+%      Represented by a Prolog term of the form <code>html_like_label(COMPOUND)</code>.
+%
+% @tbd Add support for HTML-like labels:
+%      <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a>
+%      This requires an XML grammar!
+
+% HTML strings (assumed to be the same as HTML-like labels).
+gv_id(html_like_label(Content)) &mdash;> !,</li>
<li>gv_html_like_label(Content).
+% Double-quoted strings.
+% The quotes are already part of the given atom.
+gv_id(double_quoted_string(Atom)) &mdash;> !,</li>
<li>&ldquo;\&rdquo;&ldquo;, atom(Atom), &rdquo;\&ldquo;&rdquo;.
+% Numerals.
+gv_id(N) &mdash;></li>
<li>{number(N)}, !,</li>
<li>{number_codes(N, Cs)},</li>
<li>Cs.
+% Alpha-numeric strings.
+gv_id(Atom) &mdash;></li>
<li>{atom_codes(Atom, [H|T])},</li>
<li>gv_id_first(H),</li>
<li>gv_id_rest(T), !,</li>
<li>% Variant 1 identifiers should not be (case-variants of) a</li>
<li>% GraphViz keyword.</li>
<li>{+ gv_keyword([H|T])}.
+
+
+%! gv_id_first(+First:code)// is det.
+% Generates the first character of a GraphViz identifier.
+
+gv_id_first&copy;   &mdash;> alpha&copy;, !.
+gv_id_first(0'<em>) &mdash;> &ldquo;</em>&rdquo;.
+
+
+%! gv_id_rest(+NonFirst:code)// is det.
+% Generates a non-first character of a GraphViz identifier.
+
+gv_id_rest([H|T])   &mdash;> alphadigit(H), !, gv_id_rest(T).
+gv_id_rest([0'<em>|T]) &mdash;> &ldquo;</em>&rdquo;,           !, gv_id_rest(T).
+gv_id_rest([])      &mdash;> &ldquo;&rdquo;.
+
+
+
+%! gv_keyword(+Codes:list(code)) is semidet.
+% Succeeds if the given codes for a GraphViz reserved keyword.
+
+gv_keyword(Cs):&ndash;</li>
<li>% Obviously, the keywords do not occur on the difference list input.</li>
<li>% So we must use phrase/[2,3].</li>
<li>phrase(gv_keyword, Cs).
+
+
+%! gv_keyword// .
+% GraphViz has reserved keywords that cannot be used as identifiers.
+% GraphViz keywords are case-insensitive.
+
+gv_keyword &mdash;> &ldquo;digraph&rdquo;.
+gv_keyword &mdash;> &ldquo;edge&rdquo;.
+gv_keyword &mdash;> &ldquo;graph&rdquo;.
+gv_keyword &mdash;> &ldquo;node&rdquo;.
+gv_keyword &mdash;> &ldquo;strict&rdquo;.
+gv_keyword &mdash;> &ldquo;subgraph&rdquo;.
+
+
+
+%! gv_node_id(+NodeId:compound)// .
+% GraphViz node identifiers can be of the following two types:
+%   1. A GraphViz identifier, see gv_id//1.
+%   2. A GraphViz identifier plus a GraphViz port indicator, see gv_port//0.
+%
+% @tbd Add support for GraphViz port indicators
+%      inside GraphViz node identifiers.
+
+gv_node_id(Id) &mdash;> gv_id(Id), !.
+%gv_node_id(<em>) &mdash;> gv_id(</em>), gv_port.
+gv_node_id(Id) &mdash;> {type_error(gv_node_id, Id)}.
+
+
+
+%! gv_numeral(-Number)// is det.
+% <code>bnf
+% ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
+%</code>
+
+gv_numeral(N) &mdash;></li>
<li>(&ldquo;&ndash;&rdquo; &ndash;> {Sg = -1} ; {Sg = 1}),</li>
<li>(   &ldquo;.&rdquo;</li>
<li>&ndash;>  {I = 0}, +(digit, Ds), {pos_frac(Ds, Frac)}</li>
<li>;   +(digit, Ds1), {pos_sum(Ds1, I)},</li>
<li>   (&ldquo;.&rdquo; &ndash;> *(digit, Ds2), {pos_frac(Ds2, Frac)} ; {Frac = 0.0})</li>
<li>),</li>
<li>{N is Sg * (I + Frac)}.
+
+
+
+%! gv_port// is det.
+
+gv_port &mdash;> gv_port_location, (gv_port_angle ; &ldquo;&rdquo;).
+gv_port &mdash;> gv_port_angle, (gv_port_location ; &ldquo;&rdquo;).
+gv_port &mdash;> &ldquo;:&rdquo;, gv_compass_pt(<em>).
+
+gv_port_angle &mdash;> &ldquo;@&rdquo;, gv_id(</em>).
+
+gv_port_location &mdash;> &ldquo;:&rdquo;, gv_id(<em>).
+gv_port_location &mdash;> &ldquo;:[&rdquo;, gv_id(</em>), &ldquo;,&rdquo;, gv_id(<em>), &ldquo;]&rdquo;.
+
+
+
+%! gv_compass_pt(+Direction:oneof([&lsquo;</em>&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
+% <code>
+% compass_pt : ( n | ne | e | se | s | sw | w | nw | c | _ )
+%</code>
+
+gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
+gv_compass_pt&copy;   &mdash;> &ldquo;c&rdquo;.
+gv_compass_pt(e)   &mdash;> &ldquo;e&rdquo;.
+gv_compass_pt(n)   &mdash;> &ldquo;n&rdquo;.
+gv_compass_pt(ne)  &mdash;> &ldquo;ne&rdquo;.
+gv_compass_pt(nw)  &mdash;> &ldquo;nw&rdquo;.
+gv_compass_pt(s)   &mdash;> &ldquo;s&rdquo;.
+gv_compass_pt(se)  &mdash;> &ldquo;se&rdquo;.
+gv_compass_pt(sw)  &mdash;> &ldquo;sw&rdquo;.
+gv_compass_pt(w)   &mdash;> &ldquo;w&rdquo;.
diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
new file mode 100644
index 0000000..b5c1368
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_html.pl
@@ -0,0 +1,255 @@
+:&ndash; module(</li>
<li>gv_html,</li>
<li>[</li>
<li> gv_html_like_label//1 % +Content:compound</li>
<li>]
+).
+
+/** <module> GraphViz: HTML-like labels
+
+Grammar taken from the GraphViz Web site:
+
+```
+label :   text</li>
<li><pre><code> | table
</code></pre>

<p>+text :   textitem</p></li>
<li><pre><code>| text textitem
</code></pre>

<p>+textitem :   string</p></li>
<li><pre><code>    | &lt;BR/&gt;
</code></pre></li>
<li><pre><code>    | &lt;FONT&gt; text &lt;/FONT&gt;
</code></pre></li>
<li><pre><code>    | &lt;I&gt; text &lt;/I&gt;
</code></pre></li>
<li><pre><code>    | &lt;B&gt; text &lt;/B&gt;
</code></pre></li>
<li><pre><code>    | &lt;U&gt; text &lt;/U&gt;
</code></pre></li>
<li><pre><code>    | &lt;O&gt; text &lt;/O&gt;
</code></pre></li>
<li><pre><code>    | &lt;SUB&gt; text &lt;/SUB&gt;
</code></pre></li>
<li><pre><code>    | &lt;SUP&gt; text &lt;/SUP&gt;
</code></pre></li>
<li><pre><code>    | &lt;S&gt; text &lt;/S&gt;
</code></pre>

<p>+table : [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
+rows :   row</p></li>
<li><pre><code>| rows row
</code></pre></li>
<li><pre><code>| rows &lt;HR/&gt; row
</code></pre>

<p>+row: <TR> cells </TR>
+cells :   cell</p></li>
<li><pre><code> | cells cell
</code></pre></li>
<li><pre><code> | cells &lt;VR/&gt; cell
</code></pre>

<p>+cell:   <TD> label </TD></p></li>
<li>   | <TD> <IMG/> </TD>
+<code>``
+
+---
+
+@author Wouter Beek
+@see http://www.graphviz.org/content/node-shapes#html
+@version 2015/07, 2015/12
+*/
+
+:- use_module(library(dcg/dcg_ext)).
+:- use_module(library(html/html_dcg)).
+
+
+
+
+
+%! gv_html_like_label(+Content:compound)// is det.
+
+gv_html_like_label(Content) --&gt; "&lt;", label(Content), "&gt;".
+
+
+
+%! cell(+Contents:compound)// is det.
+% Supported attributes for</code>TD<code>:
+%   -</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT|TEXT&rdquo;<code>
+%   -</code>BALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;<code>
+%   -</code>BGCOLOR=&ldquo;color&rdquo;<code>
+%   -</code>BORDER=&ldquo;value&rdquo;<code>
+%   -</code>CELLPADDING=&ldquo;value&rdquo;<code>
+%   -</code>CELLSPACING=&ldquo;value&rdquo;<code>
+%   -</code>COLOR=&ldquo;color&rdquo;<code>
+%   -</code>COLSPAN=&ldquo;value&rdquo;<code>
+%   -</code>FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;<code>
+%   -</code>GRADIENTANGLE=&ldquo;value&rdquo;<code>
+%   -</code>HEIGHT=&ldquo;value&rdquo;<code>
+%   -</code>HREF=&ldquo;value&rdquo;<code>
+%   -</code>ID=&ldquo;value&rdquo;<code>
+%   -</code>PORT=&ldquo;portName&rdquo;<code>
+%   -</code>ROWSPAN=&ldquo;value&rdquo;<code>
+%   -</code>SIDES=&ldquo;value&rdquo;<code>
+%   -</code>STYLE=&ldquo;value&rdquo;<code>
+%   -</code>TARGET=&ldquo;value&rdquo;<code>
+%   -</code>TITLE=&ldquo;value&rdquo;<code>
+%   -</code>TOOLTIP=&ldquo;value&rdquo;<code>
+%   -</code>VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;<code>
+%   -</code>WIDTH=&ldquo;value&rdquo;<code>
+%
+% Supported attributes for</code>IMG<code>:
+%   -</code>SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;<code>
+%   -</code>SRC=&ldquo;value&rdquo;`
+
+cell(td(Contents)) &mdash;> !,</li>
<li>cell(td([],Contents)).
+cell(td(Attrs1,Image)) &mdash;></li>
<li>{(Image =.. [img,Attrs2] &ndash;> true ; Image == img &ndash;> Attrs2 = [])}, !,</li>
<li>html_element(td, Attrs1, html_element(img,Attrs2)).
+cell(td(Attrs,Contents)) &mdash;></li>
<li>html_element(td, Attrs, label(Contents)).
+
+
+
+%! cells(+Contents:list(compound))// is det.
+
+cells([H,vr|T]) &mdash;> !, cell(H), html_element(vr), cells(T).
+cells([H|T])    &mdash;> !, cell(H), cells(T).
+cells([])       &mdash;> &ldquo;&rdquo;.
+
+
+
+%! label(+Content:compound)// is det.
+% GraphViz HTML-like label.
+
+label(Content) &mdash;> table(Content), !.
+label(Content) &mdash;> text(Content).
+
+
+
+%! row(+Contents:compound)// is det.
+
+row(tr(Contents)) &mdash;> html_element(tr, [], cells(Contents)).
+
+
+
+%! rows(+Contents:list)// is det.
+
+rows([hr|T]) &mdash;> !, html_element(hr), rows(T).
+rows([H|T]) &mdash;> row(H), !, rows(T).
+rows([]) &mdash;> &ldquo;&rdquo;.
+
+
+
+%! table(+Contents:compound)// is det.
+% <code>
+% table : [ &lt;FONT&gt; ] &lt;TABLE&gt; rows &lt;/TABLE&gt; [ &lt;/FONT&gt; ]
+%</code>
+%
+% Supported attributes for <code>TABLE</code>:
+%   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT"</code>
+%   &ndash; <code>BGCOLOR="color"</code>
+%   &ndash; <code>BORDER="value"</code>
+%   &ndash; <code>CELLBORDER="value"</code>
+%   &ndash; <code>CELLPADDING="value"</code>
+%   &ndash; <code>CELLSPACING="value"</code>
+%   &ndash; <code>COLOR="color"</code>
+%   &ndash; <code>COLUMNS="value"</code>
+%   &ndash; <code>FIXEDSIZE="FALSE|TRUE"</code>
+%   &ndash; <code>GRADIENTANGLE="value"</code>
+%   &ndash; <code>HEIGHT="value"</code>
+%   &ndash; <code>HREF="value"</code>
+%   &ndash; <code>ID="value"</code>
+%   &ndash; <code>PORT="portName"</code>
+%   &ndash; <code>ROWS="value"</code>
+%   &ndash; <code>SIDES="value"</code>
+%   &ndash; <code>STYLE="value"</code>
+%   &ndash; <code>TARGET="value"</code>
+%   &ndash; <code>TITLE="value"</code>
+%   &ndash; <code>TOOLTIP="value"</code>
+%   &ndash; <code>VALIGN="MIDDLE|BOTTOM|TOP"</code>
+%   &ndash; <code>WIDTH="value"</code>
+%
+% Supported attributes for <code>FONT</code>:
+%  &ndash; <code>COLOR="color"</code>
+%    Sets the color of the font within the scope of <code>&lt;FONT&gt;...&lt;/FONT&gt;</code>,
+%     or the border color of the table or cell within the scope of
+%     <code>&lt;TABLE&gt;...&lt;/TABLE&gt;</code>, or <code>&lt;TD&gt;...&lt;/TD&gt;</code>.
+%    This color can be overridden by a <code>COLOR</code> attribute in descendents.
+%    By default, the font color is determined by the <code>fontcolor</code> attribute
+%     of the corresponding node, edge or graph, and the border color is
+%     determined by the color attribute of the corresponding node, edge or
+%     graph.
+%   &ndash; <code>FACE="fontname"</code>
+%   &ndash; <code>POINT-SIZE="value"</code>
+
+table(table(Contents)) &mdash;> !,</li>
<li>table(table([],Contents)).
+table(table(Attrs,Contents)) &mdash;> !,</li>
<li>html_element(table, Attrs, rows(Contents)).
+table(font(Table)) &mdash;> !,</li>
<li>table(font([],Table)).
+table(font(Attrs1,Table)) &mdash;></li>
<li>{(  Table =.. [table,Attrs2,Contents]</li>
<li>&ndash;>  true</li>
<li>;   Table =.. [table,Contents]</li>
<li>&ndash;>  Attrs2 = []</li>
<li>)},</li>
<li>html_element(font, Attrs1, table(table(Attrs2,Contents))).
+
+
+
+%! text(+Contents:list)// .
+% <code>
+% text :   textitem
+%        | text textitem
+%</code>
+
+text(Contents) &mdash;> {is_list(Contents)}, !, &lsquo;+&rsquo;(textitem, Contents).
+text(Content)  &mdash;> text([Content]).
+
+
+
+%! textitem(+Content:compound)// .
+% <code>
+% textitem :   string
+%            | &lt;BR/&gt;
+%            | &lt;FONT&gt; text &lt;/FONT&gt;
+%            | &lt;I&gt; text &lt;/I&gt;
+%            | &lt;B&gt; text &lt;/B&gt;
+%            | &lt;U&gt; text &lt;/U&gt;
+%            | &lt;O&gt; text &lt;/O&gt;
+%            | &lt;SUB&gt; text &lt;/SUB&gt;
+%            | &lt;SUP&gt; text &lt;/SUP&gt;
+%            | &lt;S&gt; text &lt;/S&gt;
+%</code>
+%
+% Supported attributes for BR:
+%   * <code>ALIGN="CENTER|LEFT|RIGHT"</code>
+%
+% Supported attributes for FONT:
+%   * COLOR=&ldquo;color&rdquo;
+%   * FACE=&ldquo;fontname&rdquo;
+%   * POINT-SIZE=&ldquo;value&rdquo;
+
+textitem(br(Attrs)) &mdash;> !,</li>
<li>html_element(br, Attrs).
+% Compound term: parser.
+textitem(Compound) &mdash;></li>
<li>{var(Compound)}, !,</li>
<li>html_element(Name, _, text(Content)),</li>
<li>{</li>
<li> supported_html_element(Name),</li>
<li> Compound =.. [Name,Content]</li>
<li>}.
+% Compound term: generator.
+textitem(Compound) &mdash;></li>
<li>{</li>
<li> Compound =.. [Name,Content], !,</li>
<li> supported_html_element(Name)</li>
<li>},</li>
<li>html_element(Name, _, text(Content)).
+textitem(String) &mdash;></li>
<li>html_string(String).
+
+
+
+
+
+% HELPERS %
+
+%! supported_html_element(+Name:atom) is semidet.
+%! supported_html_element(-Name:atom) is multi.
+
+supported_html_element(b).
+supported_html_element(font).
+supported_html_element(i).
+supported_html_element(o).
+supported_html_element(s).
+supported_html_element(sub).
+supported_html_element(sup).
+supported_html_element(u).
diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
new file mode 100644
index 0000000..4382aa6
&mdash;&ndash; /dev/null
+++ b/prolog/tree/tree_viz.pl
@@ -0,0 +1,65 @@
+:&ndash; module(</li>
<li>tree_viz,</li>
<li>[</li>
<li> tree_export_graph/2, % +Tree, ExportG</li>
<li> tree_export_graph/3, % +Tree, ExportG, +Opts</li>
<li> tree_viz/2,          % +Tree, ?File</li>
<li> tree_viz/3           % +Tree, ?File, +Opts</li>
<li>]
+).
+
+/<em>* <module> Tree visualization
+
+Export trees to GraphViz.
+
+@author Wouter Beek
+@version 2016/01-2016/02
+</em>/
+
+:&ndash; use_module(library(graph/build_export_graph)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(ordsets)).
+:&ndash; use_module(library(tree/l_tree)).
+:&ndash; use_module(library(tree/s_tree)).
+
+:&ndash; predicate_options(tree_export_graph/3, 3, [</li>
<li>  pass_to(build_export_graph/4, 4)</li>
<li>]).
+:&ndash; predicate_options(tree_viz/3, 3, [</li>
<li>  pass_to(graph_viz/3, 3),</li>
<li>  pass_to(tree_to_graph/3, 3)</li>
<li>]).
+
+
+
+
+
+%! tree_export_graph(+Tree, -ExportG) is det.
+%! tree_export_graph(+Tree, -ExportG, +Opts) is det.
+% Opts are passed to build_export_graph/4.
+
+tree_export_graph(Tree, ExportG) :&ndash;</li>
<li>tree_export_graph(Tree, ExportG, []).
+
+tree_export_graph(Tree, ExportG, Opts) :&ndash;</li>
<li>(   is_s_tree(Tree)</li>
<li>&ndash;>  tree_to_graph(Tree, G)</li>
<li>;   is_l_tree(Tree)</li>
<li>&ndash;>  l_tree_to_graph(Tree, G)</li>
<li>),</li>
<li>build_export_graph(G, ExportG, Opts).
+
+
+
+%! tree_viz(+Tree, ?File) is det.
+%! tree_viz(+Tree, ?File, +Opts) is det.
+% Stores the given tree term into a GraphViz file.
+%
+% Options are passed to export_graph_to_gv_file/3, tree_to_graph/3.
+
+tree_viz(Tree, File) :&ndash;</li>
<li>tree_viz(Tree, File, []).
+
+tree_viz(Tree, File, Opts) :&ndash;</li>
<li>tree_export_graph(Tree, ExportG, Opts),</li>
<li>graph_viz(ExportG, File, Opts).
diff &mdash;git a/test/gv_attrs.log b/test/gv_attrs.log
new file mode 100644
index 0000000..a9c6010
&mdash;&ndash; /dev/null
+++ b/test/gv_attrs.log
@@ -0,0 +1,169 @@
+assert(gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;)).
+assert(gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;)).
+assert(gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)*sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;)).
+assert(gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headtarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(inputscale,[graph],[double],<em>,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeltarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;)).
+assert(gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;nslimit nslimit1&rsquo;,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;)).
+assert(gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;)).
+assert(gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailtarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;)).
+assert(gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;)).
+assert(gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;)).
diff &mdash;git a/test/test.pl b/test/test.pl
new file mode 100644
index 0000000..83dc023
&mdash;&ndash; /dev/null
+++ b/test/test.pl
@@ -0,0 +1,15 @@
+%/fca
+:&ndash; use_module(library(fca/fca_viz)).
+%/graph
+:&ndash; use_module(library(graph/build_export_graph)).
+%/gv
+:&ndash; use_module(library(gv/gv_attrs)).
+:&ndash; use_module(library(gv/gv_attr_type)).
+:&ndash; use_module(library(gv/gv_color)).
+:&ndash; use_module(library(gv/gv_dom)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(gv/gv_graph)).
+:&ndash; use_module(library(gv/gv_graph_comp)).
+:&ndash; use_module(library(gv/gv_html)).
+%/tree
+:&ndash; use_module(library(tree/tree_viz)).</li>
</ul>


<p>```</p>

<h2 id="25"> 25: 正在比较变动前 6dc1cf5 和变动后 76ea35d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index bd24270..b25c15b 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1,3 +1 @@
 <em>~
&ndash;</em>#
&ndash;*.db
diff &mdash;git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..a63cbff
&mdash;&ndash; /dev/null
+++ b/.gitmodules
@@ -0,0 +1,6 @@
+[submodule &ldquo;Prolog-Library-Collection&rdquo;]
+   path = Prolog-Library-Collection
+   url = <a href="https://github.com/wouterbeek/Prolog-Library-Collection.git">https://github.com/wouterbeek/Prolog-Library-Collection.git</a>
+[submodule &ldquo;plHtml&rdquo;]
+   path = plHtml
+   url = <a href="https://github.com/wouterbeek/plHtml.git">https://github.com/wouterbeek/plHtml.git</a>
diff &mdash;git a/LICENSE.txt b/LICENSE.txt
deleted file mode 100644
index c7b7798..0000000
&mdash;&ndash; a/LICENSE.txt
+++ /dev/null
@@ -1,21 +0,0 @@</p>

<h2>-The MIT License (MIT)</h2>

<h2>-Copyright &copy; 2015 Wouter Beek</h2>

<p>-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the &ldquo;Software&rdquo;), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is</p>

<h2>-furnished to do so, subject to the following conditions:</h2>

<p>-The above copyright notice and this permission notice shall be included in</p>

<h2>-all copies or substantial portions of the Software.</h2>

<p>-THE SOFTWARE IS PROVIDED &ldquo;AS IS&rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
new file mode 160000
index 0000000..5b34b01
&mdash;&ndash; /dev/null
+++ b/Prolog-Library-Collection
@@ -0,0 +1 @@
+Subproject commit 5b34b01ab0cc82a56e6fd90fc26e75da22f5a0fe
diff &mdash;git a/README.md b/README.md
deleted file mode 100644
index 23a45db..0000000
&mdash;&ndash; a/README.md
+++ /dev/null
@@ -1,151 +0,0 @@
-plGraphViz</p>

<h2>&ndash;==========</h2>

<p>-This library allows you to easily export graphs represented as Prolog terms
-using <a href="http://www.graphviz.org/">GraphViz</a>, an advanced graph drawing library.</p>

<h2>-The Prolog terms have the following form:</h2>

<p>&ndash;~~~prolog
-graph(Vertices, Edges, GraphAttrs)</p>

<h2>&ndash;~~~</h2>

<h2>&ndash;<code>Vertices</code> and <code>Edges</code> are lists of compound terms of the following form:</h2>

<p>&ndash;~~~prolog
-vertex(Id, VertexAttrs)
-edge(FromId, ToId, EdgeAttrs)</p>

<h2>&ndash;~~~</h2>

<p>&ndash;<code>Id</code> identifies a vertex and may or may not occur in any of the edges
&ndash;(i.e., unconnected vertices are allowed).
&ndash;<code>FromId</code> and <code>ToId</code> may occur in the list of vertices,</p>

<h2>-in order to draw an edge between vertices with set attributes.</h2>

<p>-Attributes have the form <code>Name=Value</code>.
&ndash;<code>GraphAttrs</code> are attributes of the graph.
&ndash;<code>VertexAttrs</code> are attributes of the vertex.</p>

<h2>&ndash;<code>EdgeAttrs</code> are attributes of the edge.</h2>

<p>-Attribute values are given as Prolog terms as well,
-and are type-checked before exporting.
-Many of the GraphViz attributes are supported.
-New ones are added on an as-needed bases
&ndash;(open an issue on Github if you want to see a specific feature added!).
-HTML-like labels are supported, allowing complex tables to be shown</p>

<h2>-inside vertices.</h2>

<hr />

<p>&ndash;</p>

<h2>&ndash;### Installation</h2>

<p>&ndash;~~~shell
&ndash;$ git clone <a href="https://github.com/wouterbeek/plGraphViz.git">https://github.com/wouterbeek/plGraphViz.git</a>
&ndash;$ cd plGraphViz
&ndash;$ git submodule update &mdash;init</p>

<h2>&ndash;~~~</h2>

<h2>&ndash;### Example</h2>

<p>&ndash;~~~prolog
&ndash;$ swipl run.pl
&ndash;?&ndash; export_graph_to_gv_file(
&ndash;     graph([vertex(1,[]),vertex(2,[])],[edge(1,2,[])],[]),
&ndash;     File,
&ndash;     [method(sfdp),output(png)]
&ndash;   ).
&ndash;   File = &lsquo;PATH/plGraphViz/data/tmp.png&rsquo;</p>

<h2>&ndash;~~~</h2>

<h2>&ndash;<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example1.png" title="Example graph." alt="" /></h2>

<p>-The graphic can be saved to a different file by instantiating</p>

<h2>-the <code>File</code> argument.</h2>

<hr />

<p>&ndash;</p>

<h2>&ndash;### &lsquo;Method&rsquo; option</h2>

<p>-Option <code>method(+atom)</code> sets the drawing method that is used by GraphViz
&ndash; to place the vertices and edges.</p>

<h2>-The following values are supported.</h2>

<p>&ndash;| <strong>Value</strong>       | <strong>Description</strong>         |
&ndash;| <code>circo</code>         | Circular layout.        |
&ndash;| <code>dot</code> (default) | Directed graph.         |
&ndash;| <code>fdp</code>           | Undirected graph.       |
&ndash;| <code>neato</code>         | Undirected graph.       |
&ndash;| <code>osage</code>         | Tree map.               |
&ndash;| <code>sfdp</code>          | Large undirected graph. |</p>

<h2>&ndash;| <code>twopi</code>         | Radical layouts.        |</h2>

<hr />

<p>&ndash;</p>

<h2>&ndash;### &lsquo;Output&rsquo; option</h2>

<p>-Option <code>output(+atom)</code> sets the type of file the graph is written to.</p>

<h2>-The following values are supported.</h2>

<table>
<thead>
<tr>
<th>&ndash;</th>
<th align="center"> <strong>Value</strong>             </th>
<th align="left"> <strong>Description</strong>                       </th>
</tr>
</thead>
<tbody>
<tr>
<td>&ndash;</td>
<td align="center"> <code>bmp</code>                 </td>
<td align="left"> Windows Bitmap Format                 |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>canon</code>               </td>
<td align="left">                                       |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>dot</code>                 </td>
<td align="left">                                       |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>gv</code>,  <code>xdot</code>, <code>xdot1.2</code>, <code>xdot1.4</code> </td>
<td align="left"> DOT                     |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>cgimage</code>             </td>
<td align="left"> CGImage bitmap format                 |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>cmap</code>                </td>
<td align="left"> Client-side imagemap (deprecated)     |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>eps</code>                 </td>
<td align="left"> Encapsulated PostScript               |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>exr</code>                 </td>
<td align="left"> OpenEXR                               |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>fig</code>                 </td>
<td align="left">                                       |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>gd</code>, <code>gd2</code>           </td>
<td align="left"> GD/GD2 formats                        |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>gif</code>                 </td>
<td align="left">                                       |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>gtk</code>                 </td>
<td align="left"> GTK canvas                            |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>ico</code>                 </td>
<td align="left"> Icon Image File Format                |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>imap</code>                </td>
<td align="left">                                       |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>cmapx</code>               </td>
<td align="left"> Server-side and client-side imagemaps |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>imap_np</code>, <code>cmapx_np</code> </td>
<td align="left"> Server-side and client-side imagemaps |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>ismap</code>               </td>
<td align="left"> Server-side imagemap (deprecated)     |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>jp2</code>                 </td>
<td align="left"> JPEG 2000                             |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>jpg</code>, <code>jpeg</code>, <code>jpe</code>  </td>
<td align="left"> JPEG                                  |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>pct</code>, <code>pict</code>         </td>
<td align="left"> PICT                                  |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>pdf</code> (default)       </td>
<td align="left"> Portable Document Format (PDF)        |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>pic</code>                 </td>
<td align="left"> Kernighan&rsquo;s PIC graphics language     |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>plain</code>, <code>plain-ext</code>  </td>
<td align="left"> Simple text format                    |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>png</code>                 </td>
<td align="left"> Portable Network Graphics format      |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>pov</code>                 </td>
<td align="left"> POV-Ray markup language (prototype)   |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>ps</code>                  </td>
<td align="left"> PostScript                            |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>ps2</code>                 </td>
<td align="left"> PostScript for PDF                    |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>psd</code>                 </td>
<td align="left"> PSD                                   |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>sgi</code>                 </td>
<td align="left"> SGI                                   |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>svg</code>, <code>svgz</code>         </td>
<td align="left"> Scalable Vector Graphics              |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>tga</code>                 </td>
<td align="left"> Truevision TGA                        |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>tif</code>, <code>tiff</code>         </td>
<td align="left"> TIFF (Tag Image File Format)          |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>tk</code>                  </td>
<td align="left"> TK graphics                           |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>vml</code>, <code>vmlz</code>         </td>
<td align="left"> Vector Markup Language (VML)          |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>vrml</code>                </td>
<td align="left"> VRML                                  |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>wbmp</code>                </td>
<td align="left"> Wireless BitMap format                |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>webp</code>                </td>
<td align="left"> Image format for the Web              |</td>
</tr>
<tr>
<td>&ndash;</td>
<td align="center"> <code>xlib</code>, <code>x11</code>         </td>
<td align="left"> Xlib canvas                           |</td>
</tr>
</tbody>
</table>


<h2>&ndash;</h2>

<p>&ndash;</p>

<h2>&ndash;### HTML-like labels</h2>

<h2>-Example of using HTML-like labels:</h2>

<p>&ndash;~~~prolog
-export_graph_to_gv_file(
&ndash;  graph(
&ndash;    [vertex(1,[]),vertex(2,[label=html(table([tr([td(a),td(b)]),tr([td&copy;,td(d)])]))])],
&ndash;    [edge(1,2,[label=&lsquo;From 1 to 2.&rsquo;])],
&ndash;    []
&ndash;  ),
&ndash;  File,
&ndash;  []
&ndash;).</p>

<h2>&ndash;~~~</h2>

<h2>&ndash;<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example2.png" title="Example graph with HTML-like labels." alt="" /></h2>

<hr />

<p>&ndash;
-Developed during 2013-2014 by <a href="http://www.wouterbeek.com">Wouter Beek</a>.
diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
deleted file mode 100644
index bcc7654..0000000
&mdash;&ndash; a/data/gv_attrs_scrape.pl
+++ /dev/null
@@ -1,119 +0,0 @@
&ndash;:&ndash; module(
&ndash;  gv_attrs_scrape,
&ndash;  [
&ndash;    gv_attrs_scrape/1 % +File
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz: Scrape attributes</h2>

<h2>-Writes compound terms of the following form to file:</h2>

<p>&ndash;```prolog
-gv_attr(
&ndash;  ?Name,
&ndash;  ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
&ndash;  ?Types:list(atom),
&ndash;  ?Default,
&ndash;  ?Minimum,
&ndash;  ?Notes
&ndash;) is nondet.</p>

<h2>&ndash;```</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2015/10, 2016/07</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(debug)).
&ndash;:&ndash; use_module(library(gv/gv_attr_type)).
&ndash;:&ndash; use_module(library(http/http_download)).
&ndash;:&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(os/io)).
&ndash;:&ndash; use_module(library(pl_term)).
&ndash;:&ndash; use_module(library(print_ext)).
&ndash;:&ndash; use_module(library(xpath)).
&ndash;:&ndash; use_module(library(xpath/xpath_table)).</p>

<h2>&ndash;:&ndash; use_module(library(yall)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_attrs_scrape(+File) is det.</h2>

<p>-gv_attrs_scrape(File):&ndash;
&ndash;  debug(gv, &ldquo;Updating the GraphViz attributes table.&rdquo;, []),</p>

<h2>&ndash;  call_to_stream(File, [In,Meta,Meta]>>gv_attrs_download(In)).</h2>

<p>&ndash;
-gv_attrs_download(Write):&ndash;
&ndash;  gv_attrs_iri(Iri),
&ndash;  html_download(Iri, Dom),
&ndash;  xpath_chk(Dom, //table(@align=lower_case(center)), TableDom),
&ndash;  xpath_table(TableDom, _, Rows),</p>

<h2>&ndash;  maplist(write_attr_row(Write), Rows).</h2>

<p>&ndash;
-write_attr_row(Write, [Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
&ndash;  atom_phrase(translate_usedby(UsedBy2), UsedBy1),
&ndash;  once(atom_phrase(translate_type(Types2), Types1)),
&ndash;  sort(UsedBy2, UsedBy3),
&ndash;  translate_default(Default1, Default2),
&ndash;  with_output_to(
&ndash;    Write,
&ndash;    write_fact(gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes))</p>

<h2>&ndash;  ).</h2>

<h2>-gv_attrs_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

<h2>&ndash;%! translate_default(+Default1, -Default2) is det.</h2>

<p>&ndash;% The empty string is represented by the empty atom.
-translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
&ndash;% The absence of a default value is represented by an uninstantiated variable.
-translate_default(&lsquo;<none>&rsquo;, _):&ndash; !.</p>

<h2>-translate_default(Default, Default).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! translate_type(-Types:list(atom))// is det.</h2>

<p>-translate_type([H|T]) &mdash;>
&ndash;  gv_attr_type(H),
&ndash;  whites,
&ndash;  translate_type(T).
-translate_type([H]) &mdash;>
&ndash;  gv_attr_type(H).</p>

<h2>-translate_type([]) &mdash;> &ldquo;&rdquo;.</h2>

<h2>&ndash;</h2>

<p>&ndash;%! translated_usedby(
&ndash;%!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))</p>

<h2>&ndash;%! )// is det.</h2>

<p>-translate_usedby([cluster|T]) &mdash;>
&ndash;  &ldquo;C&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([edge|T]) &mdash;>
&ndash;  &ldquo;E&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([graph|T]) &mdash;>
&ndash;  &ldquo;G&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([node|T]) &mdash;>
&ndash;  &ldquo;N&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([subgraph|T]) &mdash;>
&ndash;  &ldquo;S&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([]) &mdash;>
&ndash;  &ldquo;&rdquo;.
diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
deleted file mode 100644
index 102a02a..0000000
&mdash;&ndash; a/data/gv_color_scrape.pl
+++ /dev/null
@@ -1,52 +0,0 @@
&ndash;:&ndash; module(
&ndash;  gv_color_scrape,
&ndash;  [
&ndash;    gv_color_scrape/1 % +File
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz: Scrape colors</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2015/10, 2016/07</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(debug)).
&ndash;:&ndash; use_module(library(http/http_download)).
&ndash;:&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(os/io)).
&ndash;:&ndash; use_module(library(pl_term)).
&ndash;:&ndash; use_module(library(print_ext)).
&ndash;:&ndash; use_module(library(xpath)).
&ndash;:&ndash; use_module(library(xpath/xpath_table)).</p>

<h2>&ndash;:&ndash; use_module(library(yall)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_color_scrape(+File) is det.</h2>

<p>-gv_color_scrape(File):&ndash;
&ndash;  debug(io, &ldquo;Updating the GraphViz color table.&rdquo;, []),</p>

<h2>&ndash;  call_to_stream(File, [In,Meta,Meta]>>gv_color_download(In)).</h2>

<p>&ndash;
-gv_color_download(Write):&ndash;
&ndash;  gv_color_iri(Iri),
&ndash;  html_download(Iri, Dom),
&ndash;  xpath_chk(Dom, //table(1), TableDom1),
&ndash;  xpath_chk(Dom, //table(2), TableDom2),</p>

<h2>&ndash;  maplist(write_color_table(Write), [x11,svg], [TableDom1,TableDom2]).</h2>

<p>&ndash;
-write_color_table(Write, Colorscheme, TableDom):&ndash;
&ndash;  xpath_table(TableDom, _, Rows),
&ndash;  append(Rows, Cells),
&ndash;  forall(
&ndash;    member(Cell, Cells),
&ndash;    with_output_to(Write, write_fact(gv_color(Colorscheme, Cell)))</p>

<h2>&ndash;  ).</h2>

<p>-gv_color_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).
diff &mdash;git a/example1.png b/example1.png
deleted file mode 100644
index 31e7ba6..0000000
Binary files a/example1.png and /dev/null differ
diff &mdash;git a/example2.png b/example2.png
deleted file mode 100644
index 6e44b16..0000000
Binary files a/example2.png and /dev/null differ
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
new file mode 100644
index 0000000..7a64c82
&mdash;&ndash; /dev/null
+++ b/gv_attr_type.pl
@@ -0,0 +1,417 @@
+:&ndash; module(
+  gv_attr_type,
+  [
+    gv_attr_type/1, % ?Type:atom
+    addDouble//1, % +Double:float
+    addPoint//1, % +Point:compound
+    arrowType//1, % +ArrowType:atom
+    bool//1, % +Boolean:boolean
+    clusterMode//1, % +ClusterMode:atom
+    dirType//1, % +DirectionType:oneof([back,both,forward,none])
+    double//1, % +Double:float
+    doubleList//1, % +Doubles:list(float)
+    escString//1,
+    %layerList//1,
+    %layerRange//1,
+    lblString//1,
+    int//1, % +Integer:integer
+    outputMode//1, % +OutputMode:atom
+    %packMode//1,
+    pagedir//1, % +Pagedir:atom
+    point//1, % +Point:compound
+    pointList//1, % +Points:list(compound)
+    %portPos//1,
+    quadType//1, % +QuadType:atom
+    rankType//1, % +RankType:atom
+    rankdir//1, % +RankDirection:atom
+    rect//1, % +Rectangle:compound
+    shape//1,
+    smoothType//1, % +SmoothType:atom
+    %splineType//1,
+    %startType//1,
+    string//1, % ?Content:atom
+    style//2 % +Context:oneof([cluster,edge,node])
+             % +Style:atom
+    %viewPort//1
+  ]
+).
+:&ndash; reexport(
+  plGraphViz(gv_color),
+  [
+    color//1, % +Color:compound
+    colorList//1 % +ColorList:list(compound)
+  ]
+).
+
+/<strong> <module> GraphViz attribute types
+
+@author Wouter Beek
+@version 2014/06
+<em>/
+
+:&ndash; use_module(dcg(dcg_abnf)).
+:&ndash; use_module(dcg(dcg_cardinal)).
+:&ndash; use_module(dcg(dcg_content)).
+
+:&ndash; use_module(plGraphViz(gv_html)).
+
+
+
+%! gv_attr_type(?Type:atom) is nondet.
+
+gv_attr_type(addDouble).
+gv_attr_type(addPoint).
+gv_attr_type(arrowType).
+gv_attr_type(bool).
+gv_attr_type(color).
+gv_attr_type(colorList).
+gv_attr_type(clusterMode).
+gv_attr_type(dirType).
+gv_attr_type(double).
+gv_attr_type(doubleList).
+gv_attr_type(escString).
+gv_attr_type(layerList).
+gv_attr_type(layerRange).
+gv_attr_type(lblString).
+gv_attr_type(int).
+gv_attr_type(outputMode).
+gv_attr_type(packMode).
+gv_attr_type(pagedir).
+gv_attr_type(point).
+gv_attr_type(pointList).
+gv_attr_type(portPos).
+gv_attr_type(quadType).
+gv_attr_type(rankType).
+gv_attr_type(rankdir).
+gv_attr_type(rect).
+gv_attr_type(shape).
+gv_attr_type(smoothType).
+gv_attr_type(splineType).
+gv_attr_type(startType).
+gv_attr_type(string).
+gv_attr_type(style).
+gv_attr_type(viewPort).
+
+
+%! addDouble(+Float:float)// .
+% An </em>addDouble<em> is represented by a Prolog float.
+
+addDouble(Float) &mdash;>
+  &lsquo;?&rsquo;(<code>+</code>),
+  double(Float).
+
+
+%! addPoint(+Point:compound)// .
+% An </em>addPoint<em> is represented by a compound of the following form:
+% <code>point(X:float,Y:float,InputOnly:boolean)</code>.
+
+addPoint(Point) &mdash;>
+  &lsquo;?&rsquo;(<code>+</code>),
+  point(Point).
+
+
+%! arrowType(+ArrowType:atom)// .
+
+arrowType(V) &mdash;>
+  {arrowType(V)},
+  atom(V).
+
+arrowType(V):&ndash;
+  primitive_shape(V).
+arrowType(V):&ndash;
+  derived(V).
+arrowType(V):&ndash;
+  backwards_compatible(V).
+
+primitive_shape(box).
+primitive_shape(crow).
+primitive_shape(circle).
+primitive_shape(diamond).
+primitive_shape(dot).
+primitive_shape(inv).
+primitive_shape(none).
+primitive_shape(normal).
+primitive_shape(tee).
+primitive_shape(vee).
+
+derived(odot).
+derived(invdot).
+derived(invodot).
+derived(obox).
+derived(odiamond).
+
+backwards_compatible(ediamond).
+backwards_compatible(empty).
+backwards_compatible(halfopen).
+backwards_compatible(invempty).
+backwards_compatible(open).
+
+
+bool(false) &mdash;> <code>false</code>.
+bool(false) &mdash;> <code>no</code>.
+bool(true) &mdash;> <code>true</code>.
+bool(true) &mdash;> <code>yes</code>.
+
+
+%! clusterMode(+ClusterMode:atom)// .
+
+clusterMode(V) &mdash;>
+  {clusterMode(V)},
+  atom(V).
+
+clusterMode(global).
+clusterMode(local).
+clusterMode(none).
+
+
+%! dirType(+DirectionType:oneof([back,both,forward,none]))// .
+
+dirType(DirType) &mdash;>
+  {dirType(DirType)},
+  atom(DirType).
+
+dirType(back).
+dirType(both).
+dirType(forward).
+dirType(none).
+
+
+double(Double1) &mdash;>
+  % float//1 will check for float type.
+  {Double2 is Double1 * 1.0},
+  float(Double2).
+
+
+doubleList([H|T]) &mdash;>
+  double(H),
+  &lsquo;</em>&rsquo;(doubleList1, T).
+
+doubleList1(Float) &mdash;>
+  <code>:</code>,
+  double(Float).
+
+
+%! escString(+String:atom)// .
+% @tbd Support for context-dependent replacements.
+
+escString(String) &mdash;>
+  atom(String).
+
+
+% @tbd layerList
+
+
+% @tbd layerRange
+
+
+lblString(V) &mdash;>
+  escString(V).
+lblString(V) &mdash;>
+  gv_html_like_label(V).
+
+
+int(V) &mdash;>
+  integer(V).
+
+
+outputMode(V) &mdash;>
+  {outputMode(V)},
+  atom(V).
+
+outputMode(breadthfirst).
+outputMode(edgesfirst).
+outputMode(nodesfirst).
+
+
+% @tbd packMode
+
+
+pagedir(V) &mdash;>
+  {pagedir(V)},
+  atom(V).
+
+pagedir(&lsquo;BL&rsquo;).
+pagedir(&lsquo;BR&rsquo;).
+pagedir(&lsquo;LB&rsquo;).
+pagedir(&lsquo;LT&rsquo;).
+pagedir(&lsquo;RB&rsquo;).
+pagedir(&lsquo;RT&rsquo;).
+pagedir(&lsquo;TL&rsquo;).
+pagedir(&lsquo;TR&rsquo;).
+
+
+%! point(+Point:compound)// .
+% A <em>point</em> is represented by a compound of the following form:
+% <code>point(X:float,Y:float,InputOnly:boolean)</code>.
+
+point(point(X,Y,InputOnly)) &mdash;>
+  float(X),
+  <code>,</code>,
+  float(Y),
+  input_only(InputOnly).
+
+input_only(false) &mdash;> [].
+input_only(true) &mdash;> <code>!</code>.
+
+
+pointList(Points) &mdash;>
+  &lsquo;*&rsquo;(point, Points).
+
+
+% @tbd portPos
+
+
+quadType(V) &mdash;>
+  {quadType(V)},
+  atom(V).
+
+quadType(fast).
+quadType(none).
+quadType(normal).
+
+
+rankType(V) &mdash;>
+  {rankType(V)},
+  atom(V).
+
+rankType(max).
+rankType(min).
+rankType(same).
+rankType(sink).
+rankType(source).
+
+
+rankdir(V) &mdash;>
+  {rankdir(V)},
+  atom(V).
+
+rankdir(&lsquo;BT&rsquo;).
+rankdir(&lsquo;LR&rsquo;).
+rankdir(&lsquo;RL&rsquo;).
+rankdir(&lsquo;TB&rsquo;).
+
+
+rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
+  float(LowerLeftX), <code>,</code>,
+  float(LowerLeftY), <code>,</code>,
+  float(UpperRightX), <code>,</code>,
+  float(UpperRightY).
+
+
+shape(V) &mdash;>
+  {polygon_based_shape(V)},
+  atom(V).
+
+polygon_based_shape(assembly).
+polygon_based_shape(box).
+polygon_based_shape(box3d).
+polygon_based_shape(cds).
+polygon_based_shape(circle).
+polygon_based_shape(component).
+polygon_based_shape(diamond).
+polygon_based_shape(doublecircle).
+polygon_based_shape(doubleoctagon).
+polygon_based_shape(egg).
+polygon_based_shape(ellipse).
+polygon_based_shape(fivepoverhang).
+polygon_based_shape(folder).
+polygon_based_shape(hexagon).
+polygon_based_shape(house).
+polygon_based_shape(insulator).
+polygon_based_shape(invhouse).
+polygon_based_shape(invtrapezium).
+polygon_based_shape(invtriangle).
+polygon_based_shape(larrow).
+polygon_based_shape(lpromoter).
+polygon_based_shape(&lsquo;Mcircle&rsquo;).
+polygon_based_shape(&lsquo;Mdiamond&rsquo;).
+polygon_based_shape(&lsquo;Msquare&rsquo;).
+polygon_based_shape(none).
+polygon_based_shape(note).
+polygon_based_shape(noverhang).
+polygon_based_shape(octagon).
+polygon_based_shape(oval).
+polygon_based_shape(parallelogram).
+polygon_based_shape(pentagon).
+polygon_based_shape(plaintext).
+polygon_based_shape(point).
+polygon_based_shape(polygon).
+polygon_based_shape(primersite).
+polygon_based_shape(promoter).
+polygon_based_shape(proteasesite).
+polygon_based_shape(proteinstab).
+polygon_based_shape(rarrow).
+polygon_based_shape(rect).
+polygon_based_shape(rectangle).
+polygon_based_shape(restrictionsite).
+polygon_based_shape(ribosite).
+polygon_based_shape(rnastab).
+polygon_based_shape(rpromoter).
+polygon_based_shape(septagon).
+polygon_based_shape(signature).
+polygon_based_shape(square).
+polygon_based_shape(tab).
+polygon_based_shape(terminator).
+polygon_based_shape(threepoverhang).
+polygon_based_shape(trapezium).
+polygon_based_shape(triangle).
+polygon_based_shape(tripleoctagon).
+polygon_based_shape(utr).
+
+
+smoothType(V) &mdash;>
+  {smoothType(V)},
+  atom(V).
+
+smoothType(avg_dist).
+smoothType(graph_dist).
+smoothType(none).
+smoothType(power_dist).
+smoothType(rng).
+smoothType(spring).
+smoothType(triangle).
+
+
+% @tbd splineType
+
+
+% @tbd startType
+
+
+%! string(?Content:atom)// .
+% A GraphViz string.
+
+string(Content) &mdash;>
+  atom(Content).
+
+
+%! style(?Context:oneof([cluster,edge,node]), ?Style:atom) is nondet.
+
+style(Context, Style) &mdash;>
+  {style(Context, Style)},
+  atom(Style).
+
+style(cluster, bold).
+style(cluster, dashed).
+style(cluster, dotted).
+style(cluster, filled).
+style(cluster, rounded).
+style(cluster, solid).
+style(cluster, striped).
+style(edge, bold).
+style(edge, dashed).
+style(edge, dotted).
+style(edge, solid).
+style(node, bold).
+style(node, dashed).
+style(node, diagonals).
+style(node, dotted).
+style(node, filled).
+style(node, rounded).
+style(node, solid).
+style(node, striped).
+style(node, wedged).
+
+
+% @tbd viewPort
+
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
new file mode 100644
index 0000000..dd0145a
&mdash;&ndash; /dev/null
+++ b/gv_attrs.pl
@@ -0,0 +1,184 @@
+:&ndash; module(
+  gv_attrs,
+  [
+    gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
+              % +Attr1:nvpair
+              % +Attr2:nvpair
+  ]
+).
+
+/</strong> <module> GraphViz attributes v2
+
+@author Wouter Beek
+@version 2014/06
+<em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(persistency)).
+:&ndash; use_module(library(xpath)).
+
+:&ndash; use_module(dcg(dcg_content)).
+:&ndash; use_module(dcg(dcg_generic)).
+:&ndash; use_module(generics(db_ext)).
+:&ndash; use_module(os(file_ext)).
+
+:&ndash; use_module(plHtml(html)).
+:&ndash; use_module(plHtml(html_table)).
+
+:&ndash; use_module(plGraphViz(gv_attr_type)). % DCGs implementing attribute types.
+
+:&ndash; db_add_novel(user:prolog_file_type(log, logging)).
+
+%! gv_attr(
+%!   ?Name:atom,
+%!   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
+%!   ?Types:list(atom),
+%!   ?Default,
+%!   ?Minimum,
+%!   ?Notes:atom
+%! ) is nondet.
+
+:&ndash; persistent(
+  gv_attr(
+    name:atom,
+    used_by:list(oneof([cluster,edge,graph,node,subgraph])),
+    types:list(atom),
+    default,
+    minimum,
+    notes:atom
+  )
+).
+
+:&ndash; initialization(gv_attrs_init).
+
+
+
+gv_attr(Context, N=V, N=V):&ndash;
+  var(V), !,
+  gv_attr(N, UsedBy, <em>, V, </em>, <em>),
+  memberchk(Context, UsedBy).
+gv_attr(Context, N=V1, N=V2):&ndash;
+  gv_attr(N, UsedBy, Types, </em>, Minimum, <em>),
+  memberchk(Context, UsedBy),
+  member(Type, Types),
+  (
+    Type == style
+  &ndash;>
+    Dcg =.. [Type,Context,V1]
+  ;
+    Dcg =.. [Type,V1]
+  ),
+  once(dcg_phrase(Dcg, V2)),
+  check_minimum(V1, Minimum).
+
+check_minimum(</em>, &lsquo;&rsquo;):&ndash; !.
+check_minimum(V, Min1):&ndash;
+  atom_number(Min1, Min2),
+  Min2 =&lt; V.
+
+
+
+% INITIALIZATION
+
+%! assert_gv_attr_row(+Row:list(atom)) is det.
+
+assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
+  dcg_phrase(translate_usedby(UsedBy2), UsedBy1),
+  once(dcg_phrase(translate_type(Types2), Types1)),
+  sort(UsedBy2, UsedBy3),
+  translate_default(Default1, Default2),
+  assert_gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes).
+
+
+%! gv_attrs_downloads is det.
+% Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.
+
+gv_attrs_download:&ndash;
+  gv_attrs_url(Url),
+  download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),
+
+  xpath(Dom, //table(@align=center), TableDom),
+  % @tbd This does not work, since in <code>record_name(Element, Name)</code>,
+  %      <code>Element</code> is a signleton list whereas a compound term is expected.
+  %%%%xpath(Dom, /html/body/table, TableDom),
+
+  html_to_table(TableDom, <em>, Rows),
+  maplist(assert_gv_attr_row, Rows).
+
+
+%! gv_attrs_file(-File:atom) is det.
+
+gv_attrs_file(File):&ndash;
+  absolute_file_name(
+    data(gv_attrs),
+    File,
+    [access(write),file_type(logging)]
+  ).
+
+
+%! gv_attrs_init is det.
+
+gv_attrs_init:&ndash;
+  gv_attrs_file(File),
+  safe_db_attach(File),
+  file_age(File, Age),
+  gv_attrs_update(Age).
+
+
+%! gv_attrs_update(+Age:float) is det.
+
+% The persistent store is still fresh.
+gv_attrs_update(Age):&ndash;
+  once(gv_attr(</em>, <em>, </em>, <em>, </em>, <em>)),
+  Age &lt; 8640000, !.
+% The persistent store has become stale, so refresh it.
+gv_attrs_update(</em>):&ndash;
+  retractall_gv_attr(<em>, </em>, <em>, </em>, <em>, </em>),
+  gv_attrs_download.
+
+
+%! gv_attrs_url(-Url:url) is det.
+
+gv_attrs_url(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).
+
+
+%! safe_db_attach(+File:atom) is det.
+
+safe_db_attach(File):&ndash;
+  exists_file(File), !,
+  db_attach(File, []).
+safe_db_attach(File):&ndash;
+  touch_file(File),
+  safe_db_attach(File).
+
+
+%! translate_default(+Default1:atom, -Default2:atom) is det.
+
+% The empty string is represented by the empty atom.
+translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
+% The absence of a default value is represented by an uninstantiated variable.
+translate_default(&lsquo;<none>&rsquo;, _):&ndash; !.
+translate_default(Default, Default).
+
+
+%! translate_type(-Types:list(atom))// is det.
+
+translate_type([H|T]) &mdash;>
+  {gv_attr_type(H)},
+  atom(H),
+  whites,
+  translate_type(T).
+translate_type([]) &mdash;> !, [].
+
+
+%! translated_usedby(
+%!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))
+%! )// is det.
+
+translate_usedby([cluster|T]) &mdash;> <code>C</code>, !, translate_usedby(T).
+translate_usedby([edge|T]) &mdash;> <code>E</code>, !, translate_usedby(T).
+translate_usedby([graph|T]) &mdash;> <code>G</code>, !, translate_usedby(T).
+translate_usedby([node|T]) &mdash;> <code>N</code>, !, translate_usedby(T).
+translate_usedby([subgraph|T]) &mdash;> <code>S</code>, !, translate_usedby(T).
+translate_usedby([]) &mdash;> [].
+
diff &mdash;git a/gv_color.pl b/gv_color.pl
new file mode 100644
index 0000000..19d6e05
&mdash;&ndash; /dev/null
+++ b/gv_color.pl
@@ -0,0 +1,151 @@
+:&ndash; module(
+  gv_color,
+  [
+    gv_color/2, % ?Colorscheme:oneof([svg,x11])
+                % ?Color:atom
+    color//1, % +Color:compound
+    colorList//1 % +Pairs:list(pair(compound,float))
+  ]
+).
+
+/** <module> GraphViz color
+
+@author Wouter Beek
+@tbd Color value <code>transparent</code> is only available in the output formats
+     ps, svg, fig, vmrl, and the bitmap formats.
+@version 2014/06
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(persistency)).
+:&ndash; use_module(library(xpath)).
+
+:&ndash; use_module(dcg(dcg_abnf)).
+:&ndash; use_module(dcg(dcg_cardinal)).
+:&ndash; use_module(dcg(dcg_content)).
+:&ndash; use_module(generics(db_ext)).
+:&ndash; use_module(os(file_ext)).
+:&ndash; use_module(sparql(sparql_char)).
+
+:&ndash; use_module(plHtml(html)).
+:&ndash; use_module(plHtml(html_table)).
+
+:&ndash; db_add_novel(user:prolog_file_type(log, logging)).
+
+%! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.
+
+:&ndash; persistent(gv_color(colorscheme:oneof([svg,x11]),color:atom)).
+
+:&ndash; initialization(gv_color_init).
+
+
+
+% color(+Color:compound)// .
+% A <em>color</em> is represented by a compound term of one of the following forms:
+%   1. <code>rgb(Red:nonneg,Green:nonneg,Blue:nonneg)</code>
+%   2. <code>rgba(Red:nonneg,Green:nonneg,Blue:nonneg,Alpha:nonneg)</code>
+%   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code>
+
+color(rgb(Red,Green,Blue)) &mdash;> !,
+  <code>#</code>,
+  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
+color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
+  <code>#</code>,
+  &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha]).
+color(hsv(Hue,Saturation,Value)) &mdash;> !,
+  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value]).
+color(Name) &mdash;>
+  {gv_color(<em>, Name)},
+  atom(Name).
+
+hex_color(I) &mdash;>
+  {W1 is I / 16},
+  &lsquo;HEX&rsquo;(W1),
+  {W2 is I mod 16},
+  &lsquo;HEX&rsquo;(W2).
+
+hsv_color(D, Head, Tail):&ndash;
+  format(codes(Head,Tail), &lsquo;~2f&rsquo;, [D]).
+
+
+%! colorList(+Pairs:list(pair(compound,float)))// .
+
+colorList(Pairs) &mdash;>
+  &lsquo;+&rsquo;(wc, Pairs).
+
+wc(Color-Float) &mdash;>
+  color(Color),
+  &lsquo;?&rsquo;(wc_weight(Float)).
+
+wc_weight(Float) &mdash;>
+  <code>;</code>,
+  float(Float).
+
+
+
+% INITIALIZATION
+
+%! gv_color_download is det.
+
+gv_color_download:&ndash;
+  gv_color_url(Url),
+  download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),
+  xpath(Dom, //table(1), TableDom1),
+  xpath(Dom, //table(2), TableDom2),
+  maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2]).
+
+assert_color_table(Colorscheme, TableDom):&ndash;
+  html_to_table(TableDom, </em>, Rows),
+  append(Rows, Cells),
+  forall(
+    member(Cell, Cells),
+    assert_gv_color(Colorscheme, Cell)
+  ).
+
+
+%! gv_color_file(-File:atom) is det.
+
+gv_color_file(File):&ndash;
+  absolute_file_name(
+    data(gv_color),
+    File,
+    [access(write),file_type(logging)]
+  ).
+
+
+%! gv_color_init is det.
+
+gv_color_init:&ndash;
+  gv_color_file(File),
+  safe_db_attach(File),
+  file_age(File, Age),
+  gv_color_update(Age).
+
+
+%! gv_color_update(+Age:float) is det.
+
+% The persistent store is still fresh.
+gv_color_update(Age):&ndash;
+  once(gv_color(<em>, </em>)),
+  Age &lt; 8640000, !.
+% The persistent store has become stale, so refresh it.
+gv_color_update(<em>):&ndash;
+  retractall_gv_color(</em>, <em>),
+  gv_color_download.
+
+
+%! gv_color_url(-Url:url) is det.
+
+gv_color_url(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).
+
+
+%! safe_db_attach(+File:atom) is det.
+
+safe_db_attach(File):&ndash;
+  exists_file(File), !,
+  db_attach(File, []).
+safe_db_attach(File):&ndash;
+  touch_file(File),
+  safe_db_attach(File).
+
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
new file mode 100644
index 0000000..9888973
&mdash;&ndash; /dev/null
+++ b/gv_dot.pl
@@ -0,0 +1,496 @@
+:&ndash; module(
+  gv_dot,
+  [
+    gv_graph//1 % +GraphTerm:compound
+  ]
+).
+
+/<em>* <module> GraphViz DOT generator
+
+DCG rules for GraphViz DOT file generation.
+
+Methods for writing to the GraphViz DOT format.
+
+In GraphViz vertices are called &lsquo;nodes&rsquo;.
+
+@author Wouter Beek
+@see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
+@version 2013/07, 2013/09, 2014/03-2014/06
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(ordsets)).
+
+:&ndash; use_module(dcg(dcg_abnf)).
+:&ndash; use_module(dcg(dcg_ascii)).
+:&ndash; use_module(dcg(dcg_content)).
+:&ndash; use_module(dcg(dcg_generic)).
+:&ndash; use_module(dcg(dcg_meta)).
+:&ndash; use_module(dcg(dcg_os)).
+
+:&ndash; use_module(plGraphViz(gv_attrs)).
+:&ndash; use_module(plGraphViz(gv_html)).
+:&ndash; use_module(plGraphViz(gv_numeral)).
+
+
+
+%! gv_attribute(+Attribute:nvpair)// is det.
+% A single GraphViz attribute.
+% We assume that the attribute has already been validated.
+
+gv_attribute(Name=Val) &mdash;>
+  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.
+
+
+%! gv_attribute_list(
+%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
+%!   +GraphAttributes:list(nvpair),
+%!   +Attributes:list(nvpair)
+%! )// .
+% <del>{.abnf}
+% attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
+% a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
+% </del>
+
+% Attributes occur between square brackets.
+gv_attribute_list(Context, </em>, Attrs1) &mdash;>
+  {maplist(gv_attr(Context), Attrs1, Attrs2)},
+  bracketed(square, &lsquo;<em>&rsquo;(gv_attribute, Attrs2)).
+
+
+%! gv_compass_pt(+Direction:oneof([&lsquo;<em>&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
+% <del>
+% compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
+% </del>
+
+gv_compass_pt(&lsquo;</em>&rsquo;) &mdash;> <code>_</code>.
+gv_compass_pt&copy; &mdash;> <code>c</code>.
+gv_compass_pt(e) &mdash;> <code>e</code>.
+gv_compass_pt(n) &mdash;> <code>n</code>.
+gv_compass_pt(ne) &mdash;> <code>ne</code>.
+gv_compass_pt(nw) &mdash;> <code>nw</code>.
+gv_compass_pt(s) &mdash;> <code>s</code>.
+gv_compass_pt(se) &mdash;> <code>se</code>.
+gv_compass_pt(sw) &mdash;> <code>sw</code>.
+gv_compass_pt(w) &mdash;> <code>w</code>.
+
+
+%! gv_edge_operator(+Directed:boolean)// .
+% The binary edge operator between two vertices.
+% The operator that is used depends on whether the graph is directed or
+% undirected.
+%
+% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
+%               undirected (operator <code>--</code>).
+
+gv_edge_operator(false) &mdash;> !, <code>--</code>.
+gv_edge_operator(true) &mdash;> arrow(right, 2).
+
+
+%! gv_edge_statement(
+%!   +Indent:nonneg,
+%!   +Directed:boolean,
+%!   +GraphAttributes:list(nvpair),
+%!   +EdgeTerm:compound
+%! )// is det.
+% A GraphViz statement describing an edge.
+%
+% @arg Indent The indentation level at which the edge statement is written.
+% @arg Directed Whether the graph is directed or not.
+% @arg GraphAttributes The attributes of the graph. Some of these attributes
+%      may be used in the edge statement (e.g., the colorscheme).
+% @arg EdgeTerm A compound term in the GIFormat, representing an edge.
+%
+% @tbd Instead of gv_node_id//1 we could have a gv_subgraph//1
+%      at the from and/or to location.
+% @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.
+
+gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
+  indent(I),
+  gv_node_id(FromId), <code></code>,
+
+  gv_edge_operator(Directed), <code></code>,
+
+  gv_node_id(ToId), <code></code>,
+
+  % We want <code>colorscheme/1</code> from the edges and
+  % <code>directionality/1</code> from the graph.
+  gv_attribute_list(edge, GAttrs, EAttrs),
+  newline.
+
+
+%! gv_generic_attributes_statement(
+%!   +Kind:oneof([edge,graph,node]),
+%!   +Indent:integer,
+%!   +GraphAttributes:list(nvpair),
+%!   +CategoryAttributes:list(nvpair)
+%! )//
+% A GraphViz statement describing generic attributes for a category of items.
+%
+% @arg Kind The category of items for to the attributes apply.
+%      Possible values: <code>edge</code>, <code>graph</code>, and <code>node</code>.
+% @arg Indent An integer indicating the number of tabs.
+% @arg GraphAttributes A list of name-value pairs.
+% @arg CategoryAttributes A list of name-value pairs.
+%
+% <del>
+% attr_stmt = (graph / node / edge) attr_list
+% </del>
+
+gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
+gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
+  indent(I),
+  gv_kind(Kind), <code></code>,
+  gv_attribute_list(Kind, GraphAttrs, KindAttrs), newline.
+
+
+%! gv_graph(+GraphTerm:compound)//
+% The follow graph attributes are supported,
+% beyond the GraphViz attributes for graphs:
+%   1. <code>directonality(+Directed:oneof([directed,undirected]))</code>
+%      A directed graph uses the keyword <code>digraph</code>.
+%      An undirected graph uses the keyword <code>graph</code>.
+%   2. <code>name(+GraphName:atom)</code>
+%   3. <code>strict(+StrictGraph:boolean)</code>
+%      This forbids the creation of self-arcs and multi-edges;
+%      they are ignored in the input file.
+%      Only in combinattion with directionality <code>directed</code>.
+%
+% <del>{.abnf}
+% graph = [&ldquo;strict&rdquo;] (&ldquo;graph&rdquo; / &ldquo;digraph&rdquo;) [ID] &ldquo;{&rdquo; stmt_list &ldquo;}&rdquo;
+% </del>
+%
+% <code>GraphTerm</code> is a compound term of the following form:
+% <del>{.pl}
+% graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
+% </del>
+%
+% <code>RankedVertexTerms</code> is a list of compound terms of the following form:
+% <del>{.pl}
+% rank(RankNode,ContentNodes)
+% </del>
+%
+% @tbd Add support for subgraphs (arbitrary nesting).
+% @tbd Add support for escape strings:
+%      <a href="http://www.graphviz.org/doc/info/attrs.html#k:escString">http://www.graphviz.org/doc/info/attrs.html#k:escString</a>
+% @tbd Assert attributes that are generic with respect to a subgraph.
+% @tbd Not all vertex and edge properties can be shared it seems (e.g., label).
+
+gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
+  gv_graph(graph(VTerms, [], ETerms, GAttrs)).
+
+gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
+  {
+    shared_attributes(VTerms, SharedVAttrs, NewVTerms),
+    shared_attributes(ETerms, SharedEAttrs, NewETerms),
+    select_nvpair(strict=Strict, GAttrs1, GAttrs2, false),
+    select_nvpair(directed=Directed, GAttrs2, GAttrs3, true),
+    select_nvpair(name=GName, GAttrs3, GAttrs4, noname),
+    add_default_nvpair(GAttrs4, overlap, false, GAttrs5),
+    I = 0
+  },
+
+  % The first statement in the GraphViz output.
+  % States that this file represents a graph according to the GraphViz format.
+  indent(I),
+  gv_strict(Strict),
+  gv_graph_type(Directed), <code></code>,
+  gv_id(GName), <code></code>,
+  bracketed(
+    curly,
+    gv_graph1(
+      I,
+      NewVTerms, SharedVAttrs, RankedVTerms,
+      NewETerms, SharedEAttrs,
+      Directed, GAttrs5
+    )
+  ),
+  newline.
+
+gv_graph1(
+  I,
+  NewVTerms, SharedVAttrs, RankedVTerms,
+  NewETerms, SharedEAttrs,
+  Directed, GAttrs
+) &mdash;>
+  newline,
+
+  % The following lines are indented.
+  {NewI is I + 1},
+
+  % Attributes that apply to the graph as a whole.
+  gv_generic_attributes_statement(graph, NewI, GAttrs, GAttrs),
+
+  % Attributes that are the same for all nodes.
+  gv_generic_attributes_statement(node, NewI, GAttrs, SharedVAttrs),
+
+  % Attributes that are the same for all edges.
+  gv_generic_attributes_statement(edge, NewI, GAttrs, SharedEAttrs),
+
+  % Only add a newline if some content was written in the previous three
+  % lines.
+  ({(GAttrs == [], SharedVAttrs == [], SharedEAttrs == [])} &ndash;> <code>; newline),
+
+  % The list of GraphViz nodes.
+  '*'(gv_node_statement(NewI, GAttrs), NewVTerms),
+  ({NewVTerms == []} -&gt;</code> ; newline),
+
+  % The ranked GraphViz nodes (displayed at the same height).
+  &lsquo;</em>&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms),
+  ({RankedVTerms == []} &ndash;> <code>; newline),
+
+  {
+    findall(
+      edge(FromId,ToId,[]),
+      (
+        nth0(Index1, RankedVTerms, rank(vertex(FromId,_,_),_)),
+        nth0(Index2, RankedVTerms, rank(vertex(ToId,_,_),_)),
+        % We assume that the rank vertices are nicely ordered.
+        succ(Index1, Index2)
+      ),
+      RankEdges
+    )
+  },
+
+  % The rank edges.
+  '*'(gv_edge_statement(NewI, Directed, GAttrs), RankEdges),
+
+  % The non-rank edges.
+  '*'(gv_edge_statement(NewI, Directed, GAttrs), NewETerms),
+
+  % Note that we do not include a newline here.
+
+  % We want to indent the closing curly brace.
+  indent(I).
+
+
+%! gv_graph_type(+Directed:boolean)// .
+% The type of graph that is represented.
+
+gv_graph_type(false) --&gt; `graph`.
+gv_graph_type(true) --&gt; `digraph`.
+
+
+%! gv_id(?Atom:atom)// is det.
+% Parse a GraphViz identifier.
+% There are 4 variants:
+%   1. Any string of alphabetic (`[a-zA-Z'200-'377]`) characters,
+%      underscores (`_`) or digits (`[0-9]`), not beginning with a digit.
+%   2. A numeral `[-]?(.[0-9]+ | [0-9]+(.[0-9]*)? )`.
+%   3. Any double-quoted string (`"..."`) possibly containing
+%      escaped quotes (`\"`).
+%      In quoted strings in DOT, the only escaped character is
+%      double-quote (`"`). That is, in quoted strings, the dyad `\"`
+%      is converted to `"`. All other characters are left unchanged.
+%      In particular, `\\` remains `\\`.
+%      Layout engines may apply additional escape sequences.
+%   4. An HTML string (`&lt;...&gt;`).
+%
+% @tbd Add support for HTML-like labels:
+%      http://www.graphviz.org/doc/info/shapes.html#html
+%      This requires an XML grammar!
+
+% HTML strings (variant 4).
+gv_id(Atom) --&gt;
+  dcg_atom_codes(gv_html_like_label, Atom), !.
+% Alpha-numeric strings (variant 1).
+gv_id(Atom) --&gt;
+  {atom_codes(Atom, [H|T])},
+  gv_id_first(H),
+  gv_id_rest(T), !,
+  % Variant 1 identifiers should not be (case-variants of) a
+  % GraphViz keyword.
+  {\+ gv_keyword([H|T])}.
+% Numerals (variant 2)
+gv_id(N) --&gt;
+  {number(N)}, !,
+  gv_numeral(N).
+% Double-quoted strings (variant 3).
+% The quotes are already part of the given atom.
+gv_id(Atom) --&gt;
+  {
+    atom_codes(Atom, [H|T]),
+    append(S, [H], T)
+  },
+  dcg_between(double_quote(H), gv_quoted_string(S)), !.
+% Double-quoted strings (variant 3).
+% The quotes are not in the given atom. They are written anyway.
+gv_id(Atom) --&gt;
+  quoted(double_quote, dcg_atom_codes(gv_quoted_string, Atom)), !.
+
+gv_id_first(X) --&gt; ascii_letter(X).
+gv_id_first(X) --&gt; underscore(X).
+
+gv_id_rest([]) --&gt; [].
+gv_id_rest([H|T]) --&gt;
+  (ascii_alpha_numeric(H) ; underscore(H)),
+  gv_id_rest(T).
+
+
+%! gv_keyword(+Codes:list(code)) is semidet.
+% Succeeds if the given codes for a GraphViz reserved keyword.
+
+gv_keyword(Codes):-
+  % Obviously, the keywords do not occur on the difference list input.
+  % So we must use phrase/[2,3].
+  phrase(gv_keyword, Codes).
+
+%! gv_keyword// .
+% GraphViz has reserved keywords that cannot be used as identifiers.
+% GraphViz keywords are case-insensitive.
+
+gv_keyword --&gt; `digraph`.
+gv_keyword --&gt; `edge`.
+gv_keyword --&gt; `graph`.
+gv_keyword --&gt; `node`.
+gv_keyword --&gt; `strict`.
+gv_keyword --&gt; `subgraph`.
+
+
+%! gv_kind(+Kind:oneof([edge,graph,node]))// .
+
+gv_kind(edge) --&gt; `edge`.
+gv_kind(graph) --&gt; `graph`.
+gv_kind(node) --&gt; `node`.
+
+
+%! gv_node_id(+NodeId:atom)// .
+% GraphViz node identifiers can be of the following two types:
+%   1. A GraphViz identifier, see gv_id//1.
+%   2. A GraphViz identifier plus a GraphViz port indicator, see gv_port//0.
+%
+% @tbd Add support for GraphViz port indicators
+%      inside GraphViz node identifiers.
+
+gv_node_id(Id) --&gt;
+  gv_id(Id).
+%gv_node_id(_) --&gt;
+%  gv_id(_),
+%  gv_port.
+
+
+%! gv_node_statement(
+%!   +Indent:integer,
+%!   +GraphAttributes,
+%!   +VertexTerm:compound
+%! )// .
+% A GraphViz statement describing a vertex (GraphViz calls vertices 'nodes').
+
+gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) --&gt;
+  indent(I),
+  gv_node_id(Id), ` `,
+  gv_attribute_list(node, GraphAttrs, VAttrs), newline.
+
+
+gv_port --&gt;
+  gv_port_location,
+  '?'(gv_port_angle).
+gv_port --&gt;
+  gv_port_angle,
+  '?'(gv_port_location).
+gv_port --&gt;
+  `:`,
+  gv_compass_pt(_).
+
+gv_port_angle --&gt;
+  `@`,
+  gv_id(_).
+
+gv_port_location --&gt;
+  `:`,
+  gv_id(_).
+gv_port_location --&gt;
+  `:`,
+  bracketed(
+    round,
+    (
+      gv_id(_),
+      `,`,
+      gv_id(_)
+    )
+  ).
+
+
+gv_quoted_string([]) --&gt; [].
+% Just to be sure, we do not allow the double quote
+% that closes the string to be escaped.
+gv_quoted_string([X]) --&gt;
+  {X \== 92}, !,
+  [X].
+% A double quote is only allowed if it is escaped by a backslash.
+gv_quoted_string([92,34|T]) --&gt; !,
+  gv_quoted_string(T).
+% Add the backslash escape character.
+gv_quoted_string([34|T]) --&gt; !,
+  `\\\"`,
+  gv_quoted_string(T).
+% All other characters are allowed without escaping.
+gv_quoted_string([H|T]) --&gt;
+  [H],
+  gv_quoted_string(T).
+
+
+gv_ranked_node_collection(
+  I,
+  GraphAttrs,
+  rank(Rank_V_Term,Content_V_Terms)
+) --&gt;
+  indent(I),
+  bracketed(curly, (
+    newline,
+
+    % The rank attribute.
+    {NewI is I + 1},
+    indent(NewI), gv_attribute(rank=same), `;`, newline,
+
+    '*'(gv_node_statement(NewI, GraphAttrs), [Rank_V_Term|Content_V_Terms]),
+
+    % We want to indent the closing curly brace.
+    indent(I)
+  )),
+  newline.
+
+
+%! gv_strict(+Strict:boolean)// is det.
+% The keyword denoting that the graph is strict, i.e., has no self-arcs and
+% no multi-edges.
+% This only applies to directed graphs.
+
+gv_strict(false) --&gt; [].
+gv_strict(true) --&gt; `strict `.
+
+
+
+% Helpers
+
+add_default_nvpair(Attrs1, N, Default, Attrs2):-
+  add_default_nvpair(Attrs1, N, Default, _, Attrs2).
+
+add_default_nvpair(Attrs, N, _, V, Attrs):-
+  memberchk(N=V, Attrs), !.
+add_default_nvpair(Attrs1, N, Default, Default, Attrs2):-
+  ord_add_element(Attrs1, N=Default, Attrs2).
+
+select_nvpair(N=V, Attrs1, Attrs2, _):-
+  memberchk(N=V, Attrs1), !,
+  select(N=V, Attrs1, Attrs2).
+select_nvpair(_=Default, Attrs, Attrs, Default).
+
+
+extract_shared([], []):- !.
+extract_shared(Argss, Shared):-
+  ord_intersection(Argss, Shared).
+
+remove_shared_attributes(Shared, Args1, Args2):-
+  ord_subtract(Args1, Shared, Args2).
+
+shared_attributes(Terms1, Shared, Terms2):-
+  maplist(term_components(Func), Terms1, Args1, Args2, Args3a),
+  extract_shared(Args3a, Shared),
+  maplist(remove_shared_attributes(Shared), Args3a, Args3b),
+  maplist(term_components(Func), Terms2, Args1, Args2, Args3b).
+
+term_components(Func, Term, Arg1, Arg2, Arg3):-
+  Term =.. [Func,Arg1,Arg2,Arg3].
+
diff --git a/gv_file.pl b/gv_file.pl
new file mode 100644
index 0000000..c780692
--- /dev/null
+++ b/gv_file.pl
@@ -0,0 +1,211 @@
+:- module(
+  gv_file,
+  [
+    gif_to_gv_file/3, % +GraphInterchangeFormat:compound
+                      % ?ToFile:atom
+                      % +Options:list(nvpair)
+    graph_to_svg_dom/3, % +GraphInterchangeFormat:compound
+                        % -SvgDom:list(compound)
+                        % +Options:list(nvpair)
+    open_dot/1 % +File:file
+  ]
+).
+
+/** &lt;module&gt; GraphViz file
+
+Predicates for converting GIF-formatted terms
+into GraphViz output files or SVG DOM structures.
+
+Also converts between GraphViz DOT formatted files
+and GraphViz output files or SVG DOM structures.
+
+@author Wouter Beek
+@version 2011-2013/09, 2013/11-2014/01, 2014/05, 2014/07
+*/
+
+:- use_module(library(option)).
+:- use_module(library(process)).
+:- use_module(library(predicate_options)). % Declarations.
+
+:- use_module(generics(codes_ext)).
+:- use_module(generics(db_ext)).
+:- use_module(generics(error_ext)).
+:- use_module(generics(trees)).
+:- use_module(os(file_ext)).
+:- use_module(os(run_ext)).
+:- use_module(os(safe_file)).
+:- use_module(svg(svg_file)).
+:- use_module(ugraph(ugraph_export)).
+
+:- use_module(plGraphViz(gv_dot)).
+
+:- dynamic(user:file_type_program/2).
+:- multifile(user:file_type_program/2).
+
+:- dynamic(user:module_uses/2).
+:- multifile(user:module_uses/2).
+
+:- dynamic(user:prolog_file_type/2).
+:- multifile(user:prolog_file_type/2).
+
+% Register DOT.
+:- db_add_novel(user:prolog_file_type(dot, dot)).
+:- db_add_novel(user:prolog_file_type(dot, graphviz)).
+:- db_add_novel(user:file_type_program(dot, dotty)).
+:- db_add_novel(user:file_type_program(dot, dotx)).
+:- db_add_novel(user:module_uses(gv_file, file_type(dot))).
+
+% Register JPG/JPEG.
+:- db_add_novel(user:prolog_file_type(jpeg, jpeg)).
+:- db_add_novel(user:prolog_file_type(jpeg, graphviz_output)).
+:- db_add_novel(user:prolog_file_type(jpg, jpeg)).
+:- db_add_novel(user:prolog_file_type(jpg, graphviz_output)).
+
+% Register PDF.
+:- db_add_novel(user:prolog_file_type(pdf, pdf)).
+:- db_add_novel(user:prolog_file_type(pdf, graphviz_output)).
+
+% Register PNG.
+:- db_add_novel(user:prolog_file_type(png, png)).
+:- db_add_novel(user:prolog_file_type(png, graphviz_output)).
+
+% Register SVG.
+:- db_add_novel(user:prolog_file_type(svg, graphviz_output)).
+:- db_add_novel(user:prolog_file_type(svg, svg)).
+
+% Register XDOT.
+:- db_add_novel(user:prolog_file_type(xdot, graphviz_output)).
+:- db_add_novel(user:prolog_file_type(xdot, xdot)).
+
+:- predicate_options(graph_to_svg_dom/3, 3, [
+     pass_to(gif_to_gv_file/3, 3)
+   ]).
+:- predicate_options(gif_to_gv_file/3, 3, [
+     pass_to(to_gv_file/3, 3)
+   ]).
+:- predicate_options(to_gv_file/3, 3, [
+     pass_to(convert_gv/3, 3)
+   ]).
+:- predicate_options(convert_gv/3, 3, [
+     method(+oneof([dot,sfdp])),
+     to_file_type(+oneof([dot,jpeg,pdf,svg,xdot]))
+   ]).
+
+
+
+%! gif_to_gv_file(+Gif:compound, -ToFile:atom, +Options:list(nvpair)) is det.
+% Returns a file containing a GraphViz visualization of the given graph.
+%
+% The following options are supported:
+%   * =|method(+Method:oneof([dot,sfdp])|=
+%     The algorithm used by GraphViz for positioning the tree nodes.
+%     Either =dot= (default) or =sfdp=.
+%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
+%     The file type of the generated GraphViz file.
+%     Default: `pdf`.
+
+gif_to_gv_file(Gif, ToFile, Options):-
+  once(phrase(gv_graph(Gif), Codes)),
+  to_gv_file(Codes, ToFile, Options).
+
+
+%! graph_to_svg_dom(
+%!   +GraphInterchangeFormat:compound,
+%!   -SvgDom:list(compound),
+%!   +Options:list(nvpair)
+%! ) is det.
+
+graph_to_svg_dom(Gif, SvgDom, Options1):-
+  % Make sure the file type of the output file is SvgDom.
+  merge_options([to_file_type=svg], Options1, Options2),
+  gif_to_gv_file(Gif, ToFile, Options2),
+  file_to_svg(ToFile, SvgDom),
+  safe_delete_file(ToFile).
+
+
+%! open_dot(+File:atom) is det.
+% Opens the given DOT file.
+%
+% @tbd Test support on Windows.
+% @tbd Test support on OS-X.
+
+open_dot(File):-
+  once(find_program_by_file_type(dot, Program)),
+  run_program(Program, [File]).
+
+
+
+% SUPPORT PREDICATES %
+
+%! convert_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
+% Converts a GraphViz DOT file to an image file, using a specific
+% visualization method.
+
+convert_gv(FromFile, ToFile, Options):-
+  option(to_file_type(dot), Options), !,
+  rename_file(FromFile, ToFile).
+convert_gv(FromFile, ToFile, Options):-
+  % The input file must be readable.
+  access_file(FromFile, read),
+
+  % The method option.
+  option(method(Method), Options, dot),
+  must_be(oneof([dot,sfdp]), Method),
+
+  % The file type option.
+  option(to_file_type(ToFileType), Options, pdf),
+  prolog_file_type(ToExtension, ToFileType),
+  prolog_file_type(ToExtension, graphviz_output), !,
+
+  % The output file is either given or created.
+  (
+    var(ToFile)
+  -&gt;
+    absolute_file_name(
+      data(export),
+      ToFile,
+      [access(write),file_type(ToFileType)]
+    )
+  ;
+    is_absolute_file_name(ToFile),
+    % The given output file must match a certain file extension.
+    file_name_extension(_, ToExtension, ToFile)
+  ),
+  % Now that we have the output file we can prevent the
+  % file type / file extension translation predicates from bakctracking.
+  !,
+
+  % Run the GraphViz conversion command in the shell.
+  format(atom(OutputType), '-T~w', [ToExtension]),
+  process_create(
+    path(Method),
+    [OutputType,FromFile,'-o',ToFile],
+    [process(PID)]
+  ),
+  process_wait(PID, exit(ShellStatus)),
+  exit_code_handler('GraphViz', ShellStatus).
+
+
+%! to_gv_file(+Codes:list(code), ?ToFile:atom, +Options:list(nvpair)) is det.
+
+to_gv_file(Codes, ToFile, Options):-
+  absolute_file_name(
+    data(tmp),
+    FromFile,
+    [access(write),file_type(graphviz)]
+  ),
+  setup_call_cleanup(
+    open(FromFile, write, Out, [encoding(utf8),type(test)]),
+    put_codes(Out, Codes),
+    close(Out)
+  ),
+  convert_gv(FromFile, ToFile, Options),
+
+  %%%%% DEB: Store DOT file.
+  %%%%ignore((
+  %%%%  file_type_alternative(ToFile, graphviz, DOT_File),
+  %%%%  safe_copy_file(FromFile, DOT_File)
+  %%%%)),
+
+  safe_delete_file(FromFile).
+
diff --git a/gv_html.pl b/gv_html.pl
new file mode 100644
index 0000000..b8d3190
--- /dev/null
+++ b/gv_html.pl
@@ -0,0 +1,60 @@
+:- module(
+  gv_html,
+  [
+    gv_html_like_label//1 % +Codes:list(code)
+  ]
+).
+
+/** &lt;module&gt; GraphViz HTML
+
+@author Wouter Beek
+@version 2013/07, 2013/09, 2014/03-2014/06
+*/
+
+:- use_module(dcg(dcg_content)).
+
+:- use_module(plHtml(html_dcg)).
+
+
+
+%! gv_html_label(+Codes:list(code))// .
+%
+% @see http://www.graphviz.org/doc/info/shapes.html#html
+
+gv_html_label --&gt; gv_html_text, !.
+gv_html_label --&gt; gv_html_table, !.
+gv_html_label --&gt; [].
+
+gv_html_like_label --&gt; bracketed(angular, gv_html_label).
+
+gv_html_like_label(Content) --&gt; bracketed(angular, html_dcg(Content)).
+
+gv_html_table --&gt; html_element(table, _, gv_html_rows).
+gv_html_table --&gt; html_element(font, _, html_element(table, _, gv_html_rows)).
+
+gv_html_rows --&gt; gv_html_row, gv_html_rows.
+gv_html_rows --&gt; gv_html_row, html_element(hr, _), gv_html_rows.
+gv_html_rows --&gt; gv_html_row.
+
+gv_html_row --&gt; html_element(tr, _, gv_html_cells).
+
+gv_html_cell --&gt; html_element(td, _, gv_html_label).
+gv_html_cell --&gt; html_element(td, _, html_element(img, _)).
+
+gv_html_cells --&gt; gv_html_cell, gv_html_cells.
+gv_html_cells --&gt; gv_html_cell.
+gv_html_cells --&gt; gv_html_cell, html_element(vr, _), gv_html_cells.
+
+gv_html_text --&gt; gv_html_textitem, gv_html_text.
+gv_html_text --&gt; gv_html_textitem.
+
+gv_html_textitem --&gt; html_string, !.
+gv_html_textitem --&gt; html_entity, !.
+gv_html_textitem --&gt; html_element(br, _), !.
+gv_html_textitem --&gt; html_element(font, _, gv_html_text), !.
+gv_html_textitem --&gt; html_element(i, _, gv_html_text), !.
+gv_html_textitem --&gt; html_element(b, _, gv_html_text), !.
+gv_html_textitem --&gt; html_element(u, _, gv_html_text), !.
+gv_html_textitem --&gt; html_element(sub, _, gv_html_text), !.
+gv_html_textitem --&gt; html_element(sup, _, gv_html_text), !.
+
diff --git a/gv_numeral.pl b/gv_numeral.pl
new file mode 100644
index 0000000..9b82fc0
--- /dev/null
+++ b/gv_numeral.pl
@@ -0,0 +1,71 @@
+:- module(
+  gv_numeral,
+  [
+    gv_numeral//1 % ?Value:number
+  ]
+).
+
+/** &lt;module&gt; GraphViz numeral
+
+@author Wouter Beek
+@version 2014/05-2014/06
+*/
+
+:- use_module(dcg(dcg_abnf)).
+:- use_module(dcg(dcg_cardinal)).
+:- use_module(math(math_ext)).
+
+
+
+%! gv_numeral(?Value:number)// .
+% ~~~{.bnf}
+% ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
+% ~~~
+
+gv_numeral(N) --&gt;
+  {nonvar(N)},
+  {number_sign_parts(N, Sign, Abs)},
+  ({Sign =:= -1} -&gt; `-` ;</code>),
+  gv_numeral_abs(Abs).
+gv_numeral(N) &mdash;>
+  {var(N)},
+  &lsquo;sign?&rsquo;(Sign),
+  gv_numeral_abs(Abs),
+  {number_sign_parts(N, Sign, Abs)}.
+
+
+gv_numeral_abs(N) &mdash;>
+  {nonvar(N)},
+  {number_integer_parts(N, N1, N2)},
+  (
+    {N2 =:= 0}
+  &ndash;>
+    integer(N1)
+  ;
+    {N1 =:= 0}
+  &ndash;>
+    <code>.</code>,
+    integer(N2)
+  ;
+    integer(N1),
+    &lsquo;?&rsquo;((<code>.</code>, &lsquo;integer?&rsquo;(N2)))
+  ).
+gv_numeral_abs(N) &mdash;>
+  {var(N)},
+  (
+    <code>.</code>,
+    integer(N2)
+  &ndash;>
+    {N1 = 0}
+  ;
+    integer(N1),
+    (
+      <code>.</code>
+    &ndash;>
+      &lsquo;integer?&rsquo;(N2)
+    ;
+      {N2 = 0}
+    )
+  ),
+  {number_integer_parts(N, N1, N2)}.
+
diff &mdash;git a/gv_tree.pl b/gv_tree.pl
new file mode 100644
index 0000000..afeb8f6
&mdash;&ndash; /dev/null
+++ b/gv_tree.pl
@@ -0,0 +1,43 @@
+:&ndash; module(
+  gv_tree,
+  [
+    tree_to_gv_file/3 % +Tree:compound
+                      % ?ToFile:atom
+                      % +Options:list(nvpair)
+  ]
+).
+
+/<strong> <module> GraphViz tree
+
+Export trees to GraphViz.
+
+@author Wouter Beek
+@version 2014/06-2014/07
+*/
+
+:&ndash; use_module(library(aggregate)).
+
+:&ndash; use_module(generics(trees)).
+
+:&ndash; use_module(plGraphViz(gv_file)).
+:&ndash; use_module(plGraphViz(gv_gif)).
+
+
+%! tree_to_gv_file(
+%!   +Tree:compound,
+%!   ?ToFile:atom,
+%!   +Options:list(nvpair)
+%! ) is det.
+% Stores the given tree term into a GraphViz file.
+%
+% Options are passed on to create_gif/3 and gif_to_gv_file/3.
+
+tree_to_gv_file(Tree, ToFile, Options):&ndash;
+  tree_to_gif(Tree, Gif, Options),
+  gif_to_gv_file(Gif, ToFile, Options).
+
+
+tree_to_gif(H-T, Gif, Options):&ndash;
+  tree_to_vertices_edges(Tree, Vs, Es),
+  create_gif(Vs, Es, Gif, Options).
+
diff &mdash;git a/index.pl b/index.pl
new file mode 100644
index 0000000..7461d13
&mdash;&ndash; /dev/null
+++ b/index.pl
@@ -0,0 +1,2 @@
+% Index of project plGraphViz (empty).
+
diff &mdash;git a/load.pl b/load.pl
new file mode 100644
index 0000000..4b117d1
&mdash;&ndash; /dev/null
+++ b/load.pl
@@ -0,0 +1,12 @@
+% Load file for plGraphViz.
+
+:&ndash; dynamic(user:prolog/3).
+:&ndash; multifile(user:prolog/3).
+   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).
+
+:&ndash; use_module(load_project).
+:&ndash; load_project(plGraphViz, [
+    plc-&lsquo;Prolog-Library-Collection&rsquo;,
+    plHtml
+]).
+
diff &mdash;git a/load_project.pl b/load_project.pl
new file mode 100644
index 0000000..5599b5e
&mdash;&ndash; /dev/null
+++ b/load_project.pl
@@ -0,0 +1,120 @@
+:&ndash; module(
+  load_project,
+  [
+    load_project/2, % +Parent:atom
+                    % +ChildProjects:list(or([atom,pair(atom)]))
+    load_subproject/2, % +ParentFileSearchPath:atom
+                       % +Child:or([atom,pair(atom)])
+    set_data_subdirectory/1 % +ParentDirectory:atom
+  ]
+).
+
+/</strong> <module> Load project
+
+Generic code for loading a project:
+  * Create a subdirectory for data.
+  * Load the root of subprojects onto the file search path.
+  * Load the index of subprojects onto the file search path.
+
+@author Wouter Beek
+@version 2014/06/14
+*/
+
+:&ndash; use_module(library(ansi_term)). % Colorized terminal messages.
+:&ndash; use_module(library(apply)).
+
+:&ndash; dynamic(user:project/2).
+:&ndash; multifile(user:project/2).
+:&ndash; dynamic(user:project/3).
+:&ndash; multifile(user:project/3).
+
+
+
+load_project(Parent, ChildProjects):&ndash;
+  parent_alias(Parent, ParentFsp),
+
+  % Entry point.
+  source_file(load_project(<em>,</em>), ThisFile),
+  file_directory_name(ThisFile, ThisDir),
+  assert(user:file_search_path(ParentFsp, ThisDir)),
+  assert(user:file_search_path(project, ThisDir)),
+
+  % Set the data subdirectory.
+  set_data_subdirectory(ThisDir),
+
+  % Load the root of submodules onto the file search path.
+  maplist(load_subproject(ParentFsp), ChildProjects),
+
+  % Load the index into the file search path.
+  load_project_index(ParentFsp).
+
+
+
+%! load_subproject(
+%!   +ParentFileSearchPath:atom,
+%!   +Child:or([atom,pair(atom)])
+%! ) is det.
+
+load_subproject(ParentFsp, ChildFsp-ChildDir):&ndash; !,
+  load_subproject_file_search_path(ParentFsp, ChildFsp, ChildDir),
+  load_project_index(ChildFsp).
+load_subproject(ParentFsp, Child):&ndash;
+  load_subproject(ParentFsp, Child-Child).
+
+
+%! load_subproject_file_search_path(
+%!   +ParentFileSearchPath:atom,
+%!   +ChildFileSearchPath:atom,
+%!   +ChildDirectory:atom
+%! ) is det.
+
+% The file search path for the subproject has already been set.
+load_subproject_file_search_path(<em>, ChildFsp, </em>):&ndash;
+  user:file_search_path(ChildFsp, <em>).
+load_subproject_file_search_path(ParentFsp, ChildFsp, ChildDir):&ndash;
+  Spec =.. [ParentFsp,ChildDir],
+  absolute_file_name(Spec, </em>, [access(read),file_type(directory)]), !,
+  assert(user:file_search_path(ChildFsp, Spec)).
+load_subproject_file_search_path(<em>, ChildFsp, ChildDir):&ndash;
+  print_message(warning, missing_subproject_directory(ChildFsp,ChildDir)).
+
+
+%! load_project_index(+FileSearchPath:atom) is det.
+
+load_project_index(Fsp):&ndash;
+  Spec =.. [Fsp,index],
+  absolute_file_name(
+    Spec,
+    File,
+    [access(read),file_errors(fail),file_type(prolog)]
+  ), !,
+  ensure_loaded(File).
+load_project_index(</em>).
+
+
+%! parent_alias(+Parent:atom, -ParentFsp:atom) is det.
+
+parent_alias(Parent, ParentFsp):&ndash;
+  user:project(Parent, _, ParentFsp), !.
+parent_alias(Parent, Parent).
+
+
+%! set_data_subdirectory(+ParentDirectory:atom) is det.
+
+set_data_subdirectory(ParentDir):&ndash;
+  directory_file_path(ParentDir, data, DataDir),
+  make_directory_path(DataDir),
+  assert(user:file_search_path(data, DataDir)).
+
+
+
+:&ndash; multifile(prolog:message//1).
+
+prolog:message(missing_subproject_directory(ChildFsp,ChildDir)) &mdash;>
+  [
+    &lsquo;The ~a submodule is not present.&rsquo;&ndash;[ChildFsp], nl,
+    &lsquo;Check whether subdirectory ~a is present in your project directory:&rsquo;&ndash;[ChildDir], nl,
+    &lsquo;    git submodule init&rsquo;, nl,
+    &lsquo;    git submodule update&rsquo;
+  ].
+
diff &mdash;git a/pack.pl b/pack.pl
deleted file mode 100644
index 989108a..0000000
&mdash;&ndash; a/pack.pl
+++ /dev/null
@@ -1,9 +0,0 @@
-author(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#105;&#108;&#x74;&#111;&#x3a;&#109;&#101;&#x40;&#x77;&#x6f;&#x75;&#x74;&#x65;&#x72;&#x62;&#x65;&#x65;&#x6b;&#x2e;&#99;&#x6f;&#109;">&#x6d;&#x65;&#x40;&#119;&#x6f;&#x75;&#116;&#x65;&#x72;&#98;&#x65;&#101;&#107;&#46;&#x63;&#x6f;&#x6d;</a>&rsquo;).
-download(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz/release/*.zip">https://github.com/wouterbeek/plGraphViz/release/*.zip</a>&rsquo;).
-home(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz">https://github.com/wouterbeek/plGraphViz</a>&rsquo;).
-maintainer(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#105;&#x6c;&#x74;&#x6f;&#58;&#x6d;&#x65;&#x40;&#119;&#x6f;&#x75;&#x74;&#101;&#114;&#98;&#x65;&#x65;&#x6b;&#x2e;&#99;&#111;&#x6d;">&#x6d;&#x65;&#64;&#x77;&#111;&#x75;&#x74;&#101;&#x72;&#x62;&#101;&#101;&#x6b;&#46;&#x63;&#111;&#109;</a>&rsquo;).
-name(plGraphViz).
-packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x6d;&#x65;&#64;&#119;&#x6f;&#117;&#x74;&#x65;&#x72;&#x62;&#101;&#x65;&#107;&#x2e;&#99;&#x6f;&#x6d;">&#109;&#101;&#64;&#119;&#x6f;&#117;&#116;&#x65;&#x72;&#x62;&#101;&#x65;&#x6b;&#x2e;&#99;&#111;&#x6d;</a>&rsquo;).
-requires(&lsquo;Prolog-Library-Collection&rsquo;).
-title(plGraphViz).
-version(&lsquo;0.0.1&rsquo;).
diff &mdash;git a/plHtml b/plHtml
new file mode 160000
index 0000000..08480c4
&mdash;&ndash; /dev/null
+++ b/plHtml
@@ -0,0 +1 @@
+Subproject commit 08480c40acaee5f70bfb21e3c641bef1e7d258bd
diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
deleted file mode 100644
index 083dbb2..0000000
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ /dev/null
@@ -1,101 +0,0 @@
&ndash;:&ndash; module(
&ndash;  fca_viz,
&ndash;  [
&ndash;    fca_export_graph/2, % +Context, -ExportGraph
&ndash;    fca_export_graph/3, % +Context, -ExportGraph, :Opts
&ndash;    fca_viz/2,          % +Context, ?File
&ndash;    fca_viz/3           % +Context, ?File, :Opts
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> FCA visualization</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2015/11-2016/01</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(aggregate)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_pl)).
&ndash;:&ndash; use_module(library(fca/fca)).
&ndash;:&ndash; use_module(library(graph/build_export_graph)).
&ndash;:&ndash; use_module(library(graph/s/s_graph)).
&ndash;:&ndash; use_module(library(gv/gv_file)).
&ndash;:&ndash; use_module(library(option)).</p>

<h2>&ndash;:&ndash; use_module(library(ordsets)).</h2>

<p>&ndash;:&ndash; meta_predicate(fca_export_graph(+,?,:)).</p>

<h2>&ndash;:&ndash; meta_predicate(fca_viz(+,?,:)).</h2>

<p>&ndash;:&ndash; predicate_options(fca_export_graph/3, 3, [
&ndash;     concept_label(+callable)
&ndash;   ]).
&ndash;:&ndash; predicate_options(fca_viz/3, 3, [
&ndash;     pass_to(fca_export_graph/3, 3),
&ndash;     pass_to(graph_viz/3, 3)</p>

<h2>&ndash;   ]).</h2>

<h2>-is_meta(concept_label).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<p>&ndash;%! fca_export_graph(+Context:compound, -ExportGraph:compound) is det.</p>

<h2>&ndash;% Wrapper around fca_export_graph/3 with default options.</h2>

<p>-fca_export_graph(Context, ExportG):&ndash;</p>

<h2>&ndash;  fca_export_graph(Context, ExportG, []).</h2>

<p>&ndash;
&ndash;%! fca_export_graph(
&ndash;%!   +Context:compound,
&ndash;%!   -ExportGraph:compound,
&ndash;%!   :Options:list(compound)
&ndash;%! ) is det.
&ndash;% The following optios are supported:
&ndash;%   * concept_label(+callable)</p>

<h2>&ndash;%     DCG writing the labels for individual concepts.</h2>

<p>-fca_export_graph(Context, ExportG, Opts1):&ndash;
&ndash;  fca_hasse(Context, Hasse),
&ndash;  meta_options(is_meta, Opts1, Opts2),
&ndash;  option(concept_label(Label_3), Opts2, concept_label),
&ndash;  merge_options(
&ndash;    [
&ndash;      vertex_label(Label_3),
&ndash;      vertex_rank(fca:concept_cardinality)
&ndash;    ],
&ndash;    Opts2,
&ndash;    Opts3
&ndash;  ),</p>

<h2>&ndash;  build_export_graph(Hasse, ExportG, Opts3).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! fca_viz(+Context:compound, ?File:atom) is det.</p>

<h2>&ndash;% Wrapper around fca_viz/3 with default options.</h2>

<p>-fca_viz(Context, File):&ndash;</p>

<h2>&ndash;  fca_viz(Context, File, []).</h2>

<p>&ndash;</p>

<h2>&ndash;%! fca_viz(+Context:compound, ?File:atom, :Options:list(compound)) is det.</h2>

<p>-fca_viz(Context, File, Opts1):&ndash;
&ndash;  meta_options(is_meta, Opts1, Opts2),
&ndash;  statistics(process_cputime, Time1),
&ndash;  fca_export_graph(Context, ExportG, Opts2),
&ndash;  ExportG = graph(<em>,</em>,Es,<em>),
&ndash;  aggregate_all(max(N), (member(edge(V1,V2,</em>), Es), (N = V1 ; N = V2)), N),
&ndash;  ignore(option(number_of_vertices(N), Opts2)),
&ndash;  statistics(process_cputime, Time2),
&ndash;  Time is Time2 &ndash; Time1,
&ndash;  ignore(option(process_cputime(Time), Opts2)),</p>

<h2>&ndash;  graph_viz(ExportG, File, Opts2).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! concept_label(+Concept:compound)// is det.</h2>

<p>-concept_label(concept(Os,As)) &mdash;> set(Os), &ldquo; / &rdquo;, set(As).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
deleted file mode 100644
index 5134069..0000000
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ /dev/null
@@ -1,369 +0,0 @@
&ndash;:&ndash; module(
&ndash;  build_export_graph,
&ndash;  [
&ndash;    build_export_graph/2, % +Graph, -ExportGraph
&ndash;    build_export_graph/3 % +Graph
&ndash;                         % -ExportGraph:compound
&ndash;                         % +Options:list(compound)
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> Build graph representation for exporting</h2>

<h2>-Support for building GIF representations.</h2>

<h2>&ndash;# Graph Intermediate Format (GIF)</h2>

<h2>&ndash;## Graph</h2>

<p>&ndash;```prolog
-graph(Vs:ordset(compound),Ranks,Es:compound,Attributes:list(compound))</p>

<h2>&ndash;```</h2>

<h2>&ndash;### Edge</h2>

<p>&ndash;```prolog
-edge(FromVertexId,ToVertexId,Attributes:list(compound))</p>

<h2>&ndash;```</h2>

<h2>&ndash;### Rank</h2>

<p>&ndash;```prolog
-RankVertex:compound-ContentVertices:ordset(compound)</p>

<h2>&ndash;```</h2>

<h2>&ndash;### Vertex</h2>

<p>&ndash;```prolog
-vertex(Id,Attributes:list(compound))</p>

<h2>&ndash;```</h2>

<h2>&ndash;# Property functions</h2>

<p>-Edge label:</p>

<h2>&ndash;  1. [[graph_edge]] edge_label/2</h2>

<p>-Vertex coordinates:
&ndash;  1. [[circle_coords]] circular_coord/4</p>

<h2>&ndash;  2. [[random_coords]] random_coord/4</h2>

<hr />

<p>&ndash;
&ndash;@author Wouter Beek
&ndash;@version 2015/07, 2015/09-2016/01</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(graph/s/s_graph)).
&ndash;:&ndash; use_module(library(list_ext)).
&ndash;:&ndash; use_module(library(option_ext)).
&ndash;:&ndash; use_module(library(ordsets)).</p>

<h2>&ndash;:&ndash; use_module(library(pairs)).</h2>

<p>&ndash;:&ndash; predicate_options(build_export_graph/4, 4, [
&ndash;     pass_to(edge_term/3, 3),
&ndash;     pass_to(graph_attributes/2, 2),
&ndash;     pass_to(vertex_term/3, 3)
&ndash;   ]).
&ndash;:&ndash; predicate_options(edge_term/3, 3, [
&ndash;     edge_arrowhead(+callable),
&ndash;     edge_color(+callable),
&ndash;     edge_id(+callable),
&ndash;     edge_label(+callable),
&ndash;     edge_penwidth(+callable),
&ndash;     edge_style(+callable)
&ndash;   ]).
&ndash;:&ndash; predicate_options(graph_attributes/2, 2, [
&ndash;     graph_charset(+oneof([&lsquo;iso-8859-1&rsquo;,&lsquo;Latin1&rsquo;,&lsquo;UTF-8&rsquo;])),
&ndash;     graph_colorscheme(+oneof([none,svg,x11])),
&ndash;     graph_directed(+boolean),
&ndash;     graph_fontsize(+float),
&ndash;     graph_label(+atom),
&ndash;     graph_overlap(+boolean)
&ndash;   ]).
&ndash;:&ndash; predicate_options(vertex_term/3, 3, [
&ndash;     vertex_color(+callable),
&ndash;     vertex_id(+callable),
&ndash;     vertex_image(+callable),
&ndash;     vertex_label(+callable),
&ndash;     vertex_peripheries(+callable),
&ndash;     vertex_position(+callable),
&ndash;     vertex_rank(+callable),
&ndash;     vertex_shape(+callable),
&ndash;     vertex_uri(+callable)</p>

<h2>&ndash;   ]).</h2>

<h2>&ndash;:&ndash; meta_predicate(build_export_graph(+,&ndash;,:)).</h2>

<p>-is_meta(edge_arrowhead).
-is_meta(edge_color).
-is_meta(edge_id).
-is_meta(edge_label).
-is_meta(edge_penwidth).
-is_meta(edge_style).
-is_meta(vertex_color).
-is_meta(vertex_id).
-is_meta(vertex_image).
-is_meta(vertex_label).
-is_meta(vertex_peripheries).
-is_meta(vertex_position).
-is_meta(vertex_rank).
-is_meta(vertex_shape).</p>

<h2>-is_meta(vertex_uri).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<p>&ndash;%! build_export_graph(+Graph, -ExportGraph:compound) is det.</p>

<h2>&ndash;% Wrapper around build_export_graph/3 with default options.</h2>

<p>-build_export_graph(G, ExportG):&ndash;</p>

<h2>&ndash;  build_export_graph(G, ExportG, []).</h2>

<p>&ndash;
&ndash;%! build_export_graph(
&ndash;%!   +Graph,
&ndash;%!   -ExportGraph:compound,
&ndash;%!   +Options:list(compound)
&ndash;%! ) is det.
&ndash;% Graph is either:
&ndash;%   * a coumpound term <code>graph(Vs,Es)</code>, or
&ndash;%   * an unlabeled graph as defined by <code>library(ugraph)</code>.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   * <code>vertex_rank(:RankFunction)</code>
&ndash;%     Assigns a non-negative integer to each vertex.</p>

<h2>&ndash;%     No default.</h2>

<p>-build_export_graph(G, graph(VTerms2,VRanks,ETerms,GAttrs), Opts1):&ndash;
&ndash;  graph_components(G, Vs, Es),
&ndash;  meta_options(is_meta, Opts1, Opts2),
&ndash;  maplist(vertex_term0(Vs, Opts2), Vs, VTerms1),
&ndash;  build_export_ranks(Vs, VTerms1, VRanks, VTerms2, Opts2),
&ndash;  maplist(edge_term0(Vs, Opts2), Es, ETerms),</p>

<h2>&ndash;  graph_attributes(GAttrs, Opts2).</h2>

<h2>-vertex_term0(Vs, Opts, V, VTerm) :&ndash; vertex_term(Vs, V, VTerm, Opts).</h2>

<h2>-edge_term0(Vs, Opts, E, ETerm) :&ndash; edge_term(Vs, E, ETerm, Opts).</h2>

<p>-graph_components(graph(Vs,Es), Vs, Es):&ndash; !.
-graph_components(G, Vs, Es):&ndash;</p>

<h2>&ndash;  s_graph_components(G, Vs, Es).</h2>

<p>-build_export_ranks(Vs, VTerms, VRanks, [], Opts):&ndash;
&ndash;  option(vertex_rank(VRank_2), Opts), !,
&ndash;  maplist(VRank_2, Vs, Ranks),
&ndash;  pairs_keys_values(Pairs, Ranks, VTerms),
&ndash;  group_pairs_by_key(Pairs, GroupedPairs),
&ndash;  build_export_rank_terms(GroupedPairs, VRanks).</p>

<h2>-build_export_ranks(<em>, VTerms, [], VTerms, </em>).</h2>

<p>-build_export_rank_terms([N-VTerms|T1], [RankTerm-VTerms|T2]):&ndash; !,
&ndash;  build_export_rank_term(N, RankTerm),
&ndash;  build_export_rank_terms(T1, T2).</p>

<h2>-build_export_rank_terms([], []).</h2>

<p>-build_export_rank_term(N, vertex(Id,[label(&ldquo;&rdquo;),shape(none)])):&ndash;</p>

<h2>&ndash;  format(atom(Id), &ldquo;r~d&rdquo;, [N]).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! edge_term(
&ndash;%!   +Vertices:ordset(compound),
&ndash;%!   +Edge:compound,
&ndash;%!   -EdgeTerm:compound,
&ndash;%!   +Options:list(compound)
&ndash;%! ) is det.
&ndash;% The following options are supported:
&ndash;%   * <code>edge_arrowhead(+callable)</code>
&ndash;%     No default.
&ndash;%   * <code>edge_color(+callable)</code>
&ndash;%     No default.
&ndash;%   * <code>edge_id(+callable)</code>
&ndash;%     Function that assignes the unique identifiers for an edge&rsquo;s
&ndash;%     incident vertices.
&ndash;%   * <code>edge_label(+callable)</code>
&ndash;%     No default.
&ndash;%   * <code>edge_penwidth(+callable)</code>
&ndash;%     No default.
&ndash;%   * <code>edge_style(+callable)</code></p>

<h2>&ndash;%     No default.</h2>

<p>-edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;
&ndash;  % Arrowhead
&ndash;  if_option(edge_arrowhead(Arrowhead_2), Opts,
&ndash;    call(Arrowhead_2, E, EArrowhead)</p>

<h2>&ndash;  ),</h2>

<ul>
<li>% Color.

<ul>
<li>if_option(edge_color(ColorFunction), Opts, call(ColorFunction, E, EColor)),</li>
</ul>
</li>
<li></li>
<li>% Id.</li>
<li>(   option(edge_id(Id_2), Opts)</li>
<li>&ndash;>  call(Id_2, E, FromId, ToId)</li>
<li>;   edge_components(E, FromV, ToV),</li>
<li>   nth0chk(FromId, Vs, FromV),</li>
<li>   nth0chk(ToId, Vs, ToV)

<ul>
<li>),</li>
</ul>
</li>
<li></li>
<li>% Label.

<ul>
<li>if_option(edge_label(ELabel_3), Opts, string_phrase(dcg_call(ELabel_3, E), ELabel)),</li>
</ul>
</li>
<li></li>
<li>% Penwidth.

<ul>
<li>if_option(edge_penwidth(Penwidth_2), Opts, call(Penwidth_2, E, EPenwidth)),</li>
</ul>
</li>
<li></li>
<li>% Style.

<ul>
<li>if_option(edge_style(Style_2), Opts, call(Style_2, E, EStyle)),</li>
</ul>
</li>
<li></li>
<li>exclude(</li>
<li> option_has_var_value,</li>
<li> [</li>
<li>   arrowhead(EArrowhead),</li>
<li>   color(EColor),</li>
<li>   label(ELabel),</li>
<li>   penwidth(EPenwidth),</li>
<li>   style(EStyle)</li>
<li> ],</li>
<li> EAttrs

<h2>&ndash;  ).</h2>

<h2>&ndash;</h2>

&ndash;%! graph_attributes(
&ndash;%!   -GraphAttributes:list(compound),
&ndash;%!   +Options:list(compound)
&ndash;%! ) is det.
&ndash;% The following options are supported:
&ndash;%   * <code>graph_charset(+oneof(['iso-8859-1','Latin1','UTF-8']))</code>
&ndash;%     The name of the character set that is used to encode text in the graph.
&ndash;%     Default: <code>UTF-8</code>.
&ndash;%   * <code>graph_colorscheme(+oneof([none,svg,x11]))</code>
&ndash;%     The colorscheme from which the color in this graph are taken.
&ndash;%     Default: <code>x11</code>.
&ndash;%   * <code>graph_directed(+boolean)</code>
&ndash;%     Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
&ndash;%     Default: <code>false</code>.
&ndash;%   * <code>graph_fontsize(+float)</code>
&ndash;%     The font size of text in the graph.
&ndash;%     Default: <code>11.0</code>.
&ndash;%   * <code>graph_label(+atom)</code>
&ndash;%     The graph label.
&ndash;%     No default.
&ndash;%   * <code>graph_overlap(+boolean)</code>
&ndash;%     Whether the vertices are allowed to overlap.

<h2>&ndash;%     Default: <code>false</code>.</h2>

<p>-graph_attributes(GAttrs, Opts):&ndash;</p></li>
<li>% Characer set.</li>
<li>option(graph_charset(Charset), Opts, &lsquo;UTF-8&rsquo;),</li>
<li>% Colorscheme.</li>
<li>option(graph_colorscheme(Colorscheme), Opts, x11),</li>
<li>% Directed.</li>
<li>option(graph_directed(Directed), Opts, false),</li>
<li>% Fontsize.</li>
<li>option(graph_fontsize(Fontsize), Opts, 11.0),</li>
<li>% Label.</li>
<li>% Defaults to the empty string.</li>
<li>option(graph_label(GLabel), Opts, &lsquo;&ldquo;&rdquo;&rsquo;),</li>
<li>% Overlap.</li>
<li>option(graph_overlap(Overlap), Opts, false),</li>
<li>exclude(</li>
<li> option_has_var_value,</li>
<li> [</li>
<li>   charset(Charset),</li>
<li>   colorscheme(Colorscheme),</li>
<li>   directed(Directed),</li>
<li>   fontsize(Fontsize),</li>
<li>   label(GLabel),</li>
<li>   overlap(Overlap)</li>
<li> ],</li>
<li> GAttrs

<h2>&ndash;  ).</h2>

<h2>&ndash;</h2>

&ndash;%! vertex_term(
&ndash;%!   +Vertices:ordset(compound),
&ndash;%!   +Vertex:compound,
&ndash;%!   -VertexTerm:compound,
&ndash;%!   +Options:list(compound)
&ndash;%! ) is det.
&ndash;% The following options are supported:
&ndash;%   * <code>vertex_color(:ColorFunction)</code>
&ndash;%     A function that assigns colors to vertices.
&ndash;%     No default.
&ndash;%   * <code>vertex_id(:ColorFunction)</code>
&ndash;%     A functions that assigns unique identifiers to vertices.
&ndash;%   * <code>vertex_image(:ImageFunction)</code>
&ndash;%     A function that assigns images to vertices.
&ndash;%     No default.
&ndash;%   * <code>vertex_label(:LabelFunction)</code>
&ndash;%     A function that assigns labels to vertices.
&ndash;%     No default.
&ndash;%   * <code>vertex_peripheries(:PeripheriesFunction)</code>
&ndash;%     A function that assinges peripheries to vertices.
&ndash;%     No default.
&ndash;%   * <code>vertex_position(:PositionFunction)</code>
&ndash;%     No default.
&ndash;%   * <code>vertex_shape(:ShapeFunction)</code>
&ndash;%     A function that assinges shapes to vertices.
&ndash;%     No default.

<h2>&ndash;%   * <code>vertex_uri(:UriFunction)</code></h2>

<p>-vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;</p></li>
<li>% Color.

<ul>
<li>if_option(vertex_color(Color_2), Opts, call(Color_2, V, VColor)),</li>
</ul>
</li>
<li></li>
<li>% Id.

<ul>
<li>(option(vertex_id(Id_2), Opts) &ndash;> call(Id_2, V, VId) ; nth0chk(VId, Vs, V)),</li>
</ul>
</li>
<li></li>
<li>% Image.

<h2>&ndash;  ignore(if_option(vertex_image(Image_2), Opts, call(Image_2, V, VImage))),</h2></li>
<li>% Label.

<h2>&ndash;  if_option(vertex_label(VLabel_2), Opts, string_phrase(dcg_call(VLabel_2, V), VLabel)),</h2></li>
<li>% Peripheries.</li>
<li>if_option(vertex_peripheries(Peripheries_2), Opts,</li>
<li> call(Peripheries_2, V, VPeripheries)

<h2>&ndash;  ),</h2></li>
<li>% Position.</li>
<li>if_option(vertex_position(Position_4), Opts,</li>
<li> call(Position_4, Vs, Opts, V, VPosition)

<h2>&ndash;  ),</h2></li>
<li>% Shape.

<ul>
<li>if_option(vertex_shape(Shape_2), Opts, call(Shape_2, V, VShape)),</li>
</ul>
</li>
<li></li>
<li>% URI

<h2>&ndash;  if_option(vertex_uri(Uri_2), Opts, call(Uri_2, V, VUri)),</h2></li>
<li>exclude(</li>
<li> option_has_var_value,</li>
<li> [</li>
<li>   color(VColor),</li>
<li>   image(VImage),</li>
<li>   label(VLabel),</li>
<li>   peripheries(VPeripheries),</li>
<li>   pos(VPosition),</li>
<li>   shape(VShape),</li>
<li>   &lsquo;URL&rsquo;(VUri)</li>
<li> ],</li>
<li> VAttrs

<h2>&ndash;  ).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

<h2>&ndash;%! edge_components(+Edge:compound, -FromV, -ToV) is det.</h2>

<p>-edge_components(edge(FromV,_,ToV), FromV, ToV):&ndash; !.
-edge_components(edge(FromV,ToV), FromV, ToV):&ndash; !.
-edge_components(FromV-ToV, FromV, ToV):&ndash; !.
diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
deleted file mode 100644
index f55fce5..0000000
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ /dev/null
@@ -1,421 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_attr_type,</li>
<li>[</li>
<li> gv_attr_type//1, % ?Type:atom</li>
<li> addDouble//1, % +Double:float</li>
<li> addPoint//1, % +Point:compound</li>
<li> arrowType//1, % +ArrowType:atom</li>
<li> bool//1, % +Boolean:boolean</li>
<li> clusterMode//1, % +ClusterMode:atom</li>
<li> dirType//1, % +DirectionType:oneof([back,both,forward,none])</li>
<li> double//1, % +Double:float</li>
<li> doubleList//1, % +Doubles:list(float)</li>
<li> escString//1,</li>
<li> %layerList//1,</li>
<li> %layerRange//1,</li>
<li> lblString//1,</li>
<li> int//1, % +Integer:integer</li>
<li> outputMode//1, % +OutputMode:atom</li>
<li> %packMode//1,</li>
<li> pagedir//1, % +Pagedir:atom</li>
<li> point//1, % +Point:compound</li>
<li> pointList//1, % +Points:list(compound)</li>
<li> %portPos//1,</li>
<li> quadType//1, % +QuadType:atom</li>
<li> rankType//1, % +RankType:atom</li>
<li> rankdir//1, % +RankDirection:atom</li>
<li> rect//1, % +Rectangle:compound</li>
<li> shape//1,</li>
<li> smoothType//1, % +SmoothType:atom</li>
<li> %splineType//1,</li>
<li> %startType//1,</li>
<li> string//1, % ?Content:atom</li>
<li> style//2 % +Context:oneof([cluster,edge,node])</li>
<li><pre><code>      % +Style:atom
</code></pre></li>
<li> %viewPort//1</li>
<li>]
&ndash;).
&ndash;:&ndash; reexport(</li>
<li>library(gv/gv_color),</li>
<li>[</li>
<li> color//1, % +Color:compound</li>
<li> colorList//1 % +ColorList:list(compound)</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz attribute types</h2>

&ndash;@author Wouter Beek
&ndash;@version 2015/07, 2015/11, 2016/02

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(dcg/dcg_ext), except([string//1])).

<h2>&ndash;:&ndash; use_module(library(gv/gv_html)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_attr_type(?Type:atom) is nondet.</h2>

-gv_attr_type(addDouble)   &mdash;> &ldquo;addDouble&rdquo;.
-gv_attr_type(addPoint)    &mdash;> &ldquo;addPoint&rdquo;.
-gv_attr_type(arrowType)   &mdash;> &ldquo;arrowType&rdquo;.
-gv_attr_type(bool)        &mdash;> &ldquo;bool&rdquo;.
-gv_attr_type(color)       &mdash;> &ldquo;color&rdquo;.
-gv_attr_type(colorList)   &mdash;> &ldquo;colorList&rdquo;.
-gv_attr_type(clusterMode) &mdash;> &ldquo;clusterMode&rdquo;.
-gv_attr_type(dirType)     &mdash;> &ldquo;dirType&rdquo;.
-gv_attr_type(double)      &mdash;> &ldquo;double&rdquo;.
-gv_attr_type(doubleList)  &mdash;> &ldquo;doubleList&rdquo;.
-gv_attr_type(escString)   &mdash;> &ldquo;escString&rdquo;.
-gv_attr_type(layerList)   &mdash;> &ldquo;layerList&rdquo;.
-gv_attr_type(layerRange)  &mdash;> &ldquo;layerRange&rdquo;.
-gv_attr_type(lblString)   &mdash;> &ldquo;lblString&rdquo;.
-gv_attr_type(int)         &mdash;> &ldquo;int&rdquo;.
-gv_attr_type(outputMode)  &mdash;> &ldquo;outputMode&rdquo;.
-gv_attr_type(packMode)    &mdash;> &ldquo;packMode&rdquo;.
-gv_attr_type(pagedir)     &mdash;> &ldquo;pagedir&rdquo;.
-gv_attr_type(point)       &mdash;> &ldquo;point&rdquo;.
-gv_attr_type(pointList)   &mdash;> &ldquo;pointList&rdquo;.
-gv_attr_type(portPos)     &mdash;> &ldquo;portPos&rdquo;.
-gv_attr_type(quadType)    &mdash;> &ldquo;quadType&rdquo;.
-gv_attr_type(rankType)    &mdash;> &ldquo;rankType&rdquo;.
-gv_attr_type(rankdir)     &mdash;> &ldquo;rankdir&rdquo;.
-gv_attr_type(rect)        &mdash;> &ldquo;rect&rdquo;.
-gv_attr_type(shape)       &mdash;> &ldquo;shape&rdquo;.
-gv_attr_type(smoothType)  &mdash;> &ldquo;smoothType&rdquo;.
-gv_attr_type(splineType)  &mdash;> &ldquo;splineType&rdquo;.
-gv_attr_type(startType)   &mdash;> &ldquo;startType&rdquo;.
-gv_attr_type(string)      &mdash;> &ldquo;string&rdquo;.
-gv_attr_type(style)       &mdash;> &ldquo;style&rdquo;.

<h2>-gv_attr_type(viewPort)    &mdash;> &ldquo;viewPort&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! addDouble(+Float:float)// .

<h2>&ndash;% An <em>addDouble</em> is represented by a Prolog float.</h2>

<h2>-addDouble(N) &mdash;> (&ldquo;+&rdquo;, ! ; &ldquo;&rdquo;), float(N).</h2>

<h2>&ndash;</h2>

&ndash;%! addPoint(+Point:compound)// .
&ndash;% An <em>addPoint</em> is represented by a compound of the following form:

<h2>&ndash;% <code>point(X:float,Y:float,InputOnly:boolean)</code>.</h2>

<h2>-addPoint(Point) &mdash;> (&ldquo;+&rdquo;, ! ; &ldquo;&rdquo;), point(Point).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! arrowType(+ArrowType:atom)// .</h2>

-arrowType(V) &mdash;> primitive_shape(V).
-arrowType(V) &mdash;> derived(V).

<h2>-arrowType(V) &mdash;> backwards_compatible(V).</h2>

-primitive_shape(box)     &mdash;> &ldquo;box&rdquo;.
-primitive_shape(crow)    &mdash;> &ldquo;crow&rdquo;.
-primitive_shape(circle)  &mdash;> &ldquo;circle&rdquo;.
-primitive_shape(diamond) &mdash;> &ldquo;diamond&rdquo;.
-primitive_shape(dot)     &mdash;> &ldquo;dot&rdquo;.
-primitive_shape(inv)     &mdash;> &ldquo;inv&rdquo;.
-primitive_shape(none)    &mdash;> &ldquo;none&rdquo;.
-primitive_shape(normal)  &mdash;> &ldquo;normal&rdquo;.
-primitive_shape(tee)     &mdash;> &ldquo;tee&rdquo;.

<h2>-primitive_shape(vee)     &mdash;> &ldquo;vee&rdquo;.</h2>

-derived(odot)     &mdash;> &ldquo;odot&rdquo;.
-derived(invdot)   &mdash;> &ldquo;invdot&rdquo;.
-derived(invodot)  &mdash;> &ldquo;invodot&rdquo;.
-derived(obox)     &mdash;> &ldquo;obox&rdquo;.

<h2>-derived(odiamond) &mdash;> &ldquo;odiamond&rdquo;.</h2>

-backwards_compatible(ediamond) &mdash;> &ldquo;ediamond&rdquo;.
-backwards_compatible(empty)    &mdash;> &ldquo;empty&rdquo;.
-backwards_compatible(halfopen) &mdash;> &ldquo;halfopen&rdquo;.
-backwards_compatible(invempty) &mdash;> &ldquo;invempty&rdquo;.

<h2>-backwards_compatible(open)     &mdash;> &ldquo;open&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! bool(+Value:boolean)// .</h2>

-bool(false) &mdash;> &ldquo;false&rdquo;.
-bool(false) &mdash;> &ldquo;no&rdquo;.
-bool(true)  &mdash;> &ldquo;true&rdquo;.

<h2>-bool(true)  &mdash;> &ldquo;yes&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! clusterMode(+ClusterMode:atom)// .</h2>

-clusterMode(global) &mdash;> &ldquo;global&rdquo;.
-clusterMode(local) &mdash;> &ldquo;local&rdquo;.

<h2>-clusterMode(none) &mdash;> &ldquo;none&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! dirType(+DirectionType:oneof([back,both,forward,none]))// .</h2>

-dirType(back) &mdash;> &ldquo;back&rdquo;.
-dirType(both) &mdash;> &ldquo;both&rdquo;.
-dirType(forward) &mdash;> &ldquo;forward&rdquo;.

<h2>-dirType(none) &mdash;> &ldquo;none&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! double(+Double:float)// .</h2>

<h2>-double(N) &mdash;> float(N).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! doubleList(+Doubles:list(float))// .</h2>

<h2>-doubleList([H|T]) &mdash;> double(H), (&ldquo;:&rdquo;, !, doubleList(T) ; {T = []}).</h2>

<h2>&ndash;</h2>

&ndash;%! escString(+String:or([atom,string]))// .

<h2>&ndash;% @tbd Support for context-dependent replacements.</h2>

<p>-escString(S1) &mdash;></p></li>
<li>{(  string(S1)</li>
<li>&ndash;>  string_phrase(escape_double_quotes, S1, S2)</li>
<li>;   atom_phrase(escape_double_quotes, S1, S2)</li>
<li>)},

<h2>&ndash;  &ldquo;\&rdquo;&ldquo;, atom(S2), &rdquo;\&ldquo;&rdquo;.</h2>

-escape_double_quotes, [0'\,0'&ldquo;] &mdash;> [0'&rdquo;], !, escape_double_quotes.
-escape_double_quotes, [X]        &mdash;> [X],   !, escape_double_quotes.

<h2>-escape_double_quotes             &mdash;> &ldquo;&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;% @tbd layerList</h2>

<h2>&ndash;</h2>

<h2>&ndash;% @tbd layerRange</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! lblString(+String:compound)// .</h2>

-lblString(html_like_label(V)) &mdash;> gv_html_like_label(V).

<h2>-lblString(V) &mdash;> escString(V).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! int(+Integer:integer)// .</h2>

<h2>-int(V) &mdash;> integer(V).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! outputMode(+OutputMode:atom)// .</h2>

-outputMode(breadthfirst) &mdash;> &ldquo;breadthfirst&rdquo;.
-outputMode(edgesfirst)   &mdash;> &ldquo;edgesfirst&rdquo;.

<h2>-outputMode(nodesfirst)   &mdash;> &ldquo;nodesfirst&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;% @tbd packMode</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! pagedir(+PageDirection:atom)// .</h2>

-pagedir(&lsquo;BL&rsquo;) &mdash;> &ldquo;BL&rdquo;.
-pagedir(&lsquo;BR&rsquo;) &mdash;> &ldquo;BR&rdquo;.
-pagedir(&lsquo;LB&rsquo;) &mdash;> &ldquo;LB&rdquo;.
-pagedir(&lsquo;LT&rsquo;) &mdash;> &ldquo;LT&rdquo;.
-pagedir(&lsquo;RB&rsquo;) &mdash;> &ldquo;RB&rdquo;.
-pagedir(&lsquo;RT&rsquo;) &mdash;> &ldquo;RT&rdquo;.
-pagedir(&lsquo;TL&rsquo;) &mdash;> &ldquo;TL&rdquo;.

<h2>-pagedir(&lsquo;TR&rsquo;) &mdash;> &ldquo;TR&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! point(+Point:compound)// .
&ndash;% A <em>point</em> is represented by a compound of the following form:

<h2>&ndash;% <code>point(X:float,Y:float,Changeable:boolean)</code>.</h2>

<p>-point(point(X,Y,Changeable)) &mdash;></p></li>
<li>float(X), &ldquo;,&rdquo;, float(Y),

<h2>&ndash;  input_changeable(Changeable).</h2>

-input_changeable(false) &mdash;> &ldquo;&rdquo;.

<h2>-input_changeable(true) &mdash;> &ldquo;!&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! pointList(+Points:list(compound))// .</h2>

-pointList(Points) &mdash;>

<h2>&ndash;  *(point, Points).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% @tbd portPos</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! quadType(+QuadType:atom)// .</h2>

-quadType(fast) &mdash;> &ldquo;fast&rdquo;.
-quadType(none) &mdash;> &ldquo;none&rdquo;.

<h2>-quadType(normal) &mdash;> &ldquo;normal&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! rankType(+RankType:atom)// .</h2>

-rankType(max) &mdash;> &ldquo;max&rdquo;.
-rankType(min) &mdash;> &ldquo;min&rdquo;.
-rankType(same) &mdash;> &ldquo;same&rdquo;.
-rankType(sink) &mdash;> &ldquo;sink&rdquo;.

<h2>-rankType(source) &mdash;> &ldquo;source&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! rankdir(+RankDirection:oneof([&lsquo;BT&rsquo;,&lsquo;LR&rsquo;,&lsquo;RL&rsquo;,&lsquo;TB&rsquo;]))// .</h2>

-rankdir(&lsquo;BT&rsquo;) &mdash;> &ldquo;BT&rdquo;.
-rankdir(&lsquo;LR&rsquo;) &mdash;> &ldquo;LR&rdquo;.
-rankdir(&lsquo;RL&rsquo;) &mdash;> &ldquo;RL&rdquo;.

<h2>-rankdir(&lsquo;TB&rsquo;) &mdash;> &ldquo;TB&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! rect(+Rectangle:compound)// .</h2>

<p>-rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;></p></li>
<li>float(LowerLeftX), &ldquo;,&rdquo;,</li>
<li>float(LowerLeftY), &ldquo;,&rdquo;,</li>
<li>float(UpperRightX), &ldquo;,&rdquo;,

<h2>&ndash;  float(UpperRightY).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! shape(+Shape:atom)// .</h2>

<h2>-shape(V) &mdash;> {polygon_based_shape(V)}, atom(V).</h2>

-polygon_based_shape(assembly).
-polygon_based_shape(box).
-polygon_based_shape(box3d).
-polygon_based_shape(cds).
-polygon_based_shape(circle).
-polygon_based_shape(component).
-polygon_based_shape(diamond).
-polygon_based_shape(doublecircle).
-polygon_based_shape(doubleoctagon).
-polygon_based_shape(egg).
-polygon_based_shape(ellipse).
-polygon_based_shape(fivepoverhang).
-polygon_based_shape(folder).
-polygon_based_shape(hexagon).
-polygon_based_shape(house).
-polygon_based_shape(insulator).
-polygon_based_shape(invhouse).
-polygon_based_shape(invtrapezium).
-polygon_based_shape(invtriangle).
-polygon_based_shape(larrow).
-polygon_based_shape(lpromoter).
-polygon_based_shape(&lsquo;Mcircle&rsquo;).
-polygon_based_shape(&lsquo;Mdiamond&rsquo;).
-polygon_based_shape(&lsquo;Msquare&rsquo;).
-polygon_based_shape(none).
-polygon_based_shape(note).
-polygon_based_shape(noverhang).
-polygon_based_shape(octagon).
-polygon_based_shape(oval).
-polygon_based_shape(parallelogram).
-polygon_based_shape(pentagon).
-polygon_based_shape(plaintext).
-polygon_based_shape(point).
-polygon_based_shape(polygon).
-polygon_based_shape(primersite).
-polygon_based_shape(promoter).
-polygon_based_shape(proteasesite).
-polygon_based_shape(proteinstab).
-polygon_based_shape(rarrow).
-polygon_based_shape(rect).
-polygon_based_shape(rectangle).
-polygon_based_shape(restrictionsite).
-polygon_based_shape(ribosite).
-polygon_based_shape(rnastab).
-polygon_based_shape(rpromoter).
-polygon_based_shape(septagon).
-polygon_based_shape(signature).
-polygon_based_shape(square).
-polygon_based_shape(tab).
-polygon_based_shape(terminator).
-polygon_based_shape(threepoverhang).
-polygon_based_shape(trapezium).
-polygon_based_shape(triangle).
-polygon_based_shape(tripleoctagon).

<h2>-polygon_based_shape(utr).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! smoothType(+SmoothType:atom)// .</h2>

<h2>-smoothType(V) &mdash;> {smoothType(V)}, atom(V).</h2>

-smoothType(avg_dist).
-smoothType(graph_dist).
-smoothType(none).
-smoothType(power_dist).
-smoothType(rng).
-smoothType(spring).

<h2>-smoothType(triangle).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% @tbd splineType</h2>

<h2>&ndash;</h2>

<h2>&ndash;% @tbd startType</h2>

<h2>&ndash;</h2>

&ndash;%! string(?String:atom)// .

<h2>&ndash;% A GraphViz string.</h2>

<h2>-string(Content) &mdash;> &ldquo;\&rdquo;&ldquo;, atom(Content), &rdquo;\&ldquo;&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! style(?Context:oneof([cluster,edge,node]), ?Style:atom) is nondet.</h2>

<h2>-style(Context, Style) &mdash;> {style(Context, Style)}, atom(Style).</h2>

-style(cluster, bold).
-style(cluster, dashed).
-style(cluster, dotted).
-style(cluster, filled).
-style(cluster, rounded).
-style(cluster, solid).
-style(cluster, striped).
-style(edge, bold).
-style(edge, dashed).
-style(edge, dotted).
-style(edge, solid).
-style(node, bold).
-style(node, dashed).
-style(node, diagonals).
-style(node, dotted).
-style(node, filled).
-style(node, rounded).
-style(node, solid).
-style(node, striped).

<h2>-style(node, wedged).</h2>

<h2>&ndash;</h2>

<p>&ndash;% @tbd viewPort
diff &mdash;git a/prolog/gv/gv_attrs.data b/prolog/gv/gv_attrs.data
deleted file mode 100644
index 95fc680..0000000
&mdash;&ndash; a/prolog/gv/gv_attrs.data
+++ /dev/null
@@ -1,169 +0,0 @@
-gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;).
-gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>G59448,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
-gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>G59644,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;).
-gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>G60571,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)*sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;).
-gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;).
-gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;).
-gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;).
-gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(edgetarget,[edge],[escString],<em>G63711,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
-gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
-gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;).
-gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(headtarget,[edge],[escString],</em>G4892,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
-gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;).
-gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
-gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
-gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(inputscale,[graph],[double],<em>G6250,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
-gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;).
-gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(labeltarget,[edge],[escString],</em>G8276,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
-gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
-gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;).
-gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
-gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;).
-gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;).
-gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
-gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
-gv_attr(nslimitnslimit1,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
-gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;).
-gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;).
-gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
-gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
-gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
-gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;).
-gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;).
-gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;).
-gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;).
-gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
-gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
-gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
-gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;).
-gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
-gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;).
-gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
-gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
-gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
-gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;).
-gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(tailtarget,[edge],[escString],<em>G21528,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
-gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>G21878,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
-gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
-gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;).
-gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;).
-gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;).
-gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;).
-gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;).
-gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
-gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
-gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
deleted file mode 100644
index 4a92d5b..0000000
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ /dev/null
@@ -1,76 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_attrs,</li>
<li>[</li>
<li> gv_attr_value//2 % +Context:oneof([cluster,edge,graph,node,subgraph])</li>
<li><pre><code>              % +Attr
</code></pre></li>
<li>]
&ndash;).

<h2>&ndash;:&ndash; ensure_loaded(library(&lsquo;gv/gv_attrs.data&rsquo;)).</h2>

<h2>&ndash;/** <module> GraphViz attributes</h2>

&ndash;@author Wouter Beek
&ndash;@version 2015/07-2015/08, 2015/10, 2016/03

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(error)).
&ndash;:&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
&ndash;:&ndash; use_module(library(lists)).

<h2>&ndash;:&ndash; use_module(library(os/file_ext)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

&ndash;%! gv_attr_value(+Context, +Attr)// is det.
&ndash;% Uses the default value in case Value is uninstantiated.
&ndash;% Otherwise, performs a typecheck and converts the given value.
&ndash;%

<h2>&ndash;% Context can be either <code>cluster</code>, <code>edge</code>, <code>graph</code>, <code>node</code> or <code>subgraph</code>.</h2>

<p>&ndash;% Use the default if no value is given.
-gv_attr_value(Context, Name=Value) &mdash;></p></li>
<li>{</li>
<li> var(Value),</li>
<li> gv_attr(Name, UsedBy, <em>, DefaultValue, </em>, _),</li>
<li> % Check validity of context.</li>
<li> memberchk(Context, UsedBy)</li>
<li>}, !,</li>
<li>gv_attr_value(Context, Name=DefaultValue).
-gv_attr_value(Context, Name=Value) &mdash;></li>
<li>{</li>
<li> % Check the validity of the context argument.</li>
<li> gv_attr(Name, UsedBy, Types, <em>, Minimum, </em>),

<h2>&ndash;    memberchk(Context, UsedBy),</h2></li>
<li> %  Pick a value type non-deterministically.

<h2>&ndash;    member(Type, Types),</h2></li>
<li> % The <code>style</code> type is the only one that requires the context argument.</li>
<li> (   Type == style</li>
<li> &ndash;>  Dcg =.. [Type,Context]</li>
<li> ;   Dcg =.. [Type]

<h2>&ndash;    ),</h2></li>
<li> % Check validity of Value w.r.t. minimum value &mdash; if available.</li>
<li> check_minimum(Value, Minimum)</li>
<li>}, !,</li>
<li>dcg_call(gv_attr_type:Dcg, Value).
-gv_attr_value(<em>, Name=</em>) &mdash;>

<h2>&ndash;  {existence_error(gv_attr, Name)}.</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

&ndash;%! check_minimum(+Value:atom, +Minimum:number) is semidet.

<h2>&ndash;% Trivially succeeds if no minimum value is available for a given attribute.</h2>

<p>-check_minimum(_, &lsquo;&rsquo;):&ndash; !.
-check_minimum(V, Min1):&ndash;</p></li>
<li>atom_number(Min1, Min2),</li>
<li>Min2 =&lt; V.
diff &mdash;git a/prolog/gv/gv_color.data b/prolog/gv/gv_color.data
deleted file mode 100644
index 166b13c..0000000
&mdash;&ndash; a/prolog/gv/gv_color.data
+++ /dev/null
@@ -1,802 +0,0 @@
-gv_color(x11,aliceblue).
-gv_color(x11,antiquewhite).
-gv_color(x11,antiquewhite1).
-gv_color(x11,antiquewhite2).
-gv_color(x11,antiquewhite3).
-gv_color(x11,antiquewhite4).
-gv_color(x11,aquamarine).
-gv_color(x11,aquamarine1).
-gv_color(x11,aquamarine2).
-gv_color(x11,aquamarine3).
-gv_color(x11,aquamarine4).
-gv_color(x11,azure).
-gv_color(x11,azure1).
-gv_color(x11,azure2).
-gv_color(x11,azure3).
-gv_color(x11,azure4).
-gv_color(x11,beige).
-gv_color(x11,bisque).
-gv_color(x11,bisque1).
-gv_color(x11,bisque2).
-gv_color(x11,bisque3).
-gv_color(x11,bisque4).
-gv_color(x11,black).
-gv_color(x11,blanchedalmond).
-gv_color(x11,blue).
-gv_color(x11,blue1).
-gv_color(x11,blue2).
-gv_color(x11,blue3).
-gv_color(x11,blue4).
-gv_color(x11,blueviolet).
-gv_color(x11,brown).
-gv_color(x11,brown1).
-gv_color(x11,brown2).
-gv_color(x11,brown3).
-gv_color(x11,brown4).
-gv_color(x11,burlywood).
-gv_color(x11,burlywood1).
-gv_color(x11,burlywood2).
-gv_color(x11,burlywood3).
-gv_color(x11,burlywood4).
-gv_color(x11,cadetblue).
-gv_color(x11,cadetblue1).
-gv_color(x11,cadetblue2).
-gv_color(x11,cadetblue3).
-gv_color(x11,cadetblue4).
-gv_color(x11,chartreuse).
-gv_color(x11,chartreuse1).
-gv_color(x11,chartreuse2).
-gv_color(x11,chartreuse3).
-gv_color(x11,chartreuse4).
-gv_color(x11,chocolate).
-gv_color(x11,chocolate1).
-gv_color(x11,chocolate2).
-gv_color(x11,chocolate3).
-gv_color(x11,chocolate4).
-gv_color(x11,coral).
-gv_color(x11,coral1).
-gv_color(x11,coral2).
-gv_color(x11,coral3).
-gv_color(x11,coral4).
-gv_color(x11,cornflowerblue).
-gv_color(x11,cornsilk).
-gv_color(x11,cornsilk1).
-gv_color(x11,cornsilk2).
-gv_color(x11,cornsilk3).
-gv_color(x11,cornsilk4).
-gv_color(x11,crimson).
-gv_color(x11,cyan).
-gv_color(x11,cyan1).
-gv_color(x11,cyan2).
-gv_color(x11,cyan3).
-gv_color(x11,cyan4).
-gv_color(x11,darkgoldenrod).
-gv_color(x11,darkgoldenrod1).
-gv_color(x11,darkgoldenrod2).
-gv_color(x11,darkgoldenrod3).
-gv_color(x11,darkgoldenrod4).
-gv_color(x11,darkgreen).
-gv_color(x11,darkkhaki).
-gv_color(x11,darkolivegreen).
-gv_color(x11,darkolivegreen1).
-gv_color(x11,darkolivegreen2).
-gv_color(x11,darkolivegreen3).
-gv_color(x11,darkolivegreen4).
-gv_color(x11,darkorange).
-gv_color(x11,darkorange1).
-gv_color(x11,darkorange2).
-gv_color(x11,darkorange3).
-gv_color(x11,darkorange4).
-gv_color(x11,darkorchid).
-gv_color(x11,darkorchid1).
-gv_color(x11,darkorchid2).
-gv_color(x11,darkorchid3).
-gv_color(x11,darkorchid4).
-gv_color(x11,darksalmon).
-gv_color(x11,darkseagreen).
-gv_color(x11,darkseagreen1).
-gv_color(x11,darkseagreen2).
-gv_color(x11,darkseagreen3).
-gv_color(x11,darkseagreen4).
-gv_color(x11,darkslateblue).
-gv_color(x11,darkslategray).
-gv_color(x11,darkslategray1).
-gv_color(x11,darkslategray2).
-gv_color(x11,darkslategray3).
-gv_color(x11,darkslategray4).
-gv_color(x11,darkslategrey).
-gv_color(x11,darkturquoise).
-gv_color(x11,darkviolet).
-gv_color(x11,deeppink).
-gv_color(x11,deeppink1).
-gv_color(x11,deeppink2).
-gv_color(x11,deeppink3).
-gv_color(x11,deeppink4).
-gv_color(x11,deepskyblue).
-gv_color(x11,deepskyblue1).
-gv_color(x11,deepskyblue2).
-gv_color(x11,deepskyblue3).
-gv_color(x11,deepskyblue4).
-gv_color(x11,dimgray).
-gv_color(x11,dimgrey).
-gv_color(x11,dodgerblue).
-gv_color(x11,dodgerblue1).
-gv_color(x11,dodgerblue2).
-gv_color(x11,dodgerblue3).
-gv_color(x11,dodgerblue4).
-gv_color(x11,firebrick).
-gv_color(x11,firebrick1).
-gv_color(x11,firebrick2).
-gv_color(x11,firebrick3).
-gv_color(x11,firebrick4).
-gv_color(x11,floralwhite).
-gv_color(x11,forestgreen).
-gv_color(x11,gainsboro).
-gv_color(x11,ghostwhite).
-gv_color(x11,gold).
-gv_color(x11,gold1).
-gv_color(x11,gold2).
-gv_color(x11,gold3).
-gv_color(x11,gold4).
-gv_color(x11,goldenrod).
-gv_color(x11,goldenrod1).
-gv_color(x11,goldenrod2).
-gv_color(x11,goldenrod3).
-gv_color(x11,goldenrod4).
-gv_color(x11,gray).
-gv_color(x11,gray0).
-gv_color(x11,gray1).
-gv_color(x11,gray10).
-gv_color(x11,gray100).
-gv_color(x11,gray11).
-gv_color(x11,gray12).
-gv_color(x11,gray13).
-gv_color(x11,gray14).
-gv_color(x11,gray15).
-gv_color(x11,gray16).
-gv_color(x11,gray17).
-gv_color(x11,gray18).
-gv_color(x11,gray19).
-gv_color(x11,gray2).
-gv_color(x11,gray20).
-gv_color(x11,gray21).
-gv_color(x11,gray22).
-gv_color(x11,gray23).
-gv_color(x11,gray24).
-gv_color(x11,gray25).
-gv_color(x11,gray26).
-gv_color(x11,gray27).
-gv_color(x11,gray28).
-gv_color(x11,gray29).
-gv_color(x11,gray3).
-gv_color(x11,gray30).
-gv_color(x11,gray31).
-gv_color(x11,gray32).
-gv_color(x11,gray33).
-gv_color(x11,gray34).
-gv_color(x11,gray35).
-gv_color(x11,gray36).
-gv_color(x11,gray37).
-gv_color(x11,gray38).
-gv_color(x11,gray39).
-gv_color(x11,gray4).
-gv_color(x11,gray40).
-gv_color(x11,gray41).
-gv_color(x11,gray42).
-gv_color(x11,gray43).
-gv_color(x11,gray44).
-gv_color(x11,gray45).
-gv_color(x11,gray46).
-gv_color(x11,gray47).
-gv_color(x11,gray48).
-gv_color(x11,gray49).
-gv_color(x11,gray5).
-gv_color(x11,gray50).
-gv_color(x11,gray51).
-gv_color(x11,gray52).
-gv_color(x11,gray53).
-gv_color(x11,gray54).
-gv_color(x11,gray55).
-gv_color(x11,gray56).
-gv_color(x11,gray57).
-gv_color(x11,gray58).
-gv_color(x11,gray59).
-gv_color(x11,gray6).
-gv_color(x11,gray60).
-gv_color(x11,gray61).
-gv_color(x11,gray62).
-gv_color(x11,gray63).
-gv_color(x11,gray64).
-gv_color(x11,gray65).
-gv_color(x11,gray66).
-gv_color(x11,gray67).
-gv_color(x11,gray68).
-gv_color(x11,gray69).
-gv_color(x11,gray7).
-gv_color(x11,gray70).
-gv_color(x11,gray71).
-gv_color(x11,gray72).
-gv_color(x11,gray73).
-gv_color(x11,gray74).
-gv_color(x11,gray75).
-gv_color(x11,gray76).
-gv_color(x11,gray77).
-gv_color(x11,gray78).
-gv_color(x11,gray79).
-gv_color(x11,gray8).
-gv_color(x11,gray80).
-gv_color(x11,gray81).
-gv_color(x11,gray82).
-gv_color(x11,gray83).
-gv_color(x11,gray84).
-gv_color(x11,gray85).
-gv_color(x11,gray86).
-gv_color(x11,gray87).
-gv_color(x11,gray88).
-gv_color(x11,gray89).
-gv_color(x11,gray9).
-gv_color(x11,gray90).
-gv_color(x11,gray91).
-gv_color(x11,gray92).
-gv_color(x11,gray93).
-gv_color(x11,gray94).
-gv_color(x11,gray95).
-gv_color(x11,gray96).
-gv_color(x11,gray97).
-gv_color(x11,gray98).
-gv_color(x11,gray99).
-gv_color(x11,green).
-gv_color(x11,green1).
-gv_color(x11,green2).
-gv_color(x11,green3).
-gv_color(x11,green4).
-gv_color(x11,greenyellow).
-gv_color(x11,grey).
-gv_color(x11,grey0).
-gv_color(x11,grey1).
-gv_color(x11,grey10).
-gv_color(x11,grey100).
-gv_color(x11,grey11).
-gv_color(x11,grey12).
-gv_color(x11,grey13).
-gv_color(x11,grey14).
-gv_color(x11,grey15).
-gv_color(x11,grey16).
-gv_color(x11,grey17).
-gv_color(x11,grey18).
-gv_color(x11,grey19).
-gv_color(x11,grey2).
-gv_color(x11,grey20).
-gv_color(x11,grey21).
-gv_color(x11,grey22).
-gv_color(x11,grey23).
-gv_color(x11,grey24).
-gv_color(x11,grey25).
-gv_color(x11,grey26).
-gv_color(x11,grey27).
-gv_color(x11,grey28).
-gv_color(x11,grey29).
-gv_color(x11,grey3).
-gv_color(x11,grey30).
-gv_color(x11,grey31).
-gv_color(x11,grey32).
-gv_color(x11,grey33).
-gv_color(x11,grey34).
-gv_color(x11,grey35).
-gv_color(x11,grey36).
-gv_color(x11,grey37).
-gv_color(x11,grey38).
-gv_color(x11,grey39).
-gv_color(x11,grey4).
-gv_color(x11,grey40).
-gv_color(x11,grey41).
-gv_color(x11,grey42).
-gv_color(x11,grey43).
-gv_color(x11,grey44).
-gv_color(x11,grey45).
-gv_color(x11,grey46).
-gv_color(x11,grey47).
-gv_color(x11,grey48).
-gv_color(x11,grey49).
-gv_color(x11,grey5).
-gv_color(x11,grey50).
-gv_color(x11,grey51).
-gv_color(x11,grey52).
-gv_color(x11,grey53).
-gv_color(x11,grey54).
-gv_color(x11,grey55).
-gv_color(x11,grey56).
-gv_color(x11,grey57).
-gv_color(x11,grey58).
-gv_color(x11,grey59).
-gv_color(x11,grey6).
-gv_color(x11,grey60).
-gv_color(x11,grey61).
-gv_color(x11,grey62).
-gv_color(x11,grey63).
-gv_color(x11,grey64).
-gv_color(x11,grey65).
-gv_color(x11,grey66).
-gv_color(x11,grey67).
-gv_color(x11,grey68).
-gv_color(x11,grey69).
-gv_color(x11,grey7).
-gv_color(x11,grey70).
-gv_color(x11,grey71).
-gv_color(x11,grey72).
-gv_color(x11,grey73).
-gv_color(x11,grey74).
-gv_color(x11,grey75).
-gv_color(x11,grey76).
-gv_color(x11,grey77).
-gv_color(x11,grey78).
-gv_color(x11,grey79).
-gv_color(x11,grey8).
-gv_color(x11,grey80).
-gv_color(x11,grey81).
-gv_color(x11,grey82).
-gv_color(x11,grey83).
-gv_color(x11,grey84).
-gv_color(x11,grey85).
-gv_color(x11,grey86).
-gv_color(x11,grey87).
-gv_color(x11,grey88).
-gv_color(x11,grey89).
-gv_color(x11,grey9).
-gv_color(x11,grey90).
-gv_color(x11,grey91).
-gv_color(x11,grey92).
-gv_color(x11,grey93).
-gv_color(x11,grey94).
-gv_color(x11,grey95).
-gv_color(x11,grey96).
-gv_color(x11,grey97).
-gv_color(x11,grey98).
-gv_color(x11,grey99).
-gv_color(x11,honeydew).
-gv_color(x11,honeydew1).
-gv_color(x11,honeydew2).
-gv_color(x11,honeydew3).
-gv_color(x11,honeydew4).
-gv_color(x11,hotpink).
-gv_color(x11,hotpink1).
-gv_color(x11,hotpink2).
-gv_color(x11,hotpink3).
-gv_color(x11,hotpink4).
-gv_color(x11,indianred).
-gv_color(x11,indianred1).
-gv_color(x11,indianred2).
-gv_color(x11,indianred3).
-gv_color(x11,indianred4).
-gv_color(x11,indigo).
-gv_color(x11,invis).
-gv_color(x11,ivory).
-gv_color(x11,ivory1).
-gv_color(x11,ivory2).
-gv_color(x11,ivory3).
-gv_color(x11,ivory4).
-gv_color(x11,khaki).
-gv_color(x11,khaki1).
-gv_color(x11,khaki2).
-gv_color(x11,khaki3).
-gv_color(x11,khaki4).
-gv_color(x11,lavender).
-gv_color(x11,lavenderblush).
-gv_color(x11,lavenderblush1).
-gv_color(x11,lavenderblush2).
-gv_color(x11,lavenderblush3).
-gv_color(x11,lavenderblush4).
-gv_color(x11,lawngreen).
-gv_color(x11,lemonchiffon).
-gv_color(x11,lemonchiffon1).
-gv_color(x11,lemonchiffon2).
-gv_color(x11,lemonchiffon3).
-gv_color(x11,lemonchiffon4).
-gv_color(x11,lightblue).
-gv_color(x11,lightblue1).
-gv_color(x11,lightblue2).
-gv_color(x11,lightblue3).
-gv_color(x11,lightblue4).
-gv_color(x11,lightcoral).
-gv_color(x11,lightcyan).
-gv_color(x11,lightcyan1).
-gv_color(x11,lightcyan2).
-gv_color(x11,lightcyan3).
-gv_color(x11,lightcyan4).
-gv_color(x11,lightgoldenrod).
-gv_color(x11,lightgoldenrod1).
-gv_color(x11,lightgoldenrod2).
-gv_color(x11,lightgoldenrod3).
-gv_color(x11,lightgoldenrod4).
-gv_color(x11,lightgoldenrodyellow).
-gv_color(x11,lightgray).
-gv_color(x11,lightgrey).
-gv_color(x11,lightpink).
-gv_color(x11,lightpink1).
-gv_color(x11,lightpink2).
-gv_color(x11,lightpink3).
-gv_color(x11,lightpink4).
-gv_color(x11,lightsalmon).
-gv_color(x11,lightsalmon1).
-gv_color(x11,lightsalmon2).
-gv_color(x11,lightsalmon3).
-gv_color(x11,lightsalmon4).
-gv_color(x11,lightseagreen).
-gv_color(x11,lightskyblue).
-gv_color(x11,lightskyblue1).
-gv_color(x11,lightskyblue2).
-gv_color(x11,lightskyblue3).
-gv_color(x11,lightskyblue4).
-gv_color(x11,lightslateblue).
-gv_color(x11,lightslategray).
-gv_color(x11,lightslategrey).
-gv_color(x11,lightsteelblue).
-gv_color(x11,lightsteelblue1).
-gv_color(x11,lightsteelblue2).
-gv_color(x11,lightsteelblue3).
-gv_color(x11,lightsteelblue4).
-gv_color(x11,lightyellow).
-gv_color(x11,lightyellow1).
-gv_color(x11,lightyellow2).
-gv_color(x11,lightyellow3).
-gv_color(x11,lightyellow4).
-gv_color(x11,limegreen).
-gv_color(x11,linen).
-gv_color(x11,magenta).
-gv_color(x11,magenta1).
-gv_color(x11,magenta2).
-gv_color(x11,magenta3).
-gv_color(x11,magenta4).
-gv_color(x11,maroon).
-gv_color(x11,maroon1).
-gv_color(x11,maroon2).
-gv_color(x11,maroon3).
-gv_color(x11,maroon4).
-gv_color(x11,mediumaquamarine).
-gv_color(x11,mediumblue).
-gv_color(x11,mediumorchid).
-gv_color(x11,mediumorchid1).
-gv_color(x11,mediumorchid2).
-gv_color(x11,mediumorchid3).
-gv_color(x11,mediumorchid4).
-gv_color(x11,mediumpurple).
-gv_color(x11,mediumpurple1).
-gv_color(x11,mediumpurple2).
-gv_color(x11,mediumpurple3).
-gv_color(x11,mediumpurple4).
-gv_color(x11,mediumseagreen).
-gv_color(x11,mediumslateblue).
-gv_color(x11,mediumspringgreen).
-gv_color(x11,mediumturquoise).
-gv_color(x11,mediumvioletred).
-gv_color(x11,midnightblue).
-gv_color(x11,mintcream).
-gv_color(x11,mistyrose).
-gv_color(x11,mistyrose1).
-gv_color(x11,mistyrose2).
-gv_color(x11,mistyrose3).
-gv_color(x11,mistyrose4).
-gv_color(x11,moccasin).
-gv_color(x11,navajowhite).
-gv_color(x11,navajowhite1).
-gv_color(x11,navajowhite2).
-gv_color(x11,navajowhite3).
-gv_color(x11,navajowhite4).
-gv_color(x11,navy).
-gv_color(x11,navyblue).
-gv_color(x11,none).
-gv_color(x11,oldlace).
-gv_color(x11,olivedrab).
-gv_color(x11,olivedrab1).
-gv_color(x11,olivedrab2).
-gv_color(x11,olivedrab3).
-gv_color(x11,olivedrab4).
-gv_color(x11,orange).
-gv_color(x11,orange1).
-gv_color(x11,orange2).
-gv_color(x11,orange3).
-gv_color(x11,orange4).
-gv_color(x11,orangered).
-gv_color(x11,orangered1).
-gv_color(x11,orangered2).
-gv_color(x11,orangered3).
-gv_color(x11,orangered4).
-gv_color(x11,orchid).
-gv_color(x11,orchid1).
-gv_color(x11,orchid2).
-gv_color(x11,orchid3).
-gv_color(x11,orchid4).
-gv_color(x11,palegoldenrod).
-gv_color(x11,palegreen).
-gv_color(x11,palegreen1).
-gv_color(x11,palegreen2).
-gv_color(x11,palegreen3).
-gv_color(x11,palegreen4).
-gv_color(x11,paleturquoise).
-gv_color(x11,paleturquoise1).
-gv_color(x11,paleturquoise2).
-gv_color(x11,paleturquoise3).
-gv_color(x11,paleturquoise4).
-gv_color(x11,palevioletred).
-gv_color(x11,palevioletred1).
-gv_color(x11,palevioletred2).
-gv_color(x11,palevioletred3).
-gv_color(x11,palevioletred4).
-gv_color(x11,papayawhip).
-gv_color(x11,peachpuff).
-gv_color(x11,peachpuff1).
-gv_color(x11,peachpuff2).
-gv_color(x11,peachpuff3).
-gv_color(x11,peachpuff4).
-gv_color(x11,peru).
-gv_color(x11,pink).
-gv_color(x11,pink1).
-gv_color(x11,pink2).
-gv_color(x11,pink3).
-gv_color(x11,pink4).
-gv_color(x11,plum).
-gv_color(x11,plum1).
-gv_color(x11,plum2).
-gv_color(x11,plum3).
-gv_color(x11,plum4).
-gv_color(x11,powderblue).
-gv_color(x11,purple).
-gv_color(x11,purple1).
-gv_color(x11,purple2).
-gv_color(x11,purple3).
-gv_color(x11,purple4).
-gv_color(x11,red).
-gv_color(x11,red1).
-gv_color(x11,red2).
-gv_color(x11,red3).
-gv_color(x11,red4).
-gv_color(x11,rosybrown).
-gv_color(x11,rosybrown1).
-gv_color(x11,rosybrown2).
-gv_color(x11,rosybrown3).
-gv_color(x11,rosybrown4).
-gv_color(x11,royalblue).
-gv_color(x11,royalblue1).
-gv_color(x11,royalblue2).
-gv_color(x11,royalblue3).
-gv_color(x11,royalblue4).
-gv_color(x11,saddlebrown).
-gv_color(x11,salmon).
-gv_color(x11,salmon1).
-gv_color(x11,salmon2).
-gv_color(x11,salmon3).
-gv_color(x11,salmon4).
-gv_color(x11,sandybrown).
-gv_color(x11,seagreen).
-gv_color(x11,seagreen1).
-gv_color(x11,seagreen2).
-gv_color(x11,seagreen3).
-gv_color(x11,seagreen4).
-gv_color(x11,seashell).
-gv_color(x11,seashell1).
-gv_color(x11,seashell2).
-gv_color(x11,seashell3).
-gv_color(x11,seashell4).
-gv_color(x11,sienna).
-gv_color(x11,sienna1).
-gv_color(x11,sienna2).
-gv_color(x11,sienna3).
-gv_color(x11,sienna4).
-gv_color(x11,skyblue).
-gv_color(x11,skyblue1).
-gv_color(x11,skyblue2).
-gv_color(x11,skyblue3).
-gv_color(x11,skyblue4).
-gv_color(x11,slateblue).
-gv_color(x11,slateblue1).
-gv_color(x11,slateblue2).
-gv_color(x11,slateblue3).
-gv_color(x11,slateblue4).
-gv_color(x11,slategray).
-gv_color(x11,slategray1).
-gv_color(x11,slategray2).
-gv_color(x11,slategray3).
-gv_color(x11,slategray4).
-gv_color(x11,slategrey).
-gv_color(x11,snow).
-gv_color(x11,snow1).
-gv_color(x11,snow2).
-gv_color(x11,snow3).
-gv_color(x11,snow4).
-gv_color(x11,springgreen).
-gv_color(x11,springgreen1).
-gv_color(x11,springgreen2).
-gv_color(x11,springgreen3).
-gv_color(x11,springgreen4).
-gv_color(x11,steelblue).
-gv_color(x11,steelblue1).
-gv_color(x11,steelblue2).
-gv_color(x11,steelblue3).
-gv_color(x11,steelblue4).
-gv_color(x11,tan).
-gv_color(x11,tan1).
-gv_color(x11,tan2).
-gv_color(x11,tan3).
-gv_color(x11,tan4).
-gv_color(x11,thistle).
-gv_color(x11,thistle1).
-gv_color(x11,thistle2).
-gv_color(x11,thistle3).
-gv_color(x11,thistle4).
-gv_color(x11,tomato).
-gv_color(x11,tomato1).
-gv_color(x11,tomato2).
-gv_color(x11,tomato3).
-gv_color(x11,tomato4).
-gv_color(x11,transparent).
-gv_color(x11,turquoise).
-gv_color(x11,turquoise1).
-gv_color(x11,turquoise2).
-gv_color(x11,turquoise3).
-gv_color(x11,turquoise4).
-gv_color(x11,violet).
-gv_color(x11,violetred).
-gv_color(x11,violetred1).
-gv_color(x11,violetred2).
-gv_color(x11,violetred3).
-gv_color(x11,violetred4).
-gv_color(x11,wheat).
-gv_color(x11,wheat1).
-gv_color(x11,wheat2).
-gv_color(x11,wheat3).
-gv_color(x11,wheat4).
-gv_color(x11,white).
-gv_color(x11,whitesmoke).
-gv_color(x11,yellow).
-gv_color(x11,yellow1).
-gv_color(x11,yellow2).
-gv_color(x11,yellow3).
-gv_color(x11,yellow4).
-gv_color(x11,yellowgreen).
-gv_color(svg,aliceblue).
-gv_color(svg,antiquewhite).
-gv_color(svg,aqua).
-gv_color(svg,aquamarine).
-gv_color(svg,azure).
-gv_color(svg,beige).
-gv_color(svg,bisque).
-gv_color(svg,black).
-gv_color(svg,blanchedalmond).
-gv_color(svg,blue).
-gv_color(svg,blueviolet).
-gv_color(svg,brown).
-gv_color(svg,burlywood).
-gv_color(svg,cadetblue).
-gv_color(svg,chartreuse).
-gv_color(svg,chocolate).
-gv_color(svg,coral).
-gv_color(svg,cornflowerblue).
-gv_color(svg,cornsilk).
-gv_color(svg,crimson).
-gv_color(svg,cyan).
-gv_color(svg,darkblue).
-gv_color(svg,darkcyan).
-gv_color(svg,darkgoldenrod).
-gv_color(svg,darkgray).
-gv_color(svg,darkgreen).
-gv_color(svg,darkgrey).
-gv_color(svg,darkkhaki).
-gv_color(svg,darkmagenta).
-gv_color(svg,darkolivegreen).
-gv_color(svg,darkorange).
-gv_color(svg,darkorchid).
-gv_color(svg,darkred).
-gv_color(svg,darksalmon).
-gv_color(svg,darkseagreen).
-gv_color(svg,darkslateblue).
-gv_color(svg,darkslategray).
-gv_color(svg,darkslategrey).
-gv_color(svg,darkturquoise).
-gv_color(svg,darkviolet).
-gv_color(svg,deeppink).
-gv_color(svg,deepskyblue).
-gv_color(svg,dimgray).
-gv_color(svg,dimgrey).
-gv_color(svg,dodgerblue).
-gv_color(svg,firebrick).
-gv_color(svg,floralwhite).
-gv_color(svg,forestgreen).
-gv_color(svg,fuchsia).
-gv_color(svg,gainsboro).
-gv_color(svg,ghostwhite).
-gv_color(svg,gold).
-gv_color(svg,goldenrod).
-gv_color(svg,gray).
-gv_color(svg,grey).
-gv_color(svg,green).
-gv_color(svg,greenyellow).
-gv_color(svg,honeydew).
-gv_color(svg,hotpink).
-gv_color(svg,indianred).
-gv_color(svg,indigo).
-gv_color(svg,ivory).
-gv_color(svg,khaki).
-gv_color(svg,lavender).
-gv_color(svg,lavenderblush).
-gv_color(svg,lawngreen).
-gv_color(svg,lemonchiffon).
-gv_color(svg,lightblue).
-gv_color(svg,lightcoral).
-gv_color(svg,lightcyan).
-gv_color(svg,lightgoldenrodyellow).
-gv_color(svg,lightgray).
-gv_color(svg,lightgreen).
-gv_color(svg,lightgrey).
-gv_color(svg,lightpink).
-gv_color(svg,lightsalmon).
-gv_color(svg,lightseagreen).
-gv_color(svg,lightskyblue).
-gv_color(svg,lightslategray).
-gv_color(svg,lightslategrey).
-gv_color(svg,lightsteelblue).
-gv_color(svg,lightyellow).
-gv_color(svg,lime).
-gv_color(svg,limegreen).
-gv_color(svg,linen).
-gv_color(svg,magenta).
-gv_color(svg,maroon).
-gv_color(svg,mediumaquamarine).
-gv_color(svg,mediumblue).
-gv_color(svg,mediumorchid).
-gv_color(svg,mediumpurple).
-gv_color(svg,mediumseagreen).
-gv_color(svg,mediumslateblue).
-gv_color(svg,mediumspringgreen).
-gv_color(svg,mediumturquoise).
-gv_color(svg,mediumvioletred).
-gv_color(svg,midnightblue).
-gv_color(svg,mintcream).
-gv_color(svg,mistyrose).
-gv_color(svg,moccasin).
-gv_color(svg,navajowhite).
-gv_color(svg,navy).
-gv_color(svg,oldlace).
-gv_color(svg,olive).
-gv_color(svg,olivedrab).
-gv_color(svg,orange).
-gv_color(svg,orangered).
-gv_color(svg,orchid).
-gv_color(svg,palegoldenrod).
-gv_color(svg,palegreen).
-gv_color(svg,paleturquoise).
-gv_color(svg,palevioletred).
-gv_color(svg,papayawhip).
-gv_color(svg,peachpuff).
-gv_color(svg,peru).
-gv_color(svg,pink).
-gv_color(svg,plum).
-gv_color(svg,powderblue).
-gv_color(svg,purple).
-gv_color(svg,red).
-gv_color(svg,rosybrown).
-gv_color(svg,royalblue).
-gv_color(svg,saddlebrown).
-gv_color(svg,salmon).
-gv_color(svg,sandybrown).
-gv_color(svg,seagreen).
-gv_color(svg,seashell).
-gv_color(svg,sienna).
-gv_color(svg,silver).
-gv_color(svg,skyblue).
-gv_color(svg,slateblue).
-gv_color(svg,slategray).
-gv_color(svg,slategrey).
-gv_color(svg,snow).
-gv_color(svg,springgreen).
-gv_color(svg,steelblue).
-gv_color(svg,tan).
-gv_color(svg,teal).
-gv_color(svg,thistle).
-gv_color(svg,tomato).
-gv_color(svg,turquoise).
-gv_color(svg,violet).
-gv_color(svg,wheat).
-gv_color(svg,white).
-gv_color(svg,whitesmoke).
-gv_color(svg,yellow).
-gv_color(svg,yellowgreen).
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
deleted file mode 100644
index ac319dc..0000000
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ /dev/null
@@ -1,68 +0,0 @@
&ndash;:&ndash; module(</li>
<li>gv_color,</li>
<li>[</li>
<li> gv_color/2, % ?Colorscheme:oneof([svg,x11])</li>
<li><pre><code>         % ?Color:atom
</code></pre></li>
<li> color//1, % +Color:compound</li>
<li> colorList//1 % +Pairs:list(pair(compound,float))</li>
<li>]
&ndash;).

<h2>&ndash;:&ndash; ensure_loaded(library(&lsquo;gv/gv_color.data&rsquo;)).</h2>

<h2>&ndash;/** <module> GraphViz color</h2>

<p>&ndash;@author Wouter Beek
&ndash;@tbd Color value <code>transparent</code> is only available in the output formats</p></li>
<li>  ps, svg, fig, vmrl, and the bitmap formats.
&ndash;@version 2015/08, 2015/10, 2016/02

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(lists)).

<h2>&ndash;:&ndash; use_module(library(os/file_ext)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

&ndash;% color(+Color:compound)// .
&ndash;% A <em>color</em> is represented by a compound term of one of the following forms:
&ndash;%   1. <code>rgb(Red:nonneg,Green:nonneg,Blue:nonneg)</code>
&ndash;%   2. <code>rgba(Red:nonneg,Green:nonneg,Blue:nonneg,Alpha:nonneg)</code>

<h2>&ndash;%   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code></h2>

<p>-color(rgb(Red,Green,Blue)) &mdash;> !,</p></li>
<li>&ldquo;#&rdquo;,</li>
<li><h1>(3, hex_color, [Red,Green,Blue]).</h1>

<p>-color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,</p></li>
<li>color(rgb(Red,Green,Blue)),</li>
<li>hex_color(Alpha).
-color(hsv(Hue,Saturation,Value)) &mdash;> !,</li>
<li><h1>(3, hsv_color, [Hue,Saturation,Value]).</h1>

<p>-color(Name) &mdash;></p></li>
<li>{gv_color(_, Name)},

<h2>&ndash;  atom(Name).</h2>

-hex_color(I) &mdash;>

<h2>&ndash;  xinteger(I).</h2>

-hsv_color(D, Head, Tail):&ndash;

<h2>&ndash;  format(codes(Head,Tail), &lsquo;~2f&rsquo;, [D]).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! colorList(+Pairs:list(pair(compound,float)))// .</h2>

-colorList(L) &mdash;>

<h2>&ndash;  &lsquo;+&rsquo;(wc, L).</h2>

<p>-wc(Color-Float) &mdash;></p></li>
<li>color(Color),</li>
<li>(   wc_weight(Float)</li>
<li>;   &ldquo;&rdquo;

<h2>&ndash;  ).</h2>

<p>-wc_weight(Float) &mdash;></p></li>
<li>&ldquo;;&rdquo;,</li>
<li>float(Float).
diff &mdash;git a/prolog/gv/gv_dom.pl b/prolog/gv/gv_dom.pl
deleted file mode 100644
index 30c4263..0000000
&mdash;&ndash; a/prolog/gv/gv_dom.pl
+++ /dev/null
@@ -1,29 +0,0 @@
&ndash;:&ndash; module(</li>
<li>gv_dom,</li>
<li>[</li>
<li> gv_dom/3 % +ExportG, -Dom, +Opts</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz DOM</h2>

&ndash;@author Wouter Beek
&ndash;@version 2015/07, 2016/01

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(gv/gv_file)).
&ndash;:&ndash; use_module(library(option)).

<h2>&ndash;:&ndash; use_module(library(svg/svg_ext)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_dom(+ExportG, -Dom, +Opts) is det.</h2>

<p>-gv_dom(ExportG, Dom, Opts1):&ndash;</p></li>
<li>% Make sure the file type of the output file is SvgDom.</li>
<li>merge_options([output(svg)], Opts1, Opts2),</li>
<li>graph_viz(ExportG, ToFile, Opts2),</li>
<li>svg_dom(ToFile, Dom),</li>
<li>delete_file(ToFile).
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
deleted file mode 100644
index 993fcee..0000000
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ /dev/null
@@ -1,175 +0,0 @@
&ndash;:&ndash; module(</li>
<li>gv_file,</li>
<li>[</li>
<li> graph_viz/2, % +ExportG, ?File</li>
<li> graph_viz/3  % +ExportG, ?File, +Opts</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz file</h2>

&ndash;@author Wouter Beek
&ndash;@version 2015/07, 2015/10-2015/11, 2016/01

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(code_ext)).
&ndash;:&ndash; use_module(library(error)).
&ndash;:&ndash; use_module(library(gv/gv_graph)).
&ndash;:&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(os/external_program)).
&ndash;:&ndash; use_module(library(os/process_ext)).

<h2>&ndash;:&ndash; use_module(library(string_ext)).</h2>

<p>&ndash;:&ndash; predicate_options(graph_viz/3, 3, [</p></li>
<li>  pass_to(file_to_gv/3, 3)</li>
<li>]).
&ndash;:&ndash; predicate_options(file_to_gv/3, 3, [</li>
<li>  method(+oneof([circo,dot,fdp,neato,osage,sfdp,twopi])),</li>
<li>  output(+atom)

<h2>&ndash;   ]).</h2>

&ndash;:&ndash; dynamic(user:module_uses/2).

<h2>&ndash;:&ndash; multifile(user:module_uses/2).</h2>

<h2>-user:module_uses(gv_file, program(dot)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

&ndash;%! graph_viz(+ExportGraph:compound, ?File:atom) is det.
&ndash;%! graph_viz(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
&ndash;% Returns a file containing a GraphViz visualization of the given graph.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   * method(+oneof([circo,dot,fdp,neato,osage,sfdp,twopi])
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Default is <code>dot'.
-%     For possible values see gv_method/1.
-%   * output(+atom)</code>
&ndash;%     The file type of the generated GraphViz file.
&ndash;%     Default is <code>pdf</code>.

<h2>&ndash;%     For possible values see gv_output_type/1.</h2>

<p>-graph_viz(ExportG, File):&ndash;</p></li>
<li>graph_viz(ExportG, File, []).
-graph_viz(ExportG, File, Opts):&ndash;

<h2>&ndash;  once(phrase(gv_graph(ExportG), Cs)),</h2></li>
<li>% Be thread-safe.</li>
<li>thread_self(Id),</li>
<li>string_list_concat([&ldquo;gv_file&rdquo;,Id], &ldquo;_&rdquo;, ThreadName),</li>
<li>absolute_file_name(ThreadName, TmpFile, [access(write),extensions([dot])]),</li>
<li>setup_call_cleanup(</li>
<li> open(TmpFile, write, Write, [encoding(utf8)]),</li>
<li> with_output_to(Write, put_codes(Cs)),</li>
<li> close(Write)</li>
<li>),

<h2>&ndash;  file_to_gv(TmpFile, File, Opts).</h2>

&ndash;
&ndash;%! file_to_gv(
&ndash;%!   +InputFile:atom,
&ndash;%!   ?OutputFile:atom,
&ndash;%!   +Options:list(compound)
&ndash;%! ) is det.
&ndash;% Converts a GraphViz DOT file to an image file, using a specific

<h2>&ndash;% visualization method.</h2>

<p>-file_to_gv(InputFile, OutputFile, Opts):&ndash;</p></li>
<li>var(OutputFile), !,</li>
<li>option(output(Ext), Opts, pdf),</li>
<li>file_name_extension(out, Ext, LocalName),</li>
<li>absolute_file_name(LocalName, OutputFile, Opts),</li>
<li>file_to_gv(InputFile, OutputFile, Opts).
-file_to_gv(InputFile, OutputFile, Opts):&ndash;</li>
<li>option(output(dot), Opts), !,</li>
<li>(   var(OutputFile)</li>
<li>&ndash;>  OutputFile = InputFile</li>
<li>;   rename_file(InputFile, OutputFile)</li>
<li>).
-file_to_gv(InputFile, OutputFile, Opts):&ndash;</li>
<li>% Typecheck for <code>method</code> option.</li>
<li>option(method(Method), Opts, dot),</li>
<li>findall(Method0, gv_method(Method0), Methods),

<h2>&ndash;  must_be(oneof(Methods), Method),</h2></li>
<li>% Typecheck for <code>output</code> option.</li>
<li>option(output(OutputType), Opts, pdf),</li>
<li>findall(OutputType0, gv_output_type(OutputType0), OutputTypes),

<h2>&ndash;  must_be(oneof(OutputTypes), OutputType),</h2></li>
<li>% Run the GraphViz conversion command in the shell.</li>
<li>format(atom(OutputTypeFlag), &ldquo;-T~a&rdquo;, [OutputType]),</li>
<li>format(atom(OutputFileFlag), &ldquo;-o~a&rdquo;, [OutputFile]),</li>
<li>run_process(</li>
<li> Method,</li>
<li> [OutputTypeFlag,file(InputFile),OutputFileFlag]

<h2>&ndash;  ).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

-gv_method(circo).
-gv_method(dot).
-gv_method(fdp).
-gv_method(neato).
-gv_method(osage).
-gv_method(sfdp).

<h2>-gv_method(twopi).</h2>

<p>&ndash;
-gv_output_type(bmp).
-gv_output_type(canon).
-gv_output_type(dot).
-gv_output_type(gv).
-gv_output_type(xdot).
-gv_output_type(&lsquo;xdot1.2&rsquo;).
-gv_output_type(&lsquo;xdot1.4&rsquo;).
-gv_output_type(cgimage).
-gv_output_type(cmap).
-gv_output_type(eps).
-gv_output_type(exr).
-gv_output_type(fig).
-gv_output_type(gd).
-gv_output_type(gd2).
-gv_output_type(gif).
-gv_output_type(gtk).
-gv_output_type(ico).
-gv_output_type(imap).
-gv_output_type(cmapx).
-gv_output_type(imap_np).
-gv_output_type(cmapx_np).
-gv_output_type(ismap).
-gv_output_type(jp2).
-gv_output_type(jpg).
-gv_output_type(jpeg).
-gv_output_type(jpe).
-gv_output_type(pct).
-gv_output_type(pict).
-gv_output_type(pdf).
-gv_output_type(pic).
-gv_output_type(plain).
-gv_output_type(&lsquo;plain-ext&rsquo;).
-gv_output_type(png).
-gv_output_type(pov).
-gv_output_type(ps).
-gv_output_type(ps2).
-gv_output_type(psd).
-gv_output_type(sgi).
-gv_output_type(svg).
-gv_output_type(svgz).
-gv_output_type(tga).
-gv_output_type(tif).
-gv_output_type(tiff).
-gv_output_type(tk).
-gv_output_type(vml).
-gv_output_type(vmlz).
-gv_output_type(vrml).
-gv_output_type(wbmp).
-gv_output_type(webp).
-gv_output_type(xlib).
-gv_output_type(x11).
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
deleted file mode 100644
index c95c9cc..0000000
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ /dev/null
@@ -1,252 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_graph,</li>
<li>[</li>
<li> gv_graph//1 % +Graph:compound</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz graph</h2>

-Generates GraphViz graphs in the DOT format based on

<h2>-a Prolog representation of a graph.</h2>

<h2>-In GraphViz vertices are called &lsquo;nodes&rsquo;.</h2>

<hr />

&ndash;
&ndash;@author Wouter Beek
&ndash;@version 2015/07, 2015/12

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(gv/gv_graph_comp)).
&ndash;:&ndash; use_module(library(lists)).

<h2>&ndash;:&ndash; use_module(library(option)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

&ndash;%! gv_graph(+Graph:compound)// is det.

<h2>&ndash;% Wrapper around gv_graph//2 with no indentation.</h2>

<h2>-gv_graph(G) &mdash;> gv_graph(G, 0).</h2>

&ndash;
&ndash;%! gv_graph(+Graph:compound, +Indent:nonneg)// is det.
&ndash;% The follow graph attributes are supported,
&ndash;% beyond the GraphViz attributes for graphs:
&ndash;%   * <code>directed(+boolean)</code>
&ndash;%      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
&ndash;%      Default: <code>false</code>.
&ndash;%   * <code>name(+GraphName:atom)</code>
&ndash;%   * <code>strict(+StrictGraph:boolean)</code>
&ndash;%      This forbids the creation of self-arcs and multi-edges;
&ndash;%      they are ignored in the input file.
&ndash;%      Only in combinattion with directionality <code>directed</code>.
&ndash;%
&ndash;% <code>abnf
-% graph = ["strict"] ("graph" / "digraph") [ID] "{" stmt_list "}"
-%</code>
&ndash;%
&ndash;% <code>GraphTerm</code> is a compound term of the following form:
&ndash;% <code>prolog
-% graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
-%</code>
&ndash;%
&ndash;% <code>RankedVertexTerms</code> is a list of compound terms of the following form:
&ndash;% <code>prolog
-% RankVertex-ContentVertices
-%</code>
&ndash;%
&ndash;% @tbd Add support for subgraphs (arbitrary nesting).
&ndash;% @tbd Add support for escape strings:
&ndash;%      <a href="http://www.graphviz.org/doc/info/attrs.html#k:escString">http://www.graphviz.org/doc/info/attrs.html#k:escString</a>
&ndash;% @tbd Assert attributes that are generic with respect to a subgraph.

<h2>&ndash;% @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</h2>

<p>-gv_graph(G1, I) &mdash;></p></li>
<li>{</li>
<li> include_ranks(G1, G2),</li>
<li> G2 = graph(VTerms,RankedVTerms,ETerms,GAttrs1),</li>
<li> shared_attributes(VTerms, SharedVAttrs, NewVTerms),</li>
<li> shared_attributes(ETerms, SharedEAttrs, NewETerms),</li>
<li> add_default(GAttrs1, overlap(false), GAttrs2),</li>
<li> I = 0

<h2>&ndash;  },</h2></li>
<li>% The first statement in the GraphViz output.</li>
<li>% States that this file represents a graph according to the GraphViz format.

<ul>
<li>tab(I),</li>
</ul>
</li>
<li></li>
<li>% Strictness.</li>
<li>{select_option(strict(Strict), GAttrs2, GAttrs3, false)},

<ul>
<li>gv_strict(Strict),</li>
</ul>
</li>
<li></li>
<li>% Directedness.</li>
<li>{select_option(directed(Directed), GAttrs3, GAttrs4, true)},</li>
<li>gv_graph_type(Directed),

<ul>
<li>&ldquo; &rdquo;,</li>
</ul>
</li>
<li></li>
<li>% Graph name.</li>
<li>(   {select_option(name(GName), GAttrs4, GAttrs5)}</li>
<li>&ndash;>  gv_id(GName),</li>
<li>   &ldquo; &rdquo;</li>
<li>;   {GAttrs5 = GAttrs4}

<h2>&ndash;  ),</h2></li>
<li>% The body of the DOT file appears between curly braces.

<h2>&ndash;  &ldquo;{\n&rdquo;,</h2></li>
<li>% The following lines are indented.

<h2>&ndash;  {NewI is I + 1},</h2></li>
<li>% Attributes that apply to the graph as a whole.

<h2>&ndash;  gv_generic_attributes_statement(graph, NewI, GAttrs5),</h2></li>
<li>% Attributes that are the same for all nodes.

<h2>&ndash;  gv_generic_attributes_statement(node, NewI, SharedVAttrs),</h2></li>
<li>% Attributes that are the same for all edges.

<h2>&ndash;  gv_generic_attributes_statement(edge, NewI, SharedEAttrs),</h2></li>
<li>% Only add a line_feed if some content was already written</li>
<li>% and some content is about to be written.</li>
<li>(   % Succeeds if no content was written.</li>
<li>   {(GAttrs5 == [], SharedVAttrs == [], SharedEAttrs == [])}</li>
<li>&ndash;>  &ldquo;&rdquo;</li>
<li>;   % Succeeds if no content is about to be written.</li>
<li>   {(NewVTerms == [], RankedVTerms == [])}</li>
<li>&ndash;>  &ldquo;&rdquo;</li>
<li>;   &ldquo;\n&rdquo;

<h2>&ndash;  ),</h2></li>
<li>% The list of GraphViz nodes.</li>
<li>gv_node_statements(NewI, NewVTerms),

<h2>&ndash;  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; &ldquo;\n&rdquo;),</h2></li>
<li>% The ranked GraphViz nodes (displayed at the same height).</li>
<li>gv_ranked_node_collections(NewI, RankedVTerms),

<h2>&ndash;  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; &ldquo;\n&rdquo;),</h2></li>
<li>{</li>
<li> findall(</li>
<li>   edge(FromId,ToId,[]),</li>
<li>   (</li>
<li><pre><code> nth0(J1, RankedVTerms, rank(vertex(FromId,_),_)),
</code></pre></li>
<li><pre><code> nth0(J2, RankedVTerms, rank(vertex(ToId,_),_)),
</code></pre></li>
<li><pre><code> % We assume that the rank vertices are nicely ordered.
</code></pre></li>
<li><pre><code> succ(J1, J2)
</code></pre></li>
<li>   ),</li>
<li>   RankEdges</li>
<li> )

<h2>&ndash;  },</h2></li>
<li>% The rank edges.

<h2>&ndash;  gv_edge_statements(NewI, Directed, RankEdges),</h2></li>
<li>% The non-rank edges.

<ul>
<li>gv_edge_statements(NewI, Directed, NewETerms),</li>
</ul>
</li>
<li><h2>&ndash;  % Note that we do not include a line_feed here.</h2></li>
<li>% We want to indent the closing curly brace.</li>
<li>tab(I),

<h2>&ndash;  &ldquo;}\n&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! gv_edge_statements(
&ndash;%!   +Indent:nonneg,
&ndash;%!   +Directed:boolean,
&ndash;%!   +Statements:list(compound)

<h2>&ndash;%! )// is det.</h2>

<h2>-gv_edge_statements(I, Dir, L) &mdash;> *(gv_edge_statement(I, Dir), L).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_edge_statements(+Indent:nonneg, +Statements:list(compound))// is det.</h2>

<h2>-gv_node_statements(I, L) &mdash;> *(gv_node_statement(I), L).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_ranked_node_collections(+Indent:nonneg, +Collections:list)// is det.</h2>

<h2>-gv_ranked_node_collections(I, L) &mdash;> *(gv_ranked_node_collection(I), L).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

&ndash;%! add_default_option(
&ndash;%!   +Options:list(compound),
&ndash;%!   +Default:compound,
&ndash;%!   -NewOptions:list(compound)

<h2>&ndash;%! ) is det.</h2>

<p>-add_default(L1, Opt, L2):&ndash;</p></li>
<li>Opt =.. [N,_Value],</li>
<li>Opt0 =.. [N,_FreshVar],</li>
<li>(   option(Opt0, L1)</li>
<li>&ndash;>  L2 = L1</li>
<li>;   L2 = [Opt|L1]

<h2>&ndash;  ).</h2>

<h2>&ndash;</h2>

&ndash;%! gv_graph_type(+Directed:boolean)// is det.

<h2>&ndash;% The type of graph that is represented.</h2>

-gv_graph_type(false) &mdash;> !, &ldquo;graph&rdquo;.

<h2>-gv_graph_type(true)  &mdash;>    &ldquo;digraph&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! gv_strict(+Strict:boolean)// is det.
&ndash;% The keyword denoting that the graph is strict, i.e., has no self-arcs and
&ndash;% no multi-edges.

<h2>&ndash;% This only applies to directed graphs.</h2>

-gv_strict(false) &mdash;> !, &ldquo;&rdquo;.

<h2>-gv_strict(true)  &mdash;>    &ldquo;strict &rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! invlude_ranges(+Graph:compound, -GraphWithRanks:compound) is det.
&ndash;% Ensures that there is a ranks components in

<h2>&ndash;% the graph-denoting compound term.</h2>

-include_ranks(graph(Vs,Rs,Es,L), graph(Vs,Rs,Es,L)):&ndash; !.

<h2>-include_ranks(graph(Vs,Es,L), graph(Vs,[],Es,L)).</h2>

<h2>&ndash;</h2>

&ndash;%! shared_attributes(
&ndash;%!   +Terms:list(compound),
&ndash;%!   -SharedAttributes:list(compound),
&ndash;%!   -NewTerms:list(compound)

<h2>&ndash;%! ) is det.</h2>

<p>-shared_attributes(Ts1, Shared, Ts2):&ndash;</p></li>
<li>maplist(term_to_attrs, Ts1, L1),</li>
<li>extract_shared(L1, Shared),</li>
<li>maplist(remove_shared_attributes(Shared), L1, L2),

<h2>&ndash;  maplist(term_change_attrs, Ts1, L2, Ts2).</h2>

-term_to_attrs(edge(<em>,</em>,A), A).

<h2>-term_to_attrs(vertex(_,A), A).</h2>

-extract_shared([], []):&ndash; !.
-extract_shared(Argss, Shared):&ndash;

<h2>&ndash;  ord_intersection(Argss, Shared).</h2>

-remove_shared_attributes(Shared, Args1, Args2):&ndash;

<h2>&ndash;  ord_subtract(Args1, Shared, Args2).</h2>

<p>-term_change_attrs(edge(From,To,<em>), A, edge(From,To,A)).
-term_change_attrs(vertex(Id,</em>), A, vertex(Id,A)).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
deleted file mode 100644
index 30ea9c5..0000000
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ /dev/null
@@ -1,309 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_graph_comp,</li>
<li>[</li>
<li> gv_edge_statement//3, % +Indent:nonneg</li>
<li><pre><code>                   % +Directed:boolean
</code></pre></li>
<li><pre><code>                   % +Edge:compound
</code></pre></li>
<li> gv_generic_attributes_statement//3, % +Kind:oneof([edge,graph,node])</li>
<li><pre><code>                                 % +Indent:nonneg
</code></pre></li>
<li><pre><code>                                 % +CategoryAttributes:list(compound)
</code></pre></li>
<li> gv_id//1, % +Name:compound</li>
<li> gv_node_statement//2, % +Indent:nonneg</li>
<li><pre><code>                   % +Vertex:compound
</code></pre></li>
<li> gv_ranked_node_collection//2 % +Indent:nonneg</li>
<li><pre><code>                          % +Rank
</code></pre></li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz graph components</h2>

&ndash;```abnf
-attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
-a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]

<h2>&ndash;```</h2>

&ndash;@author Wouter Beek
&ndash;@see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07-2015/08, 2015/10-2016/01

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(gv/gv_attrs)).
&ndash;:&ndash; use_module(library(gv/gv_html)).
&ndash;:&ndash; use_module(library(error)).
&ndash;:&ndash; use_module(library(lists)).

<h2>&ndash;:&ndash; use_module(library(ordsets)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

&ndash;%! gv_edge_statement(
&ndash;%!   +Indent:nonneg,
&ndash;%!   +Directed:boolean,
&ndash;%!   +Edge:compound
&ndash;%! )// is det.
&ndash;% A GraphViz statement describing an edge.
&ndash;%
&ndash;% @arg Indent The indentation level at which the edge statement is written.
&ndash;% @arg Directed Whether the graph is directed or not.
&ndash;% @arg GraphAttributes The attributes of the graph. Some of these attributes
&ndash;%      may be used in the edge statement (e.g., the colorscheme).
&ndash;% @arg Edge A compound term in the GIFormat, representing an edge.
&ndash;%
&ndash;% @tbd Instead of gv_node_id//1 we could have a gv_subgraph//1
&ndash;%      at the from and/or to location.

<h2>&ndash;% @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</h2>

-gv_edge_statement(I, Dir, edge(From,To,Attrs)) &mdash;>

<h2>&ndash;  tab(I),</h2></li>
<li>gv_node_id(From), &ldquo; &rdquo;,</li>
<li>gv_edge_operator(Dir), &ldquo; &rdquo;,

<h2>&ndash;  gv_node_id(To), &ldquo; &rdquo;,</h2></li>
<li>% We want <code>colorscheme/1</code> from the edges and</li>
<li>% <code>directionality/1</code> from the graph.</li>
<li>gv_attrs(edge, Attrs),

<h2>&ndash;  &ldquo;\n&rdquo;.</h2>

&ndash;%! gv_edge_operator(+Directed:boolean)// .
&ndash;% The binary edge operator between two vertices.
&ndash;% The operator that is used depends on whether the graph is directed or
&ndash;% undirected.
&ndash;%
&ndash;% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or

<h2>&ndash;%      undirected (operator <code>--</code>).</h2>

<p>-gv_edge_operator(Dir) &mdash;></p></li>
<li>{must_be(boolean, Dir)},

<h2>&ndash;  ({Dir == false} &ndash;> &ldquo;&mdash;&rdquo; ; {Dir == true} &ndash;> &ldquo;&ndash;>&rdquo;).</h2>

<h2>&ndash;</h2>

&ndash;%! gv_generic_attributes_statement(
&ndash;%!   +Kind:oneof([edge,graph,node]),
&ndash;%!   +Indent:nonneg,
&ndash;%!   +CategoryAttrs
&ndash;%! )//
&ndash;% A GraphViz statement describing generic attributes for a category of items.
&ndash;%
&ndash;% @arg Kind The category of items for to the attributes apply.
&ndash;%      Possible values: <code>edge</code>, <code>graph</code>, and <code>node</code>.
&ndash;% @arg Indent An integer indicating the number of tabs.
&ndash;% @arg GraphAttributes A list of name-value pairs.
&ndash;% @arg CategoryAttributes A list of name-value pairs.
&ndash;%
&ndash;% ```
&ndash;% attr_stmt = (graph / node / edge) attr_list

<h2>&ndash;% ```</h2>

<p>-gv_generic_attributes_statement(<em>, </em>, []) &mdash;> !, &ldquo;&rdquo;.
-gv_generic_attributes_statement(Kind, I, Attrs) &mdash;></p></li>
<li>tab(I),</li>
<li>gv_kind(Kind), &ldquo; &rdquo;,</li>
<li>gv_attrs(Kind, Attrs),

<h2>&ndash;  &ldquo;\n&rdquo;, !.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_kind(+Kind:oneof([edge,graph,node]))// .</h2>

<h2>-gv_kind(Kind) &mdash;> {must_be(oneof([edge,graph,node]), Kind)}, atom(Kind).</h2>

<h2>&ndash;</h2>

&ndash;%! gv_node_statement(+Indent:nonneg, +Vertex:compound)// is det.

<h2>&ndash;% A GraphViz statement describing a vertex (GraphViz calls vertices &lsquo;nodes&rsquo;).</h2>

<p>-gv_node_statement(I, vertex(Id,Attrs)) &mdash;></p></li>
<li>tab(I),</li>
<li>gv_node_id(Id),</li>
<li>gv_attrs(node, Attrs),

<h2>&ndash;  &ldquo;\n&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_ranked_node_collection(+Indent:nonneg, Rank:pair)// is det.</h2>

<p>-gv_ranked_node_collection(I, RankVTerm-VTerms) &mdash;></p></li>
<li>tab(I),

<h2>&ndash;  &ldquo;{\n&rdquo;,</h2></li>
<li>% The rank attribute.</li>
<li>{NewI is I + 1},</li>
<li>tab(NewI),</li>
<li>gv_attr(subgraph, rank(same)),

<h2>&ndash;  &ldquo;\n&rdquo;,</h2></li>
<li>% Vertice statements.

<h2>&ndash;  *(gv_node_statement(NewI), [RankVTerm|VTerms]),</h2></li>
<li>% We want to indent the closing curly brace.</li>
<li>tab(I),

<h2>&ndash;  &ldquo;\n}&rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

&ndash;%! gv_attrs(
&ndash;%!   +Kind:oneof([edge,graph,node]),
&ndash;%!   +Attributes:list(compound)

<h2>&ndash;%! )// is det.</h2>

<h2>-gv_attrs(Kind, L) &mdash;> &ldquo;[&rdquo;, *(gv_attr(Kind), L), &ldquo;]&rdquo;.</h2>

&ndash;
&ndash;%! gv_attr(+Context:oneof([edge,graph,node]), +Attribute:compound)// is det.
&ndash;% A single GraphViz attribute.

<h2>&ndash;% We assume that the attribute has already been validated.</h2>

<p>-gv_attr(Context, Attr) &mdash;></p></li>
<li>{Attr =.. [N,V]},

<h2>&ndash;  gv_id(N), &ldquo;=&rdquo;, gv_attr_value(Context, N=V), &ldquo;;&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! gv_id(+Id:compound)// is det.
&ndash;% Parse a GraphViz identifier.
&ndash;% There are 4 variants:
&ndash;%   1. Any string of alphabetic (<code>[a-zA-Z'200-'377]</code>) characters,
&ndash;%      underscores (<code>_</code>) or digits (<code>[0-9]</code>), not beginning with a digit.
&ndash;%   2. A numeral <code>[-]?(.[0-9]+ | [0-9]+(.[0-9]*)? )</code>.
&ndash;%   3. Any double-quoted string (<code>"..."</code>) possibly containing
&ndash;%      escaped quotes (<code>\"</code>).
&ndash;%      In quoted strings in DOT, the only escaped character is
&ndash;%      double-quote (<code>"</code>). That is, in quoted strings, the dyad <code>\"</code>
&ndash;%      is converted to <code>"</code>. All other characters are left unchanged.
&ndash;%      In particular, <code>\\</code> remains <code>\\</code>.
&ndash;%      Layout engines may apply additional escape sequences.
&ndash;%      Represented by a Prolog term of the form <code>double_quoted_string(ATOM)</code>.
&ndash;%   4. An HTML string (<code>&lt;...&gt;</code>).
&ndash;%      Represented by a Prolog term of the form <code>html_like_label(COMPOUND)</code>.
&ndash;%
&ndash;% @tbd Add support for HTML-like labels:
&ndash;%      <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a>

<h2>&ndash;%      This requires an XML grammar!</h2>

<p>&ndash;% HTML strings (assumed to be the same as HTML-like labels).
-gv_id(html_like_label(Content)) &mdash;> !,</p></li>
<li>gv_html_like_label(Content).
&ndash;% Double-quoted strings.
&ndash;% The quotes are already part of the given atom.
-gv_id(double_quoted_string(Atom)) &mdash;> !,</li>
<li>&ldquo;\&rdquo;&ldquo;, atom(Atom), &rdquo;\&ldquo;&rdquo;.
&ndash;% Numerals.
-gv_id(N) &mdash;></li>
<li>{number(N)}, !,</li>
<li>{number_codes(N, Cs)},</li>
<li>Cs.
&ndash;% Alpha-numeric strings.
-gv_id(Atom) &mdash;></li>
<li>{atom_codes(Atom, [H|T])},</li>
<li>gv_id_first(H),</li>
<li>gv_id_rest(T), !,</li>
<li>% Variant 1 identifiers should not be (case-variants of) a</li>
<li>% GraphViz keyword.

<h2>&ndash;  {+ gv_keyword([H|T])}.</h2>

&ndash;
&ndash;%! gv_id_first(+First:code)// is det.

<h2>&ndash;% Generates the first character of a GraphViz identifier.</h2>

-gv_id_first&copy;   &mdash;> alpha&copy;, !.

<h2>-gv_id_first(0'<em>) &mdash;> &ldquo;</em>&rdquo;.</h2>

&ndash;
&ndash;%! gv_id_rest(+NonFirst:code)// is det.

<h2>&ndash;% Generates a non-first character of a GraphViz identifier.</h2>

-gv_id_rest([H|T])   &mdash;> alphadigit(H), !, gv_id_rest(T).
-gv_id_rest([0'<em>|T]) &mdash;> &ldquo;</em>&rdquo;,           !, gv_id_rest(T).

<h2>-gv_id_rest([])      &mdash;> &ldquo;&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! gv_keyword(+Codes:list(code)) is semidet.

<h2>&ndash;% Succeeds if the given codes for a GraphViz reserved keyword.</h2>

<p>-gv_keyword(Cs):&ndash;</p></li>
<li>% Obviously, the keywords do not occur on the difference list input.</li>
<li>% So we must use phrase/[2,3].

<h2>&ndash;  phrase(gv_keyword, Cs).</h2>

&ndash;
&ndash;%! gv_keyword// .
&ndash;% GraphViz has reserved keywords that cannot be used as identifiers.

<h2>&ndash;% GraphViz keywords are case-insensitive.</h2>

-gv_keyword &mdash;> &ldquo;digraph&rdquo;.
-gv_keyword &mdash;> &ldquo;edge&rdquo;.
-gv_keyword &mdash;> &ldquo;graph&rdquo;.
-gv_keyword &mdash;> &ldquo;node&rdquo;.
-gv_keyword &mdash;> &ldquo;strict&rdquo;.

<h2>-gv_keyword &mdash;> &ldquo;subgraph&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! gv_node_id(+NodeId:compound)// .
&ndash;% GraphViz node identifiers can be of the following two types:
&ndash;%   1. A GraphViz identifier, see gv_id//1.
&ndash;%   2. A GraphViz identifier plus a GraphViz port indicator, see gv_port//0.
&ndash;%
&ndash;% @tbd Add support for GraphViz port indicators

<h2>&ndash;%      inside GraphViz node identifiers.</h2>

-gv_node_id(Id) &mdash;> gv_id(Id), !.
&ndash;%gv_node_id(<em>) &mdash;> gv_id(</em>), gv_port.

<h2>-gv_node_id(Id) &mdash;> {type_error(gv_node_id, Id)}.</h2>

<h2>&ndash;</h2>

&ndash;%! gv_numeral(-Number)// is det.
&ndash;% ```bnf
&ndash;% (&lsquo;&ndash;&rsquo;)? ( &lsquo;.&rsquo; [0-9]+ | [0-9]+ ( &lsquo;.&rsquo; [0-9]* )? )

<h2>&ndash;% ```</h2>

<p>-gv_numeral(N) &mdash;></p></li>
<li>(&ldquo;&ndash;&rdquo; &ndash;> {Sg = -1} ; {Sg = 1}),</li>
<li>(   &ldquo;.&rdquo;</li>
<li>&ndash;>  {I = 0}, +(digit, Ds), {pos_frac(Ds, Frac)}</li>
<li>;   +(digit, Ds1), {pos_sum(Ds1, I)},</li>
<li>   (&ldquo;.&rdquo; &ndash;> *(digit, Ds2), {pos_frac(Ds2, Frac)} ; {Frac = 0.0})</li>
<li>),

<h2>&ndash;  {N is Sg * (I + Frac)}.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_port// is det.</h2>

-gv_port &mdash;> gv_port_location, (gv_port_angle ; &ldquo;&rdquo;).
-gv_port &mdash;> gv_port_angle, (gv_port_location ; &ldquo;&rdquo;).

<h2>-gv_port &mdash;> &ldquo;:&rdquo;, gv_compass_pt(_).</h2>

<h2>-gv_port_angle &mdash;> &ldquo;@&rdquo;, gv_id(_).</h2>

-gv_port_location &mdash;> &ldquo;:&rdquo;, gv_id(_).

<h2>-gv_port_location &mdash;> &ldquo;:[&rdquo;, gv_id(<em>), &ldquo;,&rdquo;, gv_id(</em>), &ldquo;]&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
&ndash;% ```
&ndash;% compass_pt : ( n | ne | e | se | s | sw | w | nw | c | _ )

<h2>&ndash;% ```</h2>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
-gv_compass_pt&copy;   &mdash;> &ldquo;c&rdquo;.
-gv_compass_pt(e)   &mdash;> &ldquo;e&rdquo;.
-gv_compass_pt(n)   &mdash;> &ldquo;n&rdquo;.
-gv_compass_pt(ne)  &mdash;> &ldquo;ne&rdquo;.
-gv_compass_pt(nw)  &mdash;> &ldquo;nw&rdquo;.
-gv_compass_pt(s)   &mdash;> &ldquo;s&rdquo;.
-gv_compass_pt(se)  &mdash;> &ldquo;se&rdquo;.
-gv_compass_pt(sw)  &mdash;> &ldquo;sw&rdquo;.
-gv_compass_pt(w)   &mdash;> &ldquo;w&rdquo;.
diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
deleted file mode 100644
index b5c1368..0000000
&mdash;&ndash; a/prolog/gv/gv_html.pl
+++ /dev/null
@@ -1,255 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_html,</li>
<li>[</li>
<li> gv_html_like_label//1 % +Content:compound</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz: HTML-like labels</h2>

<h2>-Grammar taken from the GraphViz Web site:</h2>

<p>&ndash;```
-label :   text</p></li>
<li><pre><code> | table
</code></pre>

<p>-text :   textitem</p></li>
<li><pre><code>| text textitem
</code></pre>

<p>-textitem :   string</p></li>
<li><pre><code>    | &lt;BR/&gt;
</code></pre></li>
<li><pre><code>    | &lt;FONT&gt; text &lt;/FONT&gt;
</code></pre></li>
<li><pre><code>    | &lt;I&gt; text &lt;/I&gt;
</code></pre></li>
<li><pre><code>    | &lt;B&gt; text &lt;/B&gt;
</code></pre></li>
<li><pre><code>    | &lt;U&gt; text &lt;/U&gt;
</code></pre></li>
<li><pre><code>    | &lt;O&gt; text &lt;/O&gt;
</code></pre></li>
<li><pre><code>    | &lt;SUB&gt; text &lt;/SUB&gt;
</code></pre></li>
<li><pre><code>    | &lt;SUP&gt; text &lt;/SUP&gt;
</code></pre></li>
<li><pre><code>    | &lt;S&gt; text &lt;/S&gt;
</code></pre>

<p>-table : [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
-rows :   row</p></li>
<li><pre><code>| rows row
</code></pre></li>
<li><pre><code>| rows &lt;HR/&gt; row
</code></pre>

<p>-row: <TR> cells </TR>
-cells :   cell</p></li>
<li><pre><code> | cells cell
</code></pre></li>
<li><pre><code> | cells &lt;VR/&gt; cell
</code></pre>

<p>-cell:   <TD> label </TD></p></li>
<li>   | <TD> <IMG/> </TD>

<h2>&ndash;```</h2>

<hr />

&ndash;
&ndash;@author Wouter Beek
&ndash;@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
&ndash;@version 2015/07, 2015/12

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(dcg/dcg_ext)).

<h2>&ndash;:&ndash; use_module(library(html/html_dcg)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_html_like_label(+Content:compound)// is det.</h2>

<h2>-gv_html_like_label(Content) &mdash;> &ldquo;&lt;&rdquo;, label(Content), &ldquo;>&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! cell(+Contents:compound)// is det.
&ndash;% Supported attributes for <code>TD</code>:
&ndash;%   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT|TEXT"</code>
&ndash;%   &ndash; <code>BALIGN="CENTER|LEFT|RIGHT"</code>
&ndash;%   &ndash; <code>BGCOLOR="color"</code>
&ndash;%   &ndash; <code>BORDER="value"</code>
&ndash;%   &ndash; <code>CELLPADDING="value"</code>
&ndash;%   &ndash; <code>CELLSPACING="value"</code>
&ndash;%   &ndash; <code>COLOR="color"</code>
&ndash;%   &ndash; <code>COLSPAN="value"</code>
&ndash;%   &ndash; <code>FIXEDSIZE="FALSE|TRUE"</code>
&ndash;%   &ndash; <code>GRADIENTANGLE="value"</code>
&ndash;%   &ndash; <code>HEIGHT="value"</code>
&ndash;%   &ndash; <code>HREF="value"</code>
&ndash;%   &ndash; <code>ID="value"</code>
&ndash;%   &ndash; <code>PORT="portName"</code>
&ndash;%   &ndash; <code>ROWSPAN="value"</code>
&ndash;%   &ndash; <code>SIDES="value"</code>
&ndash;%   &ndash; <code>STYLE="value"</code>
&ndash;%   &ndash; <code>TARGET="value"</code>
&ndash;%   &ndash; <code>TITLE="value"</code>
&ndash;%   &ndash; <code>TOOLTIP="value"</code>
&ndash;%   &ndash; <code>VALIGN="MIDDLE|BOTTOM|TOP"</code>
&ndash;%   &ndash; <code>WIDTH="value"</code>
&ndash;%
&ndash;% Supported attributes for <code>IMG</code>:
&ndash;%   &ndash; <code>SCALE="FALSE|TRUE|WIDTH|HEIGHT|BOTH"</code>

<h2>&ndash;%   &ndash; <code>SRC="value"</code></h2>

<p>-cell(td(Contents)) &mdash;> !,</p></li>
<li>cell(td([],Contents)).
-cell(td(Attrs1,Image)) &mdash;></li>
<li>{(Image =.. [img,Attrs2] &ndash;> true ; Image == img &ndash;> Attrs2 = [])}, !,</li>
<li>html_element(td, Attrs1, html_element(img,Attrs2)).
-cell(td(Attrs,Contents)) &mdash;>

<h2>&ndash;  html_element(td, Attrs, label(Contents)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! cells(+Contents:list(compound))// is det.</h2>

-cells([H,vr|T]) &mdash;> !, cell(H), html_element(vr), cells(T).
-cells([H|T])    &mdash;> !, cell(H), cells(T).

<h2>-cells([])       &mdash;> &ldquo;&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! label(+Content:compound)// is det.

<h2>&ndash;% GraphViz HTML-like label.</h2>

-label(Content) &mdash;> table(Content), !.

<h2>-label(Content) &mdash;> text(Content).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! row(+Contents:compound)// is det.</h2>

<h2>-row(tr(Contents)) &mdash;> html_element(tr, [], cells(Contents)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! rows(+Contents:list)// is det.</h2>

-rows([hr|T]) &mdash;> !, html_element(hr), rows(T).
-rows([H|T]) &mdash;> row(H), !, rows(T).

<h2>-rows([]) &mdash;> &ldquo;&rdquo;.</h2>

<h2>&ndash;</h2>

&ndash;%! table(+Contents:compound)// is det.
&ndash;% <code>
-% table : [ &lt;FONT&gt; ] &lt;TABLE&gt; rows &lt;/TABLE&gt; [ &lt;/FONT&gt; ]
-%</code>
&ndash;%
&ndash;% Supported attributes for <code>TABLE</code>:
&ndash;%   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT"</code>
&ndash;%   &ndash; <code>BGCOLOR="color"</code>
&ndash;%   &ndash; <code>BORDER="value"</code>
&ndash;%   &ndash; <code>CELLBORDER="value"</code>
&ndash;%   &ndash; <code>CELLPADDING="value"</code>
&ndash;%   &ndash; <code>CELLSPACING="value"</code>
&ndash;%   &ndash; <code>COLOR="color"</code>
&ndash;%   &ndash; <code>COLUMNS="value"</code>
&ndash;%   &ndash; <code>FIXEDSIZE="FALSE|TRUE"</code>
&ndash;%   &ndash; <code>GRADIENTANGLE="value"</code>
&ndash;%   &ndash; <code>HEIGHT="value"</code>
&ndash;%   &ndash; <code>HREF="value"</code>
&ndash;%   &ndash; <code>ID="value"</code>
&ndash;%   &ndash; <code>PORT="portName"</code>
&ndash;%   &ndash; <code>ROWS="value"</code>
&ndash;%   &ndash; <code>SIDES="value"</code>
&ndash;%   &ndash; <code>STYLE="value"</code>
&ndash;%   &ndash; <code>TARGET="value"</code>
&ndash;%   &ndash; <code>TITLE="value"</code>
&ndash;%   &ndash; <code>TOOLTIP="value"</code>
&ndash;%   &ndash; <code>VALIGN="MIDDLE|BOTTOM|TOP"</code>
&ndash;%   &ndash; <code>WIDTH="value"</code>
&ndash;%
&ndash;% Supported attributes for <code>FONT</code>:
&ndash;%  &ndash; <code>COLOR="color"</code>
&ndash;%    Sets the color of the font within the scope of <code>&lt;FONT&gt;...&lt;/FONT&gt;</code>,
&ndash;%     or the border color of the table or cell within the scope of
&ndash;%     <code>&lt;TABLE&gt;...&lt;/TABLE&gt;</code>, or <code>&lt;TD&gt;...&lt;/TD&gt;</code>.
&ndash;%    This color can be overridden by a <code>COLOR</code> attribute in descendents.
&ndash;%    By default, the font color is determined by the <code>fontcolor</code> attribute
&ndash;%     of the corresponding node, edge or graph, and the border color is
&ndash;%     determined by the color attribute of the corresponding node, edge or
&ndash;%     graph.
&ndash;%   &ndash; <code>FACE="fontname"</code>

<h2>&ndash;%   &ndash; <code>POINT-SIZE="value"</code></h2>

<p>-table(table(Contents)) &mdash;> !,</p></li>
<li>table(table([],Contents)).
-table(table(Attrs,Contents)) &mdash;> !,</li>
<li>html_element(table, Attrs, rows(Contents)).
-table(font(Table)) &mdash;> !,</li>
<li>table(font([],Table)).
-table(font(Attrs1,Table)) &mdash;></li>
<li>{(  Table =.. [table,Attrs2,Contents]</li>
<li>&ndash;>  true</li>
<li>;   Table =.. [table,Contents]</li>
<li>&ndash;>  Attrs2 = []</li>
<li>)},

<h2>&ndash;  html_element(font, Attrs1, table(table(Attrs2,Contents))).</h2>

<h2>&ndash;</h2>

&ndash;%! text(+Contents:list)// .
&ndash;% ```
&ndash;% text :   textitem
&ndash;%        | text textitem

<h2>&ndash;% ```</h2>

-text(Contents) &mdash;> {is_list(Contents)}, !, &lsquo;+&rsquo;(textitem, Contents).

<h2>-text(Content)  &mdash;> text([Content]).</h2>

<h2>&ndash;</h2>

&ndash;%! textitem(+Content:compound)// .
&ndash;% <code>
-% textitem :   string
-%            | &lt;BR/&gt;
-%            | &lt;FONT&gt; text &lt;/FONT&gt;
-%            | &lt;I&gt; text &lt;/I&gt;
-%            | &lt;B&gt; text &lt;/B&gt;
-%            | &lt;U&gt; text &lt;/U&gt;
-%            | &lt;O&gt; text &lt;/O&gt;
-%            | &lt;SUB&gt; text &lt;/SUB&gt;
-%            | &lt;SUP&gt; text &lt;/SUP&gt;
-%            | &lt;S&gt; text &lt;/S&gt;
-%</code>
&ndash;%
&ndash;% Supported attributes for BR:
&ndash;%   * <code>ALIGN="CENTER|LEFT|RIGHT"</code>
&ndash;%
&ndash;% Supported attributes for FONT:
&ndash;%   * COLOR=&ldquo;color&rdquo;
&ndash;%   * FACE=&ldquo;fontname&rdquo;

<h2>&ndash;%   * POINT-SIZE=&ldquo;value&rdquo;</h2>

<p>-textitem(br(Attrs)) &mdash;> !,</p></li>
<li>html_element(br, Attrs).
&ndash;% Compound term: parser.
-textitem(Compound) &mdash;></li>
<li>{var(Compound)}, !,</li>
<li>html_element(Name, _, text(Content)),</li>
<li>{</li>
<li> supported_html_element(Name),</li>
<li> Compound =.. [Name,Content]</li>
<li>}.
&ndash;% Compound term: generator.
-textitem(Compound) &mdash;></li>
<li>{</li>
<li> Compound =.. [Name,Content], !,</li>
<li> supported_html_element(Name)</li>
<li>},</li>
<li>html_element(Name, _, text(Content)).
-textitem(String) &mdash;>

<h2>&ndash;  html_string(String).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

&ndash;%! supported_html_element(+Name:atom) is semidet.

<h2>&ndash;%! supported_html_element(-Name:atom) is multi.</h2>

<p>-supported_html_element(b).
-supported_html_element(font).
-supported_html_element(i).
-supported_html_element(o).
-supported_html_element(s).
-supported_html_element(sub).
-supported_html_element(sup).
-supported_html_element(u).
diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
deleted file mode 100644
index 4382aa6..0000000
&mdash;&ndash; a/prolog/tree/tree_viz.pl
+++ /dev/null
@@ -1,65 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>tree_viz,</li>
<li>[</li>
<li> tree_export_graph/2, % +Tree, ExportG</li>
<li> tree_export_graph/3, % +Tree, ExportG, +Opts</li>
<li> tree_viz/2,          % +Tree, ?File</li>
<li> tree_viz/3           % +Tree, ?File, +Opts</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> Tree visualization</h2>

<h2>-Export trees to GraphViz.</h2>

&ndash;@author Wouter Beek
&ndash;@version 2016/01-2016/02

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(graph/build_export_graph)).
&ndash;:&ndash; use_module(library(gv/gv_file)).
&ndash;:&ndash; use_module(library(ordsets)).
&ndash;:&ndash; use_module(library(tree/l_tree)).

<h2>&ndash;:&ndash; use_module(library(tree/s_tree)).</h2>

<p>&ndash;:&ndash; predicate_options(tree_export_graph/3, 3, [</p></li>
<li>  pass_to(build_export_graph/4, 4)</li>
<li>]).
&ndash;:&ndash; predicate_options(tree_viz/3, 3, [</li>
<li>  pass_to(graph_viz/3, 3),</li>
<li>  pass_to(tree_to_graph/3, 3)

<h2>&ndash;   ]).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

&ndash;%! tree_export_graph(+Tree, -ExportG) is det.
&ndash;%! tree_export_graph(+Tree, -ExportG, +Opts) is det.

<h2>&ndash;% Opts are passed to build_export_graph/4.</h2>

-tree_export_graph(Tree, ExportG) :&ndash;

<h2>&ndash;  tree_export_graph(Tree, ExportG, []).</h2>

<p>-tree_export_graph(Tree, ExportG, Opts) :&ndash;</p></li>
<li>(   is_s_tree(Tree)</li>
<li>&ndash;>  tree_to_graph(Tree, G)</li>
<li>;   is_l_tree(Tree)</li>
<li>&ndash;>  l_tree_to_graph(Tree, G)</li>
<li>),

<h2>&ndash;  build_export_graph(G, ExportG, Opts).</h2>

<h2>&ndash;</h2>

&ndash;%! tree_viz(+Tree, ?File) is det.
&ndash;%! tree_viz(+Tree, ?File, +Opts) is det.
&ndash;% Stores the given tree term into a GraphViz file.
&ndash;%

<h2>&ndash;% Options are passed to export_graph_to_gv_file/3, tree_to_graph/3.</h2>

-tree_viz(Tree, File) :&ndash;

<h2>&ndash;  tree_viz(Tree, File, []).</h2>

<p>-tree_viz(Tree, File, Opts) :&ndash;</p></li>
<li>tree_export_graph(Tree, ExportG, Opts),</li>
<li>graph_viz(ExportG, File, Opts).
diff &mdash;git a/test/gv_attrs.log b/test/gv_attrs.log
deleted file mode 100644
index a9c6010..0000000
&mdash;&ndash; a/test/gv_attrs.log
+++ /dev/null
@@ -1,169 +0,0 @@
-assert(gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;)).
-assert(gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;)).
-assert(gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)*sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;)).
-assert(gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
-assert(gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
-assert(gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
-assert(gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgetarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
-assert(gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headtarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(inputscale,[graph],[double],<em>,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labeltarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;)).
-assert(gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(&lsquo;nslimit nslimit1&rsquo;,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;)).
-assert(gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;)).
-assert(gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;)).
-assert(gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
-assert(gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;)).
-assert(gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
-assert(gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailtarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;)).
-assert(gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;)).
-assert(gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;)).
diff &mdash;git a/test/test.pl b/test/test.pl
deleted file mode 100644
index 83dc023..0000000
&mdash;&ndash; a/test/test.pl
+++ /dev/null
@@ -1,15 +0,0 @@
&ndash;%/fca
&ndash;:&ndash; use_module(library(fca/fca_viz)).
&ndash;%/graph
&ndash;:&ndash; use_module(library(graph/build_export_graph)).
&ndash;%/gv
&ndash;:&ndash; use_module(library(gv/gv_attrs)).
&ndash;:&ndash; use_module(library(gv/gv_attr_type)).
&ndash;:&ndash; use_module(library(gv/gv_color)).
&ndash;:&ndash; use_module(library(gv/gv_dom)).
&ndash;:&ndash; use_module(library(gv/gv_file)).
&ndash;:&ndash; use_module(library(gv/gv_graph)).
&ndash;:&ndash; use_module(library(gv/gv_graph_comp)).
&ndash;:&ndash; use_module(library(gv/gv_html)).
&ndash;%/tree
&ndash;:&ndash; use_module(library(tree/tree_viz)).</li>
</ul>


<p>```</p>

<h2 id="26"> 26: 正在比较变动前 76ea35d 和变动后 2a2728b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 9888973..68443ba 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -76,13 +76,13 @@ gv_compass_pt(sw) &mdash;> <code>sw</code>.
 gv_compass_pt(w) &mdash;> <code>w</code>.</p>

<p>&ndash;%! gv_edge_operator(+Directed:boolean)// .
+%! gv_edge_operator(+Directedness:boolean)// .
 % The binary edge operator between two vertices.
 % The operator that is used depends on whether the graph is directed or
 % undirected.
 %
&ndash;% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
&ndash;%               undirected (operator <code>--</code>).
+% @arg Directedness Whether an edge is directed (operator <code>-&gt;</code>) or
+%                   undirected (operator <code>--</code>).</p>

<p> gv_edge_operator(false) &mdash;> !, <code>--</code>.
 gv_edge_operator(true) &mdash;> arrow(right, 2).
@@ -90,14 +90,14 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> %! gv_edge_statement(
 %!   +Indent:nonneg,
&ndash;%!   +Directed:boolean,
+%!   +Directedness:boolean,
 %!   +GraphAttributes:list(nvpair),
 %!   +EdgeTerm:compound
 %! )// is det.
 % A GraphViz statement describing an edge.
 %
 % @arg Indent The indentation level at which the edge statement is written.
&ndash;% @arg Directed Whether the graph is directed or not.
+% @arg Directedness Whether the graph is directed or not.
 % @arg GraphAttributes The attributes of the graph. Some of these attributes
 %      may be used in the edge statement (e.g., the colorscheme).
 % @arg EdgeTerm A compound term in the GIFormat, representing an edge.
@@ -106,11 +106,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).
 %      at the from and/or to location.
 % @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</p>

<p>-gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
+gv_edge_statement(I, Directedness, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
   gv_node_id(FromId), <code></code>,</p>

<ul>
<li>gv_edge_operator(Directed), <code></code>,</li>
<li><p>gv_edge_operator(Directedness), <code></code>,</p>

<p>gv_node_id(ToId), <code></code>,</p></li>
</ul>


<p>@@ -148,11 +148,11 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 %! gv_graph(+GraphTerm:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
&ndash;%   1. <code>directonality(+Directed:oneof([directed,undirected]))</code>
&ndash;%      A directed graph uses the keyword <code>digraph</code>.
&ndash;%      An undirected graph uses the keyword <code>graph</code>.
&ndash;%   2. <code>name(+GraphName:atom)</code>
&ndash;%   3. <code>strict(+StrictGraph:boolean)</code>
+%   * <code>directedness(+boolean)</code>
+%      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
+%      Default: <code>false</code>.
+%   * <code>name(+GraphName:atom)</code>
+%   * <code>strict(+StrictGraph:boolean)</code>
 %      This forbids the creation of self-arcs and multi-edges;
 %      they are ignored in the input file.
 %      Only in combinattion with directionality <code>directed</code>.
@@ -185,7 +185,7 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;></p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
 select_nvpair(strict=Strict, GAttrs1, GAttrs2, false),
</code></pre>

<ul>
<li> select_nvpair(directed=Directed, GAttrs2, GAttrs3, true),</li>
<li> select_nvpair(directedness=Directedness, GAttrs2, GAttrs3, true),
 select_nvpair(name=GName, GAttrs3, GAttrs4, noname),
 add_default_nvpair(GAttrs4, overlap, false, GAttrs5),
 I = 0
@@ -195,24 +195,24 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
% States that this file represents a graph according to the GraphViz format.
indent(I),
gv_strict(Strict),</li>
<li>gv_graph_type(Directed), <code></code>,</li>
<li>gv_graph_type(Directedness), <code></code>,
gv_id(GName), <code></code>,
bracketed(
  curly,</li>
<li> gv_graph1(</li>
<li> gv_graph0(
   I,
   NewVTerms, SharedVAttrs, RankedVTerms,
   NewETerms, SharedEAttrs,</li>
<li>   Directed, GAttrs5</li>
<li>   Directedness, GAttrs5
 )</li>
<li>),</li>
<li>),                                                    <br/>
newline.</li>
</ul>


<p>-gv_graph1(
+gv_graph0(
   I,
   NewVTerms, SharedVAttrs, RankedVTerms,
   NewETerms, SharedEAttrs,
&ndash;  Directed, GAttrs
+  Directedness, GAttrs
 ) &mdash;>
   newline,</p>

<p>@@ -254,10 +254,10 @@ gv_graph1(
   },</p>

<p>   % The rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), RankEdges),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), RankEdges),</p>

<p>   % The non-rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), NewETerms),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), NewETerms),</p>

<p>   % Note that we do not include a newline here.</p>

<p>@@ -265,7 +265,7 @@ gv_graph1(
   indent(I).</p>

<p>&ndash;%! gv_graph_type(+Directed:boolean)// .
+%! gv_graph_type(+Directedness:boolean)// .
 % The type of graph that is represented.</p>

<p> gv_graph_type(false) &mdash;> <code>graph</code>.
diff &mdash;git a/gv_file.pl b/gv_file.pl
index c780692..9eaf66b 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -1,12 +1,17 @@
 :&ndash; module(
   gv_file,
   [
+    file_to_gv/2, % +File:atom
+                  % +Options:list(nvpair)
+    file_to_gv/3, % +FromFile:atom
+                  % ?ToFile:atom
+                  % +Options:list(nvpair)</p>

<pre><code> gif_to_gv_file/3, % +GraphInterchangeFormat:compound
</code></pre>

<ul>
<li><pre><code>               % ?ToFile:atom
</code></pre></li>
<li><pre><code>               % +ToFile:atom
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre></li>
<li> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % -SvgDom:list(compound)
               % +Options:list(nvpair)
</code></pre></li>
<li> graph_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>                 % -SvgDom:list(compound)
</code></pre></li>
<li><pre><code>                 % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -29,13 +34,10 @@ and GraphViz output files or SVG DOM structures.</p></li>
</ul>


<p> :&ndash; use_module(generics(codes_ext)).
 :&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(generics(error_ext)).
&ndash;:&ndash; use_module(generics(trees)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(run_ext)).
 :&ndash; use_module(os(safe_file)).
 :&ndash; use_module(svg(svg_file)).
&ndash;:&ndash; use_module(ugraph(ugraph_export)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -77,77 +79,56 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; db_add_novel(user:prolog_file_type(xdot, graphviz_output)).
 :&ndash; db_add_novel(user:prolog_file_type(xdot, xdot)).</p>

<p>&ndash;:&ndash; predicate_options(graph_to_svg_dom/3, 3, [
&ndash;     pass_to(gif_to_gv_file/3, 3)
+:&ndash; predicate_options(codes_to_gv_file/3, 3, [
+     pass_to(file_to_gv/3, 3)</p>

<pre><code>]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(gif_to_gv_file/3, 3, [
&ndash;     pass_to(to_gv_file/3, 3)
+:&ndash; predicate_options(file_to_gv/2, 2, [
+     pass_to(file_to_gv/3, 3)</p>

<pre><code>]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(to_gv_file/3, 3, [
&ndash;     pass_to(convert_gv/3, 3)
&ndash;   ]).
&ndash;:&ndash; predicate_options(convert_gv/3, 3, [
+:&ndash; predicate_options(file_to_gv/3, 3, [</p>

<pre><code>  method(+oneof([dot,sfdp])),
  to_file_type(+oneof([dot,jpeg,pdf,svg,xdot]))
]).
</code></pre>

<p>+:&ndash; predicate_options(gif_to_svg_dom/3, 3, [
+     pass_to(gif_to_gv_file/3, 3)
+   ]).
+:&ndash; predicate_options(gif_to_gv_file/3, 3, [
+     pass_to(codes_to_gv_file/3, 3)
+   ]).</p>

<p>&ndash;%! gif_to_gv_file(+Gif:compound, -ToFile:atom, +Options:list(nvpair)) is det.
&ndash;% Returns a file containing a GraphViz visualization of the given graph.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
&ndash;%     The file type of the generated GraphViz file.</p>

<h2>&ndash;%     Default: <code>pdf</code>.</h2>

<p>-gif_to_gv_file(Gif, ToFile, Options):&ndash;
&ndash;  once(phrase(gv_graph(Gif), Codes)),</p>

<h2>&ndash;  to_gv_file(Codes, ToFile, Options).</h2>

<p>&ndash;
&ndash;%! graph_to_svg_dom(
&ndash;%!   +GraphInterchangeFormat:compound,
&ndash;%!   -SvgDom:list(compound),
+%! codes_to_gv_file(
+%!   +Codes:list(code),
+%!   +ToFile:atom,
 %!   +Options:list(nvpair)
 %! ) is det.</p>

<p>-graph_to_svg_dom(Gif, SvgDom, Options1):&ndash;
&ndash;  % Make sure the file type of the output file is SvgDom.
&ndash;  merge_options([to_file_type=svg], Options1, Options2),
&ndash;  gif_to_gv_file(Gif, ToFile, Options2),
&ndash;  file_to_svg(ToFile, SvgDom),</p>

<h2>&ndash;  safe_delete_file(ToFile).</h2>

<p>&ndash;
&ndash;%! open_dot(+File:atom) is det.
&ndash;% Opens the given DOT file.
&ndash;%
&ndash;% @tbd Test support on Windows.</p>

<h2>&ndash;% @tbd Test support on OS-X.</h2>

<p>-open_dot(File):&ndash;
&ndash;  once(find_program_by_file_type(dot, Program)),
&ndash;  run_program(Program, [File]).
+codes_to_gv_file(Codes, ToFile, Options):&ndash;
+  access_file(ToFile, write),
+  absolute_file_name(data(tmp), TmpFile, [access(write),file_type(dot)]),
+  setup_call_cleanup(
+    open(TmpFile, write, Write, [encoding(utf8)]),
+    put_codes(Write, Codes),
+    close(Write)
+  ),
+  file_to_gv(TmpFile, ToFile, Options),
+  delete_file(TmpFile).</p>

<p>+%! file_to_gv(+FromFile:atom, +Options:list(nvpair)) is det.</p>

<p>&ndash;% SUPPORT PREDICATES %
+file_to_gv(FromFile, Options):&ndash;
+  file_to_gv(FromFile, _, Options).</p>

<p>&ndash;%! convert_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
+%! file_to_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
 % Converts a GraphViz DOT file to an image file, using a specific
 % visualization method.</p>

<p>-convert_gv(FromFile, ToFile, Options):&ndash;
+file_to_gv(FromFile, ToFile, Options):&ndash;
   option(to_file_type(dot), Options), !,
   rename_file(FromFile, ToFile).
-convert_gv(FromFile, ToFile, Options):&ndash;
&ndash;  % The input file must be readable.</p>

<h2>&ndash;  access_file(FromFile, read),</h2>

<p>+file_to_gv(FromFile, ToFile, Options):&ndash;
   % The method option.
   option(method(Method), Options, dot),
   must_be(oneof([dot,sfdp]), Method),
@@ -161,11 +142,8 @@ convert_gv(FromFile, ToFile, Options):&ndash;
   (</p>

<pre><code> var(ToFile)
</code></pre>

<p>   &ndash;>
&ndash;    absolute_file_name(
&ndash;      data(export),
&ndash;      ToFile,
&ndash;      [access(write),file_type(ToFileType)]
&ndash;    )
+    user:prolog_file_type(ToExtension, ToFileType),
+    file_alternative(FromFile, <em>, </em>, ToExtension, ToFile)
   ;</p>

<pre><code> is_absolute_file_name(ToFile),
 % The given output file must match a certain file extension.
</code></pre>

<p>@@ -186,26 +164,43 @@ convert_gv(FromFile, ToFile, Options):&ndash;
   exit_code_handler(&lsquo;GraphViz&rsquo;, ShellStatus).</p>

<p>&ndash;%! to_gv_file(+Codes:list(code), ?ToFile:atom, +Options:list(nvpair)) is det.
+%! gif_to_gv_file(+Gif:compound, +ToFile:atom, +Options:list(nvpair)) is det.
+% Returns a file containing a GraphViz visualization of the given graph.
+%
+% The following options are supported:
+%   * =|method(+Method:oneof([dot,sfdp])|=
+%     The algorithm used by GraphViz for positioning the tree nodes.
+%     Either =dot= (default) or =sfdp=.
+%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
+%     The file type of the generated GraphViz file.
+%     Default: <code>pdf</code>.</p>

<p>-to_gv_file(Codes, ToFile, Options):&ndash;
&ndash;  absolute_file_name(
&ndash;    data(tmp),
&ndash;    FromFile,
&ndash;    [access(write),file_type(graphviz)]
&ndash;  ),
&ndash;  setup_call_cleanup(
&ndash;    open(FromFile, write, Out, [encoding(utf8),type(test)]),
&ndash;    put_codes(Out, Codes),
&ndash;    close(Out)
&ndash;  ),
&ndash;  convert_gv(FromFile, ToFile, Options),
+gif_to_gv_file(Gif, ToFile, Options):&ndash;
+  once(phrase(gv_graph(Gif), Codes)),
+  codes_to_gv_file(Codes, ToFile, Options).</p>

<ul>
<li>%%%%% DEB: Store DOT file.</li>
<li>%%%%ignore((</li>
<li>%%%%  file_type_alternative(ToFile, graphviz, DOT_File),</li>
<li>%%%%  safe_copy_file(FromFile, DOT_File)</li>
<li><p>%%%%)),</p></li>
<li><p>safe_delete_file(FromFile).
+%! gif_to_svg_dom(
+%!   +GraphInterchangeFormat:compound,
+%!   -SvgDom:list(compound),
+%!   +Options:list(nvpair)
+%! ) is det.
+
+gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;</p></li>
<li>% Make sure the file type of the output file is SvgDom.</li>
<li>merge_options([to_file_type=svg], Options1, Options2),</li>
<li>gif_to_gv_file(Gif, ToFile, Options2),</li>
<li>file_to_svg(ToFile, SvgDom),</li>
<li>safe_delete_file(ToFile).
+
+
+%! open_dot(+File:atom) is det.
+% Opens the given DOT file.
+%
+% @tbd Test support on Windows.
+% @tbd Test support on OS-X.
+
+open_dot(File):&ndash;</li>
<li>once(find_program_by_file_type(dot, Program)),</li>
<li>run_program(Program, [File]).</li>
</ul>


<p>```</p>

<h2 id="27"> 27: 正在比较变动前 2a2728b 和变动后 7f9fc82 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_tree.pl b/gv_tree.pl
index afeb8f6..7a181b5 100644
&mdash;&ndash; a/gv_tree.pl
+++ b/gv_tree.pl
@@ -30,7 +30,7 @@ Export trees to GraphViz.
 %! ) is det.
 % Stores the given tree term into a GraphViz file.
 %
&ndash;% Options are passed on to create_gif/3 and gif_to_gv_file/3.
+% Options are passed on to build_gif/3 and gif_to_gv_file/3.</p>

<p> tree_to_gv_file(Tree, ToFile, Options):&ndash;
   tree_to_gif(Tree, Gif, Options),
@@ -39,5 +39,5 @@ tree_to_gv_file(Tree, ToFile, Options):&ndash;</p>

<p> tree_to_gif(H-T, Gif, Options):&ndash;
   tree_to_vertices_edges(Tree, Vs, Es),
&ndash;  create_gif(Vs, Es, Gif, Options).
+  build_gif(Vs, Es, Gif, Options).</p>

<p>```</p>

<h2 id="28"> 28: 正在比较变动前 7f9fc82 和变动后 5baddb5 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 68443ba..4f7f341 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -76,12 +76,12 @@ gv_compass_pt(sw) &mdash;> <code>sw</code>.
 gv_compass_pt(w) &mdash;> <code>w</code>.</p>

<p>&ndash;%! gv_edge_operator(+Directedness:boolean)// .
+%! gv_edge_operator(+Directed:boolean)// .
 % The binary edge operator between two vertices.
 % The operator that is used depends on whether the graph is directed or
 % undirected.
 %
&ndash;% @arg Directedness Whether an edge is directed (operator <code>-&gt;</code>) or
+% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p> gv_edge_operator(false) &mdash;> !, <code>--</code>.
@@ -90,14 +90,14 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> %! gv_edge_statement(
 %!   +Indent:nonneg,
&ndash;%!   +Directedness:boolean,
+%!   +Directed:boolean,
 %!   +GraphAttributes:list(nvpair),
 %!   +EdgeTerm:compound
 %! )// is det.
 % A GraphViz statement describing an edge.
 %
 % @arg Indent The indentation level at which the edge statement is written.
&ndash;% @arg Directedness Whether the graph is directed or not.
+% @arg Directed Whether the graph is directed or not.
 % @arg GraphAttributes The attributes of the graph. Some of these attributes
 %      may be used in the edge statement (e.g., the colorscheme).
 % @arg EdgeTerm A compound term in the GIFormat, representing an edge.
@@ -106,11 +106,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).
 %      at the from and/or to location.
 % @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</p>

<p>-gv_edge_statement(I, Directedness, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
+gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
   gv_node_id(FromId), <code></code>,</p>

<ul>
<li>gv_edge_operator(Directedness), <code></code>,</li>
<li><p>gv_edge_operator(Directed), <code></code>,</p>

<p>gv_node_id(ToId), <code></code>,</p></li>
</ul>


<p>@@ -148,7 +148,7 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 %! gv_graph(+GraphTerm:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
&ndash;%   * <code>directedness(+boolean)</code>
+%   * <code>directed(+boolean)</code>
 %      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
 %      Default: <code>false</code>.
 %   * <code>name(+GraphName:atom)</code>
@@ -185,7 +185,7 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;></p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
 select_nvpair(strict=Strict, GAttrs1, GAttrs2, false),
</code></pre>

<ul>
<li> select_nvpair(directedness=Directedness, GAttrs2, GAttrs3, true),</li>
<li> select_nvpair(directed=Directed, GAttrs2, GAttrs3, true),
 select_nvpair(name=GName, GAttrs3, GAttrs4, noname),
 add_default_nvpair(GAttrs4, overlap, false, GAttrs5),
 I = 0
@@ -195,7 +195,7 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
% States that this file represents a graph according to the GraphViz format.
indent(I),
gv_strict(Strict),</li>
<li>gv_graph_type(Directedness), <code></code>,</li>
<li>gv_graph_type(Directed), <code></code>,
gv_id(GName), <code></code>,
bracketed(
  curly,
@@ -203,16 +203,16 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
    I,
    NewVTerms, SharedVAttrs, RankedVTerms,
    NewETerms, SharedEAttrs,</li>
<li>   Directedness, GAttrs5</li>
<li>   Directed, GAttrs5
 )</li>
<li>),</li>
<li>),
newline.</li>
</ul>


<p> gv_graph0(
   I,
   NewVTerms, SharedVAttrs, RankedVTerms,
   NewETerms, SharedEAttrs,
&ndash;  Directedness, GAttrs
+  Directed, GAttrs
 ) &mdash;>
   newline,</p>

<p>@@ -254,10 +254,10 @@ gv_graph0(
   },</p>

<p>   % The rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), RankEdges),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), RankEdges),</p>

<p>   % The non-rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directedness, GAttrs), NewETerms),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), NewETerms),</p>

<p>   % Note that we do not include a newline here.</p>

<p>@@ -265,7 +265,7 @@ gv_graph0(
   indent(I).</p>

<p>&ndash;%! gv_graph_type(+Directedness:boolean)// .
+%! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p> gv_graph_type(false) &mdash;> <code>graph</code>.
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 9eaf66b..0482196 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -112,8 +112,7 @@ codes_to_gv_file(Codes, ToFile, Options):&ndash;</p>

<pre><code> put_codes(Write, Codes),
 close(Write)
</code></pre>

<p>   ),
&ndash;  file_to_gv(TmpFile, ToFile, Options),
&ndash;  delete_file(TmpFile).
+  file_to_gv(TmpFile, ToFile, Options).</p>

<p> %! file_to_gv(+FromFile:atom, +Options:list(nvpair)) is det.</p>

<p>```</p>

<h2 id="29"> 29: 正在比较变动前 5baddb5 和变动后 95bfe7f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 4f7f341..35bc3f9 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -197,6 +197,8 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   gv_strict(Strict),
   gv_graph_type(Directed), <code></code>,
   gv_id(GName), <code></code>,
+
+  % The body of the DOT file appears between curly braces.
   bracketed(</p>

<pre><code> curly,
 gv_graph0(
</code></pre>

<p>@@ -228,9 +230,21 @@ gv_graph0(
   % Attributes that are the same for all edges.
   gv_generic_attributes_statement(edge, NewI, GAttrs, SharedEAttrs),</p>

<ul>
<li>% Only add a newline if some content was written in the previous three</li>
<li>% lines.</li>
<li>({(GAttrs == [], SharedVAttrs == [], SharedEAttrs == [])} &ndash;> `` ; newline),</li>
<li>% Only add a newline if some content was already written</li>
<li>% and some content is about to be written.</li>
<li>(</li>
<li> {</li>
<li>   % Succeeds if no content was written.</li>
<li>   (GAttrs == [], SharedVAttrs == [], SharedEAttrs == [])</li>
<li> ;</li>
<li>   % Succeeds if no content is about to be written.</li>
<li>   (NewVTerms == [], RankedVTerms == [])</li>
<li> }</li>
<li>&ndash;></li>
<li> ``</li>
<li>;</li>
<li> newline</li>
<li><p>),</p>

<p>% The list of GraphViz nodes.
&lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms),
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 0482196..bba87f9 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -7,7 +7,7 @@
                % ?ToFile:atom
                % +Options:list(nvpair)
  gif_to_gv_file/3, % +GraphInterchangeFormat:compound</p></li>
<li><pre><code>               % +ToFile:atom
</code></pre></li>
<li><pre><code>               % ?ToFile:atom
               % +Options:list(nvpair)
</code></pre>

<p> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound
                   % -SvgDom:list(compound)
@@ -25,7 +25,7 @@ Also converts between GraphViz DOT formatted files
and GraphViz output files or SVG DOM structures.</p></li>
</ul>


<p> @author Wouter Beek
&ndash;@version 2011-2013/09, 2013/11-2014/01, 2014/05, 2014/07
+@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08
 */</p>

<p> :&ndash; use_module(library(option)).
@@ -36,7 +36,6 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(run_ext)).
&ndash;:&ndash; use_module(os(safe_file)).
 :&ndash; use_module(svg(svg_file)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).
@@ -100,12 +99,11 @@ and GraphViz output files or SVG DOM structures.</p>

<p> %! codes_to_gv_file(
 %!   +Codes:list(code),
&ndash;%!   +ToFile:atom,
+%!   ?ToFile:atom,
 %!   +Options:list(nvpair)
 %! ) is det.</p>

<p> codes_to_gv_file(Codes, ToFile, Options):&ndash;
&ndash;  access_file(ToFile, write),
   absolute_file_name(data(tmp), TmpFile, [access(write),file_type(dot)]),
   setup_call_cleanup(</p>

<pre><code> open(TmpFile, write, Write, [encoding(utf8)]),
</code></pre>

<p>@@ -163,7 +161,7 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   exit_code_handler(&lsquo;GraphViz&rsquo;, ShellStatus).</p>

<p>&ndash;%! gif_to_gv_file(+Gif:compound, +ToFile:atom, +Options:list(nvpair)) is det.
+%! gif_to_gv_file(+Gif:compound, ?ToFile:atom, +Options:list(nvpair)) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
@@ -190,7 +188,7 @@ gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;
   merge_options([to_file_type=svg], Options1, Options2),
   gif_to_gv_file(Gif, ToFile, Options2),
   file_to_svg(ToFile, SvgDom),
&ndash;  safe_delete_file(ToFile).
+  delete_file(ToFile).</p>

<p> %! open_dot(+File:atom) is det.</p>

<p>```</p>

<h2 id="30"> 30: 正在比较变动前 95bfe7f 和变动后 f1322fa </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 5b34b01..d7d21ad 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 5b34b01ab0cc82a56e6fd90fc26e75da22f5a0fe
+Subproject commit d7d21ad4d6d7cec98d8b0122f5303e691998f512
diff &mdash;git a/plHtml b/plHtml
index 08480c4..18e657b 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 08480c40acaee5f70bfb21e3c641bef1e7d258bd
+Subproject commit 18e657b22a84d5e98a317ddec58314964ff68bcd</p>

<p>```</p>

<h2 id="31"> 31: 正在比较变动前 f1322fa 和变动后 474bea8 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/index.pl b/index.pl
deleted file mode 100644
index 7461d13..0000000
&mdash;&ndash; a/index.pl
+++ /dev/null
@@ -1,2 +0,0 @@</p>

<h2>&ndash;% Index of project plGraphViz (empty).</h2>

<p>```</p>

<h2 id="32"> 32: 正在比较变动前 474bea8 和变动后 262cb2a </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_tree.pl b/gv_tree.pl
deleted file mode 100644
index 7a181b5..0000000
&mdash;&ndash; a/gv_tree.pl
+++ /dev/null
@@ -1,43 +0,0 @@
&ndash;:&ndash; module(
&ndash;  gv_tree,
&ndash;  [
&ndash;    tree_to_gv_file/3 % +Tree:compound
&ndash;                      % ?ToFile:atom
&ndash;                      % +Options:list(nvpair)
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz tree</h2>

<h2>-Export trees to GraphViz.</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2014/06-2014/07</p>

<h2>&ndash;*/</h2>

<h2>&ndash;:&ndash; use_module(library(aggregate)).</h2>

<h2>&ndash;:&ndash; use_module(generics(trees)).</h2>

<p>&ndash;:&ndash; use_module(plGraphViz(gv_file)).</p>

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_gif)).</h2>

<p>&ndash;
&ndash;%! tree_to_gv_file(
&ndash;%!   +Tree:compound,
&ndash;%!   ?ToFile:atom,
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
&ndash;% Stores the given tree term into a GraphViz file.
&ndash;%</p>

<h2>&ndash;% Options are passed on to build_gif/3 and gif_to_gv_file/3.</h2>

<p>-tree_to_gv_file(Tree, ToFile, Options):&ndash;
&ndash;  tree_to_gif(Tree, Gif, Options),</p>

<h2>&ndash;  gif_to_gv_file(Gif, ToFile, Options).</h2>

<p>&ndash;
-tree_to_gif(H-T, Gif, Options):&ndash;
&ndash;  tree_to_vertices_edges(Tree, Vs, Es),</p>

<h2>&ndash;  build_gif(Vs, Es, Gif, Options).</h2>

<p>```</p>

<h2 id="33"> 33: 正在比较变动前 262cb2a 和变动后 e7e6033 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 7a64c82..3c7863d 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -49,9 +49,9 @@
 @version 2014/06
 */</p>

<p>&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_cardinal)).
&ndash;:&ndash; use_module(dcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_cardinal)).
+:&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>@@ -97,7 +97,7 @@ gv_attr_type(viewPort).
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p> addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>),
+  &lsquo;?&rsquo;(<code>+</code>, []),
   double(Float).</p>

<p>@@ -106,7 +106,7 @@ addDouble(Float) &mdash;>
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p> addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>),
+  &lsquo;?&rsquo;(<code>+</code>, []),
   point(Point).</p>

<p>@@ -184,7 +184,7 @@ double(Double1) &mdash;></p>

<p> doubleList([H|T]) &mdash;>
   double(H),
&ndash;  &lsquo;<em>&rsquo;(doubleList1, T).
+  &lsquo;</em>&rsquo;(doubleList1, T, []).</p>

<p> doubleList1(Float) &mdash;>
   <code>:</code>,
@@ -255,7 +255,7 @@ input_only(true) &mdash;> <code>!</code>.</p>

<p> pointList(Points) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(point, Points).
+  &lsquo;</em>&rsquo;(point, Points, []).</p>

<p> % @tbd portPos
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index dd0145a..faf496c 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -17,11 +17,12 @@
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(dcg(dcg_content)).
&ndash;:&ndash; use_module(dcg(dcg_generic)).
 :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).</p>

<p>+:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_generic)).
+
 :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 19d6e05..14026ee 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -21,16 +21,19 @@
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_cardinal)).
&ndash;:&ndash; use_module(dcg(dcg_content)).
 :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
&ndash;:&ndash; use_module(sparql(sparql_char)).
+
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_cardinal)).
+:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg_rfc(rfc2616_basic)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<p>+:&ndash; use_module(plSparql_parse(sparql_char)).
+
 :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p> %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.
@@ -49,12 +52,12 @@</p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
   <code>#</code>,
&ndash;  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
+  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue], []).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   <code>#</code>,
&ndash;  &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha]).
+  &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha], []).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
&ndash;  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value]).
+  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
 color(Name) &mdash;>
   {gv_color(_, Name)},
   atom(Name).
@@ -72,11 +75,11 @@ hsv_color(D, Head, Tail):&ndash;
 %! colorList(+Pairs:list(pair(compound,float)))// .</p>

<p> colorList(Pairs) &mdash;>
&ndash;  &lsquo;+&rsquo;(wc, Pairs).
+  &lsquo;+&rsquo;(wc, Pairs, []).</p>

<p> wc(Color-Float) &mdash;>
   color(Color),
&ndash;  &lsquo;?&rsquo;(wc_weight(Float)).
+  &lsquo;?&rsquo;(wc_weight(Float), []).</p>

<p> wc_weight(Float) &mdash;>
   <code>;</code>,
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 35bc3f9..accd5bd 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -22,12 +22,11 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_ascii)).
&ndash;:&ndash; use_module(dcg(dcg_content)).
&ndash;:&ndash; use_module(dcg(dcg_generic)).
&ndash;:&ndash; use_module(dcg(dcg_meta)).
&ndash;:&ndash; use_module(dcg(dcg_os)).
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_generic)).
+:&ndash; use_module(plDcg(dcg_meta)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
@@ -56,7 +55,7 @@ gv_attribute(Name=Val) &mdash;>
 % Attributes occur between square brackets.
 gv_attribute_list(Context, _, Attrs1) &mdash;>
   {maplist(gv_attr(Context), Attrs1, Attrs2)},
&ndash;  bracketed(square, &lsquo;<em>&rsquo;(gv_attribute, Attrs2)).
+  bracketed(square, &lsquo;</em>&rsquo;(gv_attribute, Attrs2, [])).</p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
@@ -117,7 +116,7 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   % We want <code>colorscheme/1</code> from the edges and
   % <code>directionality/1</code> from the graph.
   gv_attribute_list(edge, GAttrs, EAttrs),
&ndash;  newline.
+  line_feed.</p>

<p> %! gv_generic_attributes_statement(
@@ -142,7 +141,7 @@ gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
 gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
   indent(I),
   gv_kind(Kind), <code></code>,
&ndash;  gv_attribute_list(Kind, GraphAttrs, KindAttrs), newline.
+  gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</p>

<p> %! gv_graph(+GraphTerm:compound)//
@@ -208,7 +207,7 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;></p>

<pre><code>   Directed, GAttrs5
 )
</code></pre>

<p>   ),
&ndash;  newline.
+  line_feed.</p>

<p> gv_graph0(
   I,
@@ -216,7 +215,7 @@ gv_graph0(
   NewETerms, SharedEAttrs,
   Directed, GAttrs
 ) &mdash;>
&ndash;  newline,
+  line_feed,</p>

<p>   % The following lines are indented.
   {NewI is I + 1},
@@ -230,7 +229,7 @@ gv_graph0(
   % Attributes that are the same for all edges.
   gv_generic_attributes_statement(edge, NewI, GAttrs, SharedEAttrs),</p>

<ul>
<li>% Only add a newline if some content was already written</li>
<li>% Only add a line_feed if some content was already written
% and some content is about to be written.
(
  {
@@ -243,16 +242,16 @@ gv_graph0(
&ndash;>
  ``
;</li>
<li> newline</li>
<li> line_feed
),</li>
</ul>


<p>   % The list of GraphViz nodes.
&ndash;  &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms),
&ndash;  ({NewVTerms == []} &ndash;> <code>; newline),
+  '*'(gv_node_statement(NewI, GAttrs), NewVTerms, []),
+  ({NewVTerms == []} -&gt;</code> ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
&ndash;  &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms),
&ndash;  ({RankedVTerms == []} &ndash;> <code>; newline),
+  '*'(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
+  ({RankedVTerms == []} -&gt;</code> ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -268,12 +267,12 @@ gv_graph0(
   },</p>

<p>   % The rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), RankEdges),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), RankEdges, []),</p>

<p>   % The non-rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), NewETerms),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), NewETerms, []),</p>

<ul>
<li>% Note that we do not include a newline here.</li>
<li><p>% Note that we do not include a line_feed here.</p>

<p>% We want to indent the closing curly brace.
indent(I).
@@ -394,15 +393,15 @@ gv_node_id(Id) &mdash;>
gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
indent(I),
gv_node_id(Id), <code></code>,</p></li>
<li>gv_attribute_list(node, GraphAttrs, VAttrs), newline.</li>
<li>gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</li>
</ul>


<p> gv_port &mdash;>
   gv_port_location,
&ndash;  &lsquo;?&rsquo;(gv_port_angle).
+  &lsquo;?&rsquo;(gv_port_angle, []).
 gv_port &mdash;>
   gv_port_angle,
&ndash;  &lsquo;?&rsquo;(gv_port_location).
+  &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
   <code>:</code>,
   gv_compass_pt(_).
@@ -452,18 +451,22 @@ gv_ranked_node_collection(
 ) &mdash;>
   indent(I),
   bracketed(curly, (
&ndash;    newline,
+    line_feed,</p>

<pre><code> % The rank attribute.
 {NewI is I + 1},
</code></pre>

<h2>&ndash;    indent(NewI), gv_attribute(rank=same), <code>;</code>, newline,</h2>

<h2>&ndash;    &lsquo;*&rsquo;(gv_node_statement(NewI, GraphAttrs), [Rank_V_Term|Content_V_Terms]),</h2>

<ul>
<li> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,
+</li>
<li> &lsquo;*&rsquo;(</li>
<li>   gv_node_statement(NewI, GraphAttrs),</li>
<li>   [Rank_V_Term|Content_V_Terms],</li>
<li>   []</li>
<li> ),</li>
<li><p> % We want to indent the closing curly brace.
 indent(I)
)),</p></li>
<li>newline.</li>
<li>line_feed.</li>
</ul>


<p> %! gv_strict(+Strict:boolean)// is det.
diff &mdash;git a/gv_html.pl b/gv_html.pl
index b8d3190..3f0b08b 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -11,7 +11,7 @@
 @version 2013/07, 2013/09, 2014/03-2014/06
 */</p>

<p>&ndash;:&ndash; use_module(dcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index 9b82fc0..7870eb1 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -11,10 +11,11 @@
 @version 2014/05-2014/06
 */</p>

<p>&ndash;:&ndash; use_module(dcg(dcg_abnf)).
&ndash;:&ndash; use_module(dcg(dcg_cardinal)).
 :&ndash; use_module(math(math_ext)).</p>

<p>+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_cardinal)).
+</p>

<p> %! gv_numeral(?Value:number)// .
@@ -48,7 +49,7 @@ gv_numeral_abs(N) &mdash;></p>

<pre><code> integer(N2)
</code></pre>

<p>   ;</p>

<pre><code> integer(N1),
</code></pre>

<ul>
<li> &lsquo;?&rsquo;((<code>.</code>, &lsquo;integer?&rsquo;(N2)))</li>
<li> &lsquo;?&rsquo;((<code>.</code>, &lsquo;integer?&rsquo;(N2)), [])
).
gv_numeral_abs(N) &mdash;>
{var(N)},</li>
</ul>


<p>```</p>

<h2 id="34"> 34: 正在比较变动前 e7e6033 和变动后 e17bf44 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>```</p>

<h2 id="35"> 35: 正在比较变动前 e17bf44 和变动后 6596aa1 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index bba87f9..c6d2933 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -30,7 +30,6 @@ and GraphViz output files or SVG DOM structures.</p>

<p> :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).
&ndash;:&ndash; use_module(library(predicate_options)). % Declarations.</p>

<p> :&ndash; use_module(generics(codes_ext)).
 :&ndash; use_module(generics(db_ext)).</p>

<p>```</p>

<h2 id="36"> 36: 正在比较变动前 6596aa1 和变动后 87e8982 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index d7d21ad..b1d2484 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit d7d21ad4d6d7cec98d8b0122f5303e691998f512
+Subproject commit b1d2484486ad4876aecc1bf70b2963b12efca341
diff &mdash;git a/plHtml b/plHtml
index 18e657b..24fff7b 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 18e657b22a84d5e98a317ddec58314964ff68bcd
+Subproject commit 24fff7bcf90b6bc4fbf317d504be899dc1b869cb</p>

<p>```</p>

<h2 id="37"> 37: 正在比较变动前 87e8982 和变动后 cb6aada </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index faf496c..1692915 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -21,7 +21,7 @@
 :&ndash; use_module(os(file_ext)).</p>

<p> :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generic)).
+:&ndash; use_module(plDcg(dcg_generics)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index accd5bd..5f33e5c 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -25,7 +25,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 :&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generic)).
+:&ndash; use_module(plDcg(dcg_generics)).
 :&ndash; use_module(plDcg(dcg_meta)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).</p>

<p>```</p>

<h2 id="38"> 38: 正在比较变动前 cb6aada 和变动后 7c8125b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 14026ee..c5fccd4 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -13,7 +13,7 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2014/06
+@version 2014/06, 2014/10
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -32,8 +32,6 @@
 :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<h2>&ndash;:&ndash; use_module(plSparql_parse(sparql_char)).</h2>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p> %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.
diff &mdash;git a/gv_file.pl b/gv_file.pl
index c6d2933..5253f39 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -135,15 +135,12 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   prolog_file_type(ToExtension, graphviz_output), !,</p>

<p>   % The output file is either given or created.
&ndash;  (
&ndash;    var(ToFile)
&ndash;  &ndash;>
&ndash;    user:prolog_file_type(ToExtension, ToFileType),
&ndash;    file_alternative(FromFile, <em>, </em>, ToExtension, ToFile)
&ndash;  ;
&ndash;    is_absolute_file_name(ToFile),
&ndash;    % The given output file must match a certain file extension.
&ndash;    file_name_extension(<em>, ToExtension, ToFile)
+  (   var(ToFile)
+  &ndash;>  user:prolog_file_type(ToExtension, ToFileType),
+      file_alternative(FromFile, </em>, <em>, ToExtension, ToFile)
+  ;   is_absolute_file_name(ToFile),
+      % The given output file must match a certain file extension.
+      file_name_extension(</em>, ToExtension, ToFile)
   ),
   % Now that we have the output file we can prevent the
   % file type / file extension translation predicates from bakctracking.
@@ -152,7 +149,8 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   % Run the GraphViz conversion command in the shell.
   format(atom(OutputType), &lsquo;-T~w&rsquo;, [ToExtension]),
   process_create(
&ndash;    path(Method),
+    %%%%path(Method),
+    &lsquo;C:\Program Files (x86)\Graphviz2.38\bin\dot.exe&rsquo;,</p>

<pre><code> [OutputType,FromFile,'-o',ToFile],
 [process(PID)]
</code></pre>

<p>   ),</p>

<p>```</p>

<h2 id="39"> 39: 正在比较变动前 7c8125b 和变动后 6a38f95 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 5253f39..00c9eb0 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -149,8 +149,9 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   % Run the GraphViz conversion command in the shell.
   format(atom(OutputType), &lsquo;-T~w&rsquo;, [ToExtension]),
   process_create(
&ndash;    %%%%path(Method),
&ndash;    &lsquo;C:\Program Files (x86)\Graphviz2.38\bin\dot.exe&rsquo;,
+    path(Method),
+    % @tbd Windows hack:
+    %%%%&lsquo;C:\Program Files (x86)\Graphviz2.38\bin\dot.exe&rsquo;,</p>

<pre><code> [OutputType,FromFile,'-o',ToFile],
 [process(PID)]
</code></pre>

<p>   ),</p>

<p>```</p>

<h2 id="40"> 40: 正在比较变动前 6a38f95 和变动后 ebb86cd </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index b25c15b..7193a38 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1 +1,4 @@
 <em>~
+</em>#
+<em>.db
+data/</em>
diff &mdash;git a/.gitmodules b/.gitmodules
index a63cbff..844b1bd 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,3 +4,6 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>+[submodule &ldquo;plDcg&rdquo;]
+   path = plDcg
+   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index b1d2484..15bbbbf 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit b1d2484486ad4876aecc1bf70b2963b12efca341
+Subproject commit 15bbbbf25471abe856afbf92a04c5b3ce76b0217
diff &mdash;git a/debug.pl b/debug.pl
new file mode 100644
index 0000000..099cb84
&mdash;&ndash; /dev/null
+++ b/debug.pl
@@ -0,0 +1,7 @@
+% Loads debug tools for the plGraphViz library.
+
+:&ndash; [load].
+
+:&ndash; use_module(debug_project).
+:&ndash; debug_all_files.
+
diff &mdash;git a/debug_project.pl b/debug_project.pl
new file mode 100644
index 0000000..4eb2785
&mdash;&ndash; /dev/null
+++ b/debug_project.pl
@@ -0,0 +1,55 @@
+:&ndash; module(
+  debug_project,
+  [
+    debug_all_files/0
+  ]
+).
+
+/<em>* <module> Debug project
+
+Generic code for debugging a project:
+  * Load all subdirectories and Prolog files contained in those directories.
+
+@author Wouter Beek
+@version 2014/10/31
+</em>/
+
+:&ndash; use_module(library(ansi_term)).
+:&ndash; use_module(library(apply)).
+
+:&ndash; use_module(os(dir_ext)).
+
+% Avoid errors when using gtrace/0 in threads.
+:&ndash; initialization(guitracer).
+
+
+
+debug_all_files:&ndash;
+  absolute_file_name(project(.), Dir, [access(read),file_type(directory)]),
+  directory_files(
+    Dir,
+    Files1,
+    [
+      file_types([prolog]),
+      include_directories(false),
+      include_self(false),
+      recursive(true)
+    ]
+  ),
+  exclude(do_not_load, Files1, Files2),
+  maplist(use_module, Files2).
+
+do_not_load(File1):&ndash;
+  file_base_name(File1, File2),
+  file_name_extension(File3, pl, File2),
+  do_not_load0(File3).
+
+do_not_load0(dcg_ascii).
+do_not_load0(dcg_unicode).
+do_not_load0(debug).
+do_not_load0(debug_project).
+do_not_load0(index).
+do_not_load0(load).
+do_not_load0(load_project).
+do_not_load0(rfc2616_basic).
+do_not_load0(run).
diff &mdash;git a/load.pl b/load.pl
index 4b117d1..1681cd0 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -1,12 +1,13 @@
&ndash;% Load file for plGraphViz.
+% Load file for the plGraphViz library.</p>

<p>&ndash;:&ndash; dynamic(user:prolog/3).
&ndash;:&ndash; multifile(user:prolog/3).
&ndash;   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).
+:&ndash; dynamic(user:project/3).
+:&ndash; multifile(user:project/3).
+   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;).</p>

<p> :&ndash; use_module(load_project).
&ndash;:&ndash; load_project(plGraphViz, [
+:&ndash; load_project([</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plDcg,
 plHtml
]).</li>
</ul>


<p>diff &mdash;git a/load_project.pl b/load_project.pl
index 5599b5e..e2196b7 100644
&mdash;&ndash; a/load_project.pl
+++ b/load_project.pl
@@ -1,8 +1,7 @@
 :&ndash; module(
   load_project,
   [
&ndash;    load_project/2, % +Parent:atom
&ndash;                    % +ChildProjects:list(or([atom,pair(atom)]))
+    load_project/1, % +ChildProjects:list(or([atom,pair(atom)]))</p>

<pre><code> load_subproject/2, % +ParentFileSearchPath:atom
                    % +Child:or([atom,pair(atom)])
 set_data_subdirectory/1 % +ParentDirectory:atom
</code></pre>

<p>@@ -17,7 +16,7 @@ Generic code for loading a project:
   * Load the index of subprojects onto the file search path.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06/14
+@version 2014/08/20
 */</p>

<p> :&ndash; use_module(library(ansi_term)). % Colorized terminal messages.
@@ -30,11 +29,11 @@ Generic code for loading a project:</p>

<p>-load_project(Parent, ChildProjects):&ndash;
&ndash;  parent_alias(Parent, ParentFsp),
+load_project(ChildProjects):&ndash;
+  parent_alias(ParentFsp),</p>

<p>   % Entry point.
&ndash;  source_file(load_project(<em>,</em>), ThisFile),
+  source_file(load_project(<em>), ThisFile),
   file_directory_name(ThisFile, ThisDir),
   assert(user:file_search_path(ParentFsp, ThisDir)),
   assert(user:file_search_path(project, ThisDir)),
@@ -92,11 +91,12 @@ load_project_index(Fsp):&ndash;
 load_project_index(</em>).</p>

<p>&ndash;%! parent_alias(+Parent:atom, -ParentFsp:atom) is det.
+%! parent_alias(-ParentFsp:atom) is det.</p>

<p>-parent_alias(Parent, ParentFsp):&ndash;
&ndash;  user:project(Parent, <em>, ParentFsp), !.
-parent_alias(Parent, Parent).
+parent_alias(ParentFsp):&ndash;
+  user:project(</em>, <em>, ParentFsp), !.
+parent_alias(ParentFsp):&ndash;
+  user:project(ParentFsp, </em>).</p>

<p> %! set_data_subdirectory(+ParentDirectory:atom) is det.
@@ -108,6 +108,8 @@ set_data_subdirectory(ParentDir):&ndash;</p>

<p>+% Messages
+
 :&ndash; multifile(prolog:message//1).</p>

<p> prolog:message(missing_subproject_directory(ChildFsp,ChildDir)) &mdash;>
diff &mdash;git a/plDcg b/plDcg
new file mode 160000
index 0000000..e074367
&mdash;&ndash; /dev/null
+++ b/plDcg
@@ -0,0 +1 @@
+Subproject commit e0743670465a92c083e6954c5cf6220222f088b6
diff &mdash;git a/plHtml b/plHtml
index 24fff7b..8ef47e0 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 24fff7bcf90b6bc4fbf317d504be899dc1b869cb
+Subproject commit 8ef47e09a24c637ac435abbe1d01b21237be4534
diff &mdash;git a/run.pl b/run.pl
new file mode 100644
index 0000000..8bba736
&mdash;&ndash; /dev/null
+++ b/run.pl
@@ -0,0 +1,9 @@
+% Standalone execution of the plGraphViz library.
+
+:&ndash; if(current_prolog_flag(argv, [&lsquo;&mdash;debug&rsquo;|_])).
+  :&ndash; ensure_loaded(debug).
+:&ndash; else.
+  :&ndash; set_prolog_flag(verbose, silent).
+  :&ndash; ensure_loaded(load).
+:&ndash; endif.
+</p>

<p>```</p>

<h2 id="41"> 41: 正在比较变动前 ebb86cd 和变动后 1549e44 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 5f33e5c..bde2962 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +GraphTerm:compound
+    gv_graph//1 % +Gif:compound
   ]
 ).</p>

<p>@@ -39,7 +39,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.
+  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.</p>

<p> %! gv_attribute_list(
@@ -63,16 +63,16 @@ gv_attribute_list(Context, <em>, Attrs1) &mdash;>
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | </em>)
 % ~~~</p>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> <code>_</code>.
-gv_compass_pt&copy; &mdash;> <code>c</code>.
-gv_compass_pt(e) &mdash;> <code>e</code>.
-gv_compass_pt(n) &mdash;> <code>n</code>.
-gv_compass_pt(ne) &mdash;> <code>ne</code>.
-gv_compass_pt(nw) &mdash;> <code>nw</code>.
-gv_compass_pt(s) &mdash;> <code>s</code>.
-gv_compass_pt(se) &mdash;> <code>se</code>.
-gv_compass_pt(sw) &mdash;> <code>sw</code>.
-gv_compass_pt(w) &mdash;> <code>w</code>.
+gv_compass_pt(&lsquo;</em>&rsquo;) &mdash;> &ldquo;_&rdquo;.
+gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
+gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
+gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
+gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
+gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
+gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
+gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
+gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
+gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.</p>

<p> %! gv_edge_operator(+Directed:boolean)// .
@@ -83,7 +83,7 @@ gv_compass_pt(w) &mdash;> <code>w</code>.
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, <code>--</code>.
+gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>@@ -107,11 +107,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), <code></code>,
+  gv_node_id(FromId), &ldquo; &rdquo;,</p>

<ul>
<li>gv_edge_operator(Directed), <code></code>,</li>
<li><p>gv_edge_operator(Directed), &ldquo; &rdquo;,</p></li>
<li><p>gv_node_id(ToId), <code></code>,</p></li>
<li><p>gv_node_id(ToId), &ldquo; &rdquo;,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
@@ -140,11 +140,11 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
indent(I),</p></li>
<li>gv_kind(Kind), <code></code>,</li>
<li>gv_kind(Kind), &ldquo; &rdquo;,
gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</li>
</ul>


<p>&ndash;%! gv_graph(+GraphTerm:compound)//
+%! gv_graph(+Gif:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -176,10 +176,10 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
&ndash;  gv_graph(graph(VTerms, [], ETerms, GAttrs)).
+gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;>
+  gv_graph(graph(VTerms,[],ETerms,GAttrs)).</p>

<p>-gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
+gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
   {</p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
</code></pre>

<p>@@ -194,8 +194,8 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   % States that this file represents a graph according to the GraphViz format.
   indent(I),
   gv_strict(Strict),
&ndash;  gv_graph_type(Directed), <code></code>,
&ndash;  gv_id(GName), <code></code>,
+  gv_graph_type(Directed), &ldquo; &rdquo;,
+  gv_id(GName), &ldquo; &rdquo;,</p>

<p>   % The body of the DOT file appears between curly braces.
   bracketed(
@@ -240,18 +240,18 @@ gv_graph0(</p>

<pre><code>   (NewVTerms == [], RankedVTerms == [])
 }
</code></pre>

<p>   &ndash;>
&ndash;    ``
+    &ldquo;&rdquo;
   ;</p>

<pre><code> line_feed
</code></pre>

<p>   ),</p>

<p>   % The list of GraphViz nodes.
   &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
&ndash;  ({NewVTerms == []} &ndash;> `` ; line_feed),
+  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
&ndash;  ({RankedVTerms == []} &ndash;> `` ; line_feed),
+  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -281,8 +281,8 @@ gv_graph0(
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> <code>graph</code>.
-gv_graph_type(true) &mdash;> <code>digraph</code>.
+gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
+gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.</p>

<p> %! gv_id(?Atom:atom)// is det.
@@ -305,8 +305,9 @@ gv_graph_type(true) &mdash;> <code>digraph</code>.
 %      This requires an XML grammar!</p>

<p> % HTML strings (variant 4).
-gv_id(Atom) &mdash;>
&ndash;  dcg_atom_codes(gv_html_like_label, Atom), !.
+gv_id(Content) &mdash;>
+  {compound(Content)}, !,
+  gv_html_like_label, Content).
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -353,19 +354,19 @@ gv_keyword(Codes):&ndash;
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.</p>

<p>-gv_keyword &mdash;> <code>digraph</code>.
-gv_keyword &mdash;> <code>edge</code>.
-gv_keyword &mdash;> <code>graph</code>.
-gv_keyword &mdash;> <code>node</code>.
-gv_keyword &mdash;> <code>strict</code>.
-gv_keyword &mdash;> <code>subgraph</code>.
+gv_keyword &mdash;> &ldquo;digraph&rdquo;.
+gv_keyword &mdash;> &ldquo;edge&rdquo;.
+gv_keyword &mdash;> &ldquo;graph&rdquo;.
+gv_keyword &mdash;> &ldquo;node&rdquo;.
+gv_keyword &mdash;> &ldquo;strict&rdquo;.
+gv_keyword &mdash;> &ldquo;subgraph&rdquo;.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> <code>edge</code>.
-gv_kind(graph) &mdash;> <code>graph</code>.
-gv_kind(node) &mdash;> <code>node</code>.
+gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
+gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
+gv_kind(node) &mdash;> &ldquo;node&rdquo;.</p>

<p> %! gv_node_id(+NodeId:atom)// .
@@ -392,7 +393,7 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), <code></code>,
+  gv_node_id(Id), &ldquo; &rdquo;,
   gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</p>

<p>@@ -403,23 +404,23 @@ gv_port &mdash;>
   gv_port_angle,
   &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_compass_pt(_).</p>

<p> gv_port_angle &mdash;>
&ndash;  <code>@</code>,
+  &ldquo;@&rdquo;,
   gv_id(_).</p>

<p> gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_id(_).
 gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   bracketed(</p>

<pre><code> round,
 (
   gv_id(_),
</code></pre>

<ul>
<li>   <code>,</code>,</li>
<li>   &ldquo;,&rdquo;,
   gv_id(_)
 )
).
@@ -436,7 +437,7 @@ gv_quoted_string([92,34|T]) &mdash;> !,
gv_quoted_string(T).
% Add the backslash escape character.
gv_quoted_string([34|T]) &mdash;> !,</li>
<li><code>\\\"</code>,</li>
<li><p>&ldquo;\\&rdquo;&ldquo;,
gv_quoted_string(T).
% All other characters are allowed without escaping.
gv_quoted_string([H|T]) &mdash;>
@@ -455,7 +456,7 @@ gv_ranked_node_collection(</p>

<p>   % The rank attribute.
   {NewI is I + 1},</p></li>
<li> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,</li>
<li><p> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</p>

<p> &lsquo;*&rsquo;(
   gv_node_statement(NewI, GraphAttrs),
@@ -475,7 +476,7 @@ gv_ranked_node_collection(
% This only applies to directed graphs.</p></li>
</ul>


<p> gv_strict(false) &mdash;> [].
-gv_strict(true) &mdash;> <code>strict</code>.
+gv_strict(true) &mdash;> &ldquo;strict &rdquo;.</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 3f0b08b..a308ac7 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -1,60 +1,223 @@
 :&ndash; module(
   gv_html,
   [
&ndash;    gv_html_like_label//1 % +Codes:list(code)
+    gv_html_like_label//1 % +Content:compound
   ]
 ).</p>

<p>&ndash;/<strong> <module> GraphViz HTML
+/</strong> <module> GraphViz: HTML-like labels
+
+Grammar taken from the GraphViz Web site:
+
+<del>{.txt}
+label  :   text
+   |   table
+text   :   textitem
+   |   text textitem
+textitem   :   string
+   |   <BR/>
+   |   <FONT> text </FONT>
+   |   <I> text </I>
+   |   <B> text </B>
+   |   <U> text </U>
+   |   <O> text </O>
+   |   <SUB> text </SUB>
+   |   <SUP> text </SUP>
+   |   <S> text </S>
+table  :   [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
+rows   :   row
+   |   rows row
+   |   rows <HR/> row
+row    :   <TR> cells </TR>
+cells  :   cell
+   |   cells cell
+   |   cells <VR/> cell
+cell   :   <TD> label </TD>
+   |   <TD> <IMG/> </TD>
+</del></p>

<p> @author Wouter Beek
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06
+@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
+@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p>+:&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>&ndash;%! gv_html_label(+Codes:list(code))// .
+%! gv_html_like_label(?Content:compound)// .
+
+gv_html_like_label(Content) &mdash;>
+  bracketed(angular, label(Content)).
+
+
+%! cell(?Contents:compound)// .
+% Supported attributes for TD:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT|TEXT&rdquo;
+% BALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% BGCOLOR=&ldquo;color&rdquo;
+% BORDER=&ldquo;value&rdquo;
+% CELLPADDING=&ldquo;value&rdquo;
+% CELLSPACING=&ldquo;value&rdquo;
+% COLOR=&ldquo;color&rdquo;
+% COLSPAN=&ldquo;value&rdquo;
+% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
+% GRADIENTANGLE=&ldquo;value&rdquo;
+% HEIGHT=&ldquo;value&rdquo;
+% HREF=&ldquo;value&rdquo;
+% ID=&ldquo;value&rdquo;
+% PORT=&ldquo;portName&rdquo;
+% ROWSPAN=&ldquo;value&rdquo;
+% SIDES=&ldquo;value&rdquo;
+% STYLE=&ldquo;value&rdquo;
+% TARGET=&ldquo;value&rdquo;
+% TITLE=&ldquo;value&rdquo;
+% TOOLTIP=&ldquo;value&rdquo;
+% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
+% WIDTH=&ldquo;value&rdquo;
+% </del>
 %</p>

<h2>&ndash;% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a></h2>

<p>-gv_html_label &mdash;> gv_html_text, !.
-gv_html_label &mdash;> gv_html_table, !.</p>

<h2>-gv_html_label &mdash;> [].</h2>

<h2>-gv_html_like_label &mdash;> bracketed(angular, gv_html_label).</h2>

<h2>-gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).</h2>

<p>-gv_html_table &mdash;> html_element(table, _, gv_html_rows).</p>

<h2>-gv_html_table &mdash;> html_element(font, <em>, html_element(table, </em>, gv_html_rows)).</h2>

<p>-gv_html_rows &mdash;> gv_html_row, gv_html_rows.
-gv_html_rows &mdash;> gv_html_row, html_element(hr, _), gv_html_rows.</p>

<h2>-gv_html_rows &mdash;> gv_html_row.</h2>

<h2>-gv_html_row &mdash;> html_element(tr, _, gv_html_cells).</h2>

<p>-gv_html_cell &mdash;> html_element(td, _, gv_html_label).</p>

<h2>-gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).</h2>

<p>-gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
-gv_html_cells &mdash;> gv_html_cell.</p>

<h2>-gv_html_cells &mdash;> gv_html_cell, html_element(vr, _), gv_html_cells.</h2>

<p>-gv_html_text &mdash;> gv_html_textitem, gv_html_text.</p>

<h2>-gv_html_text &mdash;> gv_html_textitem.</h2>

<p>-gv_html_textitem &mdash;> html_string, !.
-gv_html_textitem &mdash;> html_entity, !.
-gv_html_textitem &mdash;> html_element(br, <em>), !.
-gv_html_textitem &mdash;> html_element(font, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(i, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(b, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(u, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(sub, </em>, gv_html_text), !.</p>

<h2>-gv_html_textitem &mdash;> html_element(sup, _, gv_html_text), !.</h2>

<p>+% Supported attributes for IMG:
+% <del>{.txt}
+% SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;
+% SRC=&ldquo;value&rdquo;
+% </del>
+
+cell(td(Contents)) &mdash;>
+  html_element(td, [], label(Contents)).
+cell(td(img)) &mdash;>
+  html_element(td, [], html_element(img)).
+
+
+%! cells(?Contents:list(compound))// .
+
+cells([H|T]) &mdash;>
+  cell(H),
+  cells(T).
+cells([H,vr|T]) &mdash;>
+  cell(H),
+  html_element(vr),
+  cells(T).
+cells([H]) &mdash;>
+  cell(H).
+
+
+%! label(?Content:compound)// .
+% GraphViz HTML-like label.
+
+label(Content) &mdash;>
+  text(Content).
+label(Content) &mdash;>
+  table(Content).
+
+
+%! row(?Contents:compound)// .
+
+row(tr(Contents)) &mdash;>
+  html_element(tr, [], cell(Contents)).
+
+
+%! rows(?Contents:list)// .
+
+rows([H|T]) &mdash;>
+  row(H),
+  rows.
+rows([H,hr|T]) &mdash;>
+  row(H),
+  html_element(hr),
+  rows(T).
+rows([H]) &mdash;>
+  row(H).
+
+
+%! table(?Contents:compound)// .
+% Supported attributes for TABLE:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% BGCOLOR=&ldquo;color&rdquo;
+% BORDER=&ldquo;value&rdquo;
+% CELLBORDER=&ldquo;value&rdquo;
+% CELLPADDING=&ldquo;value&rdquo;
+% CELLSPACING=&ldquo;value&rdquo;
+% COLOR=&ldquo;color&rdquo;
+% COLUMNS=&ldquo;value&rdquo;
+% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
+% GRADIENTANGLE=&ldquo;value&rdquo;
+% HEIGHT=&ldquo;value&rdquo;
+% HREF=&ldquo;value&rdquo;
+% ID=&ldquo;value&rdquo;
+% PORT=&ldquo;portName&rdquo;
+% ROWS=&ldquo;value&rdquo;
+% SIDES=&ldquo;value&rdquo;
+% STYLE=&ldquo;value&rdquo;
+% TARGET=&ldquo;value&rdquo;
+% TITLE=&ldquo;value&rdquo;
+% TOOLTIP=&ldquo;value&rdquo;
+% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
+% WIDTH=&ldquo;value&rdquo;
+% </del>
+%
+% Supported attributes for FONT:
+% <del>{.txt}
+% COLOR=&ldquo;color&rdquo;
+% FACE=&ldquo;fontname&rdquo;
+% POINT-SIZE=&ldquo;value&rdquo;
+% </del>
+
+table(table(Attrs,Contents)) &mdash;>
+  html_element(table, Attrs, rows(Contents)).
+table(table(font(Contents))) &mdash;>
+  html_element(font, [], html_element(table, [], rows(Contents))).
+
+
+%! text(?Contents:list)// .
+
+text(Contents) &mdash;>
+  &lsquo;+&rsquo;(textitem, Contents, []).
+
+
+%! textitem(?Content)// .
+% Supported attributes for BR:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% </del>
+
+textitem(string(String)) &mdash;>
+  html_string(String).
+textitem(entity(Name)) &mdash;>
+  html_entity(Name).
+textitem(br(Attrs)) &mdash;>
+  html_element(br, Attrs).
+textitem(Compound) &mdash;>
+  {var(Compound)}, !,
+  html_element(Name, <em>, text(Content)),
+  {
+    supported_html_element(Name),
+    Compound =.. [Name,Content]
+  }.
+textitem(Compound) &mdash;>
+  {
+    Compound =.. [Name,Content],
+    supported_html_element(Name)
+  },
+  html_element(Name, </em>, text(Content)).
+
+
+
+% HELPERS
+
+%! supported_html_element(+Name:atom) is semidet.
+%! supported_html_element(-Name:atom) is multi.
+
+supported_html_element(b).
+supported_html_element(font).
+supported_html_element(i).
+supported_html_element(o).
+supported_html_element(s).
+supported_html_element(sub).
+supported_html_element(sup).
+supported_html_element(u).</p>

<p>```</p>

<h2 id="42"> 42: 正在比较变动前 1549e44 和变动后 61ddca2 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 15bbbbf..727ea49 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 15bbbbf25471abe856afbf92a04c5b3ce76b0217
+Subproject commit 727ea49d47063b733ae499615fda6aa06c84fb6f
diff &mdash;git a/debug_project.pl b/debug_project.pl
index 4eb2785..ab61534 100644
&mdash;&ndash; a/debug_project.pl
+++ b/debug_project.pl
@@ -37,7 +37,10 @@ debug_all_files:&ndash;</p>

<pre><code> ]
</code></pre>

<p>   ),
   exclude(do_not_load, Files1, Files2),
&ndash;  maplist(use_module, Files2).
+  maplist(use_module0, Files2).
+use_module0(File):&ndash;
+  print_message(informational, loading_module(File)),
+  use_module(File).</p>

<p> do_not_load(File1):&ndash;
   file_base_name(File1, File2),
@@ -53,3 +56,12 @@ do_not_load0(load).
 do_not_load0(load_project).
 do_not_load0(rfc2616_basic).
 do_not_load0(run).
+
+
+
+% MESSAGES
+
+:&ndash; multifile(prolog:message//1).
+
+prolog:message(loading_module(File)) &mdash;>
+  [&lsquo;[M] &rsquo;,File].
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index bde2962..5f33e5c 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +Gif:compound
+    gv_graph//1 % +GraphTerm:compound
   ]
 ).</p>

<p>@@ -39,7 +39,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.
+  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.</p>

<p> %! gv_attribute_list(
@@ -63,16 +63,16 @@ gv_attribute_list(Context, <em>, Attrs1) &mdash;>
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | </em>)
 % ~~~</p>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
-gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
-gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
-gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
-gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
-gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
-gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
-gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
-gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
-gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
+gv_compass_pt(&lsquo;_&rsquo;) &mdash;> <code>_</code>.
+gv_compass_pt&copy; &mdash;> <code>c</code>.
+gv_compass_pt(e) &mdash;> <code>e</code>.
+gv_compass_pt(n) &mdash;> <code>n</code>.
+gv_compass_pt(ne) &mdash;> <code>ne</code>.
+gv_compass_pt(nw) &mdash;> <code>nw</code>.
+gv_compass_pt(s) &mdash;> <code>s</code>.
+gv_compass_pt(se) &mdash;> <code>se</code>.
+gv_compass_pt(sw) &mdash;> <code>sw</code>.
+gv_compass_pt(w) &mdash;> <code>w</code>.</p>

<p> %! gv_edge_operator(+Directed:boolean)// .
@@ -83,7 +83,7 @@ gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
+gv_edge_operator(false) &mdash;> !, <code>--</code>.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>@@ -107,11 +107,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), &ldquo; &rdquo;,
+  gv_node_id(FromId), <code></code>,</p>

<ul>
<li>gv_edge_operator(Directed), &ldquo; &rdquo;,</li>
<li><p>gv_edge_operator(Directed), <code></code>,</p></li>
<li><p>gv_node_id(ToId), &ldquo; &rdquo;,</p></li>
<li><p>gv_node_id(ToId), <code></code>,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
@@ -140,11 +140,11 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
indent(I),</p></li>
<li>gv_kind(Kind), &ldquo; &rdquo;,</li>
<li>gv_kind(Kind), <code></code>,
gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</li>
</ul>


<p>&ndash;%! gv_graph(+Gif:compound)//
+%! gv_graph(+GraphTerm:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -176,10 +176,10 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;>
&ndash;  gv_graph(graph(VTerms,[],ETerms,GAttrs)).
+gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
+  gv_graph(graph(VTerms, [], ETerms, GAttrs)).</p>

<p>-gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
+gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   {</p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
</code></pre>

<p>@@ -194,8 +194,8 @@ gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
   % States that this file represents a graph according to the GraphViz format.
   indent(I),
   gv_strict(Strict),
&ndash;  gv_graph_type(Directed), &ldquo; &rdquo;,
&ndash;  gv_id(GName), &ldquo; &rdquo;,
+  gv_graph_type(Directed), <code></code>,
+  gv_id(GName), <code></code>,</p>

<p>   % The body of the DOT file appears between curly braces.
   bracketed(
@@ -240,18 +240,18 @@ gv_graph0(</p>

<pre><code>   (NewVTerms == [], RankedVTerms == [])
 }
</code></pre>

<p>   &ndash;>
&ndash;    &ldquo;&rdquo;
+    ``
   ;</p>

<pre><code> line_feed
</code></pre>

<p>   ),</p>

<p>   % The list of GraphViz nodes.
   &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
&ndash;  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),
+  ({NewVTerms == []} &ndash;> `` ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
&ndash;  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),
+  ({RankedVTerms == []} &ndash;> `` ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -281,8 +281,8 @@ gv_graph0(
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
-gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
+gv_graph_type(false) &mdash;> <code>graph</code>.
+gv_graph_type(true) &mdash;> <code>digraph</code>.</p>

<p> %! gv_id(?Atom:atom)// is det.
@@ -305,9 +305,8 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
 %      This requires an XML grammar!</p>

<p> % HTML strings (variant 4).
-gv_id(Content) &mdash;>
&ndash;  {compound(Content)}, !,
&ndash;  gv_html_like_label, Content).
+gv_id(Atom) &mdash;>
+  dcg_atom_codes(gv_html_like_label, Atom), !.
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -354,19 +353,19 @@ gv_keyword(Codes):&ndash;
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.</p>

<p>-gv_keyword &mdash;> &ldquo;digraph&rdquo;.
-gv_keyword &mdash;> &ldquo;edge&rdquo;.
-gv_keyword &mdash;> &ldquo;graph&rdquo;.
-gv_keyword &mdash;> &ldquo;node&rdquo;.
-gv_keyword &mdash;> &ldquo;strict&rdquo;.
-gv_keyword &mdash;> &ldquo;subgraph&rdquo;.
+gv_keyword &mdash;> <code>digraph</code>.
+gv_keyword &mdash;> <code>edge</code>.
+gv_keyword &mdash;> <code>graph</code>.
+gv_keyword &mdash;> <code>node</code>.
+gv_keyword &mdash;> <code>strict</code>.
+gv_keyword &mdash;> <code>subgraph</code>.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
-gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
-gv_kind(node) &mdash;> &ldquo;node&rdquo;.
+gv_kind(edge) &mdash;> <code>edge</code>.
+gv_kind(graph) &mdash;> <code>graph</code>.
+gv_kind(node) &mdash;> <code>node</code>.</p>

<p> %! gv_node_id(+NodeId:atom)// .
@@ -393,7 +392,7 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), &ldquo; &rdquo;,
+  gv_node_id(Id), <code></code>,
   gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</p>

<p>@@ -404,23 +403,23 @@ gv_port &mdash;>
   gv_port_angle,
   &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   gv_compass_pt(_).</p>

<p> gv_port_angle &mdash;>
&ndash;  &ldquo;@&rdquo;,
+  <code>@</code>,
   gv_id(_).</p>

<p> gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   gv_id(_).
 gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   bracketed(</p>

<pre><code> round,
 (
   gv_id(_),
</code></pre>

<ul>
<li>   &ldquo;,&rdquo;,</li>
<li>   <code>,</code>,
   gv_id(_)
 )
).
@@ -437,7 +436,7 @@ gv_quoted_string([92,34|T]) &mdash;> !,
gv_quoted_string(T).
% Add the backslash escape character.
gv_quoted_string([34|T]) &mdash;> !,</li>
<li>&ldquo;\\&rdquo;&ldquo;,</li>
<li><p><code>\\\"</code>,
gv_quoted_string(T).
% All other characters are allowed without escaping.
gv_quoted_string([H|T]) &mdash;>
@@ -456,7 +455,7 @@ gv_ranked_node_collection(</p>

<p>   % The rank attribute.
   {NewI is I + 1},</p></li>
<li> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</li>
<li><p> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,</p>

<p> &lsquo;*&rsquo;(
   gv_node_statement(NewI, GraphAttrs),
@@ -476,7 +475,7 @@ gv_ranked_node_collection(
% This only applies to directed graphs.</p></li>
</ul>


<p> gv_strict(false) &mdash;> [].
-gv_strict(true) &mdash;> &ldquo;strict &rdquo;.
+gv_strict(true) &mdash;> <code>strict</code>.</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index a308ac7..3f0b08b 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -1,223 +1,60 @@
 :&ndash; module(
   gv_html,
   [
&ndash;    gv_html_like_label//1 % +Content:compound
+    gv_html_like_label//1 % +Codes:list(code)
   ]
 ).</p>

<h2>&ndash;/** <module> GraphViz: HTML-like labels</h2>

<h2>-Grammar taken from the GraphViz Web site:</h2>

<p>&ndash;<del>{.txt}
-label  :   text
&ndash;   |   table
-text   :   textitem
&ndash;   |   text textitem
-textitem   :   string
&ndash;   |   <BR/>
&ndash;   |   <FONT> text </FONT>
&ndash;   |   <I> text </I>
&ndash;   |   <B> text </B>
&ndash;   |   <U> text </U>
&ndash;   |   <O> text </O>
&ndash;   |   <SUB> text </SUB>
&ndash;   |   <SUP> text </SUP>
&ndash;   |   <S> text </S>
-table  :   [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
-rows   :   row
&ndash;   |   rows row
&ndash;   |   rows <HR/> row
-row    :   <TR> cells </TR>
-cells  :   cell
&ndash;   |   cells cell
&ndash;   |   cells <VR/> cell
-cell   :   <TD> label </TD>
&ndash;   |   <TD> <IMG/> </TD>
&ndash;</del>
+/** <module> GraphViz HTML</p>

<p> @author Wouter Beek
&ndash;@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
+@version 2013/07, 2013/09, 2014/03-2014/06
 */</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<h2>&ndash;%! gv_html_like_label(?Content:compound)// .</h2>

<p>-gv_html_like_label(Content) &mdash;></p>

<h2>&ndash;  bracketed(angular, label(Content)).</h2>

<p>&ndash;
&ndash;%! cell(?Contents:compound)// .
&ndash;% Supported attributes for TD:
&ndash;% <del>{.txt}
&ndash;% ALIGN=&ldquo;CENTER|LEFT|RIGHT|TEXT&rdquo;
&ndash;% BALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
&ndash;% BGCOLOR=&ldquo;color&rdquo;
&ndash;% BORDER=&ldquo;value&rdquo;
&ndash;% CELLPADDING=&ldquo;value&rdquo;
&ndash;% CELLSPACING=&ldquo;value&rdquo;
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% COLSPAN=&ldquo;value&rdquo;
&ndash;% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
&ndash;% GRADIENTANGLE=&ldquo;value&rdquo;
&ndash;% HEIGHT=&ldquo;value&rdquo;
&ndash;% HREF=&ldquo;value&rdquo;
&ndash;% ID=&ldquo;value&rdquo;
&ndash;% PORT=&ldquo;portName&rdquo;
&ndash;% ROWSPAN=&ldquo;value&rdquo;
&ndash;% SIDES=&ldquo;value&rdquo;
&ndash;% STYLE=&ldquo;value&rdquo;
&ndash;% TARGET=&ldquo;value&rdquo;
&ndash;% TITLE=&ldquo;value&rdquo;
&ndash;% TOOLTIP=&ldquo;value&rdquo;
&ndash;% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
&ndash;% WIDTH=&ldquo;value&rdquo;
&ndash;% </del>
+%! gv_html_label(+Codes:list(code))// .
 %
&ndash;% Supported attributes for IMG:
&ndash;% ~~~{.txt}
&ndash;% SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;
&ndash;% SRC=&ldquo;value&rdquo;</p>

<h2>&ndash;% ~~~</h2>

<p>-cell(td(Contents)) &mdash;>
&ndash;  html_element(td, [], label(Contents)).
-cell(td(img)) &mdash;></p>

<h2>&ndash;  html_element(td, [], html_element(img)).</h2>

<p>&ndash;</p>

<h2>&ndash;%! cells(?Contents:list(compound))// .</h2>

<p>-cells([H|T]) &mdash;>
&ndash;  cell(H),
&ndash;  cells(T).
-cells([H,vr|T]) &mdash;>
&ndash;  cell(H),
&ndash;  html_element(vr),
&ndash;  cells(T).
-cells([H]) &mdash;></p>

<h2>&ndash;  cell(H).</h2>

<p>&ndash;
&ndash;%! label(?Content:compound)// .</p>

<h2>&ndash;% GraphViz HTML-like label.</h2>

<p>-label(Content) &mdash;>
&ndash;  text(Content).
-label(Content) &mdash;></p>

<h2>&ndash;  table(Content).</h2>

<p>&ndash;</p>

<h2>&ndash;%! row(?Contents:compound)// .</h2>

<p>-row(tr(Contents)) &mdash;></p>

<h2>&ndash;  html_element(tr, [], cell(Contents)).</h2>

<p>&ndash;</p>

<h2>&ndash;%! rows(?Contents:list)// .</h2>

<p>-rows([H|T]) &mdash;>
&ndash;  row(H),
&ndash;  rows.
-rows([H,hr|T]) &mdash;>
&ndash;  row(H),
&ndash;  html_element(hr),
&ndash;  rows(T).
-rows([H]) &mdash;></p>

<h2>&ndash;  row(H).</h2>

<p>&ndash;
&ndash;%! table(?Contents:compound)// .
&ndash;% Supported attributes for TABLE:
&ndash;% <del>{.txt}
&ndash;% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
&ndash;% BGCOLOR=&ldquo;color&rdquo;
&ndash;% BORDER=&ldquo;value&rdquo;
&ndash;% CELLBORDER=&ldquo;value&rdquo;
&ndash;% CELLPADDING=&ldquo;value&rdquo;
&ndash;% CELLSPACING=&ldquo;value&rdquo;
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% COLUMNS=&ldquo;value&rdquo;
&ndash;% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
&ndash;% GRADIENTANGLE=&ldquo;value&rdquo;
&ndash;% HEIGHT=&ldquo;value&rdquo;
&ndash;% HREF=&ldquo;value&rdquo;
&ndash;% ID=&ldquo;value&rdquo;
&ndash;% PORT=&ldquo;portName&rdquo;
&ndash;% ROWS=&ldquo;value&rdquo;
&ndash;% SIDES=&ldquo;value&rdquo;
&ndash;% STYLE=&ldquo;value&rdquo;
&ndash;% TARGET=&ldquo;value&rdquo;
&ndash;% TITLE=&ldquo;value&rdquo;
&ndash;% TOOLTIP=&ldquo;value&rdquo;
&ndash;% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
&ndash;% WIDTH=&ldquo;value&rdquo;
&ndash;% </del>
&ndash;%
&ndash;% Supported attributes for FONT:
&ndash;% ~~~{.txt}
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% FACE=&ldquo;fontname&rdquo;
&ndash;% POINT-SIZE=&ldquo;value&rdquo;</p>

<h2>&ndash;% ~~~</h2>

<p>-table(table(Attrs,Contents)) &mdash;>
&ndash;  html_element(table, Attrs, rows(Contents)).
-table(table(font(Contents))) &mdash;></p>

<h2>&ndash;  html_element(font, [], html_element(table, [], rows(Contents))).</h2>

<p>&ndash;</p>

<h2>&ndash;%! text(?Contents:list)// .</h2>

<p>-text(Contents) &mdash;></p>

<h2>&ndash;  &lsquo;+&rsquo;(textitem, Contents, []).</h2>

<p>&ndash;
&ndash;%! textitem(?Content)// .
&ndash;% Supported attributes for BR:
&ndash;% ~~~{.txt}
&ndash;% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;</p>

<h2>&ndash;% ~~~</h2>

<p>-textitem(string(String)) &mdash;>
&ndash;  html_string(String).
-textitem(entity(Name)) &mdash;>
&ndash;  html_entity(Name).
-textitem(br(Attrs)) &mdash;>
&ndash;  html_element(br, Attrs).
-textitem(Compound) &mdash;>
&ndash;  {var(Compound)}, !,
&ndash;  html_element(Name, _, text(Content)),
&ndash;  {
&ndash;    supported_html_element(Name),
&ndash;    Compound =.. [Name,Content]
&ndash;  }.
-textitem(Compound) &mdash;>
&ndash;  {
&ndash;    Compound =.. [Name,Content],
&ndash;    supported_html_element(Name)
&ndash;  },</p>

<h2>&ndash;  html_element(Name, _, text(Content)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS</h2>

<p>&ndash;%! supported_html_element(+Name:atom) is semidet.</p>

<h2>&ndash;%! supported_html_element(-Name:atom) is multi.</h2>

<p>-supported_html_element(b).
-supported_html_element(font).
-supported_html_element(i).
-supported_html_element(o).
-supported_html_element(s).
-supported_html_element(sub).
-supported_html_element(sup).
-supported_html_element(u).
+% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a>
+
+gv_html_label &mdash;> gv_html_text, !.
+gv_html_label &mdash;> gv_html_table, !.
+gv_html_label &mdash;> [].
+
+gv_html_like_label &mdash;> bracketed(angular, gv_html_label).
+
+gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).
+
+gv_html_table &mdash;> html_element(table, <em>, gv_html_rows).
+gv_html_table &mdash;> html_element(font, </em>, html_element(table, <em>, gv_html_rows)).
+
+gv_html_rows &mdash;> gv_html_row, gv_html_rows.
+gv_html_rows &mdash;> gv_html_row, html_element(hr, </em>), gv_html_rows.
+gv_html_rows &mdash;> gv_html_row.
+
+gv_html_row &mdash;> html_element(tr, <em>, gv_html_cells).
+
+gv_html_cell &mdash;> html_element(td, </em>, gv_html_label).
+gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).
+
+gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
+gv_html_cells &mdash;> gv_html_cell.
+gv_html_cells &mdash;> gv_html_cell, html_element(vr, <em>), gv_html_cells.
+
+gv_html_text &mdash;> gv_html_textitem, gv_html_text.
+gv_html_text &mdash;> gv_html_textitem.
+
+gv_html_textitem &mdash;> html_string, !.
+gv_html_textitem &mdash;> html_entity, !.
+gv_html_textitem &mdash;> html_element(br, </em>), !.
+gv_html_textitem &mdash;> html_element(font, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(i, </em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(b, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(u, </em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(sub, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(sup, </em>, gv_html_text), !.
+
diff &mdash;git a/plDcg b/plDcg
index e074367..be16501 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit e0743670465a92c083e6954c5cf6220222f088b6
+Subproject commit be165017993efcf781007c5d682a519fb5eaa31f
diff &mdash;git a/plHtml b/plHtml
index 8ef47e0..e3abeed 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 8ef47e09a24c637ac435abbe1d01b21237be4534
+Subproject commit e3abeed4041392013965598145806ee33081f76f</p>

<p>```</p>

<h2 id="43"> 43: 正在比较变动前 61ddca2 和变动后 26f07e7 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 5f33e5c..bde2962 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +GraphTerm:compound
+    gv_graph//1 % +Gif:compound
   ]
 ).</p>

<p>@@ -39,7 +39,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.
+  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.</p>

<p> %! gv_attribute_list(
@@ -63,16 +63,16 @@ gv_attribute_list(Context, <em>, Attrs1) &mdash;>
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | </em>)
 % ~~~</p>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> <code>_</code>.
-gv_compass_pt&copy; &mdash;> <code>c</code>.
-gv_compass_pt(e) &mdash;> <code>e</code>.
-gv_compass_pt(n) &mdash;> <code>n</code>.
-gv_compass_pt(ne) &mdash;> <code>ne</code>.
-gv_compass_pt(nw) &mdash;> <code>nw</code>.
-gv_compass_pt(s) &mdash;> <code>s</code>.
-gv_compass_pt(se) &mdash;> <code>se</code>.
-gv_compass_pt(sw) &mdash;> <code>sw</code>.
-gv_compass_pt(w) &mdash;> <code>w</code>.
+gv_compass_pt(&lsquo;</em>&rsquo;) &mdash;> &ldquo;_&rdquo;.
+gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
+gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
+gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
+gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
+gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
+gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
+gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
+gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
+gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.</p>

<p> %! gv_edge_operator(+Directed:boolean)// .
@@ -83,7 +83,7 @@ gv_compass_pt(w) &mdash;> <code>w</code>.
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, <code>--</code>.
+gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>@@ -107,11 +107,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), <code></code>,
+  gv_node_id(FromId), &ldquo; &rdquo;,</p>

<ul>
<li>gv_edge_operator(Directed), <code></code>,</li>
<li><p>gv_edge_operator(Directed), &ldquo; &rdquo;,</p></li>
<li><p>gv_node_id(ToId), <code></code>,</p></li>
<li><p>gv_node_id(ToId), &ldquo; &rdquo;,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
@@ -140,11 +140,11 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
indent(I),</p></li>
<li>gv_kind(Kind), <code></code>,</li>
<li>gv_kind(Kind), &ldquo; &rdquo;,
gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</li>
</ul>


<p>&ndash;%! gv_graph(+GraphTerm:compound)//
+%! gv_graph(+Gif:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -176,10 +176,10 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
&ndash;  gv_graph(graph(VTerms, [], ETerms, GAttrs)).
+gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;>
+  gv_graph(graph(VTerms,[],ETerms,GAttrs)).</p>

<p>-gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
+gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
   {</p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
</code></pre>

<p>@@ -194,8 +194,8 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   % States that this file represents a graph according to the GraphViz format.
   indent(I),
   gv_strict(Strict),
&ndash;  gv_graph_type(Directed), <code></code>,
&ndash;  gv_id(GName), <code></code>,
+  gv_graph_type(Directed), &ldquo; &rdquo;,
+  gv_id(GName), &ldquo; &rdquo;,</p>

<p>   % The body of the DOT file appears between curly braces.
   bracketed(
@@ -240,18 +240,18 @@ gv_graph0(</p>

<pre><code>   (NewVTerms == [], RankedVTerms == [])
 }
</code></pre>

<p>   &ndash;>
&ndash;    ``
+    &ldquo;&rdquo;
   ;</p>

<pre><code> line_feed
</code></pre>

<p>   ),</p>

<p>   % The list of GraphViz nodes.
   &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
&ndash;  ({NewVTerms == []} &ndash;> `` ; line_feed),
+  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
&ndash;  ({RankedVTerms == []} &ndash;> `` ; line_feed),
+  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -281,8 +281,8 @@ gv_graph0(
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> <code>graph</code>.
-gv_graph_type(true) &mdash;> <code>digraph</code>.
+gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
+gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.</p>

<p> %! gv_id(?Atom:atom)// is det.
@@ -305,8 +305,9 @@ gv_graph_type(true) &mdash;> <code>digraph</code>.
 %      This requires an XML grammar!</p>

<p> % HTML strings (variant 4).
-gv_id(Atom) &mdash;>
&ndash;  dcg_atom_codes(gv_html_like_label, Atom), !.
+gv_id(Content) &mdash;>
+  {compound(Content)}, !,
+  gv_html_like_label, Content).
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -353,19 +354,19 @@ gv_keyword(Codes):&ndash;
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.</p>

<p>-gv_keyword &mdash;> <code>digraph</code>.
-gv_keyword &mdash;> <code>edge</code>.
-gv_keyword &mdash;> <code>graph</code>.
-gv_keyword &mdash;> <code>node</code>.
-gv_keyword &mdash;> <code>strict</code>.
-gv_keyword &mdash;> <code>subgraph</code>.
+gv_keyword &mdash;> &ldquo;digraph&rdquo;.
+gv_keyword &mdash;> &ldquo;edge&rdquo;.
+gv_keyword &mdash;> &ldquo;graph&rdquo;.
+gv_keyword &mdash;> &ldquo;node&rdquo;.
+gv_keyword &mdash;> &ldquo;strict&rdquo;.
+gv_keyword &mdash;> &ldquo;subgraph&rdquo;.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> <code>edge</code>.
-gv_kind(graph) &mdash;> <code>graph</code>.
-gv_kind(node) &mdash;> <code>node</code>.
+gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
+gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
+gv_kind(node) &mdash;> &ldquo;node&rdquo;.</p>

<p> %! gv_node_id(+NodeId:atom)// .
@@ -392,7 +393,7 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), <code></code>,
+  gv_node_id(Id), &ldquo; &rdquo;,
   gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</p>

<p>@@ -403,23 +404,23 @@ gv_port &mdash;>
   gv_port_angle,
   &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_compass_pt(_).</p>

<p> gv_port_angle &mdash;>
&ndash;  <code>@</code>,
+  &ldquo;@&rdquo;,
   gv_id(_).</p>

<p> gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_id(_).
 gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   bracketed(</p>

<pre><code> round,
 (
   gv_id(_),
</code></pre>

<ul>
<li>   <code>,</code>,</li>
<li>   &ldquo;,&rdquo;,
   gv_id(_)
 )
).
@@ -436,7 +437,7 @@ gv_quoted_string([92,34|T]) &mdash;> !,
gv_quoted_string(T).
% Add the backslash escape character.
gv_quoted_string([34|T]) &mdash;> !,</li>
<li><code>\\\"</code>,</li>
<li><p>&ldquo;\\&rdquo;&ldquo;,
gv_quoted_string(T).
% All other characters are allowed without escaping.
gv_quoted_string([H|T]) &mdash;>
@@ -455,7 +456,7 @@ gv_ranked_node_collection(</p>

<p>   % The rank attribute.
   {NewI is I + 1},</p></li>
<li> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,</li>
<li><p> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</p>

<p> &lsquo;*&rsquo;(
   gv_node_statement(NewI, GraphAttrs),
@@ -475,7 +476,7 @@ gv_ranked_node_collection(
% This only applies to directed graphs.</p></li>
</ul>


<p> gv_strict(false) &mdash;> [].
-gv_strict(true) &mdash;> <code>strict</code>.
+gv_strict(true) &mdash;> &ldquo;strict &rdquo;.</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 3f0b08b..a308ac7 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -1,60 +1,223 @@
 :&ndash; module(
   gv_html,
   [
&ndash;    gv_html_like_label//1 % +Codes:list(code)
+    gv_html_like_label//1 % +Content:compound
   ]
 ).</p>

<p>&ndash;/<strong> <module> GraphViz HTML
+/</strong> <module> GraphViz: HTML-like labels
+
+Grammar taken from the GraphViz Web site:
+
+<del>{.txt}
+label  :   text
+   |   table
+text   :   textitem
+   |   text textitem
+textitem   :   string
+   |   <BR/>
+   |   <FONT> text </FONT>
+   |   <I> text </I>
+   |   <B> text </B>
+   |   <U> text </U>
+   |   <O> text </O>
+   |   <SUB> text </SUB>
+   |   <SUP> text </SUP>
+   |   <S> text </S>
+table  :   [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
+rows   :   row
+   |   rows row
+   |   rows <HR/> row
+row    :   <TR> cells </TR>
+cells  :   cell
+   |   cells cell
+   |   cells <VR/> cell
+cell   :   <TD> label </TD>
+   |   <TD> <IMG/> </TD>
+</del></p>

<p> @author Wouter Beek
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06
+@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
+@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p>+:&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>&ndash;%! gv_html_label(+Codes:list(code))// .
+%! gv_html_like_label(?Content:compound)// .
+
+gv_html_like_label(Content) &mdash;>
+  bracketed(angular, label(Content)).
+
+
+%! cell(?Contents:compound)// .
+% Supported attributes for TD:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT|TEXT&rdquo;
+% BALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% BGCOLOR=&ldquo;color&rdquo;
+% BORDER=&ldquo;value&rdquo;
+% CELLPADDING=&ldquo;value&rdquo;
+% CELLSPACING=&ldquo;value&rdquo;
+% COLOR=&ldquo;color&rdquo;
+% COLSPAN=&ldquo;value&rdquo;
+% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
+% GRADIENTANGLE=&ldquo;value&rdquo;
+% HEIGHT=&ldquo;value&rdquo;
+% HREF=&ldquo;value&rdquo;
+% ID=&ldquo;value&rdquo;
+% PORT=&ldquo;portName&rdquo;
+% ROWSPAN=&ldquo;value&rdquo;
+% SIDES=&ldquo;value&rdquo;
+% STYLE=&ldquo;value&rdquo;
+% TARGET=&ldquo;value&rdquo;
+% TITLE=&ldquo;value&rdquo;
+% TOOLTIP=&ldquo;value&rdquo;
+% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
+% WIDTH=&ldquo;value&rdquo;
+% </del>
 %</p>

<h2>&ndash;% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a></h2>

<p>-gv_html_label &mdash;> gv_html_text, !.
-gv_html_label &mdash;> gv_html_table, !.</p>

<h2>-gv_html_label &mdash;> [].</h2>

<h2>-gv_html_like_label &mdash;> bracketed(angular, gv_html_label).</h2>

<h2>-gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).</h2>

<p>-gv_html_table &mdash;> html_element(table, _, gv_html_rows).</p>

<h2>-gv_html_table &mdash;> html_element(font, <em>, html_element(table, </em>, gv_html_rows)).</h2>

<p>-gv_html_rows &mdash;> gv_html_row, gv_html_rows.
-gv_html_rows &mdash;> gv_html_row, html_element(hr, _), gv_html_rows.</p>

<h2>-gv_html_rows &mdash;> gv_html_row.</h2>

<h2>-gv_html_row &mdash;> html_element(tr, _, gv_html_cells).</h2>

<p>-gv_html_cell &mdash;> html_element(td, _, gv_html_label).</p>

<h2>-gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).</h2>

<p>-gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
-gv_html_cells &mdash;> gv_html_cell.</p>

<h2>-gv_html_cells &mdash;> gv_html_cell, html_element(vr, _), gv_html_cells.</h2>

<p>-gv_html_text &mdash;> gv_html_textitem, gv_html_text.</p>

<h2>-gv_html_text &mdash;> gv_html_textitem.</h2>

<p>-gv_html_textitem &mdash;> html_string, !.
-gv_html_textitem &mdash;> html_entity, !.
-gv_html_textitem &mdash;> html_element(br, <em>), !.
-gv_html_textitem &mdash;> html_element(font, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(i, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(b, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(u, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(sub, </em>, gv_html_text), !.</p>

<h2>-gv_html_textitem &mdash;> html_element(sup, _, gv_html_text), !.</h2>

<p>+% Supported attributes for IMG:
+% <del>{.txt}
+% SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;
+% SRC=&ldquo;value&rdquo;
+% </del>
+
+cell(td(Contents)) &mdash;>
+  html_element(td, [], label(Contents)).
+cell(td(img)) &mdash;>
+  html_element(td, [], html_element(img)).
+
+
+%! cells(?Contents:list(compound))// .
+
+cells([H|T]) &mdash;>
+  cell(H),
+  cells(T).
+cells([H,vr|T]) &mdash;>
+  cell(H),
+  html_element(vr),
+  cells(T).
+cells([H]) &mdash;>
+  cell(H).
+
+
+%! label(?Content:compound)// .
+% GraphViz HTML-like label.
+
+label(Content) &mdash;>
+  text(Content).
+label(Content) &mdash;>
+  table(Content).
+
+
+%! row(?Contents:compound)// .
+
+row(tr(Contents)) &mdash;>
+  html_element(tr, [], cell(Contents)).
+
+
+%! rows(?Contents:list)// .
+
+rows([H|T]) &mdash;>
+  row(H),
+  rows.
+rows([H,hr|T]) &mdash;>
+  row(H),
+  html_element(hr),
+  rows(T).
+rows([H]) &mdash;>
+  row(H).
+
+
+%! table(?Contents:compound)// .
+% Supported attributes for TABLE:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% BGCOLOR=&ldquo;color&rdquo;
+% BORDER=&ldquo;value&rdquo;
+% CELLBORDER=&ldquo;value&rdquo;
+% CELLPADDING=&ldquo;value&rdquo;
+% CELLSPACING=&ldquo;value&rdquo;
+% COLOR=&ldquo;color&rdquo;
+% COLUMNS=&ldquo;value&rdquo;
+% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
+% GRADIENTANGLE=&ldquo;value&rdquo;
+% HEIGHT=&ldquo;value&rdquo;
+% HREF=&ldquo;value&rdquo;
+% ID=&ldquo;value&rdquo;
+% PORT=&ldquo;portName&rdquo;
+% ROWS=&ldquo;value&rdquo;
+% SIDES=&ldquo;value&rdquo;
+% STYLE=&ldquo;value&rdquo;
+% TARGET=&ldquo;value&rdquo;
+% TITLE=&ldquo;value&rdquo;
+% TOOLTIP=&ldquo;value&rdquo;
+% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
+% WIDTH=&ldquo;value&rdquo;
+% </del>
+%
+% Supported attributes for FONT:
+% <del>{.txt}
+% COLOR=&ldquo;color&rdquo;
+% FACE=&ldquo;fontname&rdquo;
+% POINT-SIZE=&ldquo;value&rdquo;
+% </del>
+
+table(table(Attrs,Contents)) &mdash;>
+  html_element(table, Attrs, rows(Contents)).
+table(table(font(Contents))) &mdash;>
+  html_element(font, [], html_element(table, [], rows(Contents))).
+
+
+%! text(?Contents:list)// .
+
+text(Contents) &mdash;>
+  &lsquo;+&rsquo;(textitem, Contents, []).
+
+
+%! textitem(?Content)// .
+% Supported attributes for BR:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% </del>
+
+textitem(string(String)) &mdash;>
+  html_string(String).
+textitem(entity(Name)) &mdash;>
+  html_entity(Name).
+textitem(br(Attrs)) &mdash;>
+  html_element(br, Attrs).
+textitem(Compound) &mdash;>
+  {var(Compound)}, !,
+  html_element(Name, <em>, text(Content)),
+  {
+    supported_html_element(Name),
+    Compound =.. [Name,Content]
+  }.
+textitem(Compound) &mdash;>
+  {
+    Compound =.. [Name,Content],
+    supported_html_element(Name)
+  },
+  html_element(Name, </em>, text(Content)).
+
+
+
+% HELPERS
+
+%! supported_html_element(+Name:atom) is semidet.
+%! supported_html_element(-Name:atom) is multi.
+
+supported_html_element(b).
+supported_html_element(font).
+supported_html_element(i).
+supported_html_element(o).
+supported_html_element(s).
+supported_html_element(sub).
+supported_html_element(sup).
+supported_html_element(u).</p>

<p>```</p>

<h2 id="44"> 44: 正在比较变动前 26f07e7 和变动后 f78b4f8 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 727ea49..7096ef9 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 727ea49d47063b733ae499615fda6aa06c84fb6f
+Subproject commit 7096ef9749edffe389df6a90d586930c8bf4df70
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 3c7863d..67d419a 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -46,10 +46,11 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06, 2014/11
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p>@@ -97,7 +98,7 @@ gv_attr_type(viewPort).
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p> addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>, []),
+  &lsquo;?&rsquo;(plus_sign, []),
   double(Float).</p>

<p>@@ -106,7 +107,7 @@ addDouble(Float) &mdash;>
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p> addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>, []),
+  &lsquo;?&rsquo;(plus_sign, []),
   point(Point).</p>

<p>@@ -147,10 +148,10 @@ backwards_compatible(invempty).
 backwards_compatible(open).</p>

<p>-bool(false) &mdash;> <code>false</code>.
-bool(false) &mdash;> <code>no</code>.
-bool(true) &mdash;> <code>true</code>.
-bool(true) &mdash;> <code>yes</code>.
+bool(false) &mdash;> &ldquo;false&rdquo;.
+bool(false) &mdash;> &ldquo;no&rdquo;.
+bool(true) &mdash;> &ldquo;true&rdquo;.
+bool(true) &mdash;> &ldquo;yes&rdquo;.</p>

<p> %! clusterMode(+ClusterMode:atom)// .
@@ -187,7 +188,7 @@ doubleList([H|T]) &mdash;>
   &lsquo;*&rsquo;(doubleList1, T, []).</p>

<p> doubleList1(Float) &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   double(Float).</p>

<p>@@ -242,16 +243,16 @@ pagedir(&lsquo;TR&rsquo;).</p>

<p> %! point(+Point:compound)// .
 % A <em>point</em> is represented by a compound of the following form:
&ndash;% <code>point(X:float,Y:float,InputOnly:boolean)</code>.
+% <code>point(X:float,Y:float,Changeable:boolean)</code>.</p>

<p>-point(point(X,Y,InputOnly)) &mdash;>
+point(point(X,Y,Changeable)) &mdash;>
   float(X),
&ndash;  <code>,</code>,
+  &ldquo;,&rdquo;,
   float(Y),
&ndash;  input_only(InputOnly).
+  input_changeable(Changeable).</p>

<p>-input_only(false) &mdash;> [].
-input_only(true) &mdash;> <code>!</code>.
+input_changeable(false) &mdash;> &ldquo;&rdquo;.
+input_changeable(true) &mdash;> &ldquo;!&rdquo;.</p>

<p> pointList(Points) &mdash;>
@@ -292,9 +293,9 @@ rankdir(&lsquo;TB&rsquo;).</p>

<p> rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  float(LowerLeftX), <code>,</code>,
&ndash;  float(LowerLeftY), <code>,</code>,
&ndash;  float(UpperRightX), <code>,</code>,
+  float(LowerLeftX), &ldquo;,&rdquo;,
+  float(LowerLeftY), &ldquo;,&rdquo;,
+  float(UpperRightX), &ldquo;,&rdquo;,
   float(UpperRightY).</p>

<p>@@ -414,4 +415,3 @@ style(node, wedged).</p>

<h2> % @tbd viewPort</h2>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 1692915..df0922a 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -2,15 +2,17 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>       % +Attr1:nvpair
</code></pre></li>
<li><pre><code>       % +Attr2:nvpair
</code></pre></li>
<li><pre><code>       % +Attribute1:nvpair
</code></pre></li>
<li><pre><code>       % -Attribute2:nvpair
</code></pre>

<p>]
).</p></li>
</ul>


<p>&ndash;/<strong> <module> GraphViz attributes v2
+/</strong> <module> GraphViz: Attributes
+
+Support for GraphViz attributes.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06, 2014/11
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -54,24 +56,40 @@</p>

<p>+%! gv_attr(
+%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
+%!   +Attribute1:nvpair,
+%!   +Attribute2:nvpair
+%! ) is det.
+% Uses the default value in case Value is uninstantiated.
+% Otherwise, performs a typecheck and converts the given value.
+
 gv_attr(Context, N=V, N=V):&ndash;
   var(V), !,
   gv_attr(N, UsedBy, <em>, V, </em>, <em>),
+  % Check validity of context.
   memberchk(Context, UsedBy).
 gv_attr(Context, N=V1, N=V2):&ndash;
&ndash;  gv_attr(N, UsedBy, Types, </em>, Minimum, <em>),
+  gv_attr(N2, UsedBy, Types, </em>, Minimum, _),
+  % Check validity of context.
   memberchk(Context, UsedBy),
+  % Check validity of value type.
   member(Type, Types),
&ndash;  (
&ndash;    Type == style
&ndash;  &ndash;>
&ndash;    Dcg =.. [Type,Context,V1]
&ndash;  ;
&ndash;    Dcg =.. [Type,V1]
+  (   Type == style
+  &ndash;>  Dcg =.. [Type,Context,V1]
+  ;   Dcg =.. [Type,V1]
   ),
   once(dcg_phrase(Dcg, V2)),
+  % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(V1, Minimum).</p>

<p>+
+
+% HELPERS
+
+%! check_minimum(+Value:atom, +Minimum:number) is semidet.
+% Trivially succeeds if no minimum value is available for a given attribute.
+
 check_minimum(_, &lsquo;&rsquo;):&ndash; !.
 check_minimum(V, Min1):&ndash;
   atom_number(Min1, Min2),
diff &mdash;git a/plDcg b/plDcg
index be16501..2cd7321 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit be165017993efcf781007c5d682a519fb5eaa31f
+Subproject commit 2cd7321d6c8a84ca23d08670348914c4a8ca6bb0</p>

<p>```</p>

<h2 id="45"> 45: 正在比较变动前 f78b4f8 和变动后 3109362 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index 7193a38..b25c15b 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1,4 +1 @@
 <em>~
&ndash;</em>#
&ndash;<em>.db
-data/</em>
diff &mdash;git a/.gitmodules b/.gitmodules
index 844b1bd..a63cbff 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,6 +4,3 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>&ndash;[submodule &ldquo;plDcg&rdquo;]
&ndash;   path = plDcg
&ndash;   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 7096ef9..b1d2484 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 7096ef9749edffe389df6a90d586930c8bf4df70
+Subproject commit b1d2484486ad4876aecc1bf70b2963b12efca341
diff &mdash;git a/debug.pl b/debug.pl
deleted file mode 100644
index 099cb84..0000000
&mdash;&ndash; a/debug.pl
+++ /dev/null
@@ -1,7 +0,0 @@</p>

<h2>&ndash;% Loads debug tools for the plGraphViz library.</h2>

<h2>&ndash;:&ndash; [load].</h2>

<p>&ndash;:&ndash; use_module(debug_project).</p>

<h2>&ndash;:&ndash; debug_all_files.</h2>

<p>diff &mdash;git a/debug_project.pl b/debug_project.pl
deleted file mode 100644
index ab61534..0000000
&mdash;&ndash; a/debug_project.pl
+++ /dev/null
@@ -1,67 +0,0 @@
&ndash;:&ndash; module(
&ndash;  debug_project,
&ndash;  [
&ndash;    debug_all_files/0
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> Debug project</h2>

<p>-Generic code for debugging a project:</p>

<h2>&ndash;  * Load all subdirectories and Prolog files contained in those directories.</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2014/10/31</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(ansi_term)).</p>

<h2>&ndash;:&ndash; use_module(library(apply)).</h2>

<h2>&ndash;:&ndash; use_module(os(dir_ext)).</h2>

<p>&ndash;% Avoid errors when using gtrace/0 in threads.</p>

<h2>&ndash;:&ndash; initialization(guitracer).</h2>

<h2>&ndash;</h2>

<p>-debug_all_files:&ndash;
&ndash;  absolute_file_name(project(.), Dir, [access(read),file_type(directory)]),
&ndash;  directory_files(
&ndash;    Dir,
&ndash;    Files1,
&ndash;    [
&ndash;      file_types([prolog]),
&ndash;      include_directories(false),
&ndash;      include_self(false),
&ndash;      recursive(true)
&ndash;    ]
&ndash;  ),
&ndash;  exclude(do_not_load, Files1, Files2),
&ndash;  maplist(use_module0, Files2).
-use_module0(File):&ndash;
&ndash;  print_message(informational, loading_module(File)),</p>

<h2>&ndash;  use_module(File).</h2>

<p>-do_not_load(File1):&ndash;
&ndash;  file_base_name(File1, File2),
&ndash;  file_name_extension(File3, pl, File2),</p>

<h2>&ndash;  do_not_load0(File3).</h2>

<p>-do_not_load0(dcg_ascii).
-do_not_load0(dcg_unicode).
-do_not_load0(debug).
-do_not_load0(debug_project).
-do_not_load0(index).
-do_not_load0(load).
-do_not_load0(load_project).
-do_not_load0(rfc2616_basic).</p>

<h2>-do_not_load0(run).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% MESSAGES</h2>

<h2>&ndash;:&ndash; multifile(prolog:message//1).</h2>

<p>-prolog:message(loading_module(File)) &mdash;>
&ndash;  [&lsquo;[M] &rsquo;,File].
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 67d419a..3c7863d 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -46,11 +46,10 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11
+@version 2014/06
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p>@@ -98,7 +97,7 @@ gv_attr_type(viewPort).
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p> addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(plus_sign, []),
+  &lsquo;?&rsquo;(<code>+</code>, []),
   double(Float).</p>

<p>@@ -107,7 +106,7 @@ addDouble(Float) &mdash;>
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p> addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(plus_sign, []),
+  &lsquo;?&rsquo;(<code>+</code>, []),
   point(Point).</p>

<p>@@ -148,10 +147,10 @@ backwards_compatible(invempty).
 backwards_compatible(open).</p>

<p>-bool(false) &mdash;> &ldquo;false&rdquo;.
-bool(false) &mdash;> &ldquo;no&rdquo;.
-bool(true) &mdash;> &ldquo;true&rdquo;.
-bool(true) &mdash;> &ldquo;yes&rdquo;.
+bool(false) &mdash;> <code>false</code>.
+bool(false) &mdash;> <code>no</code>.
+bool(true) &mdash;> <code>true</code>.
+bool(true) &mdash;> <code>yes</code>.</p>

<p> %! clusterMode(+ClusterMode:atom)// .
@@ -188,7 +187,7 @@ doubleList([H|T]) &mdash;>
   &lsquo;*&rsquo;(doubleList1, T, []).</p>

<p> doubleList1(Float) &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   double(Float).</p>

<p>@@ -243,16 +242,16 @@ pagedir(&lsquo;TR&rsquo;).</p>

<p> %! point(+Point:compound)// .
 % A <em>point</em> is represented by a compound of the following form:
&ndash;% <code>point(X:float,Y:float,Changeable:boolean)</code>.
+% <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p>-point(point(X,Y,Changeable)) &mdash;>
+point(point(X,Y,InputOnly)) &mdash;>
   float(X),
&ndash;  &ldquo;,&rdquo;,
+  <code>,</code>,
   float(Y),
&ndash;  input_changeable(Changeable).
+  input_only(InputOnly).</p>

<p>-input_changeable(false) &mdash;> &ldquo;&rdquo;.
-input_changeable(true) &mdash;> &ldquo;!&rdquo;.
+input_only(false) &mdash;> [].
+input_only(true) &mdash;> <code>!</code>.</p>

<p> pointList(Points) &mdash;>
@@ -293,9 +292,9 @@ rankdir(&lsquo;TB&rsquo;).</p>

<p> rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  float(LowerLeftX), &ldquo;,&rdquo;,
&ndash;  float(LowerLeftY), &ldquo;,&rdquo;,
&ndash;  float(UpperRightX), &ldquo;,&rdquo;,
+  float(LowerLeftX), <code>,</code>,
+  float(LowerLeftY), <code>,</code>,
+  float(UpperRightX), <code>,</code>,
   float(UpperRightY).</p>

<p>@@ -415,3 +414,4 @@ style(node, wedged).</p>

<p> % @tbd viewPort
+
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index df0922a..1692915 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -2,17 +2,15 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>       % +Attribute1:nvpair
</code></pre></li>
<li><pre><code>       % -Attribute2:nvpair
</code></pre></li>
<li><pre><code>       % +Attr1:nvpair
</code></pre></li>
<li><pre><code>       % +Attr2:nvpair
</code></pre>

<p>]
).</p></li>
</ul>


<h2>&ndash;/** <module> GraphViz: Attributes</h2>

<p>-Support for GraphViz attributes.
+/** <module> GraphViz attributes v2</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11
+@version 2014/06
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -56,40 +54,24 @@ Support for GraphViz attributes.</p>

<p>&ndash;%! gv_attr(
&ndash;%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +Attribute1:nvpair,
&ndash;%!   +Attribute2:nvpair
&ndash;%! ) is det.
&ndash;% Uses the default value in case Value is uninstantiated.</p>

<h2>&ndash;% Otherwise, performs a typecheck and converts the given value.</h2>

<p> gv_attr(Context, N=V, N=V):&ndash;
   var(V), !,
   gv_attr(N, UsedBy, <em>, V, </em>, <em>),
&ndash;  % Check validity of context.
   memberchk(Context, UsedBy).
 gv_attr(Context, N=V1, N=V2):&ndash;
&ndash;  gv_attr(N2, UsedBy, Types, </em>, Minimum, <em>),
&ndash;  % Check validity of context.
+  gv_attr(N, UsedBy, Types, </em>, Minimum, _),
   memberchk(Context, UsedBy),
&ndash;  % Check validity of value type.
   member(Type, Types),
&ndash;  (   Type == style
&ndash;  &ndash;>  Dcg =.. [Type,Context,V1]
&ndash;  ;   Dcg =.. [Type,V1]
+  (
+    Type == style
+  &ndash;>
+    Dcg =.. [Type,Context,V1]
+  ;
+    Dcg =.. [Type,V1]
   ),
   once(dcg_phrase(Dcg, V2)),
&ndash;  % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(V1, Minimum).</p>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS</h2>

<p>&ndash;%! check_minimum(+Value:atom, +Minimum:number) is semidet.</p>

<h2>&ndash;% Trivially succeeds if no minimum value is available for a given attribute.</h2>

<p> check_minimum(_, &lsquo;&rsquo;):&ndash; !.
 check_minimum(V, Min1):&ndash;
   atom_number(Min1, Min2),
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index bde2962..5f33e5c 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +Gif:compound
+    gv_graph//1 % +GraphTerm:compound
   ]
 ).</p>

<p>@@ -39,7 +39,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.
+  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.</p>

<p> %! gv_attribute_list(
@@ -63,16 +63,16 @@ gv_attribute_list(Context, <em>, Attrs1) &mdash;>
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | </em>)
 % ~~~</p>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
-gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
-gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
-gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
-gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
-gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
-gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
-gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
-gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
-gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
+gv_compass_pt(&lsquo;_&rsquo;) &mdash;> <code>_</code>.
+gv_compass_pt&copy; &mdash;> <code>c</code>.
+gv_compass_pt(e) &mdash;> <code>e</code>.
+gv_compass_pt(n) &mdash;> <code>n</code>.
+gv_compass_pt(ne) &mdash;> <code>ne</code>.
+gv_compass_pt(nw) &mdash;> <code>nw</code>.
+gv_compass_pt(s) &mdash;> <code>s</code>.
+gv_compass_pt(se) &mdash;> <code>se</code>.
+gv_compass_pt(sw) &mdash;> <code>sw</code>.
+gv_compass_pt(w) &mdash;> <code>w</code>.</p>

<p> %! gv_edge_operator(+Directed:boolean)// .
@@ -83,7 +83,7 @@ gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
+gv_edge_operator(false) &mdash;> !, <code>--</code>.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>@@ -107,11 +107,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), &ldquo; &rdquo;,
+  gv_node_id(FromId), <code></code>,</p>

<ul>
<li>gv_edge_operator(Directed), &ldquo; &rdquo;,</li>
<li><p>gv_edge_operator(Directed), <code></code>,</p></li>
<li><p>gv_node_id(ToId), &ldquo; &rdquo;,</p></li>
<li><p>gv_node_id(ToId), <code></code>,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
@@ -140,11 +140,11 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
indent(I),</p></li>
<li>gv_kind(Kind), &ldquo; &rdquo;,</li>
<li>gv_kind(Kind), <code></code>,
gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</li>
</ul>


<p>&ndash;%! gv_graph(+Gif:compound)//
+%! gv_graph(+GraphTerm:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -176,10 +176,10 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;>
&ndash;  gv_graph(graph(VTerms,[],ETerms,GAttrs)).
+gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
+  gv_graph(graph(VTerms, [], ETerms, GAttrs)).</p>

<p>-gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
+gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   {</p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
</code></pre>

<p>@@ -194,8 +194,8 @@ gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
   % States that this file represents a graph according to the GraphViz format.
   indent(I),
   gv_strict(Strict),
&ndash;  gv_graph_type(Directed), &ldquo; &rdquo;,
&ndash;  gv_id(GName), &ldquo; &rdquo;,
+  gv_graph_type(Directed), <code></code>,
+  gv_id(GName), <code></code>,</p>

<p>   % The body of the DOT file appears between curly braces.
   bracketed(
@@ -240,18 +240,18 @@ gv_graph0(</p>

<pre><code>   (NewVTerms == [], RankedVTerms == [])
 }
</code></pre>

<p>   &ndash;>
&ndash;    &ldquo;&rdquo;
+    ``
   ;</p>

<pre><code> line_feed
</code></pre>

<p>   ),</p>

<p>   % The list of GraphViz nodes.
   &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
&ndash;  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),
+  ({NewVTerms == []} &ndash;> `` ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
&ndash;  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),
+  ({RankedVTerms == []} &ndash;> `` ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -281,8 +281,8 @@ gv_graph0(
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
-gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
+gv_graph_type(false) &mdash;> <code>graph</code>.
+gv_graph_type(true) &mdash;> <code>digraph</code>.</p>

<p> %! gv_id(?Atom:atom)// is det.
@@ -305,9 +305,8 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
 %      This requires an XML grammar!</p>

<p> % HTML strings (variant 4).
-gv_id(Content) &mdash;>
&ndash;  {compound(Content)}, !,
&ndash;  gv_html_like_label, Content).
+gv_id(Atom) &mdash;>
+  dcg_atom_codes(gv_html_like_label, Atom), !.
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -354,19 +353,19 @@ gv_keyword(Codes):&ndash;
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.</p>

<p>-gv_keyword &mdash;> &ldquo;digraph&rdquo;.
-gv_keyword &mdash;> &ldquo;edge&rdquo;.
-gv_keyword &mdash;> &ldquo;graph&rdquo;.
-gv_keyword &mdash;> &ldquo;node&rdquo;.
-gv_keyword &mdash;> &ldquo;strict&rdquo;.
-gv_keyword &mdash;> &ldquo;subgraph&rdquo;.
+gv_keyword &mdash;> <code>digraph</code>.
+gv_keyword &mdash;> <code>edge</code>.
+gv_keyword &mdash;> <code>graph</code>.
+gv_keyword &mdash;> <code>node</code>.
+gv_keyword &mdash;> <code>strict</code>.
+gv_keyword &mdash;> <code>subgraph</code>.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
-gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
-gv_kind(node) &mdash;> &ldquo;node&rdquo;.
+gv_kind(edge) &mdash;> <code>edge</code>.
+gv_kind(graph) &mdash;> <code>graph</code>.
+gv_kind(node) &mdash;> <code>node</code>.</p>

<p> %! gv_node_id(+NodeId:atom)// .
@@ -393,7 +392,7 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), &ldquo; &rdquo;,
+  gv_node_id(Id), <code></code>,
   gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</p>

<p>@@ -404,23 +403,23 @@ gv_port &mdash;>
   gv_port_angle,
   &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   gv_compass_pt(_).</p>

<p> gv_port_angle &mdash;>
&ndash;  &ldquo;@&rdquo;,
+  <code>@</code>,
   gv_id(_).</p>

<p> gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   gv_id(_).
 gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   bracketed(</p>

<pre><code> round,
 (
   gv_id(_),
</code></pre>

<ul>
<li>   &ldquo;,&rdquo;,</li>
<li>   <code>,</code>,
   gv_id(_)
 )
).
@@ -437,7 +436,7 @@ gv_quoted_string([92,34|T]) &mdash;> !,
gv_quoted_string(T).
% Add the backslash escape character.
gv_quoted_string([34|T]) &mdash;> !,</li>
<li>&ldquo;\\&rdquo;&ldquo;,</li>
<li><p><code>\\\"</code>,
gv_quoted_string(T).
% All other characters are allowed without escaping.
gv_quoted_string([H|T]) &mdash;>
@@ -456,7 +455,7 @@ gv_ranked_node_collection(</p>

<p>   % The rank attribute.
   {NewI is I + 1},</p></li>
<li> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</li>
<li><p> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,</p>

<p> &lsquo;*&rsquo;(
   gv_node_statement(NewI, GraphAttrs),
@@ -476,7 +475,7 @@ gv_ranked_node_collection(
% This only applies to directed graphs.</p></li>
</ul>


<p> gv_strict(false) &mdash;> [].
-gv_strict(true) &mdash;> &ldquo;strict &rdquo;.
+gv_strict(true) &mdash;> <code>strict</code>.</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 00c9eb0..789bd56 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -31,7 +31,7 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).</p>

<p>&ndash;:&ndash; use_module(generics(codes_ext)).
+:&ndash; use_module(generics(code_ext)).
 :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(run_ext)).
diff &mdash;git a/gv_html.pl b/gv_html.pl
index a308ac7..3f0b08b 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -1,223 +1,60 @@
 :&ndash; module(
   gv_html,
   [
&ndash;    gv_html_like_label//1 % +Content:compound
+    gv_html_like_label//1 % +Codes:list(code)
   ]
 ).</p>

<h2>&ndash;/** <module> GraphViz: HTML-like labels</h2>

<h2>-Grammar taken from the GraphViz Web site:</h2>

<p>&ndash;<del>{.txt}
-label  :   text
&ndash;   |   table
-text   :   textitem
&ndash;   |   text textitem
-textitem   :   string
&ndash;   |   <BR/>
&ndash;   |   <FONT> text </FONT>
&ndash;   |   <I> text </I>
&ndash;   |   <B> text </B>
&ndash;   |   <U> text </U>
&ndash;   |   <O> text </O>
&ndash;   |   <SUB> text </SUB>
&ndash;   |   <SUP> text </SUP>
&ndash;   |   <S> text </S>
-table  :   [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
-rows   :   row
&ndash;   |   rows row
&ndash;   |   rows <HR/> row
-row    :   <TR> cells </TR>
-cells  :   cell
&ndash;   |   cells cell
&ndash;   |   cells <VR/> cell
-cell   :   <TD> label </TD>
&ndash;   |   <TD> <IMG/> </TD>
&ndash;</del>
+/** <module> GraphViz HTML</p>

<p> @author Wouter Beek
&ndash;@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
+@version 2013/07, 2013/09, 2014/03-2014/06
 */</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<h2>&ndash;%! gv_html_like_label(?Content:compound)// .</h2>

<p>-gv_html_like_label(Content) &mdash;></p>

<h2>&ndash;  bracketed(angular, label(Content)).</h2>

<p>&ndash;
&ndash;%! cell(?Contents:compound)// .
&ndash;% Supported attributes for TD:
&ndash;% <del>{.txt}
&ndash;% ALIGN=&ldquo;CENTER|LEFT|RIGHT|TEXT&rdquo;
&ndash;% BALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
&ndash;% BGCOLOR=&ldquo;color&rdquo;
&ndash;% BORDER=&ldquo;value&rdquo;
&ndash;% CELLPADDING=&ldquo;value&rdquo;
&ndash;% CELLSPACING=&ldquo;value&rdquo;
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% COLSPAN=&ldquo;value&rdquo;
&ndash;% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
&ndash;% GRADIENTANGLE=&ldquo;value&rdquo;
&ndash;% HEIGHT=&ldquo;value&rdquo;
&ndash;% HREF=&ldquo;value&rdquo;
&ndash;% ID=&ldquo;value&rdquo;
&ndash;% PORT=&ldquo;portName&rdquo;
&ndash;% ROWSPAN=&ldquo;value&rdquo;
&ndash;% SIDES=&ldquo;value&rdquo;
&ndash;% STYLE=&ldquo;value&rdquo;
&ndash;% TARGET=&ldquo;value&rdquo;
&ndash;% TITLE=&ldquo;value&rdquo;
&ndash;% TOOLTIP=&ldquo;value&rdquo;
&ndash;% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
&ndash;% WIDTH=&ldquo;value&rdquo;
&ndash;% </del>
+%! gv_html_label(+Codes:list(code))// .
 %
&ndash;% Supported attributes for IMG:
&ndash;% ~~~{.txt}
&ndash;% SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;
&ndash;% SRC=&ldquo;value&rdquo;</p>

<h2>&ndash;% ~~~</h2>

<p>-cell(td(Contents)) &mdash;>
&ndash;  html_element(td, [], label(Contents)).
-cell(td(img)) &mdash;></p>

<h2>&ndash;  html_element(td, [], html_element(img)).</h2>

<p>&ndash;</p>

<h2>&ndash;%! cells(?Contents:list(compound))// .</h2>

<p>-cells([H|T]) &mdash;>
&ndash;  cell(H),
&ndash;  cells(T).
-cells([H,vr|T]) &mdash;>
&ndash;  cell(H),
&ndash;  html_element(vr),
&ndash;  cells(T).
-cells([H]) &mdash;></p>

<h2>&ndash;  cell(H).</h2>

<p>&ndash;
&ndash;%! label(?Content:compound)// .</p>

<h2>&ndash;% GraphViz HTML-like label.</h2>

<p>-label(Content) &mdash;>
&ndash;  text(Content).
-label(Content) &mdash;></p>

<h2>&ndash;  table(Content).</h2>

<p>&ndash;</p>

<h2>&ndash;%! row(?Contents:compound)// .</h2>

<p>-row(tr(Contents)) &mdash;></p>

<h2>&ndash;  html_element(tr, [], cell(Contents)).</h2>

<p>&ndash;</p>

<h2>&ndash;%! rows(?Contents:list)// .</h2>

<p>-rows([H|T]) &mdash;>
&ndash;  row(H),
&ndash;  rows.
-rows([H,hr|T]) &mdash;>
&ndash;  row(H),
&ndash;  html_element(hr),
&ndash;  rows(T).
-rows([H]) &mdash;></p>

<h2>&ndash;  row(H).</h2>

<p>&ndash;
&ndash;%! table(?Contents:compound)// .
&ndash;% Supported attributes for TABLE:
&ndash;% <del>{.txt}
&ndash;% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
&ndash;% BGCOLOR=&ldquo;color&rdquo;
&ndash;% BORDER=&ldquo;value&rdquo;
&ndash;% CELLBORDER=&ldquo;value&rdquo;
&ndash;% CELLPADDING=&ldquo;value&rdquo;
&ndash;% CELLSPACING=&ldquo;value&rdquo;
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% COLUMNS=&ldquo;value&rdquo;
&ndash;% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
&ndash;% GRADIENTANGLE=&ldquo;value&rdquo;
&ndash;% HEIGHT=&ldquo;value&rdquo;
&ndash;% HREF=&ldquo;value&rdquo;
&ndash;% ID=&ldquo;value&rdquo;
&ndash;% PORT=&ldquo;portName&rdquo;
&ndash;% ROWS=&ldquo;value&rdquo;
&ndash;% SIDES=&ldquo;value&rdquo;
&ndash;% STYLE=&ldquo;value&rdquo;
&ndash;% TARGET=&ldquo;value&rdquo;
&ndash;% TITLE=&ldquo;value&rdquo;
&ndash;% TOOLTIP=&ldquo;value&rdquo;
&ndash;% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
&ndash;% WIDTH=&ldquo;value&rdquo;
&ndash;% </del>
&ndash;%
&ndash;% Supported attributes for FONT:
&ndash;% ~~~{.txt}
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% FACE=&ldquo;fontname&rdquo;
&ndash;% POINT-SIZE=&ldquo;value&rdquo;</p>

<h2>&ndash;% ~~~</h2>

<p>-table(table(Attrs,Contents)) &mdash;>
&ndash;  html_element(table, Attrs, rows(Contents)).
-table(table(font(Contents))) &mdash;></p>

<h2>&ndash;  html_element(font, [], html_element(table, [], rows(Contents))).</h2>

<p>&ndash;</p>

<h2>&ndash;%! text(?Contents:list)// .</h2>

<p>-text(Contents) &mdash;></p>

<h2>&ndash;  &lsquo;+&rsquo;(textitem, Contents, []).</h2>

<p>&ndash;
&ndash;%! textitem(?Content)// .
&ndash;% Supported attributes for BR:
&ndash;% ~~~{.txt}
&ndash;% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;</p>

<h2>&ndash;% ~~~</h2>

<p>-textitem(string(String)) &mdash;>
&ndash;  html_string(String).
-textitem(entity(Name)) &mdash;>
&ndash;  html_entity(Name).
-textitem(br(Attrs)) &mdash;>
&ndash;  html_element(br, Attrs).
-textitem(Compound) &mdash;>
&ndash;  {var(Compound)}, !,
&ndash;  html_element(Name, _, text(Content)),
&ndash;  {
&ndash;    supported_html_element(Name),
&ndash;    Compound =.. [Name,Content]
&ndash;  }.
-textitem(Compound) &mdash;>
&ndash;  {
&ndash;    Compound =.. [Name,Content],
&ndash;    supported_html_element(Name)
&ndash;  },</p>

<h2>&ndash;  html_element(Name, _, text(Content)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS</h2>

<p>&ndash;%! supported_html_element(+Name:atom) is semidet.</p>

<h2>&ndash;%! supported_html_element(-Name:atom) is multi.</h2>

<p>-supported_html_element(b).
-supported_html_element(font).
-supported_html_element(i).
-supported_html_element(o).
-supported_html_element(s).
-supported_html_element(sub).
-supported_html_element(sup).
-supported_html_element(u).
+% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a>
+
+gv_html_label &mdash;> gv_html_text, !.
+gv_html_label &mdash;> gv_html_table, !.
+gv_html_label &mdash;> [].
+
+gv_html_like_label &mdash;> bracketed(angular, gv_html_label).
+
+gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).
+
+gv_html_table &mdash;> html_element(table, <em>, gv_html_rows).
+gv_html_table &mdash;> html_element(font, </em>, html_element(table, <em>, gv_html_rows)).
+
+gv_html_rows &mdash;> gv_html_row, gv_html_rows.
+gv_html_rows &mdash;> gv_html_row, html_element(hr, </em>), gv_html_rows.
+gv_html_rows &mdash;> gv_html_row.
+
+gv_html_row &mdash;> html_element(tr, <em>, gv_html_cells).
+
+gv_html_cell &mdash;> html_element(td, </em>, gv_html_label).
+gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).
+
+gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
+gv_html_cells &mdash;> gv_html_cell.
+gv_html_cells &mdash;> gv_html_cell, html_element(vr, <em>), gv_html_cells.
+
+gv_html_text &mdash;> gv_html_textitem, gv_html_text.
+gv_html_text &mdash;> gv_html_textitem.
+
+gv_html_textitem &mdash;> html_string, !.
+gv_html_textitem &mdash;> html_entity, !.
+gv_html_textitem &mdash;> html_element(br, </em>), !.
+gv_html_textitem &mdash;> html_element(font, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(i, </em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(b, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(u, </em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(sub, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(sup, </em>, gv_html_text), !.
+
diff &mdash;git a/load.pl b/load.pl
index 1681cd0..4b117d1 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -1,13 +1,12 @@
&ndash;% Load file for the plGraphViz library.
+% Load file for plGraphViz.</p>

<p>&ndash;:&ndash; dynamic(user:project/3).
&ndash;:&ndash; multifile(user:project/3).
&ndash;   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;).
+:&ndash; dynamic(user:prolog/3).
+:&ndash; multifile(user:prolog/3).
+   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).</p>

<p> :&ndash; use_module(load_project).
&ndash;:&ndash; load_project([
+:&ndash; load_project(plGraphViz, [</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plDcg,
 plHtml
]).</li>
</ul>


<p>diff &mdash;git a/load_project.pl b/load_project.pl
index e2196b7..5599b5e 100644
&mdash;&ndash; a/load_project.pl
+++ b/load_project.pl
@@ -1,7 +1,8 @@
 :&ndash; module(
   load_project,
   [
&ndash;    load_project/1, % +ChildProjects:list(or([atom,pair(atom)]))
+    load_project/2, % +Parent:atom
+                    % +ChildProjects:list(or([atom,pair(atom)]))</p>

<pre><code> load_subproject/2, % +ParentFileSearchPath:atom
                    % +Child:or([atom,pair(atom)])
 set_data_subdirectory/1 % +ParentDirectory:atom
</code></pre>

<p>@@ -16,7 +17,7 @@ Generic code for loading a project:
   * Load the index of subprojects onto the file search path.</p>

<p> @author Wouter Beek
&ndash;@version 2014/08/20
+@version 2014/06/14
 */</p>

<p> :&ndash; use_module(library(ansi_term)). % Colorized terminal messages.
@@ -29,11 +30,11 @@ Generic code for loading a project:</p>

<p>-load_project(ChildProjects):&ndash;
&ndash;  parent_alias(ParentFsp),
+load_project(Parent, ChildProjects):&ndash;
+  parent_alias(Parent, ParentFsp),</p>

<p>   % Entry point.
&ndash;  source_file(load_project(<em>), ThisFile),
+  source_file(load_project(</em>,<em>), ThisFile),
   file_directory_name(ThisFile, ThisDir),
   assert(user:file_search_path(ParentFsp, ThisDir)),
   assert(user:file_search_path(project, ThisDir)),
@@ -91,12 +92,11 @@ load_project_index(Fsp):&ndash;
 load_project_index(</em>).</p>

<p>&ndash;%! parent_alias(-ParentFsp:atom) is det.
+%! parent_alias(+Parent:atom, -ParentFsp:atom) is det.</p>

<p>-parent_alias(ParentFsp):&ndash;
&ndash;  user:project(<em>, </em>, ParentFsp), !.
-parent_alias(ParentFsp):&ndash;
&ndash;  user:project(ParentFsp, <em>).
+parent_alias(Parent, ParentFsp):&ndash;
+  user:project(Parent, </em>, ParentFsp), !.
+parent_alias(Parent, Parent).</p>

<p> %! set_data_subdirectory(+ParentDirectory:atom) is det.
@@ -108,8 +108,6 @@ set_data_subdirectory(ParentDir):&ndash;</p>

<h2>&ndash;% Messages</h2>

<p> :&ndash; multifile(prolog:message//1).</p>

<p> prolog:message(missing_subproject_directory(ChildFsp,ChildDir)) &mdash;>
diff &mdash;git a/plDcg b/plDcg
deleted file mode 160000
index 2cd7321..0000000
&mdash;&ndash; a/plDcg
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 2cd7321d6c8a84ca23d08670348914c4a8ca6bb0
diff &mdash;git a/plHtml b/plHtml
index e3abeed..24fff7b 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit e3abeed4041392013965598145806ee33081f76f
+Subproject commit 24fff7bcf90b6bc4fbf317d504be899dc1b869cb
diff &mdash;git a/run.pl b/run.pl
deleted file mode 100644
index 8bba736..0000000
&mdash;&ndash; a/run.pl
+++ /dev/null
@@ -1,9 +0,0 @@</p>

<h2>&ndash;% Standalone execution of the plGraphViz library.</h2>

<p>&ndash;:&ndash; if(current_prolog_flag(argv, [&lsquo;&mdash;debug&rsquo;|_])).
&ndash;  :&ndash; ensure_loaded(debug).
&ndash;:&ndash; else.
&ndash;  :&ndash; set_prolog_flag(verbose, silent).
&ndash;  :&ndash; ensure_loaded(load).</p>

<h2>&ndash;:&ndash; endif.</h2>

<p>```</p>

<h2 id="46"> 46: 正在比较变动前 3109362 和变动后 df0ab09 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index b25c15b..7193a38 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1 +1,4 @@
 <em>~
+</em>#
+<em>.db
+data/</em>
diff &mdash;git a/.gitmodules b/.gitmodules
index a63cbff..844b1bd 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,3 +4,6 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>+[submodule &ldquo;plDcg&rdquo;]
+   path = plDcg
+   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index b1d2484..7096ef9 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit b1d2484486ad4876aecc1bf70b2963b12efca341
+Subproject commit 7096ef9749edffe389df6a90d586930c8bf4df70
diff &mdash;git a/debug.pl b/debug.pl
new file mode 100644
index 0000000..099cb84
&mdash;&ndash; /dev/null
+++ b/debug.pl
@@ -0,0 +1,7 @@
+% Loads debug tools for the plGraphViz library.
+
+:&ndash; [load].
+
+:&ndash; use_module(debug_project).
+:&ndash; debug_all_files.
+
diff &mdash;git a/debug_project.pl b/debug_project.pl
new file mode 100644
index 0000000..ab61534
&mdash;&ndash; /dev/null
+++ b/debug_project.pl
@@ -0,0 +1,67 @@
+:&ndash; module(
+  debug_project,
+  [
+    debug_all_files/0
+  ]
+).
+
+/<strong> <module> Debug project
+
+Generic code for debugging a project:
+  * Load all subdirectories and Prolog files contained in those directories.
+
+@author Wouter Beek
+@version 2014/10/31
+*/
+
+:&ndash; use_module(library(ansi_term)).
+:&ndash; use_module(library(apply)).
+
+:&ndash; use_module(os(dir_ext)).
+
+% Avoid errors when using gtrace/0 in threads.
+:&ndash; initialization(guitracer).
+
+
+
+debug_all_files:&ndash;
+  absolute_file_name(project(.), Dir, [access(read),file_type(directory)]),
+  directory_files(
+    Dir,
+    Files1,
+    [
+      file_types([prolog]),
+      include_directories(false),
+      include_self(false),
+      recursive(true)
+    ]
+  ),
+  exclude(do_not_load, Files1, Files2),
+  maplist(use_module0, Files2).
+use_module0(File):&ndash;
+  print_message(informational, loading_module(File)),
+  use_module(File).
+
+do_not_load(File1):&ndash;
+  file_base_name(File1, File2),
+  file_name_extension(File3, pl, File2),
+  do_not_load0(File3).
+
+do_not_load0(dcg_ascii).
+do_not_load0(dcg_unicode).
+do_not_load0(debug).
+do_not_load0(debug_project).
+do_not_load0(index).
+do_not_load0(load).
+do_not_load0(load_project).
+do_not_load0(rfc2616_basic).
+do_not_load0(run).
+
+
+
+% MESSAGES
+
+:&ndash; multifile(prolog:message//1).
+
+prolog:message(loading_module(File)) &mdash;>
+  [&lsquo;[M] &rsquo;,File].
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 3c7863d..67d419a 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -46,10 +46,11 @@
 /</strong> <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06, 2014/11
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p>@@ -97,7 +98,7 @@ gv_attr_type(viewPort).
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p> addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>, []),
+  &lsquo;?&rsquo;(plus_sign, []),
   double(Float).</p>

<p>@@ -106,7 +107,7 @@ addDouble(Float) &mdash;>
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p> addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>, []),
+  &lsquo;?&rsquo;(plus_sign, []),
   point(Point).</p>

<p>@@ -147,10 +148,10 @@ backwards_compatible(invempty).
 backwards_compatible(open).</p>

<p>-bool(false) &mdash;> <code>false</code>.
-bool(false) &mdash;> <code>no</code>.
-bool(true) &mdash;> <code>true</code>.
-bool(true) &mdash;> <code>yes</code>.
+bool(false) &mdash;> &ldquo;false&rdquo;.
+bool(false) &mdash;> &ldquo;no&rdquo;.
+bool(true) &mdash;> &ldquo;true&rdquo;.
+bool(true) &mdash;> &ldquo;yes&rdquo;.</p>

<p> %! clusterMode(+ClusterMode:atom)// .
@@ -187,7 +188,7 @@ doubleList([H|T]) &mdash;>
   &lsquo;*&rsquo;(doubleList1, T, []).</p>

<p> doubleList1(Float) &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   double(Float).</p>

<p>@@ -242,16 +243,16 @@ pagedir(&lsquo;TR&rsquo;).</p>

<p> %! point(+Point:compound)// .
 % A <em>point</em> is represented by a compound of the following form:
&ndash;% <code>point(X:float,Y:float,InputOnly:boolean)</code>.
+% <code>point(X:float,Y:float,Changeable:boolean)</code>.</p>

<p>-point(point(X,Y,InputOnly)) &mdash;>
+point(point(X,Y,Changeable)) &mdash;>
   float(X),
&ndash;  <code>,</code>,
+  &ldquo;,&rdquo;,
   float(Y),
&ndash;  input_only(InputOnly).
+  input_changeable(Changeable).</p>

<p>-input_only(false) &mdash;> [].
-input_only(true) &mdash;> <code>!</code>.
+input_changeable(false) &mdash;> &ldquo;&rdquo;.
+input_changeable(true) &mdash;> &ldquo;!&rdquo;.</p>

<p> pointList(Points) &mdash;>
@@ -292,9 +293,9 @@ rankdir(&lsquo;TB&rsquo;).</p>

<p> rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  float(LowerLeftX), <code>,</code>,
&ndash;  float(LowerLeftY), <code>,</code>,
&ndash;  float(UpperRightX), <code>,</code>,
+  float(LowerLeftX), &ldquo;,&rdquo;,
+  float(LowerLeftY), &ldquo;,&rdquo;,
+  float(UpperRightX), &ldquo;,&rdquo;,
   float(UpperRightY).</p>

<p>@@ -414,4 +415,3 @@ style(node, wedged).</p>

<h2> % @tbd viewPort</h2>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 1692915..df0922a 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -2,15 +2,17 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>       % +Attr1:nvpair
</code></pre></li>
<li><pre><code>       % +Attr2:nvpair
</code></pre></li>
<li><pre><code>       % +Attribute1:nvpair
</code></pre></li>
<li><pre><code>       % -Attribute2:nvpair
</code></pre>

<p>]
).</p></li>
</ul>


<p>&ndash;/<strong> <module> GraphViz attributes v2
+/</strong> <module> GraphViz: Attributes
+
+Support for GraphViz attributes.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06, 2014/11
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -54,24 +56,40 @@</p>

<p>+%! gv_attr(
+%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
+%!   +Attribute1:nvpair,
+%!   +Attribute2:nvpair
+%! ) is det.
+% Uses the default value in case Value is uninstantiated.
+% Otherwise, performs a typecheck and converts the given value.
+
 gv_attr(Context, N=V, N=V):&ndash;
   var(V), !,
   gv_attr(N, UsedBy, <em>, V, </em>, <em>),
+  % Check validity of context.
   memberchk(Context, UsedBy).
 gv_attr(Context, N=V1, N=V2):&ndash;
&ndash;  gv_attr(N, UsedBy, Types, </em>, Minimum, <em>),
+  gv_attr(N2, UsedBy, Types, </em>, Minimum, _),
+  % Check validity of context.
   memberchk(Context, UsedBy),
+  % Check validity of value type.
   member(Type, Types),
&ndash;  (
&ndash;    Type == style
&ndash;  &ndash;>
&ndash;    Dcg =.. [Type,Context,V1]
&ndash;  ;
&ndash;    Dcg =.. [Type,V1]
+  (   Type == style
+  &ndash;>  Dcg =.. [Type,Context,V1]
+  ;   Dcg =.. [Type,V1]
   ),
   once(dcg_phrase(Dcg, V2)),
+  % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(V1, Minimum).</p>

<p>+
+
+% HELPERS
+
+%! check_minimum(+Value:atom, +Minimum:number) is semidet.
+% Trivially succeeds if no minimum value is available for a given attribute.
+
 check_minimum(_, &lsquo;&rsquo;):&ndash; !.
 check_minimum(V, Min1):&ndash;
   atom_number(Min1, Min2),
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 5f33e5c..bde2962 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +GraphTerm:compound
+    gv_graph//1 % +Gif:compound
   ]
 ).</p>

<p>@@ -39,7 +39,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.
+  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.</p>

<p> %! gv_attribute_list(
@@ -63,16 +63,16 @@ gv_attribute_list(Context, <em>, Attrs1) &mdash;>
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | </em>)
 % ~~~</p>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> <code>_</code>.
-gv_compass_pt&copy; &mdash;> <code>c</code>.
-gv_compass_pt(e) &mdash;> <code>e</code>.
-gv_compass_pt(n) &mdash;> <code>n</code>.
-gv_compass_pt(ne) &mdash;> <code>ne</code>.
-gv_compass_pt(nw) &mdash;> <code>nw</code>.
-gv_compass_pt(s) &mdash;> <code>s</code>.
-gv_compass_pt(se) &mdash;> <code>se</code>.
-gv_compass_pt(sw) &mdash;> <code>sw</code>.
-gv_compass_pt(w) &mdash;> <code>w</code>.
+gv_compass_pt(&lsquo;</em>&rsquo;) &mdash;> &ldquo;_&rdquo;.
+gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
+gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
+gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
+gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
+gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
+gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
+gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
+gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
+gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.</p>

<p> %! gv_edge_operator(+Directed:boolean)// .
@@ -83,7 +83,7 @@ gv_compass_pt(w) &mdash;> <code>w</code>.
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, <code>--</code>.
+gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>@@ -107,11 +107,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), <code></code>,
+  gv_node_id(FromId), &ldquo; &rdquo;,</p>

<ul>
<li>gv_edge_operator(Directed), <code></code>,</li>
<li><p>gv_edge_operator(Directed), &ldquo; &rdquo;,</p></li>
<li><p>gv_node_id(ToId), <code></code>,</p></li>
<li><p>gv_node_id(ToId), &ldquo; &rdquo;,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
@@ -140,11 +140,11 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
indent(I),</p></li>
<li>gv_kind(Kind), <code></code>,</li>
<li>gv_kind(Kind), &ldquo; &rdquo;,
gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</li>
</ul>


<p>&ndash;%! gv_graph(+GraphTerm:compound)//
+%! gv_graph(+Gif:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -176,10 +176,10 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
&ndash;  gv_graph(graph(VTerms, [], ETerms, GAttrs)).
+gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;>
+  gv_graph(graph(VTerms,[],ETerms,GAttrs)).</p>

<p>-gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
+gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
   {</p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
</code></pre>

<p>@@ -194,8 +194,8 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   % States that this file represents a graph according to the GraphViz format.
   indent(I),
   gv_strict(Strict),
&ndash;  gv_graph_type(Directed), <code></code>,
&ndash;  gv_id(GName), <code></code>,
+  gv_graph_type(Directed), &ldquo; &rdquo;,
+  gv_id(GName), &ldquo; &rdquo;,</p>

<p>   % The body of the DOT file appears between curly braces.
   bracketed(
@@ -240,18 +240,18 @@ gv_graph0(</p>

<pre><code>   (NewVTerms == [], RankedVTerms == [])
 }
</code></pre>

<p>   &ndash;>
&ndash;    ``
+    &ldquo;&rdquo;
   ;</p>

<pre><code> line_feed
</code></pre>

<p>   ),</p>

<p>   % The list of GraphViz nodes.
   &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
&ndash;  ({NewVTerms == []} &ndash;> `` ; line_feed),
+  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
&ndash;  ({RankedVTerms == []} &ndash;> `` ; line_feed),
+  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -281,8 +281,8 @@ gv_graph0(
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> <code>graph</code>.
-gv_graph_type(true) &mdash;> <code>digraph</code>.
+gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
+gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.</p>

<p> %! gv_id(?Atom:atom)// is det.
@@ -305,8 +305,9 @@ gv_graph_type(true) &mdash;> <code>digraph</code>.
 %      This requires an XML grammar!</p>

<p> % HTML strings (variant 4).
-gv_id(Atom) &mdash;>
&ndash;  dcg_atom_codes(gv_html_like_label, Atom), !.
+gv_id(Content) &mdash;>
+  {compound(Content)}, !,
+  gv_html_like_label, Content).
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -353,19 +354,19 @@ gv_keyword(Codes):&ndash;
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.</p>

<p>-gv_keyword &mdash;> <code>digraph</code>.
-gv_keyword &mdash;> <code>edge</code>.
-gv_keyword &mdash;> <code>graph</code>.
-gv_keyword &mdash;> <code>node</code>.
-gv_keyword &mdash;> <code>strict</code>.
-gv_keyword &mdash;> <code>subgraph</code>.
+gv_keyword &mdash;> &ldquo;digraph&rdquo;.
+gv_keyword &mdash;> &ldquo;edge&rdquo;.
+gv_keyword &mdash;> &ldquo;graph&rdquo;.
+gv_keyword &mdash;> &ldquo;node&rdquo;.
+gv_keyword &mdash;> &ldquo;strict&rdquo;.
+gv_keyword &mdash;> &ldquo;subgraph&rdquo;.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> <code>edge</code>.
-gv_kind(graph) &mdash;> <code>graph</code>.
-gv_kind(node) &mdash;> <code>node</code>.
+gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
+gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
+gv_kind(node) &mdash;> &ldquo;node&rdquo;.</p>

<p> %! gv_node_id(+NodeId:atom)// .
@@ -392,7 +393,7 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), <code></code>,
+  gv_node_id(Id), &ldquo; &rdquo;,
   gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</p>

<p>@@ -403,23 +404,23 @@ gv_port &mdash;>
   gv_port_angle,
   &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_compass_pt(_).</p>

<p> gv_port_angle &mdash;>
&ndash;  <code>@</code>,
+  &ldquo;@&rdquo;,
   gv_id(_).</p>

<p> gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_id(_).
 gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   bracketed(</p>

<pre><code> round,
 (
   gv_id(_),
</code></pre>

<ul>
<li>   <code>,</code>,</li>
<li>   &ldquo;,&rdquo;,
   gv_id(_)
 )
).
@@ -436,7 +437,7 @@ gv_quoted_string([92,34|T]) &mdash;> !,
gv_quoted_string(T).
% Add the backslash escape character.
gv_quoted_string([34|T]) &mdash;> !,</li>
<li><code>\\\"</code>,</li>
<li><p>&ldquo;\\&rdquo;&ldquo;,
gv_quoted_string(T).
% All other characters are allowed without escaping.
gv_quoted_string([H|T]) &mdash;>
@@ -455,7 +456,7 @@ gv_ranked_node_collection(</p>

<p>   % The rank attribute.
   {NewI is I + 1},</p></li>
<li> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,</li>
<li><p> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</p>

<p> &lsquo;*&rsquo;(
   gv_node_statement(NewI, GraphAttrs),
@@ -475,7 +476,7 @@ gv_ranked_node_collection(
% This only applies to directed graphs.</p></li>
</ul>


<p> gv_strict(false) &mdash;> [].
-gv_strict(true) &mdash;> <code>strict</code>.
+gv_strict(true) &mdash;> &ldquo;strict &rdquo;.</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 3f0b08b..a308ac7 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -1,60 +1,223 @@
 :&ndash; module(
   gv_html,
   [
&ndash;    gv_html_like_label//1 % +Codes:list(code)
+    gv_html_like_label//1 % +Content:compound
   ]
 ).</p>

<p>&ndash;/<strong> <module> GraphViz HTML
+/</strong> <module> GraphViz: HTML-like labels
+
+Grammar taken from the GraphViz Web site:
+
+<del>{.txt}
+label  :   text
+   |   table
+text   :   textitem
+   |   text textitem
+textitem   :   string
+   |   <BR/>
+   |   <FONT> text </FONT>
+   |   <I> text </I>
+   |   <B> text </B>
+   |   <U> text </U>
+   |   <O> text </O>
+   |   <SUB> text </SUB>
+   |   <SUP> text </SUP>
+   |   <S> text </S>
+table  :   [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
+rows   :   row
+   |   rows row
+   |   rows <HR/> row
+row    :   <TR> cells </TR>
+cells  :   cell
+   |   cells cell
+   |   cells <VR/> cell
+cell   :   <TD> label </TD>
+   |   <TD> <IMG/> </TD>
+</del></p>

<p> @author Wouter Beek
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06
+@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
+@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p>+:&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>&ndash;%! gv_html_label(+Codes:list(code))// .
+%! gv_html_like_label(?Content:compound)// .
+
+gv_html_like_label(Content) &mdash;>
+  bracketed(angular, label(Content)).
+
+
+%! cell(?Contents:compound)// .
+% Supported attributes for TD:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT|TEXT&rdquo;
+% BALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% BGCOLOR=&ldquo;color&rdquo;
+% BORDER=&ldquo;value&rdquo;
+% CELLPADDING=&ldquo;value&rdquo;
+% CELLSPACING=&ldquo;value&rdquo;
+% COLOR=&ldquo;color&rdquo;
+% COLSPAN=&ldquo;value&rdquo;
+% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
+% GRADIENTANGLE=&ldquo;value&rdquo;
+% HEIGHT=&ldquo;value&rdquo;
+% HREF=&ldquo;value&rdquo;
+% ID=&ldquo;value&rdquo;
+% PORT=&ldquo;portName&rdquo;
+% ROWSPAN=&ldquo;value&rdquo;
+% SIDES=&ldquo;value&rdquo;
+% STYLE=&ldquo;value&rdquo;
+% TARGET=&ldquo;value&rdquo;
+% TITLE=&ldquo;value&rdquo;
+% TOOLTIP=&ldquo;value&rdquo;
+% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
+% WIDTH=&ldquo;value&rdquo;
+% </del>
 %</p>

<h2>&ndash;% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a></h2>

<p>-gv_html_label &mdash;> gv_html_text, !.
-gv_html_label &mdash;> gv_html_table, !.</p>

<h2>-gv_html_label &mdash;> [].</h2>

<h2>-gv_html_like_label &mdash;> bracketed(angular, gv_html_label).</h2>

<h2>-gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).</h2>

<p>-gv_html_table &mdash;> html_element(table, _, gv_html_rows).</p>

<h2>-gv_html_table &mdash;> html_element(font, <em>, html_element(table, </em>, gv_html_rows)).</h2>

<p>-gv_html_rows &mdash;> gv_html_row, gv_html_rows.
-gv_html_rows &mdash;> gv_html_row, html_element(hr, _), gv_html_rows.</p>

<h2>-gv_html_rows &mdash;> gv_html_row.</h2>

<h2>-gv_html_row &mdash;> html_element(tr, _, gv_html_cells).</h2>

<p>-gv_html_cell &mdash;> html_element(td, _, gv_html_label).</p>

<h2>-gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).</h2>

<p>-gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
-gv_html_cells &mdash;> gv_html_cell.</p>

<h2>-gv_html_cells &mdash;> gv_html_cell, html_element(vr, _), gv_html_cells.</h2>

<p>-gv_html_text &mdash;> gv_html_textitem, gv_html_text.</p>

<h2>-gv_html_text &mdash;> gv_html_textitem.</h2>

<p>-gv_html_textitem &mdash;> html_string, !.
-gv_html_textitem &mdash;> html_entity, !.
-gv_html_textitem &mdash;> html_element(br, <em>), !.
-gv_html_textitem &mdash;> html_element(font, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(i, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(b, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(u, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(sub, </em>, gv_html_text), !.</p>

<h2>-gv_html_textitem &mdash;> html_element(sup, _, gv_html_text), !.</h2>

<p>+% Supported attributes for IMG:
+% <del>{.txt}
+% SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;
+% SRC=&ldquo;value&rdquo;
+% </del>
+
+cell(td(Contents)) &mdash;>
+  html_element(td, [], label(Contents)).
+cell(td(img)) &mdash;>
+  html_element(td, [], html_element(img)).
+
+
+%! cells(?Contents:list(compound))// .
+
+cells([H|T]) &mdash;>
+  cell(H),
+  cells(T).
+cells([H,vr|T]) &mdash;>
+  cell(H),
+  html_element(vr),
+  cells(T).
+cells([H]) &mdash;>
+  cell(H).
+
+
+%! label(?Content:compound)// .
+% GraphViz HTML-like label.
+
+label(Content) &mdash;>
+  text(Content).
+label(Content) &mdash;>
+  table(Content).
+
+
+%! row(?Contents:compound)// .
+
+row(tr(Contents)) &mdash;>
+  html_element(tr, [], cell(Contents)).
+
+
+%! rows(?Contents:list)// .
+
+rows([H|T]) &mdash;>
+  row(H),
+  rows.
+rows([H,hr|T]) &mdash;>
+  row(H),
+  html_element(hr),
+  rows(T).
+rows([H]) &mdash;>
+  row(H).
+
+
+%! table(?Contents:compound)// .
+% Supported attributes for TABLE:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% BGCOLOR=&ldquo;color&rdquo;
+% BORDER=&ldquo;value&rdquo;
+% CELLBORDER=&ldquo;value&rdquo;
+% CELLPADDING=&ldquo;value&rdquo;
+% CELLSPACING=&ldquo;value&rdquo;
+% COLOR=&ldquo;color&rdquo;
+% COLUMNS=&ldquo;value&rdquo;
+% FIXEDSIZE=&ldquo;FALSE|TRUE&rdquo;
+% GRADIENTANGLE=&ldquo;value&rdquo;
+% HEIGHT=&ldquo;value&rdquo;
+% HREF=&ldquo;value&rdquo;
+% ID=&ldquo;value&rdquo;
+% PORT=&ldquo;portName&rdquo;
+% ROWS=&ldquo;value&rdquo;
+% SIDES=&ldquo;value&rdquo;
+% STYLE=&ldquo;value&rdquo;
+% TARGET=&ldquo;value&rdquo;
+% TITLE=&ldquo;value&rdquo;
+% TOOLTIP=&ldquo;value&rdquo;
+% VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
+% WIDTH=&ldquo;value&rdquo;
+% </del>
+%
+% Supported attributes for FONT:
+% <del>{.txt}
+% COLOR=&ldquo;color&rdquo;
+% FACE=&ldquo;fontname&rdquo;
+% POINT-SIZE=&ldquo;value&rdquo;
+% </del>
+
+table(table(Attrs,Contents)) &mdash;>
+  html_element(table, Attrs, rows(Contents)).
+table(table(font(Contents))) &mdash;>
+  html_element(font, [], html_element(table, [], rows(Contents))).
+
+
+%! text(?Contents:list)// .
+
+text(Contents) &mdash;>
+  &lsquo;+&rsquo;(textitem, Contents, []).
+
+
+%! textitem(?Content)// .
+% Supported attributes for BR:
+% <del>{.txt}
+% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
+% </del>
+
+textitem(string(String)) &mdash;>
+  html_string(String).
+textitem(entity(Name)) &mdash;>
+  html_entity(Name).
+textitem(br(Attrs)) &mdash;>
+  html_element(br, Attrs).
+textitem(Compound) &mdash;>
+  {var(Compound)}, !,
+  html_element(Name, <em>, text(Content)),
+  {
+    supported_html_element(Name),
+    Compound =.. [Name,Content]
+  }.
+textitem(Compound) &mdash;>
+  {
+    Compound =.. [Name,Content],
+    supported_html_element(Name)
+  },
+  html_element(Name, </em>, text(Content)).
+
+
+
+% HELPERS
+
+%! supported_html_element(+Name:atom) is semidet.
+%! supported_html_element(-Name:atom) is multi.
+
+supported_html_element(b).
+supported_html_element(font).
+supported_html_element(i).
+supported_html_element(o).
+supported_html_element(s).
+supported_html_element(sub).
+supported_html_element(sup).
+supported_html_element(u).
diff &mdash;git a/load.pl b/load.pl
index 4b117d1..1681cd0 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -1,12 +1,13 @@
&ndash;% Load file for plGraphViz.
+% Load file for the plGraphViz library.</p>

<p>&ndash;:&ndash; dynamic(user:prolog/3).
&ndash;:&ndash; multifile(user:prolog/3).
&ndash;   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).
+:&ndash; dynamic(user:project/3).
+:&ndash; multifile(user:project/3).
+   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;).</p>

<p> :&ndash; use_module(load_project).
&ndash;:&ndash; load_project(plGraphViz, [
+:&ndash; load_project([</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plDcg,
 plHtml
]).</li>
</ul>


<p>diff &mdash;git a/load_project.pl b/load_project.pl
index 5599b5e..e2196b7 100644
&mdash;&ndash; a/load_project.pl
+++ b/load_project.pl
@@ -1,8 +1,7 @@
 :&ndash; module(
   load_project,
   [
&ndash;    load_project/2, % +Parent:atom
&ndash;                    % +ChildProjects:list(or([atom,pair(atom)]))
+    load_project/1, % +ChildProjects:list(or([atom,pair(atom)]))</p>

<pre><code> load_subproject/2, % +ParentFileSearchPath:atom
                    % +Child:or([atom,pair(atom)])
 set_data_subdirectory/1 % +ParentDirectory:atom
</code></pre>

<p>@@ -17,7 +16,7 @@ Generic code for loading a project:
   * Load the index of subprojects onto the file search path.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06/14
+@version 2014/08/20
 */</p>

<p> :&ndash; use_module(library(ansi_term)). % Colorized terminal messages.
@@ -30,11 +29,11 @@ Generic code for loading a project:</p>

<p>-load_project(Parent, ChildProjects):&ndash;
&ndash;  parent_alias(Parent, ParentFsp),
+load_project(ChildProjects):&ndash;
+  parent_alias(ParentFsp),</p>

<p>   % Entry point.
&ndash;  source_file(load_project(<em>,</em>), ThisFile),
+  source_file(load_project(<em>), ThisFile),
   file_directory_name(ThisFile, ThisDir),
   assert(user:file_search_path(ParentFsp, ThisDir)),
   assert(user:file_search_path(project, ThisDir)),
@@ -92,11 +91,12 @@ load_project_index(Fsp):&ndash;
 load_project_index(</em>).</p>

<p>&ndash;%! parent_alias(+Parent:atom, -ParentFsp:atom) is det.
+%! parent_alias(-ParentFsp:atom) is det.</p>

<p>-parent_alias(Parent, ParentFsp):&ndash;
&ndash;  user:project(Parent, <em>, ParentFsp), !.
-parent_alias(Parent, Parent).
+parent_alias(ParentFsp):&ndash;
+  user:project(</em>, <em>, ParentFsp), !.
+parent_alias(ParentFsp):&ndash;
+  user:project(ParentFsp, </em>).</p>

<p> %! set_data_subdirectory(+ParentDirectory:atom) is det.
@@ -108,6 +108,8 @@ set_data_subdirectory(ParentDir):&ndash;</p>

<p>+% Messages
+
 :&ndash; multifile(prolog:message//1).</p>

<p> prolog:message(missing_subproject_directory(ChildFsp,ChildDir)) &mdash;>
diff &mdash;git a/plDcg b/plDcg
new file mode 160000
index 0000000..2cd7321
&mdash;&ndash; /dev/null
+++ b/plDcg
@@ -0,0 +1 @@
+Subproject commit 2cd7321d6c8a84ca23d08670348914c4a8ca6bb0
diff &mdash;git a/plHtml b/plHtml
index 24fff7b..e3abeed 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 24fff7bcf90b6bc4fbf317d504be899dc1b869cb
+Subproject commit e3abeed4041392013965598145806ee33081f76f
diff &mdash;git a/run.pl b/run.pl
new file mode 100644
index 0000000..8bba736
&mdash;&ndash; /dev/null
+++ b/run.pl
@@ -0,0 +1,9 @@
+% Standalone execution of the plGraphViz library.
+
+:&ndash; if(current_prolog_flag(argv, [&lsquo;&mdash;debug&rsquo;|_])).
+  :&ndash; ensure_loaded(debug).
+:&ndash; else.
+  :&ndash; set_prolog_flag(verbose, silent).
+  :&ndash; ensure_loaded(load).
+:&ndash; endif.
+</p>

<p>```</p>

<h2 id="47"> 47: 正在比较变动前 df0ab09 和变动后 73e976b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
index 844b1bd..ba7e7a9 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -7,3 +7,12 @@
 [submodule &ldquo;plDcg&rdquo;]</p>

<pre><code>path = plDcg
url = https://github.com/wouterbeek/plDcg.git
</code></pre>

<p>+[submodule &ldquo;plSvg&rdquo;]
+   path = plSvg
+   url = <a href="https://github.com/wouterbeek/plSvg.git">https://github.com/wouterbeek/plSvg.git</a>
+[submodule &ldquo;plHttp&rdquo;]
+   path = plHttp
+   url = <a href="https://github.com/wouterbeek/plHttp.git">https://github.com/wouterbeek/plHttp.git</a>
+[submodule &ldquo;plUri&rdquo;]
+   path = plUri
+   url = <a href="https://github.com/wouterbeek/plUri.git">https://github.com/wouterbeek/plUri.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 7096ef9..130d471 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 7096ef9749edffe389df6a90d586930c8bf4df70
+Subproject commit 130d471fdafe35858114ff8f9cde3acf66380d99
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index df0922a..f0c1c5d 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -21,6 +21,7 @@ Support for GraphViz attributes.</p>

<p> :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
+:&ndash; use_module(os(file_gnu)).</p>

<p> :&ndash; use_module(plDcg(dcg_content)).
 :&ndash; use_module(plDcg(dcg_generics)).
diff &mdash;git a/gv_color.pl b/gv_color.pl
index c5fccd4..4176444 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -17,12 +17,13 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(lists), except([delete/3])).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p> :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
+:&ndash; use_module(os(file_gnu)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index bde2962..0cdc571 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -19,7 +19,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(lists), except([delete/3])).
 :&ndash; use_module(library(ordsets)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
diff &mdash;git a/load.pl b/load.pl
index 1681cd0..67dfe22 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -1,13 +1,16 @@
 % Load file for the plGraphViz library.</p>

<p>&ndash;:&ndash; dynamic(user:project/3).
&ndash;:&ndash; multifile(user:project/3).
+:&ndash; dynamic(user:project/2).
+:&ndash; multifile(user:project/2).</p>

<pre><code>user:project(plGraphViz, 'GraphViz support for SWI-Prolog.').
</code></pre>

<p> :&ndash; use_module(load_project).
 :&ndash; load_project([</p>

<pre><code> plc-'Prolog-Library-Collection',
 plDcg,
</code></pre>

<ul>
<li> plHtml</li>
<li> plHtml,</li>
<li> plHttp,</li>
<li> plSvg,</li>
<li> plUri
]).</li>
</ul>


<p>diff &mdash;git a/plDcg b/plDcg
index 2cd7321..3689d78 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit 2cd7321d6c8a84ca23d08670348914c4a8ca6bb0
+Subproject commit 3689d7838cef5ed6e8156e3c8ec39eb7b5f25b78
diff &mdash;git a/plHtml b/plHtml
index e3abeed..27b7b71 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit e3abeed4041392013965598145806ee33081f76f
+Subproject commit 27b7b715694daabdce26c56beb799e8d949a3ff5
diff &mdash;git a/plHttp b/plHttp
new file mode 160000
index 0000000..933ba4d
&mdash;&ndash; /dev/null
+++ b/plHttp
@@ -0,0 +1 @@
+Subproject commit 933ba4d4c906128258ef192ede6003a101b81590
diff &mdash;git a/plSvg b/plSvg
new file mode 160000
index 0000000..07ba12c
&mdash;&ndash; /dev/null
+++ b/plSvg
@@ -0,0 +1 @@
+Subproject commit 07ba12c2c373fa41e1580b8c90ee17036680fce8
diff &mdash;git a/plUri b/plUri
new file mode 160000
index 0000000..cf5d6e3
&mdash;&ndash; /dev/null
+++ b/plUri
@@ -0,0 +1 @@
+Subproject commit cf5d6e365ed7bfad0369691554c9895441ae334d</p>

<p>```</p>

<h2 id="48"> 48: 正在比较变动前 73e976b 和变动后 090c25d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 130d471..1630ca0 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 130d471fdafe35858114ff8f9cde3acf66380d99
+Subproject commit 1630ca0c9622cbe3f9561de21d5e851baa333ca9
diff &mdash;git a/plDcg b/plDcg
index 3689d78..df62444 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit 3689d7838cef5ed6e8156e3c8ec39eb7b5f25b78
+Subproject commit df62444ffa0b58de4c7faf9b5630e58a18ee18ec
diff &mdash;git a/plHtml b/plHtml
index 27b7b71..429b725 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 27b7b715694daabdce26c56beb799e8d949a3ff5
+Subproject commit 429b7256680588790310c3b6acf81da31d3fc3d2
diff &mdash;git a/plHttp b/plHttp
index 933ba4d..faa8215 160000
&mdash;&ndash; a/plHttp
+++ b/plHttp
@@ -1 +1 @@
-Subproject commit 933ba4d4c906128258ef192ede6003a101b81590
+Subproject commit faa821576b6ab706060f6e8eab2a8a9210b8c842
diff &mdash;git a/plUri b/plUri
index cf5d6e3..68dba15 160000
&mdash;&ndash; a/plUri
+++ b/plUri
@@ -1 +1 @@
-Subproject commit cf5d6e365ed7bfad0369691554c9895441ae334d
+Subproject commit 68dba15c5cf7bb309165d2c9439c02bd22cfba95</p>

<p>```</p>

<h2 id="49"> 49: 正在比较变动前 090c25d 和变动后 daed8bf </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
index ba7e7a9..844b1bd 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -7,12 +7,3 @@
 [submodule &ldquo;plDcg&rdquo;]</p>

<pre><code>path = plDcg
url = https://github.com/wouterbeek/plDcg.git
</code></pre>

<p>&ndash;[submodule &ldquo;plSvg&rdquo;]
&ndash;   path = plSvg
&ndash;   url = <a href="https://github.com/wouterbeek/plSvg.git">https://github.com/wouterbeek/plSvg.git</a>
&ndash;[submodule &ldquo;plHttp&rdquo;]
&ndash;   path = plHttp
&ndash;   url = <a href="https://github.com/wouterbeek/plHttp.git">https://github.com/wouterbeek/plHttp.git</a>
&ndash;[submodule &ldquo;plUri&rdquo;]
&ndash;   path = plUri
&ndash;   url = <a href="https://github.com/wouterbeek/plUri.git">https://github.com/wouterbeek/plUri.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 1630ca0..18fe981 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 1630ca0c9622cbe3f9561de21d5e851baa333ca9
+Subproject commit 18fe981c492d67be3670406e51602c23b97a6052
diff &mdash;git a/load_project.pl b/load_project.pl
index e2196b7..3f0ebef 100644
&mdash;&ndash; a/load_project.pl
+++ b/load_project.pl
@@ -16,11 +16,12 @@ Generic code for loading a project:
   * Load the index of subprojects onto the file search path.</p>

<p> @author Wouter Beek
&ndash;@version 2014/08/20
+@version 2014/11/10
 */</p>

<p> :&ndash; use_module(library(ansi_term)). % Colorized terminal messages.
 :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(pldoc)).</p>

<p> :&ndash; dynamic(user:project/2).
 :&ndash; multifile(user:project/2).
@@ -30,6 +31,8 @@ Generic code for loading a project:</p>

<p> load_project(ChildProjects):&ndash;
+  doc_server(9999),
+<br/>
   parent_alias(ParentFsp),</p>

<p>   % Entry point.
diff &mdash;git a/plDcg b/plDcg
index df62444..19020db 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit df62444ffa0b58de4c7faf9b5630e58a18ee18ec
+Subproject commit 19020db8046bf96d54938e6ba02d65dc2b6f8b50
diff &mdash;git a/plHtml b/plHtml
index 429b725..2d6bb5a 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 429b7256680588790310c3b6acf81da31d3fc3d2
+Subproject commit 2d6bb5a083f184570042eee68ddb8780caddb246
diff &mdash;git a/plHttp b/plHttp
deleted file mode 160000
index faa8215..0000000
&mdash;&ndash; a/plHttp
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit faa821576b6ab706060f6e8eab2a8a9210b8c842
diff &mdash;git a/plSvg b/plSvg
deleted file mode 160000
index 07ba12c..0000000
&mdash;&ndash; a/plSvg
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 07ba12c2c373fa41e1580b8c90ee17036680fce8
diff &mdash;git a/plUri b/plUri
deleted file mode 160000
index 68dba15..0000000
&mdash;&ndash; a/plUri
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 68dba15c5cf7bb309165d2c9439c02bd22cfba95</p>

<p>```</p>

<h2 id="50"> 50: 正在比较变动前 daed8bf 和变动后 528b9af </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
index 844b1bd..6c22435 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -7,3 +7,6 @@
 [submodule &ldquo;plDcg&rdquo;]</p>

<pre><code>path = plDcg
url = https://github.com/wouterbeek/plDcg.git
</code></pre>

<p>+[submodule &ldquo;plUri&rdquo;]
+   path = plUri
+   url = <a href="https://github.com/wouterbeek/plUri.git">https://github.com/wouterbeek/plUri.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 18fe981..ec4c91a 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 18fe981c492d67be3670406e51602c23b97a6052
+Subproject commit ec4c91a00704c0c8d9b4ed747cb9b1648355559b
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 67d419a..30761bb 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -51,6 +51,7 @@</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index f0c1c5d..649ef9c 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -23,6 +23,7 @@ Support for GraphViz attributes.
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(file_gnu)).</p>

<p>+:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_content)).
 :&ndash; use_module(plDcg(dcg_generics)).</p>

<p>@@ -71,7 +72,7 @@ gv_attr(Context, N=V, N=V):&ndash;
   % Check validity of context.
   memberchk(Context, UsedBy).
 gv_attr(Context, N=V1, N=V2):&ndash;
&ndash;  gv_attr(N2, UsedBy, Types, <em>, Minimum, </em>),
+  gv_attr(N, UsedBy, Types, <em>, Minimum, </em>),
   % Check validity of context.
   memberchk(Context, UsedBy),
   % Check validity of value type.
diff &mdash;git a/gv_color.pl b/gv_color.pl
index 4176444..61d26df 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -26,6 +26,7 @@
 :&ndash; use_module(os(file_gnu)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).
 :&ndash; use_module(plDcg_rfc(rfc2616_basic)).
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 0cdc571..e67c469 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -23,10 +23,13 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 :&ndash; use_module(library(ordsets)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_arrow)).
 :&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_bracket)).
 :&ndash; use_module(plDcg(dcg_content)).
 :&ndash; use_module(plDcg(dcg_generics)).
 :&ndash; use_module(plDcg(dcg_meta)).
+:&ndash; use_module(plDcg(dcg_quote)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
@@ -47,10 +50,10 @@ gv_attribute(Name=Val) &mdash;>
 %!   +GraphAttributes:list(nvpair),
 %!   +Attributes:list(nvpair)
 %! )// .
&ndash;% <del>{.abnf}
+% ```abnf
 % attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
 % a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
&ndash;% </del>
+% ```</p>

<p> % Attributes occur between square brackets.
 gv_attribute_list(Context, <em>, Attrs1) &mdash;>
@@ -59,9 +62,9 @@ gv_attribute_list(Context, </em>, Attrs1) &mdash;></p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
&ndash;% <del>
+% ```
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
&ndash;% </del>
+% ```</p>

<p> gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
 gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
@@ -133,9 +136,9 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
 % @arg GraphAttributes A list of name-value pairs.
 % @arg CategoryAttributes A list of name-value pairs.
 %
&ndash;% <del>
+% ```
 % attr_stmt = (graph / node / edge) attr_list
&ndash;% </del>
+% ```</p>

<p> gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
 gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
@@ -156,19 +159,19 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 %      they are ignored in the input file.
 %      Only in combinattion with directionality <code>directed</code>.
 %
&ndash;% <del>{.abnf}
+% ```abnf
 % graph = [&ldquo;strict&rdquo;] (&ldquo;graph&rdquo; / &ldquo;digraph&rdquo;) [ID] &ldquo;{&rdquo; stmt_list &ldquo;}&rdquo;
&ndash;% </del>
+% <code>
 %
 % `GraphTerm` is a compound term of the following form:
-% ~~~{.pl}
+%</code>prolog
 % graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
&ndash;% <del>
+% <code>``
 %
 %</code>RankedVertexTerms` is a list of compound terms of the following form:
&ndash;% </del>{.pl}
+% <code>prolog
 % rank(RankNode,ContentNodes)
-% ~~~
+%</code>
 %
 % @tbd Add support for subgraphs (arbitrary nesting).
 % @tbd Add support for escape strings:
@@ -307,7 +310,7 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
 % HTML strings (variant 4).
 gv_id(Content) &mdash;>
   {compound(Content)}, !,
&ndash;  gv_html_like_label, Content).
+  gv_html_like_label(Content).
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -331,14 +334,16 @@ gv_id(Atom) &mdash;>
 % Double-quoted strings (variant 3).
 % The quotes are not in the given atom. They are written anyway.
 gv_id(Atom) &mdash;>
&ndash;  quoted(double_quote, dcg_atom_codes(gv_quoted_string, Atom)), !.
+  quoted(dcg_atom_codes(gv_quoted_string, Atom)), !.</p>

<p>-gv_id_first(X) &mdash;> ascii_letter(X).
+gv_id_first(X) &mdash;> letter(X).
 gv_id_first(X) &mdash;> underscore(X).</p>

<p> gv_id_rest([]) &mdash;> [].
 gv_id_rest([H|T]) &mdash;>
&ndash;  (ascii_alpha_numeric(H) ; underscore(H)),
+  (   alpha_numeric(H)
+  ;   underscore(H)
+  ),
   gv_id_rest(T).</p>

<p>@@ -463,7 +468,7 @@ gv_ranked_node_collection(</p>

<pre><code>   [Rank_V_Term|Content_V_Terms],
   []
 ),
</code></pre>

<ul>
<li><p>+
 % We want to indent the closing curly brace.
 indent(I)
)),
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 789bd56..704e2d4 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -9,9 +9,6 @@
 gif_to_gv_file/3, % +GraphInterchangeFormat:compound
                   % ?ToFile:atom
                   % +Options:list(nvpair)</p></li>
<li> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % -SvgDom:list(compound)
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -35,7 +32,6 @@ and GraphViz output files or SVG DOM structures.
:&ndash; use_module(generics(db_ext)).
:&ndash; use_module(os(file_ext)).
:&ndash; use_module(os(run_ext)).
&ndash;:&ndash; use_module(svg(svg_file)).</p></li>
</ul>


<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -175,20 +171,6 @@ gif_to_gv_file(Gif, ToFile, Options):&ndash;
   codes_to_gv_file(Codes, ToFile, Options).</p>

<p>&ndash;%! gif_to_svg_dom(
&ndash;%!   +GraphInterchangeFormat:compound,
&ndash;%!   -SvgDom:list(compound),
&ndash;%!   +Options:list(nvpair)</p>

<h2>&ndash;%! ) is det.</h2>

<p>-gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;
&ndash;  % Make sure the file type of the output file is SvgDom.
&ndash;  merge_options([to_file_type=svg], Options1, Options2),
&ndash;  gif_to_gv_file(Gif, ToFile, Options2),
&ndash;  file_to_svg(ToFile, SvgDom),</p>

<h2>&ndash;  delete_file(ToFile).</h2>

<p>&ndash;
 %! open_dot(+File:atom) is det.
 % Opens the given DOT file.
 %
diff &mdash;git a/gv_html.pl b/gv_html.pl
index a308ac7..08306f0 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -9,32 +9,32 @@</p>

<p> Grammar taken from the GraphViz Web site:</p>

<p>&ndash;<del>{.txt}
-label  :   text
&ndash;   |   table
-text   :   textitem
&ndash;   |   text textitem
-textitem   :   string
&ndash;   |   <BR/>
&ndash;   |   <FONT> text </FONT>
&ndash;   |   <I> text </I>
&ndash;   |   <B> text </B>
&ndash;   |   <U> text </U>
&ndash;   |   <O> text </O>
&ndash;   |   <SUB> text </SUB>
&ndash;   |   <SUP> text </SUP>
&ndash;   |   <S> text </S>
-table  :   [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
-rows   :   row
&ndash;   |   rows row
&ndash;   |   rows <HR/> row
-row    :   <TR> cells </TR>
-cells  :   cell
&ndash;   |   cells cell
&ndash;   |   cells <VR/> cell
-cell   :   <TD> label </TD>
&ndash;   |   <TD> <IMG/> </TD>
&ndash;</del>
+<code>
+label :   text
+        | table
+text :   textitem
+       | text textitem
+textitem :   string
+           | &lt;BR/&gt;
+           | &lt;FONT&gt; text &lt;/FONT&gt;
+           | &lt;I&gt; text &lt;/I&gt;
+           | &lt;B&gt; text &lt;/B&gt;
+           | &lt;U&gt; text &lt;/U&gt;
+           | &lt;O&gt; text &lt;/O&gt;
+           | &lt;SUB&gt; text &lt;/SUB&gt;
+           | &lt;SUP&gt; text &lt;/SUP&gt;
+           | &lt;S&gt; text &lt;/S&gt;
+table : [ &lt;FONT&gt; ] &lt;TABLE&gt; rows &lt;/TABLE&gt; [ &lt;/FONT&gt; ]
+rows :   row
+       | rows row
+       | rows &lt;HR/&gt; row
+row: &lt;TR&gt; cells &lt;/TR&gt;
+cells :   cell
+        | cells cell
+        | cells &lt;VR/&gt; cell
+cell:   &lt;TD&gt; label &lt;/TD&gt;
+      | &lt;TD&gt; &lt;IMG/&gt; &lt;/TD&gt;
+</code></p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
@@ -42,6 +42,7 @@ cell  :   <TD> label </TD>
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_bracket)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).
@@ -56,7 +57,7 @@ gv_html_like_label(Content) &mdash;></p>

<p> %! cell(?Contents:compound)// .
 % Supported attributes for TD:
&ndash;% <del>{.txt}
+% ```
 % ALIGN=&ldquo;CENTER|LEFT|RIGHT|TEXT&rdquo;
 % BALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
 % BGCOLOR=&ldquo;color&rdquo;
@@ -79,13 +80,13 @@ gv_html_like_label(Content) &mdash;>
 % TOOLTIP=&ldquo;value&rdquo;
 % VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
 % WIDTH=&ldquo;value&rdquo;
&ndash;% </del>
+% <code>
 %
 % Supported attributes for IMG:
-% ~~~{.txt}
+%</code>
 % SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;
 % SRC=&ldquo;value&rdquo;
&ndash;% ~~~
+% ```</p>

<p> cell(td(Contents)) &mdash;>
   html_element(td, [], label(Contents)).
@@ -125,7 +126,7 @@ row(tr(Contents)) &mdash;></p>

<p> rows([H|T]) &mdash;>
   row(H),
&ndash;  rows.
+  rows(T).
 rows([H,hr|T]) &mdash;>
   row(H),
   html_element(hr),
@@ -136,7 +137,7 @@ rows([H]) &mdash;></p>

<p> %! table(?Contents:compound)// .
 % Supported attributes for TABLE:
&ndash;% <del>{.txt}
+% ```
 % ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
 % BGCOLOR=&ldquo;color&rdquo;
 % BORDER=&ldquo;value&rdquo;
@@ -159,14 +160,14 @@ rows([H]) &mdash;>
 % TOOLTIP=&ldquo;value&rdquo;
 % VALIGN=&ldquo;MIDDLE|BOTTOM|TOP&rdquo;
 % WIDTH=&ldquo;value&rdquo;
&ndash;% </del>
+% <code>
 %
 % Supported attributes for FONT:
-% ~~~{.txt}
+%</code>
 % COLOR=&ldquo;color&rdquo;
 % FACE=&ldquo;fontname&rdquo;
 % POINT-SIZE=&ldquo;value&rdquo;
&ndash;% ~~~
+% ```</p>

<p> table(table(Attrs,Contents)) &mdash;>
   html_element(table, Attrs, rows(Contents)).
@@ -182,9 +183,9 @@ text(Contents) &mdash;></p>

<p> %! textitem(?Content)// .
 % Supported attributes for BR:
&ndash;% <del>{.txt}
+% ```
 % ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;
&ndash;% </del>
+% ```</p>

<p> textitem(string(String)) &mdash;>
   html_string(String).
diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index 7870eb1..c115372 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -14,59 +14,67 @@
 :&ndash; use_module(math(math_ext)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_cardinal)).</p>

<p> %! gv_numeral(?Value:number)// .
&ndash;% <del>{.bnf}
+%
+% # Syntax
+%
+% ```bnf
 % (&lsquo;&ndash;&rsquo;)? ( &lsquo;.&rsquo; [0-9]+ | [0-9]+ ( &lsquo;.&rsquo; [0-9]* )? )
&ndash;% </del>
+% ```
+%
+% ## Generation
+%
+% In the generative case, three notations are allowed (also see below):
+%   1. (non-zero integer-part)
+%   2. (decimal-separator) (non-zero fractional)
+%   3. (non-zero integer-part) (decimal-separator) (non-zero fractional)
+%
+% The following notations are explicitly excluded due to verbosity:
+%   &ndash; (non-zero integer-part) (decimal-separator)
+%   &ndash; (non-zero integer-part) (decimal-separator) (zero fractional)
+%   &ndash; (zero integer-part) (decimal-separator) (non-zero fractional)
+%
+% The following notations are also excluded, but since they violate
+%  well-formedness:
+%   &ndash; (non-zero integer-part) (non-zero fractional)
+%   &ndash; (decimal-separator)</p>

<p> gv_numeral(N) &mdash;>
&ndash;  {nonvar(N)},
&ndash;  {number_sign_parts(N, Sign, Abs)},
&ndash;  ({Sign =:= -1} &ndash;> <code>-</code> ; ``),
&ndash;  gv_numeral_abs(Abs).
+  {var(N)}, !,
+  sign(Sign),
+  (   &ldquo;.&rdquo;,
+      &lsquo;+&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)]),
+      {IntegerPart = 0}
+  ;   &lsquo;+&rsquo;(decimal_digit, IntegerPart, [convert1(weights_decimal)]),
+      (   &ldquo;.&rdquo;,
+          &lsquo;*&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)])
+      ;   {Fractional = 0}
+      )
+  ),
+  {   number_integer_parts(UnsignedN, IntegerPart, Fractional),
+      N is copysign(UnsignedN, Sign)
+  }.
 gv_numeral(N) &mdash;>
&ndash;  {var(N)},
&ndash;  &lsquo;sign?&rsquo;(Sign),
&ndash;  gv_numeral_abs(Abs),</p>

<h2>&ndash;  {number_sign_parts(N, Sign, Abs)}.</h2>

<p>&ndash;
-gv_numeral_abs(N) &mdash;>
&ndash;  {nonvar(N)},
&ndash;  {number_integer_parts(N, N1, N2)},
&ndash;  (
&ndash;    {N2 =:= 0}
&ndash;  &ndash;>
&ndash;    integer(N1)
&ndash;  ;
&ndash;    {N1 =:= 0}
&ndash;  &ndash;>
&ndash;    <code>.</code>,
&ndash;    integer(N2)
&ndash;  ;
&ndash;    integer(N1),
&ndash;    &lsquo;?&rsquo;((<code>.</code>, &lsquo;integer?&rsquo;(N2)), [])
+  {number_sign_parts(N, Sign, UnsignedN)},
+  sign(Sign),
+  {number_integer_parts(UnsignedN, IntegerPart, Fractional)},
+  (   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part
+      %     and do not write the decimal separator.
+      {Fractional =:= 0}
+  &ndash;>  integer(IntegerPart)
+  ;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,
+      %     preceded by the decimal separator.
+      {IntegerPart =:= 0}
+  &ndash;>  &ldquo;.&rdquo;,
+      integer(Fractional)
+  ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
+      %     so write both of them, with the decimal separator in-between.
+      integer(IntegerPart),
+      &ldquo;.&rdquo;,
+      integer(Fractional)
   ).
-gv_numeral_abs(N) &mdash;>
&ndash;  {var(N)},
&ndash;  (
&ndash;    <code>.</code>,
&ndash;    integer(N2)
&ndash;  &ndash;>
&ndash;    {N1 = 0}
&ndash;  ;
&ndash;    integer(N1),
&ndash;    (
&ndash;      <code>.</code>
&ndash;    &ndash;>
&ndash;      &lsquo;integer?&rsquo;(N2)
&ndash;    ;
&ndash;      {N2 = 0}
&ndash;    )
&ndash;  ),</p>

<h2>&ndash;  {number_integer_parts(N, N1, N2)}.</h2>

<p>diff &mdash;git a/load.pl b/load.pl
index 67dfe22..5cec32c 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -9,8 +9,6 @@</p>

<pre><code> plc-'Prolog-Library-Collection',
 plDcg,
 plHtml,
</code></pre>

<ul>
<li> plHttp,</li>
<li> plSvg,
 plUri
]).</li>
</ul>


<p>diff &mdash;git a/plDcg b/plDcg
index 19020db..96e2615 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit 19020db8046bf96d54938e6ba02d65dc2b6f8b50
+Subproject commit 96e261537773270a43d1ff4346273820282f21fb
diff &mdash;git a/plHtml b/plHtml
index 2d6bb5a..a7b736f 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 2d6bb5a083f184570042eee68ddb8780caddb246
+Subproject commit a7b736fdf7c435f825193bbc54500a302b0bc4b1
diff &mdash;git a/plUri b/plUri
new file mode 160000
index 0000000..59f582c
&mdash;&ndash; /dev/null
+++ b/plUri
@@ -0,0 +1 @@
+Subproject commit 59f582c68cebc221f964ccb9805a869d05cb7856</p>

<p>```</p>

<h2 id="51"> 51: 正在比较变动前 528b9af 和变动后 e594ae6 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 61d26df..da34c1a 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -13,7 +13,7 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2014/06, 2014/10
+@version 2014/06, 2014/10-2014/11
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -51,10 +51,10 @@
 %   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code></p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
&ndash;  <code>#</code>,
+  &ldquo;#&rdquo;,
   &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue], []).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
&ndash;  <code>#</code>,
+  &ldquo;#&rdquo;,
   &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha], []).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
   &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
@@ -82,7 +82,7 @@ wc(Color-Float) &mdash;>
   &lsquo;?&rsquo;(wc_weight(Float), []).</p>

<p> wc_weight(Float) &mdash;>
&ndash;  <code>;</code>,
+  &ldquo;;&rdquo;,
   float(Float).</p>

<p>```</p>

<h2 id="52"> 52: 正在比较变动前 e594ae6 和变动后 bbefbf7 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index da34c1a..74c9060 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -25,11 +25,11 @@
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(file_gnu)).</p>

<p>+:&ndash; use_module(plDcg(abnf_core_rules)).
 :&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg_rfc(rfc2616_basic)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<p>```</p>

<h2 id="53"> 53: 正在比较变动前 bbefbf7 和变动后 0cc5421 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index 7193a38..b25c15b 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1,4 +1 @@
 <em>~
&ndash;</em>#
&ndash;<em>.db
-data/</em>
diff &mdash;git a/.gitmodules b/.gitmodules
index 6c22435..a63cbff 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,9 +4,3 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>&ndash;[submodule &ldquo;plDcg&rdquo;]
&ndash;   path = plDcg
&ndash;   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
&ndash;[submodule &ldquo;plUri&rdquo;]
&ndash;   path = plUri
&ndash;   url = <a href="https://github.com/wouterbeek/plUri.git">https://github.com/wouterbeek/plUri.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index ec4c91a..d7d21ad 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit ec4c91a00704c0c8d9b4ed747cb9b1648355559b
+Subproject commit d7d21ad4d6d7cec98d8b0122f5303e691998f512
diff &mdash;git a/README.md b/README.md
new file mode 100644
index 0000000..3c9e9cf
&mdash;&ndash; /dev/null
+++ b/README.md
@@ -0,0 +1,8 @@
+plGraphViz
+==========
+
+Export graphs represented as Prolog terms to
+ <a href="http://www.graphviz.org/">GraphViz</a>.
+
+Author: <a href="http://www.wouterbeek.com">Wouter Beek</a>
+
diff &mdash;git a/debug.pl b/debug.pl
index 099cb84..d7339b9 100644
&mdash;&ndash; a/debug.pl
+++ b/debug.pl
@@ -1,7 +1,9 @@
&ndash;% Loads debug tools for the plGraphViz library.
+% Debug file for library plGraphViz.
+
+:&ndash; style_check(+charset).
+%:&ndash; style_check(+var_branches).</p>

<p> :&ndash; [load].</p>

<p> :&ndash; use_module(debug_project).</p>

<h2> :&ndash; debug_all_files.</h2>

<p>diff &mdash;git a/debug_project.pl b/debug_project.pl
index ab61534..17195c1 100644
&mdash;&ndash; a/debug_project.pl
+++ b/debug_project.pl
@@ -11,7 +11,7 @@ Generic code for debugging a project:
   * Load all subdirectories and Prolog files contained in those directories.</p>

<p> @author Wouter Beek
&ndash;@version 2014/10/31
+@version 2014/11/19
 */</p>

<p> :&ndash; use_module(library(ansi_term)).
@@ -54,7 +54,6 @@ do_not_load0(debug_project).
 do_not_load0(index).
 do_not_load0(load).
 do_not_load0(load_project).
-do_not_load0(rfc2616_basic).
 do_not_load0(run).</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 30761bb..3c7863d 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -46,12 +46,10 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11
+@version 2014/06
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p>@@ -99,7 +97,7 @@ gv_attr_type(viewPort).
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p> addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(plus_sign, []),
+  &lsquo;?&rsquo;(<code>+</code>, []),
   double(Float).</p>

<p>@@ -108,7 +106,7 @@ addDouble(Float) &mdash;>
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p> addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(plus_sign, []),
+  &lsquo;?&rsquo;(<code>+</code>, []),
   point(Point).</p>

<p>@@ -149,10 +147,10 @@ backwards_compatible(invempty).
 backwards_compatible(open).</p>

<p>-bool(false) &mdash;> &ldquo;false&rdquo;.
-bool(false) &mdash;> &ldquo;no&rdquo;.
-bool(true) &mdash;> &ldquo;true&rdquo;.
-bool(true) &mdash;> &ldquo;yes&rdquo;.
+bool(false) &mdash;> <code>false</code>.
+bool(false) &mdash;> <code>no</code>.
+bool(true) &mdash;> <code>true</code>.
+bool(true) &mdash;> <code>yes</code>.</p>

<p> %! clusterMode(+ClusterMode:atom)// .
@@ -189,7 +187,7 @@ doubleList([H|T]) &mdash;>
   &lsquo;*&rsquo;(doubleList1, T, []).</p>

<p> doubleList1(Float) &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   double(Float).</p>

<p>@@ -244,16 +242,16 @@ pagedir(&lsquo;TR&rsquo;).</p>

<p> %! point(+Point:compound)// .
 % A <em>point</em> is represented by a compound of the following form:
&ndash;% <code>point(X:float,Y:float,Changeable:boolean)</code>.
+% <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p>-point(point(X,Y,Changeable)) &mdash;>
+point(point(X,Y,InputOnly)) &mdash;>
   float(X),
&ndash;  &ldquo;,&rdquo;,
+  <code>,</code>,
   float(Y),
&ndash;  input_changeable(Changeable).
+  input_only(InputOnly).</p>

<p>-input_changeable(false) &mdash;> &ldquo;&rdquo;.
-input_changeable(true) &mdash;> &ldquo;!&rdquo;.
+input_only(false) &mdash;> [].
+input_only(true) &mdash;> <code>!</code>.</p>

<p> pointList(Points) &mdash;>
@@ -294,9 +292,9 @@ rankdir(&lsquo;TB&rsquo;).</p>

<p> rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  float(LowerLeftX), &ldquo;,&rdquo;,
&ndash;  float(LowerLeftY), &ldquo;,&rdquo;,
&ndash;  float(UpperRightX), &ldquo;,&rdquo;,
+  float(LowerLeftX), <code>,</code>,
+  float(LowerLeftY), <code>,</code>,
+  float(UpperRightX), <code>,</code>,
   float(UpperRightY).</p>

<p>@@ -416,3 +414,4 @@ style(node, wedged).</p>

<p> % @tbd viewPort
+
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 649ef9c..faf496c 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -2,17 +2,15 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>       % +Attribute1:nvpair
</code></pre></li>
<li><pre><code>       % -Attribute2:nvpair
</code></pre></li>
<li><pre><code>       % +Attr1:nvpair
</code></pre></li>
<li><pre><code>       % +Attr2:nvpair
</code></pre>

<p>]
).</p></li>
</ul>


<h2>&ndash;/** <module> GraphViz: Attributes</h2>

<p>-Support for GraphViz attributes.
+/** <module> GraphViz attributes v2</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11
+@version 2014/06
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -21,11 +19,9 @@ Support for GraphViz attributes.</p>

<p> :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
&ndash;:&ndash; use_module(os(file_gnu)).</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
+:&ndash; use_module(plDcg(dcg_generic)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).
@@ -58,40 +54,24 @@ Support for GraphViz attributes.</p>

<p>&ndash;%! gv_attr(
&ndash;%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +Attribute1:nvpair,
&ndash;%!   +Attribute2:nvpair
&ndash;%! ) is det.
&ndash;% Uses the default value in case Value is uninstantiated.</p>

<h2>&ndash;% Otherwise, performs a typecheck and converts the given value.</h2>

<p> gv_attr(Context, N=V, N=V):&ndash;
   var(V), !,
   gv_attr(N, UsedBy, <em>, V, </em>, <em>),
&ndash;  % Check validity of context.
   memberchk(Context, UsedBy).
 gv_attr(Context, N=V1, N=V2):&ndash;
   gv_attr(N, UsedBy, Types, </em>, Minimum, _),
&ndash;  % Check validity of context.
   memberchk(Context, UsedBy),
&ndash;  % Check validity of value type.
   member(Type, Types),
&ndash;  (   Type == style
&ndash;  &ndash;>  Dcg =.. [Type,Context,V1]
&ndash;  ;   Dcg =.. [Type,V1]
+  (
+    Type == style
+  &ndash;>
+    Dcg =.. [Type,Context,V1]
+  ;
+    Dcg =.. [Type,V1]
   ),
   once(dcg_phrase(Dcg, V2)),
&ndash;  % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(V1, Minimum).</p>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS</h2>

<p>&ndash;%! check_minimum(+Value:atom, +Minimum:number) is semidet.</p>

<h2>&ndash;% Trivially succeeds if no minimum value is available for a given attribute.</h2>

<p> check_minimum(_, &lsquo;&rsquo;):&ndash; !.
 check_minimum(V, Min1):&ndash;
   atom_number(Min1, Min2),
diff &mdash;git a/gv_color.pl b/gv_color.pl
index 74c9060..cb0cf8c 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -13,27 +13,27 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2014/06, 2014/10-2014/11
+@version 2014/06
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists), except([delete/3])).
+:&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p> :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
&ndash;:&ndash; use_module(os(file_gnu)).</p>

<p>&ndash;:&ndash; use_module(plDcg(abnf_core_rules)).
 :&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg_rfc(rfc2616_basic)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<p>+:&ndash; use_module(plSparql_parse(sparql_char)).
+
 :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p> %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.
@@ -51,10 +51,10 @@
 %   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code></p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
&ndash;  &ldquo;#&rdquo;,
+  <code>#</code>,
   &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue], []).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
&ndash;  &ldquo;#&rdquo;,
+  <code>#</code>,
   &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha], []).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
   &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
@@ -82,7 +82,7 @@ wc(Color-Float) &mdash;>
   &lsquo;?&rsquo;(wc_weight(Float), []).</p>

<p> wc_weight(Float) &mdash;>
&ndash;  &ldquo;;&rdquo;,
+  <code>;</code>,
   float(Float).</p>

<p>@@ -142,13 +142,3 @@ gv_color_update(_):&ndash;</p>

<p> gv_color_url(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).</p>

<p>&ndash;</p>

<h2>&ndash;%! safe_db_attach(+File:atom) is det.</h2>

<p>-safe_db_attach(File):&ndash;
&ndash;  exists_file(File), !,
&ndash;  db_attach(File, []).
-safe_db_attach(File):&ndash;
&ndash;  touch_file(File),</p>

<h2>&ndash;  safe_db_attach(File).</h2>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index e67c469..accd5bd 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +Gif:compound
+    gv_graph//1 % +GraphTerm:compound
   ]
 ).</p>

<p>@@ -19,17 +19,14 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists), except([delete/3])).
+:&ndash; use_module(library(lists)).
 :&ndash; use_module(library(ordsets)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_arrow)).
 :&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_bracket)).
 :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
+:&ndash; use_module(plDcg(dcg_generic)).
 :&ndash; use_module(plDcg(dcg_meta)).
&ndash;:&ndash; use_module(plDcg(dcg_quote)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
@@ -42,7 +39,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.
+  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.</p>

<p> %! gv_attribute_list(
@@ -50,10 +47,10 @@ gv_attribute(Name=Val) &mdash;>
 %!   +GraphAttributes:list(nvpair),
 %!   +Attributes:list(nvpair)
 %! )// .
&ndash;% <code>abnf
+% ~~~{.abnf}
 % attr_list = "[" [a_list] "]" [attr_list]
 % a_list = ID "=" ID [","] [a_list]
-%</code>
+% ~~~</p>

<p> % Attributes occur between square brackets.
 gv_attribute_list(Context, <em>, Attrs1) &mdash;>
@@ -62,20 +59,20 @@ gv_attribute_list(Context, </em>, Attrs1) &mdash;></p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
&ndash;% <code>
+% ~~~
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
-%</code>
+% ~~~</p>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
-gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
-gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
-gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
-gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
-gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
-gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
-gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
-gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
-gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
+gv_compass_pt(&lsquo;_&rsquo;) &mdash;> <code>_</code>.
+gv_compass_pt&copy; &mdash;> <code>c</code>.
+gv_compass_pt(e) &mdash;> <code>e</code>.
+gv_compass_pt(n) &mdash;> <code>n</code>.
+gv_compass_pt(ne) &mdash;> <code>ne</code>.
+gv_compass_pt(nw) &mdash;> <code>nw</code>.
+gv_compass_pt(s) &mdash;> <code>s</code>.
+gv_compass_pt(se) &mdash;> <code>se</code>.
+gv_compass_pt(sw) &mdash;> <code>sw</code>.
+gv_compass_pt(w) &mdash;> <code>w</code>.</p>

<p> %! gv_edge_operator(+Directed:boolean)// .
@@ -86,7 +83,7 @@ gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
+gv_edge_operator(false) &mdash;> !, <code>--</code>.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>@@ -110,11 +107,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), &ldquo; &rdquo;,
+  gv_node_id(FromId), <code></code>,</p>

<ul>
<li>gv_edge_operator(Directed), &ldquo; &rdquo;,</li>
<li><p>gv_edge_operator(Directed), <code></code>,</p></li>
<li><p>gv_node_id(ToId), &ldquo; &rdquo;,</p></li>
<li><p>gv_node_id(ToId), <code></code>,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
@@ -136,18 +133,18 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
% @arg GraphAttributes A list of name-value pairs.
% @arg CategoryAttributes A list of name-value pairs.
%
&ndash;% <code>
+% ~~~
% attr_stmt = (graph / node / edge) attr_list
-%</code>
+% ~~~</p></li>
</ul>


<p> gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
 gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
   indent(I),
&ndash;  gv_kind(Kind), &ldquo; &rdquo;,
+  gv_kind(Kind), <code></code>,
   gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</p>

<p>&ndash;%! gv_graph(+Gif:compound)//
+%! gv_graph(+GraphTerm:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -159,19 +156,19 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 %      they are ignored in the input file.
 %      Only in combinattion with directionality <code>directed</code>.
 %
&ndash;% <code>abnf
+% ~~~{.abnf}
 % graph = ["strict"] ("graph" / "digraph") [ID] "{" stmt_list "}"
-%</code>
+% <del>
 %
 % <code>GraphTerm</code> is a compound term of the following form:
&ndash;% ```prolog
+% </del>{.pl}
 % graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
&ndash;% <code>
+% ~~~
 %
 % `RankedVertexTerms` is a list of compound terms of the following form:
-%</code>prolog
+% <del>{.pl}
 % rank(RankNode,ContentNodes)
&ndash;% ```
+% </del>
 %
 % @tbd Add support for subgraphs (arbitrary nesting).
 % @tbd Add support for escape strings:
@@ -179,10 +176,10 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;>
&ndash;  gv_graph(graph(VTerms,[],ETerms,GAttrs)).
+gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
+  gv_graph(graph(VTerms, [], ETerms, GAttrs)).</p>

<p>-gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
+gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   {</p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
</code></pre>

<p>@@ -197,8 +194,8 @@ gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
   % States that this file represents a graph according to the GraphViz format.
   indent(I),
   gv_strict(Strict),
&ndash;  gv_graph_type(Directed), &ldquo; &rdquo;,
&ndash;  gv_id(GName), &ldquo; &rdquo;,
+  gv_graph_type(Directed), <code></code>,
+  gv_id(GName), <code></code>,</p>

<p>   % The body of the DOT file appears between curly braces.
   bracketed(
@@ -243,18 +240,18 @@ gv_graph0(</p>

<pre><code>   (NewVTerms == [], RankedVTerms == [])
 }
</code></pre>

<p>   &ndash;>
&ndash;    &ldquo;&rdquo;
+    ``
   ;</p>

<pre><code> line_feed
</code></pre>

<p>   ),</p>

<p>   % The list of GraphViz nodes.
   &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
&ndash;  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),
+  ({NewVTerms == []} &ndash;> `` ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
&ndash;  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),
+  ({RankedVTerms == []} &ndash;> `` ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -284,8 +281,8 @@ gv_graph0(
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
-gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
+gv_graph_type(false) &mdash;> <code>graph</code>.
+gv_graph_type(true) &mdash;> <code>digraph</code>.</p>

<p> %! gv_id(?Atom:atom)// is det.
@@ -308,9 +305,8 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
 %      This requires an XML grammar!</p>

<p> % HTML strings (variant 4).
-gv_id(Content) &mdash;>
&ndash;  {compound(Content)}, !,
&ndash;  gv_html_like_label(Content).
+gv_id(Atom) &mdash;>
+  dcg_atom_codes(gv_html_like_label, Atom), !.
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -334,16 +330,14 @@ gv_id(Atom) &mdash;>
 % Double-quoted strings (variant 3).
 % The quotes are not in the given atom. They are written anyway.
 gv_id(Atom) &mdash;>
&ndash;  quoted(dcg_atom_codes(gv_quoted_string, Atom)), !.
+  quoted(double_quote, dcg_atom_codes(gv_quoted_string, Atom)), !.</p>

<p>-gv_id_first(X) &mdash;> letter(X).
+gv_id_first(X) &mdash;> ascii_letter(X).
 gv_id_first(X) &mdash;> underscore(X).</p>

<p> gv_id_rest([]) &mdash;> [].
 gv_id_rest([H|T]) &mdash;>
&ndash;  (   alpha_numeric(H)
&ndash;  ;   underscore(H)
&ndash;  ),
+  (ascii_alpha_numeric(H) ; underscore(H)),
   gv_id_rest(T).</p>

<p>@@ -359,19 +353,19 @@ gv_keyword(Codes):&ndash;
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.</p>

<p>-gv_keyword &mdash;> &ldquo;digraph&rdquo;.
-gv_keyword &mdash;> &ldquo;edge&rdquo;.
-gv_keyword &mdash;> &ldquo;graph&rdquo;.
-gv_keyword &mdash;> &ldquo;node&rdquo;.
-gv_keyword &mdash;> &ldquo;strict&rdquo;.
-gv_keyword &mdash;> &ldquo;subgraph&rdquo;.
+gv_keyword &mdash;> <code>digraph</code>.
+gv_keyword &mdash;> <code>edge</code>.
+gv_keyword &mdash;> <code>graph</code>.
+gv_keyword &mdash;> <code>node</code>.
+gv_keyword &mdash;> <code>strict</code>.
+gv_keyword &mdash;> <code>subgraph</code>.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
-gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
-gv_kind(node) &mdash;> &ldquo;node&rdquo;.
+gv_kind(edge) &mdash;> <code>edge</code>.
+gv_kind(graph) &mdash;> <code>graph</code>.
+gv_kind(node) &mdash;> <code>node</code>.</p>

<p> %! gv_node_id(+NodeId:atom)// .
@@ -398,7 +392,7 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), &ldquo; &rdquo;,
+  gv_node_id(Id), <code></code>,
   gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</p>

<p>@@ -409,23 +403,23 @@ gv_port &mdash;>
   gv_port_angle,
   &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   gv_compass_pt(_).</p>

<p> gv_port_angle &mdash;>
&ndash;  &ldquo;@&rdquo;,
+  <code>@</code>,
   gv_id(_).</p>

<p> gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   gv_id(_).
 gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
+  <code>:</code>,
   bracketed(</p>

<pre><code> round,
 (
   gv_id(_),
</code></pre>

<ul>
<li>   &ldquo;,&rdquo;,</li>
<li>   <code>,</code>,
   gv_id(_)
 )
).
@@ -442,7 +436,7 @@ gv_quoted_string([92,34|T]) &mdash;> !,
gv_quoted_string(T).
% Add the backslash escape character.
gv_quoted_string([34|T]) &mdash;> !,</li>
<li>&ldquo;\\&rdquo;&ldquo;,</li>
<li><p><code>\\\"</code>,
gv_quoted_string(T).
% All other characters are allowed without escaping.
gv_quoted_string([H|T]) &mdash;>
@@ -461,14 +455,14 @@ gv_ranked_node_collection(</p>

<p>   % The rank attribute.
   {NewI is I + 1},</p></li>
<li> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</li>
<li><p> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,</p>

<p> &lsquo;*&rsquo;(
   gv_node_statement(NewI, GraphAttrs),
   [Rank_V_Term|Content_V_Terms],
   []</p>

<h2> ),</h2></li>
<li><p> % We want to indent the closing curly brace.
 indent(I)
)),
@@ -481,7 +475,7 @@ gv_ranked_node_collection(
% This only applies to directed graphs.</p></li>
</ul>


<p> gv_strict(false) &mdash;> [].
-gv_strict(true) &mdash;> &ldquo;strict &rdquo;.
+gv_strict(true) &mdash;> <code>strict</code>.</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 704e2d4..bba87f9 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -9,6 +9,9 @@</p>

<pre><code> gif_to_gv_file/3, % +GraphInterchangeFormat:compound
                   % ?ToFile:atom
                   % +Options:list(nvpair)
</code></pre>

<ul>
<li> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % -SvgDom:list(compound)
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -27,11 +30,13 @@ and GraphViz output files or SVG DOM structures.</p></li>
</ul>


<p> :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).
+:&ndash; use_module(library(predicate_options)). % Declarations.</p>

<p>&ndash;:&ndash; use_module(generics(code_ext)).
+:&ndash; use_module(generics(codes_ext)).
 :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(run_ext)).
+:&ndash; use_module(svg(svg_file)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -131,12 +136,15 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   prolog_file_type(ToExtension, graphviz_output), !,</p>

<p>   % The output file is either given or created.
&ndash;  (   var(ToFile)
&ndash;  &ndash;>  user:prolog_file_type(ToExtension, ToFileType),
&ndash;      file_alternative(FromFile, <em>, </em>, ToExtension, ToFile)
&ndash;  ;   is_absolute_file_name(ToFile),
&ndash;      % The given output file must match a certain file extension.
&ndash;      file_name_extension(<em>, ToExtension, ToFile)
+  (
+    var(ToFile)
+  &ndash;>
+    user:prolog_file_type(ToExtension, ToFileType),
+    file_alternative(FromFile, </em>, <em>, ToExtension, ToFile)
+  ;
+    is_absolute_file_name(ToFile),
+    % The given output file must match a certain file extension.
+    file_name_extension(</em>, ToExtension, ToFile)
   ),
   % Now that we have the output file we can prevent the
   % file type / file extension translation predicates from bakctracking.
@@ -146,8 +154,6 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   format(atom(OutputType), &lsquo;-T~w&rsquo;, [ToExtension]),
   process_create(</p>

<pre><code> path(Method),
</code></pre>

<ul>
<li> % @tbd Windows hack:</li>
<li> %%%%&lsquo;C:\Program Files (x86)\Graphviz2.38\bin\dot.exe&rsquo;,
 [OutputType,FromFile,&lsquo;-o&rsquo;,ToFile],
 [process(PID)]
),
@@ -171,6 +177,20 @@ gif_to_gv_file(Gif, ToFile, Options):&ndash;
codes_to_gv_file(Codes, ToFile, Options).</li>
</ul>


<p>+%! gif_to_svg_dom(
+%!   +GraphInterchangeFormat:compound,
+%!   -SvgDom:list(compound),
+%!   +Options:list(nvpair)
+%! ) is det.
+
+gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;
+  % Make sure the file type of the output file is SvgDom.
+  merge_options([to_file_type=svg], Options1, Options2),
+  gif_to_gv_file(Gif, ToFile, Options2),
+  file_to_svg(ToFile, SvgDom),
+  delete_file(ToFile).
+
+
 %! open_dot(+File:atom) is det.
 % Opens the given DOT file.
 %
diff &mdash;git a/gv_html.pl b/gv_html.pl
index 08306f0..3f0b08b 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -1,224 +1,60 @@
 :&ndash; module(
   gv_html,
   [
&ndash;    gv_html_like_label//1 % +Content:compound
+    gv_html_like_label//1 % +Codes:list(code)
   ]
 ).</p>

<h2>&ndash;/** <module> GraphViz: HTML-like labels</h2>

<h2>-Grammar taken from the GraphViz Web site:</h2>

<p>&ndash;<code>
-label :   text
-        | table
-text :   textitem
-       | text textitem
-textitem :   string
-           | &lt;BR/&gt;
-           | &lt;FONT&gt; text &lt;/FONT&gt;
-           | &lt;I&gt; text &lt;/I&gt;
-           | &lt;B&gt; text &lt;/B&gt;
-           | &lt;U&gt; text &lt;/U&gt;
-           | &lt;O&gt; text &lt;/O&gt;
-           | &lt;SUB&gt; text &lt;/SUB&gt;
-           | &lt;SUP&gt; text &lt;/SUP&gt;
-           | &lt;S&gt; text &lt;/S&gt;
-table : [ &lt;FONT&gt; ] &lt;TABLE&gt; rows &lt;/TABLE&gt; [ &lt;/FONT&gt; ]
-rows :   row
-       | rows row
-       | rows &lt;HR/&gt; row
-row: &lt;TR&gt; cells &lt;/TR&gt;
-cells :   cell
-        | cells cell
-        | cells &lt;VR/&gt; cell
-cell:   &lt;TD&gt; label &lt;/TD&gt;
-      | &lt;TD&gt; &lt;IMG/&gt; &lt;/TD&gt;
-</code>
+/** <module> GraphViz HTML</p>

<p> @author Wouter Beek
&ndash;@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
+@version 2013/07, 2013/09, 2014/03-2014/06
 */</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_bracket)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<h2>&ndash;%! gv_html_like_label(?Content:compound)// .</h2>

<p>-gv_html_like_label(Content) &mdash;></p>

<h2>&ndash;  bracketed(angular, label(Content)).</h2>

<p>&ndash;
&ndash;%! cell(?Contents:compound)// .
&ndash;% Supported attributes for TD:
&ndash;% <code>
-% ALIGN="CENTER|LEFT|RIGHT|TEXT"
-% BALIGN="CENTER|LEFT|RIGHT"
-% BGCOLOR="color"
-% BORDER="value"
-% CELLPADDING="value"
-% CELLSPACING="value"
-% COLOR="color"
-% COLSPAN="value"
-% FIXEDSIZE="FALSE|TRUE"
-% GRADIENTANGLE="value"
-% HEIGHT="value"
-% HREF="value"
-% ID="value"
-% PORT="portName"
-% ROWSPAN="value"
-% SIDES="value"
-% STYLE="value"
-% TARGET="value"
-% TITLE="value"
-% TOOLTIP="value"
-% VALIGN="MIDDLE|BOTTOM|TOP"
-% WIDTH="value"
-%</code>
+%! gv_html_label(+Codes:list(code))// .
 %
&ndash;% Supported attributes for IMG:
&ndash;% ```
&ndash;% SCALE=&ldquo;FALSE|TRUE|WIDTH|HEIGHT|BOTH&rdquo;
&ndash;% SRC=&ldquo;value&rdquo;</p>

<h2>&ndash;% ```</h2>

<p>-cell(td(Contents)) &mdash;>
&ndash;  html_element(td, [], label(Contents)).
-cell(td(img)) &mdash;></p>

<h2>&ndash;  html_element(td, [], html_element(img)).</h2>

<p>&ndash;</p>

<h2>&ndash;%! cells(?Contents:list(compound))// .</h2>

<p>-cells([H|T]) &mdash;>
&ndash;  cell(H),
&ndash;  cells(T).
-cells([H,vr|T]) &mdash;>
&ndash;  cell(H),
&ndash;  html_element(vr),
&ndash;  cells(T).
-cells([H]) &mdash;></p>

<h2>&ndash;  cell(H).</h2>

<p>&ndash;
&ndash;%! label(?Content:compound)// .</p>

<h2>&ndash;% GraphViz HTML-like label.</h2>

<p>-label(Content) &mdash;>
&ndash;  text(Content).
-label(Content) &mdash;></p>

<h2>&ndash;  table(Content).</h2>

<p>&ndash;</p>

<h2>&ndash;%! row(?Contents:compound)// .</h2>

<p>-row(tr(Contents)) &mdash;></p>

<h2>&ndash;  html_element(tr, [], cell(Contents)).</h2>

<p>&ndash;</p>

<h2>&ndash;%! rows(?Contents:list)// .</h2>

<p>-rows([H|T]) &mdash;>
&ndash;  row(H),
&ndash;  rows(T).
-rows([H,hr|T]) &mdash;>
&ndash;  row(H),
&ndash;  html_element(hr),
&ndash;  rows(T).
-rows([H]) &mdash;></p>

<h2>&ndash;  row(H).</h2>

<p>&ndash;
&ndash;%! table(?Contents:compound)// .
&ndash;% Supported attributes for TABLE:
&ndash;% <code>
-% ALIGN="CENTER|LEFT|RIGHT"
-% BGCOLOR="color"
-% BORDER="value"
-% CELLBORDER="value"
-% CELLPADDING="value"
-% CELLSPACING="value"
-% COLOR="color"
-% COLUMNS="value"
-% FIXEDSIZE="FALSE|TRUE"
-% GRADIENTANGLE="value"
-% HEIGHT="value"
-% HREF="value"
-% ID="value"
-% PORT="portName"
-% ROWS="value"
-% SIDES="value"
-% STYLE="value"
-% TARGET="value"
-% TITLE="value"
-% TOOLTIP="value"
-% VALIGN="MIDDLE|BOTTOM|TOP"
-% WIDTH="value"
-%</code>
&ndash;%
&ndash;% Supported attributes for FONT:
&ndash;% ```
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% FACE=&ldquo;fontname&rdquo;
&ndash;% POINT-SIZE=&ldquo;value&rdquo;</p>

<h2>&ndash;% ```</h2>

<p>-table(table(Attrs,Contents)) &mdash;>
&ndash;  html_element(table, Attrs, rows(Contents)).
-table(table(font(Contents))) &mdash;></p>

<h2>&ndash;  html_element(font, [], html_element(table, [], rows(Contents))).</h2>

<p>&ndash;</p>

<h2>&ndash;%! text(?Contents:list)// .</h2>

<p>-text(Contents) &mdash;></p>

<h2>&ndash;  &lsquo;+&rsquo;(textitem, Contents, []).</h2>

<p>&ndash;
&ndash;%! textitem(?Content)// .
&ndash;% Supported attributes for BR:
&ndash;% ```
&ndash;% ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;</p>

<h2>&ndash;% ```</h2>

<p>-textitem(string(String)) &mdash;>
&ndash;  html_string(String).
-textitem(entity(Name)) &mdash;>
&ndash;  html_entity(Name).
-textitem(br(Attrs)) &mdash;>
&ndash;  html_element(br, Attrs).
-textitem(Compound) &mdash;>
&ndash;  {var(Compound)}, !,
&ndash;  html_element(Name, _, text(Content)),
&ndash;  {
&ndash;    supported_html_element(Name),
&ndash;    Compound =.. [Name,Content]
&ndash;  }.
-textitem(Compound) &mdash;>
&ndash;  {
&ndash;    Compound =.. [Name,Content],
&ndash;    supported_html_element(Name)
&ndash;  },</p>

<h2>&ndash;  html_element(Name, _, text(Content)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS</h2>

<p>&ndash;%! supported_html_element(+Name:atom) is semidet.</p>

<h2>&ndash;%! supported_html_element(-Name:atom) is multi.</h2>

<p>-supported_html_element(b).
-supported_html_element(font).
-supported_html_element(i).
-supported_html_element(o).
-supported_html_element(s).
-supported_html_element(sub).
-supported_html_element(sup).
-supported_html_element(u).
+% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a>
+
+gv_html_label &mdash;> gv_html_text, !.
+gv_html_label &mdash;> gv_html_table, !.
+gv_html_label &mdash;> [].
+
+gv_html_like_label &mdash;> bracketed(angular, gv_html_label).
+
+gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).
+
+gv_html_table &mdash;> html_element(table, <em>, gv_html_rows).
+gv_html_table &mdash;> html_element(font, </em>, html_element(table, <em>, gv_html_rows)).
+
+gv_html_rows &mdash;> gv_html_row, gv_html_rows.
+gv_html_rows &mdash;> gv_html_row, html_element(hr, </em>), gv_html_rows.
+gv_html_rows &mdash;> gv_html_row.
+
+gv_html_row &mdash;> html_element(tr, <em>, gv_html_cells).
+
+gv_html_cell &mdash;> html_element(td, </em>, gv_html_label).
+gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).
+
+gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
+gv_html_cells &mdash;> gv_html_cell.
+gv_html_cells &mdash;> gv_html_cell, html_element(vr, <em>), gv_html_cells.
+
+gv_html_text &mdash;> gv_html_textitem, gv_html_text.
+gv_html_text &mdash;> gv_html_textitem.
+
+gv_html_textitem &mdash;> html_string, !.
+gv_html_textitem &mdash;> html_entity, !.
+gv_html_textitem &mdash;> html_element(br, </em>), !.
+gv_html_textitem &mdash;> html_element(font, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(i, </em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(b, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(u, </em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(sub, <em>, gv_html_text), !.
+gv_html_textitem &mdash;> html_element(sup, </em>, gv_html_text), !.
+
diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index c115372..7870eb1 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -14,67 +14,59 @@
 :&ndash; use_module(math(math_ext)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_cardinal)).</p>

<p> %! gv_numeral(?Value:number)// .
&ndash;%
&ndash;% # Syntax
&ndash;%
&ndash;% <code>bnf
+% ~~~{.bnf}
 % ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
-%</code>
&ndash;%
&ndash;% ## Generation
&ndash;%
&ndash;% In the generative case, three notations are allowed (also see below):
&ndash;%   1. (non-zero integer-part)
&ndash;%   2. (decimal-separator) (non-zero fractional)
&ndash;%   3. (non-zero integer-part) (decimal-separator) (non-zero fractional)
&ndash;%
&ndash;% The following notations are explicitly excluded due to verbosity:
&ndash;%   &ndash; (non-zero integer-part) (decimal-separator)
&ndash;%   &ndash; (non-zero integer-part) (decimal-separator) (zero fractional)
&ndash;%   &ndash; (zero integer-part) (decimal-separator) (non-zero fractional)
&ndash;%
&ndash;% The following notations are also excluded, but since they violate
&ndash;%  well-formedness:
&ndash;%   &ndash; (non-zero integer-part) (non-zero fractional)
&ndash;%   &ndash; (decimal-separator)
+% ~~~</p>

<p> gv_numeral(N) &mdash;>
&ndash;  {var(N)}, !,
&ndash;  sign(Sign),
&ndash;  (   &ldquo;.&rdquo;,
&ndash;      &lsquo;+&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)]),
&ndash;      {IntegerPart = 0}
&ndash;  ;   &lsquo;+&rsquo;(decimal_digit, IntegerPart, [convert1(weights_decimal)]),
&ndash;      (   &ldquo;.&rdquo;,
&ndash;          &lsquo;*&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)])
&ndash;      ;   {Fractional = 0}
&ndash;      )
&ndash;  ),
&ndash;  {   number_integer_parts(UnsignedN, IntegerPart, Fractional),
&ndash;      N is copysign(UnsignedN, Sign)
&ndash;  }.
+  {nonvar(N)},
+  {number_sign_parts(N, Sign, Abs)},
+  ({Sign =:= -1} &ndash;> <code>-</code> ; <code>`),
+  gv_numeral_abs(Abs).
 gv_numeral(N) --&gt;
-  {number_sign_parts(N, Sign, UnsignedN)},
-  sign(Sign),
-  {number_integer_parts(UnsignedN, IntegerPart, Fractional)},
-  (   % [1] The fractional is zero, so only write the integer part
-      %     and do not write the decimal separator.
-      {Fractional =:= 0}
-  -&gt;  integer(IntegerPart)
-  ;   % [2] The integer part is zero, so only write the fractional part,
-      %     preceded by the decimal separator.
-      {IntegerPart =:= 0}
-  -&gt;  ".",
-      integer(Fractional)
-  ;   % [3] Both the integer part and the fractional are non-zero,
-      %     so write both of them, with the decimal separator in-between.
-      integer(IntegerPart),
-      ".",
-      integer(Fractional)
+  {var(N)},
+  'sign?'(Sign),
+  gv_numeral_abs(Abs),
+  {number_sign_parts(N, Sign, Abs)}.
+
+
+gv_numeral_abs(N) --&gt;
+  {nonvar(N)},
+  {number_integer_parts(N, N1, N2)},
+  (
+    {N2 =:= 0}
+  -&gt;
+    integer(N1)
+  ;
+    {N1 =:= 0}
+  -&gt;
+   </code>.<code>,
+    integer(N2)
+  ;
+    integer(N1),
+    '?'((</code>.<code>, 'integer?'(N2)), [])
   ).
+gv_numeral_abs(N) --&gt;
+  {var(N)},
+  (
+   </code>.<code>,
+    integer(N2)
+  -&gt;
+    {N1 = 0}
+  ;
+    integer(N1),
+    (
+     </code>.`
+    &ndash;>
+      &lsquo;integer?&rsquo;(N2)
+    ;
+      {N2 = 0}
+    )
+  ),
+  {number_integer_parts(N, N1, N2)}.
+
diff &mdash;git a/load.pl b/load.pl
index 5cec32c..4b117d1 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -1,14 +1,12 @@
&ndash;% Load file for the plGraphViz library.
+% Load file for plGraphViz.</p>

<p>&ndash;:&ndash; dynamic(user:project/2).
&ndash;:&ndash; multifile(user:project/2).
&ndash;   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;).
+:&ndash; dynamic(user:prolog/3).
+:&ndash; multifile(user:prolog/3).
+   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).</p>

<p> :&ndash; use_module(load_project).
&ndash;:&ndash; load_project([
+:&ndash; load_project(plGraphViz, [</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plDcg,</li>
<li> plHtml,</li>
<li> plUri</li>
<li> plHtml
]).</li>
</ul>


<p>diff &mdash;git a/plDcg b/plDcg
deleted file mode 160000
index 96e2615..0000000
&mdash;&ndash; a/plDcg
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 96e261537773270a43d1ff4346273820282f21fb
diff &mdash;git a/plHtml b/plHtml
index a7b736f..18e657b 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit a7b736fdf7c435f825193bbc54500a302b0bc4b1
+Subproject commit 18e657b22a84d5e98a317ddec58314964ff68bcd
diff &mdash;git a/plUri b/plUri
deleted file mode 160000
index 59f582c..0000000
&mdash;&ndash; a/plUri
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 59f582c68cebc221f964ccb9805a869d05cb7856
diff &mdash;git a/run.pl b/run.pl
deleted file mode 100644
index 8bba736..0000000
&mdash;&ndash; a/run.pl
+++ /dev/null
@@ -1,9 +0,0 @@</p>

<h2>&ndash;% Standalone execution of the plGraphViz library.</h2>

<p>&ndash;:&ndash; if(current_prolog_flag(argv, [&lsquo;&mdash;debug&rsquo;|_])).
&ndash;  :&ndash; ensure_loaded(debug).
&ndash;:&ndash; else.
&ndash;  :&ndash; set_prolog_flag(verbose, silent).
&ndash;  :&ndash; ensure_loaded(load).</p>

<h2>&ndash;:&ndash; endif.</h2>

<p>```</p>

<h2 id="54"> 54: 正在比较变动前 0cc5421 和变动后 dbc602d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index b25c15b..7193a38 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1 +1,4 @@
 <em>~
+</em>#
+<em>.db
+data/</em>
diff &mdash;git a/.gitmodules b/.gitmodules
index a63cbff..6c22435 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,3 +4,9 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>+[submodule &ldquo;plDcg&rdquo;]
+   path = plDcg
+   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
+[submodule &ldquo;plUri&rdquo;]
+   path = plUri
+   url = <a href="https://github.com/wouterbeek/plUri.git">https://github.com/wouterbeek/plUri.git</a>
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index d7d21ad..2774ee9 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit d7d21ad4d6d7cec98d8b0122f5303e691998f512
+Subproject commit 2774ee9cba6ac2353150322c744e65857634e575
diff &mdash;git a/debug.pl b/debug.pl
index d7339b9..12b4526 100644
&mdash;&ndash; a/debug.pl
+++ b/debug.pl
@@ -1,9 +1,7 @@
 % Debug file for library plGraphViz.</p>

<p>&ndash;:&ndash; style_check(+charset).</p>

<h2>&ndash;%:&ndash; style_check(+var_branches).</h2>

<p> :&ndash; [load].</p>

<p> :&ndash; use_module(debug_project).
 :&ndash; debug_all_files.
+
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 3c7863d..30761bb 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -46,10 +46,12 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06, 2014/11
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p>@@ -97,7 +99,7 @@ gv_attr_type(viewPort).
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p> addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>, []),
+  &lsquo;?&rsquo;(plus_sign, []),
   double(Float).</p>

<p>@@ -106,7 +108,7 @@ addDouble(Float) &mdash;>
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p> addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(<code>+</code>, []),
+  &lsquo;?&rsquo;(plus_sign, []),
   point(Point).</p>

<p>@@ -147,10 +149,10 @@ backwards_compatible(invempty).
 backwards_compatible(open).</p>

<p>-bool(false) &mdash;> <code>false</code>.
-bool(false) &mdash;> <code>no</code>.
-bool(true) &mdash;> <code>true</code>.
-bool(true) &mdash;> <code>yes</code>.
+bool(false) &mdash;> &ldquo;false&rdquo;.
+bool(false) &mdash;> &ldquo;no&rdquo;.
+bool(true) &mdash;> &ldquo;true&rdquo;.
+bool(true) &mdash;> &ldquo;yes&rdquo;.</p>

<p> %! clusterMode(+ClusterMode:atom)// .
@@ -187,7 +189,7 @@ doubleList([H|T]) &mdash;>
   &lsquo;*&rsquo;(doubleList1, T, []).</p>

<p> doubleList1(Float) &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   double(Float).</p>

<p>@@ -242,16 +244,16 @@ pagedir(&lsquo;TR&rsquo;).</p>

<p> %! point(+Point:compound)// .
 % A <em>point</em> is represented by a compound of the following form:
&ndash;% <code>point(X:float,Y:float,InputOnly:boolean)</code>.
+% <code>point(X:float,Y:float,Changeable:boolean)</code>.</p>

<p>-point(point(X,Y,InputOnly)) &mdash;>
+point(point(X,Y,Changeable)) &mdash;>
   float(X),
&ndash;  <code>,</code>,
+  &ldquo;,&rdquo;,
   float(Y),
&ndash;  input_only(InputOnly).
+  input_changeable(Changeable).</p>

<p>-input_only(false) &mdash;> [].
-input_only(true) &mdash;> <code>!</code>.
+input_changeable(false) &mdash;> &ldquo;&rdquo;.
+input_changeable(true) &mdash;> &ldquo;!&rdquo;.</p>

<p> pointList(Points) &mdash;>
@@ -292,9 +294,9 @@ rankdir(&lsquo;TB&rsquo;).</p>

<p> rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  float(LowerLeftX), <code>,</code>,
&ndash;  float(LowerLeftY), <code>,</code>,
&ndash;  float(UpperRightX), <code>,</code>,
+  float(LowerLeftX), &ldquo;,&rdquo;,
+  float(LowerLeftY), &ldquo;,&rdquo;,
+  float(UpperRightX), &ldquo;,&rdquo;,
   float(UpperRightY).</p>

<p>@@ -414,4 +416,3 @@ style(node, wedged).</p>

<h2> % @tbd viewPort</h2>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index faf496c..649ef9c 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -2,15 +2,17 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>       % +Attr1:nvpair
</code></pre></li>
<li><pre><code>       % +Attr2:nvpair
</code></pre></li>
<li><pre><code>       % +Attribute1:nvpair
</code></pre></li>
<li><pre><code>       % -Attribute2:nvpair
</code></pre>

<p>]
).</p></li>
</ul>


<p>&ndash;/<strong> <module> GraphViz attributes v2
+/</strong> <module> GraphViz: Attributes
+
+Support for GraphViz attributes.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06
+@version 2014/06, 2014/11
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -19,9 +21,11 @@</p>

<p> :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
+:&ndash; use_module(os(file_gnu)).</p>

<p>+:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generic)).
+:&ndash; use_module(plDcg(dcg_generics)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).
@@ -54,24 +58,40 @@</p>

<p>+%! gv_attr(
+%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
+%!   +Attribute1:nvpair,
+%!   +Attribute2:nvpair
+%! ) is det.
+% Uses the default value in case Value is uninstantiated.
+% Otherwise, performs a typecheck and converts the given value.
+
 gv_attr(Context, N=V, N=V):&ndash;
   var(V), !,
   gv_attr(N, UsedBy, <em>, V, </em>, <em>),
+  % Check validity of context.
   memberchk(Context, UsedBy).
 gv_attr(Context, N=V1, N=V2):&ndash;
   gv_attr(N, UsedBy, Types, </em>, Minimum, _),
+  % Check validity of context.
   memberchk(Context, UsedBy),
+  % Check validity of value type.
   member(Type, Types),
&ndash;  (
&ndash;    Type == style
&ndash;  &ndash;>
&ndash;    Dcg =.. [Type,Context,V1]
&ndash;  ;
&ndash;    Dcg =.. [Type,V1]
+  (   Type == style
+  &ndash;>  Dcg =.. [Type,Context,V1]
+  ;   Dcg =.. [Type,V1]
   ),
   once(dcg_phrase(Dcg, V2)),
+  % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(V1, Minimum).</p>

<p>+
+
+% HELPERS
+
+%! check_minimum(+Value:atom, +Minimum:number) is semidet.
+% Trivially succeeds if no minimum value is available for a given attribute.
+
 check_minimum(_, &lsquo;&rsquo;):&ndash; !.
 check_minimum(V, Min1):&ndash;
   atom_number(Min1, Min2),
diff &mdash;git a/gv_color.pl b/gv_color.pl
index cb0cf8c..c48817c 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -13,27 +13,27 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2014/06
+@version 2014/06, 2014/10-2014/11
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(lists), except([delete/3])).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p> :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
+:&ndash; use_module(os(file_gnu)).</p>

<p>+:&ndash; use_module(plDcg(abnf_core_rules)).
 :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg_rfc(rfc2616_basic)).</p>

<p> :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<h2>&ndash;:&ndash; use_module(plSparql_parse(sparql_char)).</h2>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p> %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.
@@ -51,10 +51,10 @@
 %   3. <code>hsv(Hue:between(0.0,1.0),Saturation:between(0.0,1.0),Value:between(0.0,1.0))</code></p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
&ndash;  <code>#</code>,
+  &ldquo;#&rdquo;,
   &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue], []).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
&ndash;  <code>#</code>,
+  &ldquo;#&rdquo;,
   &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha], []).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
   &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
@@ -82,7 +82,7 @@ wc(Color-Float) &mdash;>
   &lsquo;?&rsquo;(wc_weight(Float), []).</p>

<p> wc_weight(Float) &mdash;>
&ndash;  <code>;</code>,
+  &ldquo;;&rdquo;,
   float(Float).</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index accd5bd..e67c469 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +GraphTerm:compound
+    gv_graph//1 % +Gif:compound
   ]
 ).</p>

<p>@@ -19,14 +19,17 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(lists), except([delete/3])).
 :&ndash; use_module(library(ordsets)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_arrow)).
 :&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_bracket)).
 :&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generic)).
+:&ndash; use_module(plDcg(dcg_generics)).
 :&ndash; use_module(plDcg(dcg_meta)).
+:&ndash; use_module(plDcg(dcg_quote)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
@@ -39,7 +42,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), <code>=</code>, gv_id(Val), <code>;</code>.
+  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.</p>

<p> %! gv_attribute_list(
@@ -47,10 +50,10 @@ gv_attribute(Name=Val) &mdash;>
 %!   +GraphAttributes:list(nvpair),
 %!   +Attributes:list(nvpair)
 %! )// .
&ndash;% <del>{.abnf}
+% ```abnf
 % attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
 % a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
&ndash;% </del>
+% ```</p>

<p> % Attributes occur between square brackets.
 gv_attribute_list(Context, <em>, Attrs1) &mdash;>
@@ -59,20 +62,20 @@ gv_attribute_list(Context, </em>, Attrs1) &mdash;></p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
&ndash;% <del>
+% ```
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
&ndash;% </del>
+% ```</p>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> <code>_</code>.
-gv_compass_pt&copy; &mdash;> <code>c</code>.
-gv_compass_pt(e) &mdash;> <code>e</code>.
-gv_compass_pt(n) &mdash;> <code>n</code>.
-gv_compass_pt(ne) &mdash;> <code>ne</code>.
-gv_compass_pt(nw) &mdash;> <code>nw</code>.
-gv_compass_pt(s) &mdash;> <code>s</code>.
-gv_compass_pt(se) &mdash;> <code>se</code>.
-gv_compass_pt(sw) &mdash;> <code>sw</code>.
-gv_compass_pt(w) &mdash;> <code>w</code>.
+gv_compass_pt(&lsquo;</em>&rsquo;) &mdash;> &ldquo;_&rdquo;.
+gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
+gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
+gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
+gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
+gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
+gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
+gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
+gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
+gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.</p>

<p> %! gv_edge_operator(+Directed:boolean)// .
@@ -83,7 +86,7 @@ gv_compass_pt(w) &mdash;> <code>w</code>.
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %                   undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, <code>--</code>.
+gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>@@ -107,11 +110,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), <code></code>,
+  gv_node_id(FromId), &ldquo; &rdquo;,</p>

<ul>
<li>gv_edge_operator(Directed), <code></code>,</li>
<li><p>gv_edge_operator(Directed), &ldquo; &rdquo;,</p></li>
<li><p>gv_node_id(ToId), <code></code>,</p></li>
<li><p>gv_node_id(ToId), &ldquo; &rdquo;,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
@@ -133,18 +136,18 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
% @arg GraphAttributes A list of name-value pairs.
% @arg CategoryAttributes A list of name-value pairs.
%
&ndash;% <del>
+% ```
% attr_stmt = (graph / node / edge) attr_list
&ndash;% </del>
+% ```</p></li>
</ul>


<p> gv_generic_attributes_statement(<em>, </em>, _, []) &mdash;> [], !.
 gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
   indent(I),
&ndash;  gv_kind(Kind), <code></code>,
+  gv_kind(Kind), &ldquo; &rdquo;,
   gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.</p>

<p>&ndash;%! gv_graph(+GraphTerm:compound)//
+%! gv_graph(+Gif:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -156,19 +159,19 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 %      they are ignored in the input file.
 %      Only in combinattion with directionality <code>directed</code>.
 %
&ndash;% <del>{.abnf}
+% ```abnf
 % graph = [&ldquo;strict&rdquo;] (&ldquo;graph&rdquo; / &ldquo;digraph&rdquo;) [ID] &ldquo;{&rdquo; stmt_list &ldquo;}&rdquo;
&ndash;% </del>
+% <code>
 %
 % `GraphTerm` is a compound term of the following form:
-% ~~~{.pl}
+%</code>prolog
 % graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
&ndash;% <del>
+% <code>``
 %
 %</code>RankedVertexTerms` is a list of compound terms of the following form:
&ndash;% </del>{.pl}
+% <code>prolog
 % rank(RankNode,ContentNodes)
-% ~~~
+%</code>
 %
 % @tbd Add support for subgraphs (arbitrary nesting).
 % @tbd Add support for escape strings:
@@ -176,10 +179,10 @@ gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(graph(VTerms, ETerms, GAttrs)) &mdash;>
&ndash;  gv_graph(graph(VTerms, [], ETerms, GAttrs)).
+gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;>
+  gv_graph(graph(VTerms,[],ETerms,GAttrs)).</p>

<p>-gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
+gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
   {</p>

<pre><code> shared_attributes(VTerms, SharedVAttrs, NewVTerms),
 shared_attributes(ETerms, SharedEAttrs, NewETerms),
</code></pre>

<p>@@ -194,8 +197,8 @@ gv_graph(graph(VTerms, RankedVTerms, ETerms, GAttrs1)) &mdash;>
   % States that this file represents a graph according to the GraphViz format.
   indent(I),
   gv_strict(Strict),
&ndash;  gv_graph_type(Directed), <code></code>,
&ndash;  gv_id(GName), <code></code>,
+  gv_graph_type(Directed), &ldquo; &rdquo;,
+  gv_id(GName), &ldquo; &rdquo;,</p>

<p>   % The body of the DOT file appears between curly braces.
   bracketed(
@@ -240,18 +243,18 @@ gv_graph0(</p>

<pre><code>   (NewVTerms == [], RankedVTerms == [])
 }
</code></pre>

<p>   &ndash;>
&ndash;    ``
+    &ldquo;&rdquo;
   ;</p>

<pre><code> line_feed
</code></pre>

<p>   ),</p>

<p>   % The list of GraphViz nodes.
   &lsquo;*&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
&ndash;  ({NewVTerms == []} &ndash;> `` ; line_feed),
+  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   &lsquo;*&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
&ndash;  ({RankedVTerms == []} &ndash;> `` ; line_feed),
+  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
</code></pre>

<p>@@ -281,8 +284,8 @@ gv_graph0(
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> <code>graph</code>.
-gv_graph_type(true) &mdash;> <code>digraph</code>.
+gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
+gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.</p>

<p> %! gv_id(?Atom:atom)// is det.
@@ -305,8 +308,9 @@ gv_graph_type(true) &mdash;> <code>digraph</code>.
 %      This requires an XML grammar!</p>

<p> % HTML strings (variant 4).
-gv_id(Atom) &mdash;>
&ndash;  dcg_atom_codes(gv_html_like_label, Atom), !.
+gv_id(Content) &mdash;>
+  {compound(Content)}, !,
+  gv_html_like_label(Content).
 % Alpha-numeric strings (variant 1).
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -330,14 +334,16 @@ gv_id(Atom) &mdash;>
 % Double-quoted strings (variant 3).
 % The quotes are not in the given atom. They are written anyway.
 gv_id(Atom) &mdash;>
&ndash;  quoted(double_quote, dcg_atom_codes(gv_quoted_string, Atom)), !.
+  quoted(dcg_atom_codes(gv_quoted_string, Atom)), !.</p>

<p>-gv_id_first(X) &mdash;> ascii_letter(X).
+gv_id_first(X) &mdash;> letter(X).
 gv_id_first(X) &mdash;> underscore(X).</p>

<p> gv_id_rest([]) &mdash;> [].
 gv_id_rest([H|T]) &mdash;>
&ndash;  (ascii_alpha_numeric(H) ; underscore(H)),
+  (   alpha_numeric(H)
+  ;   underscore(H)
+  ),
   gv_id_rest(T).</p>

<p>@@ -353,19 +359,19 @@ gv_keyword(Codes):&ndash;
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.</p>

<p>-gv_keyword &mdash;> <code>digraph</code>.
-gv_keyword &mdash;> <code>edge</code>.
-gv_keyword &mdash;> <code>graph</code>.
-gv_keyword &mdash;> <code>node</code>.
-gv_keyword &mdash;> <code>strict</code>.
-gv_keyword &mdash;> <code>subgraph</code>.
+gv_keyword &mdash;> &ldquo;digraph&rdquo;.
+gv_keyword &mdash;> &ldquo;edge&rdquo;.
+gv_keyword &mdash;> &ldquo;graph&rdquo;.
+gv_keyword &mdash;> &ldquo;node&rdquo;.
+gv_keyword &mdash;> &ldquo;strict&rdquo;.
+gv_keyword &mdash;> &ldquo;subgraph&rdquo;.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> <code>edge</code>.
-gv_kind(graph) &mdash;> <code>graph</code>.
-gv_kind(node) &mdash;> <code>node</code>.
+gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
+gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
+gv_kind(node) &mdash;> &ldquo;node&rdquo;.</p>

<p> %! gv_node_id(+NodeId:atom)// .
@@ -392,7 +398,7 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), <code></code>,
+  gv_node_id(Id), &ldquo; &rdquo;,
   gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.</p>

<p>@@ -403,23 +409,23 @@ gv_port &mdash;>
   gv_port_angle,
   &lsquo;?&rsquo;(gv_port_location, []).
 gv_port &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_compass_pt(_).</p>

<p> gv_port_angle &mdash;>
&ndash;  <code>@</code>,
+  &ldquo;@&rdquo;,
   gv_id(_).</p>

<p> gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   gv_id(_).
 gv_port_location &mdash;>
&ndash;  <code>:</code>,
+  &ldquo;:&rdquo;,
   bracketed(</p>

<pre><code> round,
 (
   gv_id(_),
</code></pre>

<ul>
<li>   <code>,</code>,</li>
<li>   &ldquo;,&rdquo;,
   gv_id(_)
 )
).
@@ -436,7 +442,7 @@ gv_quoted_string([92,34|T]) &mdash;> !,
gv_quoted_string(T).
% Add the backslash escape character.
gv_quoted_string([34|T]) &mdash;> !,</li>
<li><code>\\\"</code>,</li>
<li><p>&ldquo;\\&rdquo;&ldquo;,
gv_quoted_string(T).
% All other characters are allowed without escaping.
gv_quoted_string([H|T]) &mdash;>
@@ -455,14 +461,14 @@ gv_ranked_node_collection(</p>

<p>   % The rank attribute.
   {NewI is I + 1},</p></li>
<li> indent(NewI), gv_attribute(rank=same), <code>;</code>, line_feed,</li>
<li><p> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</p>

<p> &lsquo;*&rsquo;(
   gv_node_statement(NewI, GraphAttrs),
   [Rank_V_Term|Content_V_Terms],
   []
 ),</p></li>
<li><p>+
 % We want to indent the closing curly brace.
 indent(I)
)),
@@ -475,7 +481,7 @@ gv_ranked_node_collection(
% This only applies to directed graphs.</p></li>
</ul>


<p> gv_strict(false) &mdash;> [].
-gv_strict(true) &mdash;> <code>strict</code>.
+gv_strict(true) &mdash;> &ldquo;strict &rdquo;.</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index bba87f9..704e2d4 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -9,9 +9,6 @@</p>

<pre><code> gif_to_gv_file/3, % +GraphInterchangeFormat:compound
                   % ?ToFile:atom
                   % +Options:list(nvpair)
</code></pre>

<ul>
<li> gif_to_svg_dom/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % -SvgDom:list(compound)
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -30,13 +27,11 @@ and GraphViz output files or SVG DOM structures.</p></li>
</ul>


<p> :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).
&ndash;:&ndash; use_module(library(predicate_options)). % Declarations.</p>

<p>&ndash;:&ndash; use_module(generics(codes_ext)).
+:&ndash; use_module(generics(code_ext)).
 :&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(run_ext)).
&ndash;:&ndash; use_module(svg(svg_file)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -136,15 +131,12 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   prolog_file_type(ToExtension, graphviz_output), !,</p>

<p>   % The output file is either given or created.
&ndash;  (
&ndash;    var(ToFile)
&ndash;  &ndash;>
&ndash;    user:prolog_file_type(ToExtension, ToFileType),
&ndash;    file_alternative(FromFile, <em>, </em>, ToExtension, ToFile)
&ndash;  ;
&ndash;    is_absolute_file_name(ToFile),
&ndash;    % The given output file must match a certain file extension.
&ndash;    file_name_extension(<em>, ToExtension, ToFile)
+  (   var(ToFile)
+  &ndash;>  user:prolog_file_type(ToExtension, ToFileType),
+      file_alternative(FromFile, </em>, <em>, ToExtension, ToFile)
+  ;   is_absolute_file_name(ToFile),
+      % The given output file must match a certain file extension.
+      file_name_extension(</em>, ToExtension, ToFile)
   ),
   % Now that we have the output file we can prevent the
   % file type / file extension translation predicates from bakctracking.
@@ -154,6 +146,8 @@ file_to_gv(FromFile, ToFile, Options):&ndash;
   format(atom(OutputType), &lsquo;-T~w&rsquo;, [ToExtension]),
   process_create(</p>

<pre><code> path(Method),
</code></pre>

<ul>
<li> % @tbd Windows hack:</li>
<li> %%%%&lsquo;C:\Program Files (x86)\Graphviz2.38\bin\dot.exe&rsquo;,
 [OutputType,FromFile,&lsquo;-o&rsquo;,ToFile],
 [process(PID)]
),
@@ -177,20 +171,6 @@ gif_to_gv_file(Gif, ToFile, Options):&ndash;
codes_to_gv_file(Codes, ToFile, Options).</li>
</ul>


<p>&ndash;%! gif_to_svg_dom(
&ndash;%!   +GraphInterchangeFormat:compound,
&ndash;%!   -SvgDom:list(compound),
&ndash;%!   +Options:list(nvpair)</p>

<h2>&ndash;%! ) is det.</h2>

<p>-gif_to_svg_dom(Gif, SvgDom, Options1):&ndash;
&ndash;  % Make sure the file type of the output file is SvgDom.
&ndash;  merge_options([to_file_type=svg], Options1, Options2),
&ndash;  gif_to_gv_file(Gif, ToFile, Options2),
&ndash;  file_to_svg(ToFile, SvgDom),</p>

<h2>&ndash;  delete_file(ToFile).</h2>

<p>&ndash;
 %! open_dot(+File:atom) is det.
 % Opens the given DOT file.
 %
diff &mdash;git a/gv_html.pl b/gv_html.pl
index 3f0b08b..08306f0 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -1,60 +1,224 @@
 :&ndash; module(
   gv_html,
   [
&ndash;    gv_html_like_label//1 % +Codes:list(code)
+    gv_html_like_label//1 % +Content:compound
   ]
 ).</p>

<p>&ndash;/<strong> <module> GraphViz HTML
+/</strong> <module> GraphViz: HTML-like labels
+
+Grammar taken from the GraphViz Web site:
+
+<code>
+label :   text
+        | table
+text :   textitem
+       | text textitem
+textitem :   string
+           | &lt;BR/&gt;
+           | &lt;FONT&gt; text &lt;/FONT&gt;
+           | &lt;I&gt; text &lt;/I&gt;
+           | &lt;B&gt; text &lt;/B&gt;
+           | &lt;U&gt; text &lt;/U&gt;
+           | &lt;O&gt; text &lt;/O&gt;
+           | &lt;SUB&gt; text &lt;/SUB&gt;
+           | &lt;SUP&gt; text &lt;/SUP&gt;
+           | &lt;S&gt; text &lt;/S&gt;
+table : [ &lt;FONT&gt; ] &lt;TABLE&gt; rows &lt;/TABLE&gt; [ &lt;/FONT&gt; ]
+rows :   row
+       | rows row
+       | rows &lt;HR/&gt; row
+row: &lt;TR&gt; cells &lt;/TR&gt;
+cells :   cell
+        | cells cell
+        | cells &lt;VR/&gt; cell
+cell:   &lt;TD&gt; label &lt;/TD&gt;
+      | &lt;TD&gt; &lt;IMG/&gt; &lt;/TD&gt;
+</code></p>

<p> @author Wouter Beek
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06
+@see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
+@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p>+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_bracket)).
 :&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>&ndash;%! gv_html_label(+Codes:list(code))// .
+%! gv_html_like_label(?Content:compound)// .
+
+gv_html_like_label(Content) &mdash;>
+  bracketed(angular, label(Content)).
+
+
+%! cell(?Contents:compound)// .
+% Supported attributes for TD:
+% <code>
+% ALIGN="CENTER|LEFT|RIGHT|TEXT"
+% BALIGN="CENTER|LEFT|RIGHT"
+% BGCOLOR="color"
+% BORDER="value"
+% CELLPADDING="value"
+% CELLSPACING="value"
+% COLOR="color"
+% COLSPAN="value"
+% FIXEDSIZE="FALSE|TRUE"
+% GRADIENTANGLE="value"
+% HEIGHT="value"
+% HREF="value"
+% ID="value"
+% PORT="portName"
+% ROWSPAN="value"
+% SIDES="value"
+% STYLE="value"
+% TARGET="value"
+% TITLE="value"
+% TOOLTIP="value"
+% VALIGN="MIDDLE|BOTTOM|TOP"
+% WIDTH="value"
+%</code>
 %</p>

<h2>&ndash;% @see <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a></h2>

<p>-gv_html_label &mdash;> gv_html_text, !.
-gv_html_label &mdash;> gv_html_table, !.</p>

<h2>-gv_html_label &mdash;> [].</h2>

<h2>-gv_html_like_label &mdash;> bracketed(angular, gv_html_label).</h2>

<h2>-gv_html_like_label(Content) &mdash;> bracketed(angular, html_dcg(Content)).</h2>

<p>-gv_html_table &mdash;> html_element(table, _, gv_html_rows).</p>

<h2>-gv_html_table &mdash;> html_element(font, <em>, html_element(table, </em>, gv_html_rows)).</h2>

<p>-gv_html_rows &mdash;> gv_html_row, gv_html_rows.
-gv_html_rows &mdash;> gv_html_row, html_element(hr, _), gv_html_rows.</p>

<h2>-gv_html_rows &mdash;> gv_html_row.</h2>

<h2>-gv_html_row &mdash;> html_element(tr, _, gv_html_cells).</h2>

<p>-gv_html_cell &mdash;> html_element(td, _, gv_html_label).</p>

<h2>-gv_html_cell &mdash;> html_element(td, <em>, html_element(img, </em>)).</h2>

<p>-gv_html_cells &mdash;> gv_html_cell, gv_html_cells.
-gv_html_cells &mdash;> gv_html_cell.</p>

<h2>-gv_html_cells &mdash;> gv_html_cell, html_element(vr, _), gv_html_cells.</h2>

<p>-gv_html_text &mdash;> gv_html_textitem, gv_html_text.</p>

<h2>-gv_html_text &mdash;> gv_html_textitem.</h2>

<p>-gv_html_textitem &mdash;> html_string, !.
-gv_html_textitem &mdash;> html_entity, !.
-gv_html_textitem &mdash;> html_element(br, <em>), !.
-gv_html_textitem &mdash;> html_element(font, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(i, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(b, </em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(u, <em>, gv_html_text), !.
-gv_html_textitem &mdash;> html_element(sub, </em>, gv_html_text), !.</p>

<h2>-gv_html_textitem &mdash;> html_element(sup, _, gv_html_text), !.</h2>

<p>+% Supported attributes for IMG:
+% <code>
+% SCALE="FALSE|TRUE|WIDTH|HEIGHT|BOTH"
+% SRC="value"
+%</code>
+
+cell(td(Contents)) &mdash;>
+  html_element(td, [], label(Contents)).
+cell(td(img)) &mdash;>
+  html_element(td, [], html_element(img)).
+
+
+%! cells(?Contents:list(compound))// .
+
+cells([H|T]) &mdash;>
+  cell(H),
+  cells(T).
+cells([H,vr|T]) &mdash;>
+  cell(H),
+  html_element(vr),
+  cells(T).
+cells([H]) &mdash;>
+  cell(H).
+
+
+%! label(?Content:compound)// .
+% GraphViz HTML-like label.
+
+label(Content) &mdash;>
+  text(Content).
+label(Content) &mdash;>
+  table(Content).
+
+
+%! row(?Contents:compound)// .
+
+row(tr(Contents)) &mdash;>
+  html_element(tr, [], cell(Contents)).
+
+
+%! rows(?Contents:list)// .
+
+rows([H|T]) &mdash;>
+  row(H),
+  rows(T).
+rows([H,hr|T]) &mdash;>
+  row(H),
+  html_element(hr),
+  rows(T).
+rows([H]) &mdash;>
+  row(H).
+
+
+%! table(?Contents:compound)// .
+% Supported attributes for TABLE:
+% <code>
+% ALIGN="CENTER|LEFT|RIGHT"
+% BGCOLOR="color"
+% BORDER="value"
+% CELLBORDER="value"
+% CELLPADDING="value"
+% CELLSPACING="value"
+% COLOR="color"
+% COLUMNS="value"
+% FIXEDSIZE="FALSE|TRUE"
+% GRADIENTANGLE="value"
+% HEIGHT="value"
+% HREF="value"
+% ID="value"
+% PORT="portName"
+% ROWS="value"
+% SIDES="value"
+% STYLE="value"
+% TARGET="value"
+% TITLE="value"
+% TOOLTIP="value"
+% VALIGN="MIDDLE|BOTTOM|TOP"
+% WIDTH="value"
+%</code>
+%
+% Supported attributes for FONT:
+% <code>
+% COLOR="color"
+% FACE="fontname"
+% POINT-SIZE="value"
+%</code>
+
+table(table(Attrs,Contents)) &mdash;>
+  html_element(table, Attrs, rows(Contents)).
+table(table(font(Contents))) &mdash;>
+  html_element(font, [], html_element(table, [], rows(Contents))).
+
+
+%! text(?Contents:list)// .
+
+text(Contents) &mdash;>
+  &lsquo;+&rsquo;(textitem, Contents, []).
+
+
+%! textitem(?Content)// .
+% Supported attributes for BR:
+% <code>
+% ALIGN="CENTER|LEFT|RIGHT"
+%</code>
+
+textitem(string(String)) &mdash;>
+  html_string(String).
+textitem(entity(Name)) &mdash;>
+  html_entity(Name).
+textitem(br(Attrs)) &mdash;>
+  html_element(br, Attrs).
+textitem(Compound) &mdash;>
+  {var(Compound)}, !,
+  html_element(Name, <em>, text(Content)),
+  {
+    supported_html_element(Name),
+    Compound =.. [Name,Content]
+  }.
+textitem(Compound) &mdash;>
+  {
+    Compound =.. [Name,Content],
+    supported_html_element(Name)
+  },
+  html_element(Name, </em>, text(Content)).
+
+
+
+% HELPERS
+
+%! supported_html_element(+Name:atom) is semidet.
+%! supported_html_element(-Name:atom) is multi.
+
+supported_html_element(b).
+supported_html_element(font).
+supported_html_element(i).
+supported_html_element(o).
+supported_html_element(s).
+supported_html_element(sub).
+supported_html_element(sup).
+supported_html_element(u).
diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index 7870eb1..c115372 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -14,59 +14,67 @@
 :&ndash; use_module(math(math_ext)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_cardinal)).</p>

<p> %! gv_numeral(?Value:number)// .
&ndash;% <del>{.bnf}
+%
+% # Syntax
+%
+% ```bnf
 % (&lsquo;&ndash;&rsquo;)? ( &lsquo;.&rsquo; [0-9]+ | [0-9]+ ( &lsquo;.&rsquo; [0-9]* )? )
&ndash;% </del>
+% ```
+%
+% ## Generation
+%
+% In the generative case, three notations are allowed (also see below):
+%   1. (non-zero integer-part)
+%   2. (decimal-separator) (non-zero fractional)
+%   3. (non-zero integer-part) (decimal-separator) (non-zero fractional)
+%
+% The following notations are explicitly excluded due to verbosity:
+%   &ndash; (non-zero integer-part) (decimal-separator)
+%   &ndash; (non-zero integer-part) (decimal-separator) (zero fractional)
+%   &ndash; (zero integer-part) (decimal-separator) (non-zero fractional)
+%
+% The following notations are also excluded, but since they violate
+%  well-formedness:
+%   &ndash; (non-zero integer-part) (non-zero fractional)
+%   &ndash; (decimal-separator)</p>

<p> gv_numeral(N) &mdash;>
&ndash;  {nonvar(N)},
&ndash;  {number_sign_parts(N, Sign, Abs)},
&ndash;  ({Sign =:= -1} &ndash;> <code>-</code> ; ``),
&ndash;  gv_numeral_abs(Abs).
+  {var(N)}, !,
+  sign(Sign),
+  (   &ldquo;.&rdquo;,
+      &lsquo;+&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)]),
+      {IntegerPart = 0}
+  ;   &lsquo;+&rsquo;(decimal_digit, IntegerPart, [convert1(weights_decimal)]),
+      (   &ldquo;.&rdquo;,
+          &lsquo;*&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)])
+      ;   {Fractional = 0}
+      )
+  ),
+  {   number_integer_parts(UnsignedN, IntegerPart, Fractional),
+      N is copysign(UnsignedN, Sign)
+  }.
 gv_numeral(N) &mdash;>
&ndash;  {var(N)},
&ndash;  &lsquo;sign?&rsquo;(Sign),
&ndash;  gv_numeral_abs(Abs),</p>

<h2>&ndash;  {number_sign_parts(N, Sign, Abs)}.</h2>

<p>&ndash;
-gv_numeral_abs(N) &mdash;>
&ndash;  {nonvar(N)},
&ndash;  {number_integer_parts(N, N1, N2)},
&ndash;  (
&ndash;    {N2 =:= 0}
&ndash;  &ndash;>
&ndash;    integer(N1)
&ndash;  ;
&ndash;    {N1 =:= 0}
&ndash;  &ndash;>
&ndash;    <code>.</code>,
&ndash;    integer(N2)
&ndash;  ;
&ndash;    integer(N1),
&ndash;    &lsquo;?&rsquo;((<code>.</code>, &lsquo;integer?&rsquo;(N2)), [])
+  {number_sign_parts(N, Sign, UnsignedN)},
+  sign(Sign),
+  {number_integer_parts(UnsignedN, IntegerPart, Fractional)},
+  (   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part
+      %     and do not write the decimal separator.
+      {Fractional =:= 0}
+  &ndash;>  integer(IntegerPart)
+  ;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,
+      %     preceded by the decimal separator.
+      {IntegerPart =:= 0}
+  &ndash;>  &ldquo;.&rdquo;,
+      integer(Fractional)
+  ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
+      %     so write both of them, with the decimal separator in-between.
+      integer(IntegerPart),
+      &ldquo;.&rdquo;,
+      integer(Fractional)
   ).
-gv_numeral_abs(N) &mdash;>
&ndash;  {var(N)},
&ndash;  (
&ndash;    <code>.</code>,
&ndash;    integer(N2)
&ndash;  &ndash;>
&ndash;    {N1 = 0}
&ndash;  ;
&ndash;    integer(N1),
&ndash;    (
&ndash;      <code>.</code>
&ndash;    &ndash;>
&ndash;      &lsquo;integer?&rsquo;(N2)
&ndash;    ;
&ndash;      {N2 = 0}
&ndash;    )
&ndash;  ),</p>

<h2>&ndash;  {number_integer_parts(N, N1, N2)}.</h2>

<p>diff &mdash;git a/load.pl b/load.pl
index 4b117d1..5cec32c 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -1,12 +1,14 @@
&ndash;% Load file for plGraphViz.
+% Load file for the plGraphViz library.</p>

<p>&ndash;:&ndash; dynamic(user:prolog/3).
&ndash;:&ndash; multifile(user:prolog/3).
&ndash;   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;, plGraphViz).
+:&ndash; dynamic(user:project/2).
+:&ndash; multifile(user:project/2).
+   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;).</p>

<p> :&ndash; use_module(load_project).
&ndash;:&ndash; load_project(plGraphViz, [
+:&ndash; load_project([</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plHtml</li>
<li> plDcg,</li>
<li> plHtml,</li>
<li> plUri
]).</li>
</ul>


<p>diff &mdash;git a/plDcg b/plDcg
new file mode 160000
index 0000000..ad6c88a
&mdash;&ndash; /dev/null
+++ b/plDcg
@@ -0,0 +1 @@
+Subproject commit ad6c88a86234c50ffb31bdbfd50edf5709654f75
diff &mdash;git a/plHtml b/plHtml
index 18e657b..f96e87b 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 18e657b22a84d5e98a317ddec58314964ff68bcd
+Subproject commit f96e87bb4e4fa525f5e84814914834625ac9f715
diff &mdash;git a/plUri b/plUri
new file mode 160000
index 0000000..ec0a88e
&mdash;&ndash; /dev/null
+++ b/plUri
@@ -0,0 +1 @@
+Subproject commit ec0a88e1040ea624b09904f9a76c258775e98bff
diff &mdash;git a/run.pl b/run.pl
new file mode 100644
index 0000000..8bba736
&mdash;&ndash; /dev/null
+++ b/run.pl
@@ -0,0 +1,9 @@
+% Standalone execution of the plGraphViz library.
+
+:&ndash; if(current_prolog_flag(argv, [&lsquo;&mdash;debug&rsquo;|_])).
+  :&ndash; ensure_loaded(debug).
+:&ndash; else.
+  :&ndash; set_prolog_flag(verbose, silent).
+  :&ndash; ensure_loaded(load).
+:&ndash; endif.
+</p>

<p>```</p>

<h2 id="55"> 55: 正在比较变动前 dbc602d 和变动后 a2456df </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index c48817c..0510f98 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -22,6 +22,7 @@
 :&ndash; use_module(library(xpath)).</p>

<p> :&ndash; use_module(generics(db_ext)).
+:&ndash; use_module(generics(persistent_db_ext)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(file_gnu)).</p>

<p>@@ -121,9 +122,7 @@ gv_color_file(File):&ndash;</p>

<p> gv_color_init:&ndash;
   gv_color_file(File),
&ndash;  safe_db_attach(File),
&ndash;  file_age(File, Age),
&ndash;  gv_color_update(Age).
+  persistent_db_init(File, gv_color_update).</p>

<p> %! gv_color_update(+Age:float) is det.
diff &mdash;git a/plHtml b/plHtml
index f96e87b..c98f740 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit f96e87bb4e4fa525f5e84814914834625ac9f715
+Subproject commit c98f740d593fff74bfa3cf3d08af13c857daa899</p>

<p>```</p>

<h2 id="56"> 56: 正在比较变动前 a2456df 和变动后 20c6017 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index c115372..d36fa59 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -61,7 +61,7 @@ gv_numeral(N) &mdash;>
   }.
 gv_numeral(N) &mdash;>
   {number_sign_parts(N, Sign, UnsignedN)},
&ndash;  sign(Sign),
+  sign_negative(Sign),
   {number_integer_parts(UnsignedN, IntegerPart, Fractional)},
   (   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part</p>

<pre><code>   %     and do not write the decimal separator.
</code></pre>

<p>```</p>

<h2 id="57"> 57: 正在比较变动前 20c6017 和变动后 f694d77 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 2774ee9..58f43f0 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 2774ee9cba6ac2353150322c744e65857634e575
+Subproject commit 58f43f0e2fca088206582a18b868fe85a7603432
diff &mdash;git a/plDcg b/plDcg
index ad6c88a..c61080f 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit ad6c88a86234c50ffb31bdbfd50edf5709654f75
+Subproject commit c61080f3d8df6ba6d48b0d70f5ba52047c8cbd29
diff &mdash;git a/plUri b/plUri
index ec0a88e..66a7652 160000
&mdash;&ndash; a/plUri
+++ b/plUri
@@ -1 +1 @@
-Subproject commit ec0a88e1040ea624b09904f9a76c258775e98bff
+Subproject commit 66a7652bc1ab6a4dc1fc790b09894d6c51d42dcf</p>

<p>```</p>

<h2 id="58"> 58: 正在比较变动前 f694d77 和变动后 af5d96d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 58f43f0..1b264ab 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 58f43f0e2fca088206582a18b868fe85a7603432
+Subproject commit 1b264ab8b668b44035c96f320f8798f7940ad2fa
diff &mdash;git a/README.md b/README.md
index 3c9e9cf..f89c694 100644
&mdash;&ndash; a/README.md
+++ b/README.md
@@ -1,8 +1,113 @@
 plGraphViz
 ==========</p>

<p>-Export graphs represented as Prolog terms to
+Easily export graphs represented as Prolog terms to
  <a href="http://www.graphviz.org/">GraphViz</a>.</p>

<p>-Author: <a href="http://www.wouterbeek.com">Wouter Beek</a>
+### Example
+
+<del>prolog
+$ swipl run.pl
+?&ndash; use_module(plGraphViz(gv_file)).
+?&ndash; graph_to_gv_file(
+     graph([vertex(1,[]),vertex(2,[])],[edge(1,2,[])],[]),
+     File,
+     [method(sfdp),output(png)]
+   ).
+   File = &lsquo;PATH/plGraphViz/data/tmp.png&rsquo;
+</del>
+
+The graphic can be saved to a different file by instantiating
+ the <code>File</code> argument.
+
+<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example1.png" title="Example graph." alt="" />
+
+&mdash;&ndash;
+
+### Method option
+
+Option <code>method(+atom)</code> sets the drawing method that is used by GraphViz
+ to place the vertices and edges.
+The following values are supported.
+
+| <strong>Value</strong>       | <strong>Description</strong>         |
+| <code>circo</code>         | Circular layout.        |
+| <code>dot</code> (default) | Directed graph.         |
+| <code>fdp</code>           | Undirected graph.       |
+| <code>neato</code>         | Undirected graph.       |
+| <code>osage</code>         | Tree map.               |
+| <code>sfdp</code>          | Large undirected graph. |
+| <code>twopi</code>         | Radical layouts.        |
+
+&mdash;&ndash;
+
+### Output type option
+
+Option <code>output(+atom)</code> sets the type of file the graph is written to.
+The following values are supported.
+
+| <strong>Value</strong>             | <strong>Description</strong>                       |
+|:&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;:|:&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;|
+| <code>bmp</code>                 | Windows Bitmap Format                 |
+| <code>canon</code>               |                                       |
+| <code>dot</code>                 |                                       |
+| <code>gv</code>,  <code>xdot</code>, <code>xdot1.2</code>, <code>xdot1.4</code> | DOT                     |
+| <code>cgimage</code>             | CGImage bitmap format                 |
+| <code>cmap</code>                | Client-side imagemap (deprecated)     |
+| <code>eps</code>                 | Encapsulated PostScript               |
+| <code>exr</code>                 | OpenEXR                               |
+| <code>fig</code>                 |                                       |
+| <code>gd</code>, <code>gd2</code>           | GD/GD2 formats                        |
+| <code>gif</code>                 |                                       |
+| <code>gtk</code>                 | GTK canvas                            |
+| <code>ico</code>                 | Icon Image File Format                |
+| <code>imap</code>                |                                       |
+| <code>cmapx</code>               | Server-side and client-side imagemaps |
+| <code>imap_np</code>, <code>cmapx_np</code> | Server-side and client-side imagemaps |
+| <code>ismap</code>               | Server-side imagemap (deprecated)     |
+| <code>jp2</code>                 | JPEG 2000                             |
+| <code>jpg</code>, <code>jpeg</code>, <code>jpe</code>  | JPEG                                  |
+| <code>pct</code>, <code>pict</code>         | PICT                                  |
+| <code>pdf</code> (default)       | Portable Document Format (PDF)        |
+| <code>pic</code>                 | Kernighan&rsquo;s PIC graphics language     |
+| <code>plain</code>, <code>plain-ext</code>  | Simple text format                    |
+| <code>png</code>                 | Portable Network Graphics format      |
+| <code>pov</code>                 | POV-Ray markup language (prototype)   |
+| <code>ps</code>                  | PostScript                            |
+| <code>ps2</code>                 | PostScript for PDF                    |
+| <code>psd</code>                 | PSD                                   |
+| <code>sgi</code>                 | SGI                                   |
+| <code>svg</code>, <code>svgz</code>         | Scalable Vector Graphics              |
+| <code>tga</code>                 | Truevision TGA                        |
+| <code>tif</code>, <code>tiff</code>         | TIFF (Tag Image File Format)          |
+| <code>tk</code>                  | TK graphics                           |
+| <code>vml</code>, <code>vmlz</code>         | Vector Markup Language (VML)          |
+| <code>vrml</code>                | VRML                                  |
+| <code>wbmp</code>                | Wireless BitMap format                |
+| <code>webp</code>                | Image format for the Web              |
+| <code>xlib</code>, <code>x11</code>         | Xlib canvas                           |
+
+&mdash;&ndash;
+
+### HTML-like labels
+
+Example of using HTML-like labels:
+
+<del>prolog
+graph_to_gv_file(
+  graph(
+    [vertex(1,[]),vertex(2,[label=html(table([tr([td(a),td(b)]),tr([td&copy;,td(d)])]))])],
+    [edge(1,2,[label=&lsquo;From 1 to 2.&rsquo;])],
+    []
+  ),
+  File,
+  []
+).
+</del>
+
+<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example2.png" title="Example graph with HTML-like labels." alt="" />
+
+&mdash;&ndash;
+
+Developed during 2013-2014 by <a href="http://www.wouterbeek.com">Wouter Beek</a>.</p>

<p>diff &mdash;git a/example1.png b/example1.png
new file mode 100644
index 0000000..31e7ba6
Binary files /dev/null and b/example1.png differ
diff &mdash;git a/example2.png b/example2.png
new file mode 100644
index 0000000..6e44b16
Binary files /dev/null and b/example2.png differ
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 30761bb..3237b4b 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -54,11 +54,14 @@
 :&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_quote)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>+
+
 %! gv_attr_type(?Type:atom) is nondet.</p>

<p> gv_attr_type(addDouble).
@@ -95,6 +98,7 @@ gv_attr_type(style).
 gv_attr_type(viewPort).</p>

<p>+
 %! addDouble(+Float:float)// .
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p>@@ -103,6 +107,7 @@ addDouble(Float) &mdash;>
   double(Float).</p>

<p>+
 %! addPoint(+Point:compound)// .
 % An <em>addPoint</em> is represented by a compound of the following form:
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.
@@ -112,6 +117,7 @@ addPoint(Point) &mdash;>
   point(Point).</p>

<p>+
 %! arrowType(+ArrowType:atom)// .</p>

<p> arrowType(V) &mdash;>
@@ -149,12 +155,16 @@ backwards_compatible(invempty).
 backwards_compatible(open).</p>

<p>+
+%! bool(+Value:boolean)// .
+
 bool(false) &mdash;> &ldquo;false&rdquo;.
 bool(false) &mdash;> &ldquo;no&rdquo;.
 bool(true) &mdash;> &ldquo;true&rdquo;.
 bool(true) &mdash;> &ldquo;yes&rdquo;.</p>

<p>+
 %! clusterMode(+ClusterMode:atom)// .</p>

<p> clusterMode(V) &mdash;>
@@ -166,6 +176,7 @@ clusterMode(local).
 clusterMode(none).</p>

<p>+
 %! dirType(+DirectionType:oneof([back,both,forward,none]))// .</p>

<p> dirType(DirType) &mdash;>
@@ -178,44 +189,57 @@ dirType(forward).
 dirType(none).</p>

<p>+
+%! double(+Double:float)// .
+
 double(Double1) &mdash;>
   % float//1 will check for float type.
   {Double2 is Double1 * 1.0},
   float(Double2).</p>

<p>-doubleList([H|T]) &mdash;>
&ndash;  double(H),
&ndash;  &lsquo;*&rsquo;(doubleList1, T, []).</p>

<p>-doubleList1(Float) &mdash;>
&ndash;  &ldquo;:&rdquo;,
&ndash;  double(Float).
+%! doubleList(+Doubles:list(float))// .
+
+doubleList(L) &mdash;>
+  &lsquo;+&rsquo;(double, L, [separator(colon)]).
+</p>

<p> %! escString(+String:atom)// .
 % @tbd Support for context-dependent replacements.</p>

<p> escString(String) &mdash;>
&ndash;  atom(String).
+  quoted(atom(String)).
+</p>

<p> % @tbd layerList</p>

<p>+
 % @tbd layerRange</p>

<p>+
+%! lblString(+String:compound)// .
+
+lblString(html(V)) &mdash;>
+  gv_html_like_label(V).
 lblString(V) &mdash;>
   escString(V).
-lblString(V) &mdash;>
&ndash;  gv_html_like_label(V).</p>

<p>+
+%! int(+Integer:integer)// .
+
 int(V) &mdash;>
   integer(V).</p>

<p>+
+%! outputMode(+OutputMode:atom)// .
+
 outputMode(V) &mdash;>
   {outputMode(V)},
   atom(V).
@@ -225,9 +249,13 @@ outputMode(edgesfirst).
 outputMode(nodesfirst).</p>

<p>+
 % @tbd packMode</p>

<p>+
+%! pagedir(+PageDirection:atom)// .
+
 pagedir(V) &mdash;>
   {pagedir(V)},
   atom(V).
@@ -242,6 +270,7 @@ pagedir(&lsquo;TL&rsquo;).
 pagedir(&lsquo;TR&rsquo;).</p>

<p>+
 %! point(+Point:compound)// .
 % A <em>point</em> is represented by a compound of the following form:
 % <code>point(X:float,Y:float,Changeable:boolean)</code>.
@@ -256,13 +285,20 @@ input_changeable(false) &mdash;> &ldquo;&rdquo;.
 input_changeable(true) &mdash;> &ldquo;!&rdquo;.</p>

<p>+
+%! pointList(+Points:list(compound))// .
+
 pointList(Points) &mdash;>
   &lsquo;*&rsquo;(point, Points, []).</p>

<p>+
 % @tbd portPos</p>

<p>+
+%! quadType(+QuadType:atom)// .
+
 quadType(V) &mdash;>
   {quadType(V)},
   atom(V).
@@ -272,6 +308,9 @@ quadType(none).
 quadType(normal).</p>

<p>+
+%! rankType(+RankType:atom)// .
+
 rankType(V) &mdash;>
   {rankType(V)},
   atom(V).
@@ -283,6 +322,9 @@ rankType(sink).
 rankType(source).</p>

<p>+
+%! rankdir(+RankDirection:atom)// .
+
 rankdir(V) &mdash;>
   {rankdir(V)},
   atom(V).
@@ -293,6 +335,9 @@ rankdir(&lsquo;RL&rsquo;).
 rankdir(&lsquo;TB&rsquo;).</p>

<p>+
+%! rect(+Rectangle:compound)// .
+
 rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
   float(LowerLeftX), &ldquo;,&rdquo;,
   float(LowerLeftY), &ldquo;,&rdquo;,
@@ -300,6 +345,9 @@ rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
   float(UpperRightY).</p>

<p>+
+%! shape(+Shape:atom)// .
+
 shape(V) &mdash;>
   {polygon_based_shape(V)},
   atom(V).
@@ -361,6 +409,9 @@ polygon_based_shape(tripleoctagon).
 polygon_based_shape(utr).</p>

<p>+
+%! smoothType(+SmoothType:atom)// .
+
 smoothType(V) &mdash;>
   {smoothType(V)},
   atom(V).
@@ -374,19 +425,23 @@ smoothType(spring).
 smoothType(triangle).</p>

<p>+
 % @tbd splineType</p>

<p>+
 % @tbd startType</p>

<p>&ndash;%! string(?Content:atom)// .
+
+%! string(?String:atom)// .
 % A GraphViz string.</p>

<p> string(Content) &mdash;>
   atom(Content).</p>

<p>+
 %! style(?Context:oneof([cluster,edge,node]), ?Style:atom) is nondet.</p>

<p> style(Context, Style) &mdash;>
@@ -415,4 +470,5 @@ style(node, striped).
 style(node, wedged).</p>

<p>+
 % @tbd viewPort
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 649ef9c..e3ba03c 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -1,9 +1,8 @@
 :&ndash; module(
   gv_attrs,
   [
&ndash;    gv_attr/3 % +Context:oneof([cluster,edge,graph,node,subgraph])
&ndash;              % +Attribute1:nvpair
&ndash;              % -Attribute2:nvpair
+    gv_attr_value//2 % +Context:oneof([cluster,edge,graph,node,subgraph])
+               % +Attribute:nvpair
   ]
 ).</p>

<p>@@ -25,6 +24,7 @@ Support for GraphViz attributes.</p>

<p> :&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_meta)).
 :&ndash; use_module(plDcg(dcg_generics)).</p>

<p> :&ndash; use_module(plHtml(html)).
@@ -58,32 +58,45 @@ Support for GraphViz attributes.</p>

<p>&ndash;%! gv_attr(
+
+
+%! gv_attr_value(
 %!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +Attribute1:nvpair,
&ndash;%!   +Attribute2:nvpair
&ndash;%! ) is det.
+%!   +Attribute:nvpair
+%! )// is det.
 % Uses the default value in case Value is uninstantiated.
 % Otherwise, performs a typecheck and converts the given value.</p>

<p>-gv_attr(Context, N=V, N=V):&ndash;
&ndash;  var(V), !,
&ndash;  gv_attr(N, UsedBy, <em>, V, </em>, <em>),
&ndash;  % Check validity of context.
&ndash;  memberchk(Context, UsedBy).
-gv_attr(Context, N=V1, N=V2):&ndash;
&ndash;  gv_attr(N, UsedBy, Types, </em>, Minimum, <em>),
&ndash;  % Check validity of context.
&ndash;  memberchk(Context, UsedBy),
&ndash;  % Check validity of value type.
&ndash;  member(Type, Types),
&ndash;  (   Type == style
&ndash;  &ndash;>  Dcg =.. [Type,Context,V1]
&ndash;  ;   Dcg =.. [Type,V1]
&ndash;  ),
&ndash;  once(dcg_phrase(Dcg, V2)),
&ndash;  % Check validity of Value w.r.t. minimum value &mdash; if available.
&ndash;  check_minimum(V1, Minimum).
+% Use the default if no value is given.
+gv_attr_value(Context, Name=Value) &mdash;>
+  {
+    var(Value), !,
+    gv_attr(Name, UsedBy, </em>, DefaultValue, <em>, </em>),
+    % Check validity of context.
+    memberchk(Context, UsedBy)
+  },
+  gv_attr_value(Context, Name=DefaultValue).
+gv_attr_value(Context, Name=Value) &mdash;>
+  {
+    % Check the validity of the context argument.
+    gv_attr(Name, UsedBy, Types, <em>, Minimum, </em>),
+    memberchk(Context, UsedBy),
+  <br/>
+    %  Pick a value type non-deterministically.
+    member(Type, Types),
+  <br/>
+    % The <code>style</code> type is the only one that requires the context argument.
+    (   Type == style
+    &ndash;>  Dcg =.. [Type,Context]
+    ;   Dcg =.. [Type]
+    ),
+  <br/>
+    % Check validity of Value w.r.t. minimum value &mdash; if available.
+    check_minimum(Value, Minimum)
+  },
+  dcg_call(Dcg, Value).
+
+</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index e67c469..6db4451 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -13,9 +13,16 @@ Methods for writing to the GraphViz DOT format.</p>

<p> In GraphViz vertices are called &lsquo;nodes&rsquo;.</p>

<p>+<del>abnf
+attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
+a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
+</del>
+
+&mdash;&ndash;
+
 @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06
+@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -37,28 +44,21 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.</p>

<p>&ndash;%! gv_attribute(+Attribute:nvpair)// is det.
&ndash;% A single GraphViz attribute.
&ndash;% We assume that the attribute has already been validated.</p>

<p>-gv_attribute(Name=Val) &mdash;>
&ndash;  gv_id(Name), &ldquo;=&rdquo;, gv_id(Val), &ldquo;;&rdquo;.</p>

<p>+%! gv_attr(
+%!   +Context:oneof([edge,graph,node]),
+%!   +Attribute:nvpair
+%! )// is det.
+% A single GraphViz attribute.
+% We assume that the attribute has already been validated.</p>

<p>&ndash;%! gv_attribute_list(
&ndash;%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +GraphAttributes:list(nvpair),
&ndash;%!   +Attributes:list(nvpair)
&ndash;%! )// .
&ndash;% <code>abnf
-% attr_list = "[" [a_list] "]" [attr_list]
-% a_list = ID "=" ID [","] [a_list]
-%</code>
+gv_attr(Context, Name=Value) &mdash;>
+  gv_id(Name),
+  &ldquo;=&rdquo;,
+  gv_attr_value(Context, Name=Value),
+  &ldquo;;&rdquo;.</p>

<p>&ndash;% Attributes occur between square brackets.
-gv_attribute_list(Context, _, Attrs1) &mdash;>
&ndash;  {maplist(gv_attr(Context), Attrs1, Attrs2)},
&ndash;  bracketed(square, &lsquo;*&rsquo;(gv_attribute, Attrs2, [])).</p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
@@ -78,6 +78,7 @@ gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
 gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.</p>

<p>+
 %! gv_edge_operator(+Directed:boolean)// .
 % The binary edge operator between two vertices.
 % The operator that is used depends on whether the graph is directed or
@@ -90,10 +91,10 @@ gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
 gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p>+
 %! gv_edge_statement(
 %!   +Indent:nonneg,
 %!   +Directed:boolean,
&ndash;%!   +GraphAttributes:list(nvpair),
 %!   +EdgeTerm:compound
 %! )// is det.
 % A GraphViz statement describing an edge.
@@ -108,7 +109,7 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).
 %      at the from and/or to location.
 % @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</p>

<p>-gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
+gv_edge_statement(I, Directed, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
   gv_node_id(FromId), &ldquo; &rdquo;,</p>

<p>@@ -118,14 +119,14 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;></p>

<p>   % We want <code>colorscheme/1</code> from the edges and
   % <code>directionality/1</code> from the graph.
&ndash;  gv_attribute_list(edge, GAttrs, EAttrs),
+  bracketed(square, &lsquo;*&rsquo;(gv_attr(edge), EAttrs, [])),
   line_feed.</p>

<p>+
 %! gv_generic_attributes_statement(
 %!   +Kind:oneof([edge,graph,node]),
 %!   +Indent:integer,
&ndash;%!   +GraphAttributes:list(nvpair),
 %!   +CategoryAttributes:list(nvpair)
 %! )//
 % A GraphViz statement describing generic attributes for a category of items.
@@ -140,11 +141,13 @@ gv_edge_statement(I, Directed, GAttrs, edge(FromId,ToId,EAttrs)) &mdash;>
 % attr_stmt = (graph / node / edge) attr_list
 % ```</p>

<p>-gv_generic_attributes_statement(<em>, </em>, <em>, []) &mdash;> [], !.
-gv_generic_attributes_statement(Kind, I, GraphAttrs, KindAttrs) &mdash;>
+gv_generic_attributes_statement(</em>, _, []) &mdash;> [], !.
+gv_generic_attributes_statement(Kind, I, KindAttrs) &mdash;>
   indent(I),
   gv_kind(Kind), &ldquo; &rdquo;,
&ndash;  gv_attribute_list(Kind, GraphAttrs, KindAttrs), line_feed.
+  bracketed(square, &lsquo;*&rsquo;(gv_attr(Kind), KindAttrs, [])),
+  line_feed.
+</p>

<p> %! gv_graph(+Gif:compound)//
@@ -224,13 +227,13 @@ gv_graph0(
   {NewI is I + 1},</p>

<p>   % Attributes that apply to the graph as a whole.
&ndash;  gv_generic_attributes_statement(graph, NewI, GAttrs, GAttrs),
+  gv_generic_attributes_statement(graph, NewI, GAttrs),</p>

<p>   % Attributes that are the same for all nodes.
&ndash;  gv_generic_attributes_statement(node, NewI, GAttrs, SharedVAttrs),
+  gv_generic_attributes_statement(node, NewI, SharedVAttrs),</p>

<p>   % Attributes that are the same for all edges.
&ndash;  gv_generic_attributes_statement(edge, NewI, GAttrs, SharedEAttrs),
+  gv_generic_attributes_statement(edge, NewI, SharedEAttrs),</p>

<p>   % Only add a line_feed if some content was already written
   % and some content is about to be written.
@@ -249,19 +252,19 @@ gv_graph0(
   ),</p>

<p>   % The list of GraphViz nodes.
&ndash;  &lsquo;<em>&rsquo;(gv_node_statement(NewI, GAttrs), NewVTerms, []),
+  &lsquo;</em>&rsquo;(gv_node_statement(NewI), NewVTerms, []),
   ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
&ndash;  &lsquo;<em>&rsquo;(gv_ranked_node_collection(NewI, GAttrs), RankedVTerms, []),
+  &lsquo;</em>&rsquo;(gv_ranked_node_collection(NewI), RankedVTerms, []),
   ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</p>

<p>   {</p>

<pre><code> findall(
   edge(FromId,ToId,[]),
   (
</code></pre>

<ul>
<li><pre><code> nth0(Index1, RankedVTerms, rank(vertex(FromId,_,_),_)),
</code></pre></li>
<li><pre><code> nth0(Index2, RankedVTerms, rank(vertex(ToId,_,_),_)),
</code></pre></li>
<li><pre><code> nth0(Index1, RankedVTerms, rank(vertex(FromId,_),_)),
</code></pre></li>
<li><pre><code> nth0(Index2, RankedVTerms, rank(vertex(ToId,_),_)),
 % We assume that the rank vertices are nicely ordered.
 succ(Index1, Index2)
</code></pre>

<p>   ),
@@ -270,10 +273,10 @@ gv_graph0(
},</p></li>
</ul>


<p>   % The rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), RankEdges, []),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directed), RankEdges, []),</p>

<p>   % The non-rank edges.
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(NewI, Directed, GAttrs), NewETerms, []),
+  &lsquo;</em>&rsquo;(gv_edge_statement(NewI, Directed), NewETerms, []),</p>

<p>   % Note that we do not include a line_feed here.</p>

<p>@@ -281,6 +284,7 @@ gv_graph0(
   indent(I).</p>

<p>+
 %! gv_graph_type(+Directed:boolean)// .
 % The type of graph that is represented.</p>

<p>@@ -288,6 +292,7 @@ gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
 gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.</p>

<p>+
 %! gv_id(?Atom:atom)// is det.
 % Parse a GraphViz identifier.
 % There are 4 variants:
@@ -347,6 +352,7 @@ gv_id_rest([H|T]) &mdash;>
   gv_id_rest(T).</p>

<p>+
 %! gv_keyword(+Codes:list(code)) is semidet.
 % Succeeds if the given codes for a GraphViz reserved keyword.</p>

<p>@@ -367,6 +373,7 @@ gv_keyword &mdash;> &ldquo;strict&rdquo;.
 gv_keyword &mdash;> &ldquo;subgraph&rdquo;.</p>

<p>+
 %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p> gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
@@ -374,6 +381,7 @@ gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
 gv_kind(node) &mdash;> &ldquo;node&rdquo;.</p>

<p>+
 %! gv_node_id(+NodeId:atom)// .
 % GraphViz node identifiers can be of the following two types:
 %   1. A GraphViz identifier, see gv_id//1.
@@ -389,17 +397,16 @@ gv_node_id(Id) &mdash;>
 %  gv_port.</p>

<p>&ndash;%! gv_node_statement(
&ndash;%!   +Indent:integer,
&ndash;%!   +GraphAttributes,
&ndash;%!   +VertexTerm:compound
&ndash;%! )// .
+
+%! gv_node_statement(+Indent:nonneg, +VertexTerm:compound)// .
 % A GraphViz statement describing a vertex (GraphViz calls vertices &lsquo;nodes&rsquo;).</p>

<p>-gv_node_statement(I, GraphAttrs, vertex(Id,_,VAttrs)) &mdash;>
+gv_node_statement(I, vertex(Id,VAttrs)) &mdash;>
   indent(I),
   gv_node_id(Id), &ldquo; &rdquo;,
&ndash;  gv_attribute_list(node, GraphAttrs, VAttrs), line_feed.
+  bracketed(square, &lsquo;*&rsquo;(gv_attr(node), VAttrs, [])),
+  line_feed.
+</p>

<p> gv_port &mdash;>
@@ -431,6 +438,7 @@ gv_port_location &mdash;>
   ).</p>

<p>+
 gv_quoted_string([]) &mdash;> [].
 % Just to be sure, we do not allow the double quote
 % that closes the string to be escaped.
@@ -450,21 +458,22 @@ gv_quoted_string([H|T]) &mdash;>
   gv_quoted_string(T).</p>

<p>-gv_ranked_node_collection(
&ndash;  I,
&ndash;  GraphAttrs,
&ndash;  rank(Rank_V_Term,Content_V_Terms)
&ndash;) &mdash;>
+
+gv_ranked_node_collection(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
   indent(I),
   bracketed(curly, (</p>

<pre><code> line_feed,

 % The rank attribute.
 {NewI is I + 1},
</code></pre>

<ul>
<li> indent(NewI), gv_attribute(rank=same), &ldquo;;&rdquo;, line_feed,</li>
<li> indent(NewI),</li>
<li> gv_attr(subgraph, rank=same),</li>
<li> &ldquo;;&rdquo;,</li>
<li><p> line_feed,</p></li>
<li><p> % Vertice statements.
 &lsquo;*&rsquo;(</p></li>
<li>   gv_node_statement(NewI, GraphAttrs),</li>
<li>   gv_node_statement(NewI),
   [Rank_V_Term|Content_V_Terms],
   []
 ),
@@ -475,6 +484,7 @@ gv_ranked_node_collection(
line_feed.</li>
</ul>


<p>+
 %! gv_strict(+Strict:boolean)// is det.
 % The keyword denoting that the graph is strict, i.e., has no self-arcs and
 % no multi-edges.
@@ -485,7 +495,9 @@ gv_strict(true) &mdash;> &ldquo;strict &rdquo;.</p>

<p>&ndash;% Helpers
+
+
+% HELPERS</p>

<p> add_default_nvpair(Attrs1, N, Default, Attrs2):&ndash;
   add_default_nvpair(Attrs1, N, Default, _, Attrs2).
@@ -508,12 +520,15 @@ extract_shared(Argss, Shared):&ndash;
 remove_shared_attributes(Shared, Args1, Args2):&ndash;
   ord_subtract(Args1, Shared, Args2).</p>

<p>-shared_attributes(Terms1, Shared, Terms2):&ndash;
&ndash;  maplist(term_components(Func), Terms1, Args1, Args2, Args3a),
&ndash;  extract_shared(Args3a, Shared),
&ndash;  maplist(remove_shared_attributes(Shared), Args3a, Args3b),
&ndash;  maplist(term_components(Func), Terms2, Args1, Args2, Args3b).
+shared_attributes(Terms1, SharedAs, Terms2):&ndash;
+  maplist(term_to_attrs, Terms1, As1),
+  extract_shared(As1, SharedAs),
+  maplist(remove_shared_attributes(SharedAs), As1, As2),
+  maplist(term_change_attrs, Terms1, As2, Terms2).
+
+term_change_attrs(edge(From,To,<em>), A, edge(From,To,A)).
+term_change_attrs(vertex(Id,</em>), A, vertex(Id,A)).</p>

<p>-term_components(Func, Term, Arg1, Arg2, Arg3):&ndash;
&ndash;  Term =.. [Func,Arg1,Arg2,Arg3].
+term_to_attrs(edge(<em>,</em>,A), A).
+term_to_attrs(vertex(_,A), A).</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 704e2d4..a7901e4 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -1,14 +1,14 @@
 :&ndash; module(
   gv_file,
   [
&ndash;    file_to_gv/2, % +File:atom
+    file_to_gv/2, % +InputFile:atom</p>

<pre><code>               % +Options:list(nvpair)
</code></pre>

<ul>
<li> file_to_gv/3, % +FromFile:atom</li>
<li><pre><code>           % ?ToFile:atom
</code></pre></li>
<li> file_to_gv/3, % +InputFile:atom</li>
<li><pre><code>           % ?OutputFile:atom
           % +Options:list(nvpair)
</code></pre></li>
<li> gif_to_gv_file/3, % +GraphInterchangeFormat:compound</li>
<li><pre><code>               % ?ToFile:atom
</code></pre></li>
<li><pre><code>               % +Options:list(nvpair)
</code></pre></li>
<li> graph_to_gv_file/3, % +Graph:compound</li>
<li><pre><code>                 % ?OutputFile:atom
</code></pre></li>
<li><pre><code>                 % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -35,44 +35,6 @@ and GraphViz output files or SVG DOM structures.</p></li>
</ul>


<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>&ndash;:&ndash; dynamic(user:file_type_program/2).</p>

<h2>&ndash;:&ndash; multifile(user:file_type_program/2).</h2>

<p>&ndash;:&ndash; dynamic(user:module_uses/2).</p>

<h2>&ndash;:&ndash; multifile(user:module_uses/2).</h2>

<p>&ndash;:&ndash; dynamic(user:prolog_file_type/2).</p>

<h2>&ndash;:&ndash; multifile(user:prolog_file_type/2).</h2>

<p>&ndash;% Register DOT.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(dot, dot)).
&ndash;:&ndash; db_add_novel(user:prolog_file_type(dot, graphviz)).
&ndash;:&ndash; db_add_novel(user:file_type_program(dot, dotty)).
&ndash;:&ndash; db_add_novel(user:file_type_program(dot, dotx)).</p>

<h2>&ndash;:&ndash; db_add_novel(user:module_uses(gv_file, file_type(dot))).</h2>

<p>&ndash;% Register JPG/JPEG.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpeg, jpeg)).
&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpeg, graphviz_output)).
&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpg, jpeg)).</p>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(jpg, graphviz_output)).</h2>

<p>&ndash;% Register PDF.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(pdf, pdf)).</p>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(pdf, graphviz_output)).</h2>

<p>&ndash;% Register PNG.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(png, png)).</p>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(png, graphviz_output)).</h2>

<p>&ndash;% Register SVG.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(svg, graphviz_output)).</p>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(svg, svg)).</h2>

<p>&ndash;% Register XDOT.
&ndash;:&ndash; db_add_novel(user:prolog_file_type(xdot, graphviz_output)).</p>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(xdot, xdot)).</h2>

<p> :&ndash; predicate_options(codes_to_gv_file/3, 3, [</p>

<pre><code>  pass_to(file_to_gv/3, 3)
]).
</code></pre>

<p>@@ -80,13 +42,13 @@ and GraphViz output files or SVG DOM structures.</p>

<pre><code>  pass_to(file_to_gv/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(file_to_gv/3, 3, [
&ndash;     method(+oneof([dot,sfdp])),
&ndash;     to_file_type(+oneof([dot,jpeg,pdf,svg,xdot]))
+     method(+atom),
+     output(+atom)</p>

<pre><code>]).
</code></pre>

<p> :&ndash; predicate_options(gif_to_svg_dom/3, 3, [
&ndash;     pass_to(gif_to_gv_file/3, 3)
+     pass_to(graph_to_gv_file/3, 3)</p>

<pre><code>]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(gif_to_gv_file/3, 3, [
+:&ndash; predicate_options(graph_to_gv_file/3, 3, [</p>

<pre><code>  pass_to(codes_to_gv_file/3, 3)
]).
</code></pre>

<p>@@ -94,81 +56,93 @@ and GraphViz output files or SVG DOM structures.</p>

<p> %! codes_to_gv_file(
 %!   +Codes:list(code),
&ndash;%!   ?ToFile:atom,
+%!   ?OutputFile:atom,
 %!   +Options:list(nvpair)
 %! ) is det.</p>

<p>-codes_to_gv_file(Codes, ToFile, Options):&ndash;
&ndash;  absolute_file_name(data(tmp), TmpFile, [access(write),file_type(dot)]),
+codes_to_gv_file(Codes, OutputFile, Options):&ndash;
+  absolute_file_name(data(tmp), TmpFile, [access(write),extensions([dot])]),
   setup_call_cleanup(</p>

<pre><code> open(TmpFile, write, Write, [encoding(utf8)]),
 put_codes(Write, Codes),
 close(Write)
</code></pre>

<p>   ),
&ndash;  file_to_gv(TmpFile, ToFile, Options).
+  file_to_gv(TmpFile, OutputFile, Options).
+</p>

<p>&ndash;%! file_to_gv(+FromFile:atom, +Options:list(nvpair)) is det.
+%! file_to_gv(+InputFile:atom, +Options:list(nvpair)) is det.</p>

<p>-file_to_gv(FromFile, Options):&ndash;
&ndash;  file_to_gv(FromFile, <em>, Options).
+file_to_gv(InputFile, Options):&ndash;
+  file_to_gv(InputFile, </em>, Options).</p>

<p>&ndash;%! file_to_gv(+FromFile:atom, ?ToFile:atom, +Options:list(nvpair)) is det.
+%! file_to_gv(
+%!   +InputFile:atom,
+%!   ?OutputFile:atom,
+%!   +Options:list(nvpair)
+%! ) is det.
 % Converts a GraphViz DOT file to an image file, using a specific
 % visualization method.</p>

<p>-file_to_gv(FromFile, ToFile, Options):&ndash;
&ndash;  option(to_file_type(dot), Options), !,
&ndash;  rename_file(FromFile, ToFile).
-file_to_gv(FromFile, ToFile, Options):&ndash;
&ndash;  % The method option.
+file_to_gv(InputFile, OutputFile, Options):&ndash;
+  option(output(dot), Options), !,
+  (   var(OutputFile)
+  &ndash;>  OutputFile = InputFile
+  ;   rename_file(InputFile, OutputFile)
+  ).
+file_to_gv(InputFile, OutputFile, Options):&ndash;
+  % Typecheck for <code>method</code> option.
   option(method(Method), Options, dot),
&ndash;  must_be(oneof([dot,sfdp]), Method),
+  findall(Method0, gv_method(Method0), Methods),
+  must_be(oneof(Methods), Method),</p>

<ul>
<li>% The file type option.</li>
<li>option(to_file_type(ToFileType), Options, pdf),</li>
<li>prolog_file_type(ToExtension, ToFileType),</li>
<li>prolog_file_type(ToExtension, graphviz_output), !,</li>
<li>% Typecheck for <code>output</code> option.</li>
<li>option(output(OutputType), Options, pdf),</li>
<li>findall(OutputType0, gv_output_type(OutputType0), OutputTypes),</li>
<li><p>must_be(oneof(OutputTypes), OutputType),</p>

<p>% The output file is either given or created.</p></li>
<li>(   var(ToFile)</li>
<li>&ndash;>  user:prolog_file_type(ToExtension, ToFileType),</li>
<li>   file_alternative(FromFile, <em>, </em>, ToExtension, ToFile)</li>
<li>;   is_absolute_file_name(ToFile),</li>
<li>(   var(OutputFile)</li>
<li>&ndash;>  file_alternative(InputFile, <em>, </em>, OutputType, OutputFile)</li>
<li>;   is_absolute_file_name(OutputFile),
    % The given output file must match a certain file extension.</li>
<li>   file_name_extension(_, ToExtension, ToFile)</li>
<li>   file_name_extension(_, OutputType, OutputFile)
),</li>
<li>% Now that we have the output file we can prevent the</li>
<li>% file type / file extension translation predicates from bakctracking.</li>
<li><p>!,</p>

<p>% Run the GraphViz conversion command in the shell.</p></li>
<li>format(atom(OutputType), &lsquo;-T~w&rsquo;, [ToExtension]),</li>
<li>format(atom(OutputTypeFlag), &lsquo;-T~a&rsquo;, [OutputType]),</li>
<li>format(atom(OutputFileFlag), &lsquo;-o~a&rsquo;, [OutputFile]),
process_create(
  path(Method),
  % @tbd Windows hack:
  %%%%&lsquo;C:\Program Files (x86)\Graphviz2.38\bin\dot.exe&rsquo;,</li>
<li> [OutputType,FromFile,&lsquo;-o&rsquo;,ToFile],</li>
<li> [OutputTypeFlag,file(InputFile),OutputFileFlag],
 [process(PID)]
),
process_wait(PID, exit(ShellStatus)),
exit_code_handler(&lsquo;GraphViz&rsquo;, ShellStatus).</li>
</ul>


<p>&ndash;%! gif_to_gv_file(+Gif:compound, ?ToFile:atom, +Options:list(nvpair)) is det.
+
+%! graph_to_gv_file(
+%!   +Graph:compound,
+%!   ?OutputFile:atom,
+%!   +Options:list(nvpair)
+%! ) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
&ndash;%   * =|method(+Method:oneof([dot,sfdp])|=
+%   * <code>method(+Method:atom</code>
 %     The algorithm used by GraphViz for positioning the tree nodes.
 %     Either =dot= (default) or =sfdp=.
&ndash;%   * =|to_file_type(+FileType:oneof([dot,jpeg,pdf,svg,xdot])|=
+%   * <code>output(+FileType:atom)</code>
 %     The file type of the generated GraphViz file.
 %     Default: <code>pdf</code>.</p>

<p>-gif_to_gv_file(Gif, ToFile, Options):&ndash;
+graph_to_gv_file(Gif, OutputFile, Options):&ndash;
   once(phrase(gv_graph(Gif), Codes)),
&ndash;  codes_to_gv_file(Codes, ToFile, Options).
+  codes_to_gv_file(Codes, OutputFile, Options).
+</p>

<p> %! open_dot(+File:atom) is det.
@@ -181,3 +155,69 @@ open_dot(File):&ndash;
   once(find_program_by_file_type(dot, Program)),
   run_program(Program, [File]).</p>

<p>+
+
+
+% HELPERS
+
+gv_method(circo).
+gv_method(dot).
+gv_method(fdp).
+gv_method(neato).
+gv_method(osage).
+gv_method(sfdp).
+gv_method(twopi).
+
+
+
+gv_output_type(bmp).
+gv_output_type(canon).
+gv_output_type(dot).
+gv_output_type(gv).
+gv_output_type(xdot).
+gv_output_type(&lsquo;xdot1.2&rsquo;).
+gv_output_type(&lsquo;xdot1.4&rsquo;).
+gv_output_type(cgimage).
+gv_output_type(cmap).
+gv_output_type(eps).
+gv_output_type(exr).
+gv_output_type(fig).
+gv_output_type(gd).
+gv_output_type(gd2).
+gv_output_type(gif).
+gv_output_type(gtk).
+gv_output_type(ico).
+gv_output_type(imap).
+gv_output_type(cmapx).
+gv_output_type(imap_np).
+gv_output_type(cmapx_np).
+gv_output_type(ismap).
+gv_output_type(jp2).
+gv_output_type(jpg).
+gv_output_type(jpeg).
+gv_output_type(jpe).
+gv_output_type(pct).
+gv_output_type(pict).
+gv_output_type(pdf).
+gv_output_type(pic).
+gv_output_type(plain).
+gv_output_type(&lsquo;plain-ext&rsquo;).
+gv_output_type(png).
+gv_output_type(pov).
+gv_output_type(ps).
+gv_output_type(ps2).
+gv_output_type(psd).
+gv_output_type(sgi).
+gv_output_type(svg).
+gv_output_type(svgz).
+gv_output_type(tga).
+gv_output_type(tif).
+gv_output_type(tiff).
+gv_output_type(tk).
+gv_output_type(vml).
+gv_output_type(vmlz).
+gv_output_type(vrml).
+gv_output_type(wbmp).
+gv_output_type(webp).
+gv_output_type(xlib).
+gv_output_type(x11).
diff &mdash;git a/gv_html.pl b/gv_html.pl
index 08306f0..9a4d33a 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -9,7 +9,7 @@</p>

<p> Grammar taken from the GraphViz Web site:</p>

<p>&ndash;```
+~~~
 label :   text</p>

<pre><code>     | table
</code></pre>

<p> text :   textitem
@@ -34,7 +34,9 @@ cells :   cell</p>

<pre><code>     | cells &lt;VR/&gt; cell
</code></pre>

<p> cell:   <TD> label </TD></p>

<pre><code>   | &lt;TD&gt; &lt;IMG/&gt; &lt;/TD&gt;
</code></pre>

<p>&ndash;```
+~~~
+
+&mdash;&ndash;</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
@@ -49,49 +51,56 @@ cell:   <TD> label </TD></p>

<p>+
+
 %! gv_html_like_label(?Content:compound)// .</p>

<p> gv_html_like_label(Content) &mdash;>
   bracketed(angular, label(Content)).</p>

<p>+
 %! cell(?Contents:compound)// .
&ndash;% Supported attributes for TD:
&ndash;% <code>
-% ALIGN="CENTER|LEFT|RIGHT|TEXT"
-% BALIGN="CENTER|LEFT|RIGHT"
-% BGCOLOR="color"
-% BORDER="value"
-% CELLPADDING="value"
-% CELLSPACING="value"
-% COLOR="color"
-% COLSPAN="value"
-% FIXEDSIZE="FALSE|TRUE"
-% GRADIENTANGLE="value"
-% HEIGHT="value"
-% HREF="value"
-% ID="value"
-% PORT="portName"
-% ROWSPAN="value"
-% SIDES="value"
-% STYLE="value"
-% TARGET="value"
-% TITLE="value"
-% TOOLTIP="value"
-% VALIGN="MIDDLE|BOTTOM|TOP"
-% WIDTH="value"
-%</code>
+% Supported attributes for <code>TD</code>:
+%   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT|TEXT"</code>
+%   &ndash; <code>BALIGN="CENTER|LEFT|RIGHT"</code>
+%   &ndash; <code>BGCOLOR="color"</code>
+%   &ndash; <code>BORDER="value"</code>
+%   &ndash; <code>CELLPADDING="value"</code>
+%   &ndash; <code>CELLSPACING="value"</code>
+%   &ndash; <code>COLOR="color"</code>
+%   &ndash; <code>COLSPAN="value"</code>
+%   &ndash; <code>FIXEDSIZE="FALSE|TRUE"</code>
+%   &ndash; <code>GRADIENTANGLE="value"</code>
+%   &ndash; <code>HEIGHT="value"</code>
+%   &ndash; <code>HREF="value"</code>
+%   &ndash; <code>ID="value"</code>
+%   &ndash; <code>PORT="portName"</code>
+%   &ndash; <code>ROWSPAN="value"</code>
+%   &ndash; <code>SIDES="value"</code>
+%   &ndash; <code>STYLE="value"</code>
+%   &ndash; <code>TARGET="value"</code>
+%   &ndash; <code>TITLE="value"</code>
+%   &ndash; <code>TOOLTIP="value"</code>
+%   &ndash; <code>VALIGN="MIDDLE|BOTTOM|TOP"</code>
+%   &ndash; <code>WIDTH="value"</code>
 %
&ndash;% Supported attributes for IMG:
&ndash;% <code>
-% SCALE="FALSE|TRUE|WIDTH|HEIGHT|BOTH"
-% SRC="value"
-%</code>
+% Supported attributes for <code>IMG</code>:
+%   &ndash; <code>SCALE="FALSE|TRUE|WIDTH|HEIGHT|BOTH"</code>
+%   &ndash; <code>SRC="value"</code></p>

<p> cell(td(Contents)) &mdash;>
&ndash;  html_element(td, [], label(Contents)).
-cell(td(img)) &mdash;>
&ndash;  html_element(td, [], html_element(img)).
+  cell(td([],Contents)).
+cell(td(Attrs1,Image)) &mdash;>
+  {(  Image =.. [img,Attrs2]
+  &ndash;>  true
+  ;   Image == img
+  &ndash;>  Attrs2 = []
+  )},
+  html_element(td, Attrs1, html_element(img,Attrs2)).
+cell(td(Attrs,Contents)) &mdash;>
+  html_element(td, Attrs, label(Contents)).
+</p>

<p> %! cells(?Contents:list(compound))// .
@@ -107,19 +116,22 @@ cells([H]) &mdash;>
   cell(H).</p>

<p>+
 %! label(?Content:compound)// .
 % GraphViz HTML-like label.</p>

<p> label(Content) &mdash;>
&ndash;  text(Content).
-label(Content) &mdash;>
   table(Content).
+label(Content) &mdash;>
+  text(Content).
+</p>

<p> %! row(?Contents:compound)// .</p>

<p> row(tr(Contents)) &mdash;>
&ndash;  html_element(tr, [], cell(Contents)).
+  html_element(tr, [], cells(Contents)).
+</p>

<p> %! rows(?Contents:list)// .
@@ -127,72 +139,108 @@ row(tr(Contents)) &mdash;>
 rows([H|T]) &mdash;>
   row(H),
   rows(T).
-rows([H,hr|T]) &mdash;>
&ndash;  row(H),
+rows([hr|T]) &mdash;>
   html_element(hr),
   rows(T).
 rows([H]) &mdash;>
   row(H).</p>

<p>+
 %! table(?Contents:compound)// .
&ndash;% Supported attributes for TABLE:
&ndash;% <code>
-% ALIGN="CENTER|LEFT|RIGHT"
-% BGCOLOR="color"
-% BORDER="value"
-% CELLBORDER="value"
-% CELLPADDING="value"
-% CELLSPACING="value"
-% COLOR="color"
-% COLUMNS="value"
-% FIXEDSIZE="FALSE|TRUE"
-% GRADIENTANGLE="value"
-% HEIGHT="value"
-% HREF="value"
-% ID="value"
-% PORT="portName"
-% ROWS="value"
-% SIDES="value"
-% STYLE="value"
-% TARGET="value"
-% TITLE="value"
-% TOOLTIP="value"
-% VALIGN="MIDDLE|BOTTOM|TOP"
-% WIDTH="value"
-%</code>
+% <del>
+% table : [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
+% </del>
 %
&ndash;% Supported attributes for FONT:
&ndash;% ```
&ndash;% COLOR=&ldquo;color&rdquo;
&ndash;% FACE=&ldquo;fontname&rdquo;
&ndash;% POINT-SIZE=&ldquo;value&rdquo;</p>

<h2>&ndash;% ```</h2>

<p>+% Supported attributes for <code>TABLE</code>:
+%   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT"</code>
+%   &ndash; <code>BGCOLOR="color"</code>
+%   &ndash; <code>BORDER="value"</code>
+%   &ndash; <code>CELLBORDER="value"</code>
+%   &ndash; <code>CELLPADDING="value"</code>
+%   &ndash; <code>CELLSPACING="value"</code>
+%   &ndash; <code>COLOR="color"</code>
+%   &ndash; <code>COLUMNS="value"</code>
+%   &ndash; <code>FIXEDSIZE="FALSE|TRUE"</code>
+%   &ndash; <code>GRADIENTANGLE="value"</code>
+%   &ndash; <code>HEIGHT="value"</code>
+%   &ndash; <code>HREF="value"</code>
+%   &ndash; <code>ID="value"</code>
+%   &ndash; <code>PORT="portName"</code>
+%   &ndash; <code>ROWS="value"</code>
+%   &ndash; <code>SIDES="value"</code>
+%   &ndash; <code>STYLE="value"</code>
+%   &ndash; <code>TARGET="value"</code>
+%   &ndash; <code>TITLE="value"</code>
+%   &ndash; <code>TOOLTIP="value"</code>
+%   &ndash; <code>VALIGN="MIDDLE|BOTTOM|TOP"</code>
+%   &ndash; <code>WIDTH="value"</code>
+%
+% Supported attributes for <code>FONT</code>:
+%  &ndash; <code>COLOR="color"</code>
+%    Sets the color of the font within the scope of <code>&lt;FONT&gt;...&lt;/FONT&gt;</code>,
+%     or the border color of the table or cell within the scope of
+%     <code>&lt;TABLE&gt;...&lt;/TABLE&gt;</code>, or <code>&lt;TD&gt;...&lt;/TD&gt;</code>.
+%    This color can be overridden by a <code>COLOR</code> attribute in descendents.
+%    By default, the font color is determined by the <code>fontcolor</code> attribute
+%     of the corresponding node, edge or graph, and the border color is
+%     determined by the color attribute of the corresponding node, edge or
+%     graph.
+%   &ndash; <code>FACE="fontname"</code>
+%   &ndash; <code>POINT-SIZE="value"</code>
+
+table(table(Contents)) &mdash;>
+  table(table([],Contents)).
 table(table(Attrs,Contents)) &mdash;>
   html_element(table, Attrs, rows(Contents)).
-table(table(font(Contents))) &mdash;>
&ndash;  html_element(font, [], html_element(table, [], rows(Contents))).
+table(font(Table)) &mdash;>
+  table(font([],Table)).
+table(font(Attrs1,Table)) &mdash;>
+  {(  Table =.. [table,Attrs2,Contents]
+  &ndash;>  true
+  ;   Table =.. [table,Contents]
+  &ndash;>  Attrs2 = []
+  )},
+  html_element(font, Attrs1, table(table(Attrs2,Contents))).
+</p>

<p> %! text(?Contents:list)// .
+% <del>
+% text :   textitem
+%        | text textitem
+% </del></p>

<p> text(Contents) &mdash;>
+  {is_list(Contents)}, !,</p>

<h2>   &lsquo;+&rsquo;(textitem, Contents, []).</h2>

<p>&ndash;
&ndash;%! textitem(?Content)// .
+text(Content) &mdash;>
+  text([Content]).
+
+
+
+%! textitem(?Content:compound)// .
+% <del>
+% textitem :   string
+%            | <BR/>
+%            | <FONT> text </FONT>
+%            | <I> text </I>
+%            | <B> text </B>
+%            | <U> text </U>
+%            | <O> text </O>
+%            | <SUB> text </SUB>
+%            | <SUP> text </SUP>
+%            | <S> text </S>
+% </del>
+%
 % Supported attributes for BR:
&ndash;% <code>
-% ALIGN="CENTER|LEFT|RIGHT"
-%</code>
+%   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT"</code></p>

<p>-textitem(string(String)) &mdash;>
&ndash;  html_string(String).
-textitem(entity(Name)) &mdash;>
&ndash;  html_entity(Name).
+textitem(br) &mdash;>
+  textitem(br([])).
 textitem(br(Attrs)) &mdash;>
   html_element(br, Attrs).
+% Compound term: parser.
 textitem(Compound) &mdash;>
   {var(Compound)}, !,
   html_element(Name, _, text(Content)),
@@ -200,12 +248,17 @@ textitem(Compound) &mdash;></p>

<pre><code> supported_html_element(Name),
 Compound =.. [Name,Content]
</code></pre>

<p>   }.
+% Compound term: generator.
 textitem(Compound) &mdash;>
   {</p>

<pre><code> Compound =.. [Name,Content],
 supported_html_element(Name)
</code></pre>

<p>   },
   html_element(Name, _, text(Content)).
+textitem(String) &mdash;>
+  html_string(String).
+
+</p>

<p>diff &mdash;git a/plDcg b/plDcg
index c61080f..d2e4a8a 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit c61080f3d8df6ba6d48b0d70f5ba52047c8cbd29
+Subproject commit d2e4a8a094b7c405222574a4f9fe8c472296d7e6
diff &mdash;git a/plHtml b/plHtml
index c98f740..dfd7c27 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit c98f740d593fff74bfa3cf3d08af13c857daa899
+Subproject commit dfd7c27dfd102e8eb6bfd9c516fccfcd23b5abf0
diff &mdash;git a/plUri b/plUri
index 66a7652..0be7e9c 160000
&mdash;&ndash; a/plUri
+++ b/plUri
@@ -1 +1 @@
-Subproject commit 66a7652bc1ab6a4dc1fc790b09894d6c51d42dcf
+Subproject commit 0be7e9cae7b42dea30f08aa751438d382387b8a2</p>

<p>```</p>

<h2 id="59"> 59: 正在比较变动前 af5d96d 和变动后 ab4b616 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/README.md b/README.md
index f89c694..fff981c 100644
&mdash;&ndash; a/README.md
+++ b/README.md
@@ -3,6 +3,40 @@ plGraphViz</p>

<p> Easily export graphs represented as Prolog terms to
  <a href="http://www.graphviz.org/">GraphViz</a>.
+The Prolog terms have the following form:
+
+<del>prolog
+graph(Vertices, Edges, GraphAttrs)
+</del>
+
+<code>Vertices</code> and <code>Edges</code> are lists of compounds terms of
+ the following form:
+
+<del>prolog
+vertex(Id, VertexAttrs)
+edges(FromId, ToId, EdgeAttrs)
+</del>
+
+<code>Id</code> identifies a vertex and need not occur in any of the edges
+ (i.e., unconnected vertices are allowed).
+<code>FromId</code> and <code>ToId</code> may occur in the list of vertices,
+ in order to draw an edge between vertices with set attributes.
+
+Attributes have the form <code>Name=Value</code>.
+<code>GraphAttrs</code> are attributes of the graph.
+<code>VertexAttrs</code> are attributes of the vertex.
+<code>EdgeAttrs</code> are attributes of the edge.
+
+Attribute values are given as Prolog terms as well,
+ and are type-checked before exporting.
+Many of the GraphViz attributes are supported.
+New ones are added on an as-needed bases
+ (open an issue on Github if you want to see a specific feature added).
+Supports HTML-like labels, allowing complex tables to be shown
+ inside vertices.
+Support for vertex clusters is currently under way.
+
+&mdash;&ndash;</p>

<p> ### Example</p>

<p>@@ -17,14 +51,14 @@ $ swipl run.pl</p>

<pre><code>File = 'PATH/plGraphViz/data/tmp.png'
</code></pre>

<p> ~~~</p>

<p>+<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example1.png" title="Example graph." alt="" />
+
 The graphic can be saved to a different file by instantiating
  the <code>File</code> argument.</p>

<h2>&ndash;<img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example1.png" title="Example graph." alt="" /></h2>

<hr />

<p>&ndash;### Method option
+### &lsquo;Method&rsquo; option</p>

<p> Option <code>method(+atom)</code> sets the drawing method that is used by GraphViz
  to place the vertices and edges.
@@ -41,7 +75,7 @@ The following values are supported.</p>

<hr />

<p>&ndash;### Output type option
+### &lsquo;Output&rsquo; option</p>

<p> Option <code>output(+atom)</code> sets the type of file the graph is written to.
 The following values are supported.</p>

<p>```</p>

<h2 id="60"> 60: 正在比较变动前 ab4b616 和变动后 74bd19d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 3237b4b..4678991 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -438,7 +438,7 @@ smoothType(triangle).
 % A GraphViz string.</p>

<p> string(Content) &mdash;>
&ndash;  atom(Content).
+  quoted(atom(Content)).</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 6db4451..d01b656 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +Gif:compound
+    gv_graph//1 % +Graph:compound
   ]
 ).</p>

<p>@@ -150,7 +150,7 @@ gv_generic_attributes_statement(Kind, I, KindAttrs) &mdash;></p>

<p>&ndash;%! gv_graph(+Gif:compound)//
+%! gv_graph(+Graph:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code></p>

<p>```</p>

<h2 id="61"> 61: 正在比较变动前 74bd19d 和变动后 8ffff6f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/README.md b/README.md
index fff981c..9413d36 100644
&mdash;&ndash; a/README.md
+++ b/README.md
@@ -38,6 +38,14 @@ Support for vertex clusters is currently under way.</p>

<hr />

<p>+### Installation
+
+<del>shell
+$ git clone <a href="https://github.com/wouterbeek/plGraphViz.git">https://github.com/wouterbeek/plGraphViz.git</a>
+$ cd plGraphViz
+$ git submodule update &mdash;init
+</del>
+
 ### Example</p>

<p> ~~~prolog
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 4678991..3237b4b 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -438,7 +438,7 @@ smoothType(triangle).
 % A GraphViz string.</p>

<p> string(Content) &mdash;>
&ndash;  quoted(atom(Content)).
+  atom(Content).</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index d01b656..6db4451 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +Graph:compound
+    gv_graph//1 % +Gif:compound
   ]
 ).</p>

<p>@@ -150,7 +150,7 @@ gv_generic_attributes_statement(Kind, I, KindAttrs) &mdash;></p>

<p>&ndash;%! gv_graph(+Graph:compound)//
+%! gv_graph(+Gif:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code></p>

<p>```</p>

<h2 id="62"> 62: 正在比较变动前 8ffff6f 和变动后 ac3423a </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 3237b4b..4678991 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -438,7 +438,7 @@ smoothType(triangle).
 % A GraphViz string.</p>

<p> string(Content) &mdash;>
&ndash;  atom(Content).
+  quoted(atom(Content)).</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 6db4451..d01b656 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +Gif:compound
+    gv_graph//1 % +Graph:compound
   ]
 ).</p>

<p>@@ -150,7 +150,7 @@ gv_generic_attributes_statement(Kind, I, KindAttrs) &mdash;></p>

<p>&ndash;%! gv_graph(+Gif:compound)//
+%! gv_graph(+Graph:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code></p>

<p>```</p>

<h2 id="63"> 63: 正在比较变动前 ac3423a 和变动后 57932e4 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 1b264ab..3c731a0 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 1b264ab8b668b44035c96f320f8798f7940ad2fa
+Subproject commit 3c731a03db6ee32031815d24c505e784273f46ef</p>

<p>```</p>

<h2 id="64"> 64: 正在比较变动前 57932e4 和变动后 315b16e </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index a7901e4..efd8c89 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -45,7 +45,7 @@ and GraphViz output files or SVG DOM structures.</p>

<pre><code>  method(+atom),
  output(+atom)
]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(gif_to_svg_dom/3, 3, [
+:&ndash; predicate_options(graph_to_svg_dom/3, 3, [</p>

<pre><code>  pass_to(graph_to_gv_file/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(graph_to_gv_file/3, 3, [</p>

<p>```</p>

<h2 id="65"> 65: 正在比较变动前 315b16e 和变动后 898b5d2 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index efd8c89..52506e8 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -29,7 +29,6 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; use_module(library(process)).</p>

<p> :&ndash; use_module(generics(code_ext)).
&ndash;:&ndash; use_module(generics(db_ext)).
 :&ndash; use_module(os(file_ext)).
 :&ndash; use_module(os(run_ext)).</p>

<p>@@ -45,9 +44,6 @@ and GraphViz output files or SVG DOM structures.</p>

<pre><code>  method(+atom),
  output(+atom)
]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(graph_to_svg_dom/3, 3, [
&ndash;     pass_to(graph_to_gv_file/3, 3)
&ndash;   ]).
 :&ndash; predicate_options(graph_to_gv_file/3, 3, [</p>

<pre><code>  pass_to(codes_to_gv_file/3, 3)
]).
</code></pre>

<p>```</p>

<h2 id="66"> 66: 正在比较变动前 898b5d2 和变动后 4279a49 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 52506e8..188cfa6 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -6,9 +6,9 @@</p>

<pre><code> file_to_gv/3, % +InputFile:atom
               % ?OutputFile:atom
               % +Options:list(nvpair)
</code></pre>

<ul>
<li> graph_to_gv_file/3, % +Graph:compound</li>
<li><pre><code>                 % ?OutputFile:atom
</code></pre></li>
<li><pre><code>                 % +Options:list(nvpair)
</code></pre></li>
<li> export_graph_to_gv_file/3, % +ExportGraph:compound</li>
<li><pre><code>                        % ?OutputFile:atom
</code></pre></li>
<li><pre><code>                        % +Options:list(nvpair)
</code></pre>

<p> open_dot/1 % +File:file
]
).
@@ -22,7 +22,7 @@ Also converts between GraphViz DOT formatted files
and GraphViz output files or SVG DOM structures.</p></li>
</ul>


<p> @author Wouter Beek
&ndash;@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08
+@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08, 2014/11
 */</p>

<p> :&ndash; use_module(library(option)).
@@ -34,6 +34,11 @@ and GraphViz output files or SVG DOM structures.</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>+:&ndash; dynamic(user:prolog_file_type/2).
+:&ndash; multifile(user:prolog_file_type/2).
+
+user:prolog_file_type(dot, dot).
+
 :&ndash; predicate_options(codes_to_gv_file/3, 3, [</p>

<pre><code>  pass_to(file_to_gv/3, 3)
]).
</code></pre>

<p>@@ -44,12 +49,14 @@ and GraphViz output files or SVG DOM structures.</p>

<pre><code>  method(+atom),
  output(+atom)
]).
</code></pre>

<p>&ndash;:&ndash; predicate_options(graph_to_gv_file/3, 3, [
+:&ndash; predicate_options(export_graph_to_gv_file/3, 3, [</p>

<pre><code>  pass_to(codes_to_gv_file/3, 3)
]).
</code></pre>

<p>+
+
 %! codes_to_gv_file(
 %!   +Codes:list(code),
 %!   ?OutputFile:atom,
@@ -120,23 +127,23 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;</p>

<p>&ndash;%! graph_to_gv_file(
&ndash;%!   +Graph:compound,
+%! export_graph_to_gv_file(
+%!   +ExportGraph:compound,
 %!   ?OutputFile:atom,
 %!   +Options:list(nvpair)
 %! ) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
&ndash;%   * <code>method(+Method:atom</code>
+%   &ndash; <code>method(+Method:atom</code>
 %     The algorithm used by GraphViz for positioning the tree nodes.
 %     Either =dot= (default) or =sfdp=.
&ndash;%   * <code>output(+FileType:atom)</code>
+%   &ndash; <code>output(+FileType:atom)</code>
 %     The file type of the generated GraphViz file.
 %     Default: <code>pdf</code>.</p>

<p>-graph_to_gv_file(Gif, OutputFile, Options):&ndash;
&ndash;  once(phrase(gv_graph(Gif), Codes)),
+export_graph_to_gv_file(ExportGraph, OutputFile, Options):&ndash;
+  once(phrase(gv_graph(ExportGraph), Codes)),
   codes_to_gv_file(Codes, OutputFile, Options).</p>

<p>@@ -154,6 +161,7 @@ open_dot(File):&ndash;</p>

<p>+
 % HELPERS</p>

<p> gv_method(circo).</p>

<p>```</p>

<h2 id="67"> 67: 正在比较变动前 4279a49 和变动后 c173073 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index d01b656..a4197a9 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -13,10 +13,10 @@ Methods for writing to the GraphViz DOT format.</p>

<p> In GraphViz vertices are called &lsquo;nodes&rsquo;.</p>

<p>&ndash;<del>abnf
+```abnf
 attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
 a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
&ndash;</del>
+```</p>

<hr />

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 9a4d33a..63f2d82 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -9,7 +9,7 @@</p>

<p> Grammar taken from the GraphViz Web site:</p>

<p>&ndash;~~~
+```
 label :   text</p>

<pre><code>     | table
</code></pre>

<p> text :   textitem
@@ -34,7 +34,7 @@ cells :   cell</p>

<pre><code>     | cells &lt;VR/&gt; cell
</code></pre>

<p> cell:   <TD> label </TD></p>

<pre><code>   | &lt;TD&gt; &lt;IMG/&gt; &lt;/TD&gt;
</code></pre>

<p>&ndash;~~~
+```</p>

<hr />

<p>@@ -148,9 +148,9 @@ rows([H]) &mdash;></p>

<p> %! table(?Contents:compound)// .
&ndash;% <del>
+% ```
 % table : [ <FONT> ] <TABLE> rows </TABLE> [ </FONT> ]
&ndash;% </del>
+% <code>``
 %
 % Supported attributes for</code>TABLE<code>:
 %   -</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;`
@@ -206,10 +206,10 @@ table(font(Attrs1,Table)) &mdash;></p>

<p> %! text(?Contents:list)// .
&ndash;% <del>
+% ```
 % text :   textitem
 %        | text textitem
&ndash;% </del>
+% ```</p>

<p> text(Contents) &mdash;>
   {is_list(Contents)}, !,
@@ -220,7 +220,7 @@ text(Content) &mdash;></p>

<p> %! textitem(?Content:compound)// .
&ndash;% <del>
+% ```
 % textitem :   string
 %            | <BR/>
 %            | <FONT> text </FONT>
@@ -231,7 +231,7 @@ text(Content) &mdash;>
 %            | <SUB> text </SUB>
 %            | <SUP> text </SUP>
 %            | <S> text </S>
&ndash;% </del>
+% <code>``
 %
 % Supported attributes for BR:
 %   -</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;`</p>

<p>```</p>

<h2 id="68"> 68: 正在比较变动前 c173073 和变动后 107c515 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index e3ba03c..6e61373 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -129,7 +129,7 @@ assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;</p>

<p> gv_attrs_download:&ndash;
   gv_attrs_url(Url),
&ndash;  download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),
+  download_html_dom(Url, Dom, [html_dialect(html4),verbose(silent)]),</p>

<p>   xpath(Dom, //table(@align=center), TableDom),
   % @tbd This does not work, since in <code>record_name(Element, Name)</code>,
diff &mdash;git a/gv_color.pl b/gv_color.pl
index 0510f98..c1c6fde 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -94,7 +94,7 @@ wc_weight(Float) &mdash;></p>

<p> gv_color_download:&ndash;
   gv_color_url(Url),
&ndash;  download_html(Url, Dom, [html_dialect(html4),verbose(silent)]),
+  download_html_dom(Url, Dom, [html_dialect(html4),verbose(silent)]),
   xpath(Dom, //table(1), TableDom1),
   xpath(Dom, //table(2), TableDom2),
   maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2]).</p>

<p>```</p>

<h2 id="69"> 69: 正在比较变动前 107c515 和变动后 8f574bb </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 6e61373..0fa4dcc 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -2,7 +2,7 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr_value//2 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>        % +Attribute:nvpair
</code></pre></li>
<li><pre><code>              % +Attribute:nvpair
</code></pre>

<p>]
).</p></li>
</ul>


<p>@@ -11,7 +11,7 @@
 Support for GraphViz attributes.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11
+@version 2014/06, 2014/11-2014/12
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -30,7 +30,7 @@ Support for GraphViz attributes.
 :&ndash; use_module(plHtml(html)).
 :&ndash; use_module(plHtml(html_table)).</p>

<p>&ndash;:&ndash; use_module(plGraphViz(gv_attr_type)). % DCGs implementing attribute types.
+:&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).</p>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p>@@ -94,7 +94,7 @@ gv_attr_value(Context, Name=Value) &mdash;></p>

<pre><code> % Check validity of Value w.r.t. minimum value -- if available.
 check_minimum(Value, Minimum)
</code></pre>

<p>   },
&ndash;  dcg_call(Dcg, Value).
+  dcg_call(gv_attr_type:Dcg, Value).</p>

<p>```</p>

<h2 id="70"> 70: 正在比较变动前 8f574bb 和变动后 d7088dd </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index a4197a9..e7b6748 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -341,12 +341,12 @@ gv_id(Atom) &mdash;>
 gv_id(Atom) &mdash;>
   quoted(dcg_atom_codes(gv_quoted_string, Atom)), !.</p>

<p>-gv_id_first(X) &mdash;> letter(X).
+gv_id_first(X) &mdash;> ascii_letter(X).
 gv_id_first(X) &mdash;> underscore(X).</p>

<p> gv_id_rest([]) &mdash;> [].
 gv_id_rest([H|T]) &mdash;>
&ndash;  (   alpha_numeric(H)
+  (   ascii_alpha_numeric(H)
   ;   underscore(H)
   ),
   gv_id_rest(T).</p>

<p>```</p>

<h2 id="71"> 71: 正在比较变动前 d7088dd 和变动后 94ed05d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/README.md b/README.md
index 9413d36..eb8512b 100644
&mdash;&ndash; a/README.md
+++ b/README.md
@@ -51,7 +51,7 @@ $ git submodule update &mdash;init
 ~~~prolog
 $ swipl run.pl
 ?&ndash; use_module(plGraphViz(gv_file)).
&ndash;?&ndash; graph_to_gv_file(
+?&ndash; export_graph_to_gv_file(</p>

<pre><code>  graph([vertex(1,[]),vertex(2,[])],[edge(1,2,[])],[]),
  File,
  [method(sfdp),output(png)]
</code></pre>

<p>@@ -136,7 +136,7 @@ The following values are supported.
 Example of using HTML-like labels:</p>

<p> ~~~prolog
-graph_to_gv_file(
+export_graph_to_gv_file(
   graph(</p>

<pre><code> [vertex(1,[]),vertex(2,[label=html(table([tr([td(a),td(b)]),tr([td(c),td(d)])]))])],
 [edge(1,2,[label='From 1 to 2.'])],
</code></pre>

<p>```</p>

<h2 id="72"> 72: 正在比较变动前 94ed05d 和变动后 f481060 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 188cfa6..101dc4d 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -94,6 +94,7 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
   ;   rename_file(InputFile, OutputFile)
   ).
 file_to_gv(InputFile, OutputFile, Options):&ndash;
+gtrace,
   % Typecheck for <code>method</code> option.
   option(method(Method), Options, dot),
   findall(Method0, gv_method(Method0), Methods),</p>

<p>```</p>

<h2 id="73"> 73: 正在比较变动前 f481060 和变动后 ce492ef </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 4678991..6d2e4f5 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -46,7 +46,7 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11
+@version 2014/06, 2014/11-2014/12
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
@@ -54,7 +54,9 @@
 :&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_cardinal)).
 :&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_generics)).
 :&ndash; use_module(plDcg(dcg_quote)).
+:&ndash; use_module(plDcg(dcg_replace)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>@@ -210,7 +212,10 @@ doubleList(L) &mdash;>
 % @tbd Support for context-dependent replacements.</p>

<p> escString(String) &mdash;>
&ndash;  quoted(atom(String)).
+  {dcg_phrase(dcg_replace(double_quote, escaped_double_quote), String, String0)},
+  quoted(atom(String0)).
+escaped_double_quote &mdash;>
+  &ldquo;\\&rdquo;&ldquo;.</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index e7b6748..c51b4cf 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -22,7 +22,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
+@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11-2014/12
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -32,6 +32,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 :&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_arrow)).
 :&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_atom)).
 :&ndash; use_module(plDcg(dcg_bracket)).
 :&ndash; use_module(plDcg(dcg_content)).
 :&ndash; use_module(plDcg(dcg_generics)).
@@ -111,12 +112,11 @@ gv_edge_operator(true) &mdash;> arrow(right, 2).</p>

<p> gv_edge_statement(I, Directed, edge(FromId,ToId,EAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(FromId), &ldquo; &rdquo;,</p>

<ul>
<li>gv_node_id(FromId), &ldquo; &rdquo;,

<h2>gv_edge_operator(Directed), &ldquo; &rdquo;,</h2>

<h2>gv_node_id(ToId), &ldquo; &rdquo;,</h2></li>
<li><p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.
bracketed(square, &lsquo;*&rsquo;(gv_attr(edge), EAttrs, [])),
@@ -293,7 +293,7 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.</p></li>
</ul>


<p>&ndash;%! gv_id(?Atom:atom)// is det.
+%! gv_id(?Atom:compound)// is det.
 % Parse a GraphViz identifier.
 % There are 4 variants:
 %   1. Any string of alphabetic (<code>[a-zA-Z'200-'377]</code>) characters,
@@ -306,17 +306,26 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
 %      is converted to <code>"</code>. All other characters are left unchanged.
 %      In particular, <code>\\</code> remains <code>\\</code>.
 %      Layout engines may apply additional escape sequences.
+%      Represented by a Prolog term of the form <code>double_quoted_string(ATOM)</code>.
 %   4. An HTML string (<code>&lt;...&gt;</code>).
+%      Represented by a Prolog term of the form <code>html_like_label(COMPOUND)</code>.
 %
 % @tbd Add support for HTML-like labels:
 %      <a href="http://www.graphviz.org/doc/info/shapes.html#html">http://www.graphviz.org/doc/info/shapes.html#html</a>
 %      This requires an XML grammar!</p>

<p>&ndash;% HTML strings (variant 4).
-gv_id(Content) &mdash;>
&ndash;  {compound(Content)}, !,
+% HTML strings (assumed to be the same as HTML-like labels).
+gv_id(html_like_label(Content)) &mdash;> !,
   gv_html_like_label(Content).
&ndash;% Alpha-numeric strings (variant 1).
+% Double-quoted strings.
+% The quotes are already part of the given atom.
+gv_id(double_quoted_string(Atom)) &mdash;> !,
+  quoted(atom(Atom)).
+% Numerals.
+gv_id(N) &mdash;>
+  {number(N)}, !,
+  gv_numeral(N).
+% Alpha-numeric strings.
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
   gv_id_first(H),
@@ -324,22 +333,6 @@ gv_id(Atom) &mdash;>
   % Variant 1 identifiers should not be (case-variants of) a
   % GraphViz keyword.
   {+ gv_keyword([H|T])}.
&ndash;% Numerals (variant 2)
-gv_id(N) &mdash;>
&ndash;  {number(N)}, !,
&ndash;  gv_numeral(N).
&ndash;% Double-quoted strings (variant 3).
&ndash;% The quotes are already part of the given atom.
-gv_id(Atom) &mdash;>
&ndash;  {
&ndash;    atom_codes(Atom, [H|T]),
&ndash;    append(S, [H], T)
&ndash;  },
&ndash;  dcg_between(double_quote(H), gv_quoted_string(S)), !.
&ndash;% Double-quoted strings (variant 3).
&ndash;% The quotes are not in the given atom. They are written anyway.
-gv_id(Atom) &mdash;>
&ndash;  quoted(dcg_atom_codes(gv_quoted_string, Atom)), !.</p>

<p> gv_id_first(X) &mdash;> ascii_letter(X).
 gv_id_first(X) &mdash;> underscore(X).
@@ -382,7 +375,7 @@ gv_kind(node) &mdash;> &ldquo;node&rdquo;.</p>

<p>&ndash;%! gv_node_id(+NodeId:atom)// .
+%! gv_node_id(+NodeId:compound)// .
 % GraphViz node identifiers can be of the following two types:
 %   1. A GraphViz identifier, see gv_id//1.
 %   2. A GraphViz identifier plus a GraphViz port indicator, see gv_port//0.
@@ -439,26 +432,6 @@ gv_port_location &mdash;></p>

<p>-gv_quoted_string([]) &mdash;> [].
&ndash;% Just to be sure, we do not allow the double quote
&ndash;% that closes the string to be escaped.
-gv_quoted_string([X]) &mdash;>
&ndash;  {X \== 92}, !,
&ndash;  [X].
&ndash;% A double quote is only allowed if it is escaped by a backslash.
-gv_quoted_string([92,34|T]) &mdash;> !,
&ndash;  gv_quoted_string(T).
&ndash;% Add the backslash escape character.
-gv_quoted_string([34|T]) &mdash;> !,
&ndash;  &ldquo;\\&rdquo;&ldquo;,
&ndash;  gv_quoted_string(T).
&ndash;% All other characters are allowed without escaping.
-gv_quoted_string([H|T]) &mdash;>
&ndash;  [H],</p>

<h2>&ndash;  gv_quoted_string(T).</h2>

<h2>&ndash;</h2>

<p> gv_ranked_node_collection(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
   indent(I),
   bracketed(curly, (
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 101dc4d..d191e10 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -22,7 +22,7 @@ Also converts between GraphViz DOT formatted files
 and GraphViz output files or SVG DOM structures.</p>

<p> @author Wouter Beek
&ndash;@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08, 2014/11
+@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08, 2014/11-2014/12
 */</p>

<p> :&ndash; use_module(library(option)).
@@ -38,6 +38,7 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; multifile(user:prolog_file_type/2).</p>

<p> user:prolog_file_type(dot, dot).
+user:prolog_file_type(pdf, pdf).</p>

<p> :&ndash; predicate_options(codes_to_gv_file/3, 3, [</p>

<pre><code>  pass_to(file_to_gv/3, 3)
</code></pre>

<p>@@ -94,7 +95,6 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
   ;   rename_file(InputFile, OutputFile)
   ).
 file_to_gv(InputFile, OutputFile, Options):&ndash;
-gtrace,
   % Typecheck for <code>method</code> option.
   option(method(Method), Options, dot),
   findall(Method0, gv_method(Method0), Methods),
@@ -108,9 +108,7 @@ gtrace,
   % The output file is either given or created.
   (   var(OutputFile)
   &ndash;>  file_alternative(InputFile, <em>, </em>, OutputType, OutputFile)
&ndash;  ;   is_absolute_file_name(OutputFile),
&ndash;      % The given output file must match a certain file extension.
&ndash;      file_name_extension(_, OutputType, OutputFile)
+  ;   is_absolute_file_name(OutputFile)
   ),</p>

<p>   % Run the GraphViz conversion command in the shell.</p>

<p>```</p>

<h2 id="74"> 74: 正在比较变动前 ce492ef 和变动后 ddef555 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 6d2e4f5..b886f9f 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -229,7 +229,7 @@ escaped_double_quote &mdash;></p>

<p> %! lblString(+String:compound)// .</p>

<p>-lblString(html(V)) &mdash;>
+lblString(html_like_label(V)) &mdash;>
   gv_html_like_label(V).
 lblString(V) &mdash;>
   escString(V).
diff &mdash;git a/gv_html.pl b/gv_html.pl
index 63f2d82..1410c25 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -236,8 +236,6 @@ text(Content) &mdash;>
 % Supported attributes for BR:
 %   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT"</code></p>

<p>-textitem(br) &mdash;>
&ndash;  textitem(br([])).
 textitem(br(Attrs)) &mdash;>
   html_element(br, Attrs).
 % Compound term: parser.</p>

<p>```</p>

<h2 id="75"> 75: 正在比较变动前 ddef555 和变动后 af27fdd </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index c1c6fde..2263fa1 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -17,7 +17,7 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists), except([delete/3])).
+:&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index c51b4cf..e047a74 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -26,7 +26,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(lists), except([delete/3])).
+:&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(ordsets)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).</p>

<p>```</p>

<h2 id="76"> 76: 正在比较变动前 af27fdd 和变动后 f390238 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index b886f9f..b68f753 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -46,7 +46,7 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11-2014/12
+@version 2014/06, 2014/11-2015/01
 */</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
@@ -57,6 +57,7 @@
 :&ndash; use_module(plDcg(dcg_generics)).
 :&ndash; use_module(plDcg(dcg_quote)).
 :&ndash; use_module(plDcg(dcg_replace)).
+:&ndash; use_module(plDcg(language/c)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>@@ -104,9 +105,9 @@ gv_attr_type(viewPort).
 %! addDouble(+Float:float)// .
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p>-addDouble(Float) &mdash;>
&ndash;  &lsquo;?&rsquo;(plus_sign, []),
&ndash;  double(Float).
+addDouble(N) &mdash;>
+  (&ldquo;+&rdquo; ; &ldquo;&rdquo;),
+  c_double(N).</p>

<p>@@ -115,7 +116,7 @@ addDouble(Float) &mdash;>
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p> addPoint(Point) &mdash;>
&ndash;  &lsquo;?&rsquo;(plus_sign, []),
+  (&ldquo;+&rdquo; ; &ldquo;&rdquo;),
   point(Point).</p>

<p>@@ -194,10 +195,8 @@ dirType(none).</p>

<p> %! double(+Double:float)// .</p>

<p>-double(Double1) &mdash;>
&ndash;  % float//1 will check for float type.
&ndash;  {Double2 is Double1 * 1.0},
&ndash;  float(Double2).
+double(N) &mdash;>
+  c_double(N).</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index d36fa59..cf595d9 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -19,7 +19,7 @@</p>

<p>&ndash;%! gv_numeral(?Value:number)// .
+%! gv_numeral(?Value:compound)// .
 %
 % # Syntax
 %
@@ -45,36 +45,39 @@
 %   &ndash; (decimal-separator)</p>

<p> gv_numeral(N) &mdash;>
&ndash;  {var(N)}, !,
&ndash;  sign(Sign),
&ndash;  (   &ldquo;.&rdquo;,
&ndash;      &lsquo;+&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)]),
&ndash;      {IntegerPart = 0}
&ndash;  ;   &lsquo;+&rsquo;(decimal_digit, IntegerPart, [convert1(weights_decimal)]),
&ndash;      (   &ldquo;.&rdquo;,
&ndash;          &lsquo;<em>&rsquo;(decimal_digit, Fractional, [convert1(weights_decimal)])
&ndash;      ;   {Fractional = 0}
+  (   {ground(N)}
+  &ndash;>  &lsquo;[&ndash;]?&rsquo;(N),
+      {N0 is abs(N)},
+      {rational_parts(N0, I, F)},
+      (   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part
+          %     and do not write the decimal separator.
+          {F =:= 0}
+      &ndash;>  {weights_nonneg(IW, I)},
+          &lsquo;[0-9]+&rsquo;(IW)
+      ;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,
+          %     preceded by the decimal separator.
+          {I =:= 0}
+      &ndash;>  &ldquo;.&rdquo;,
+          {weights_fraction(FW, F)},
+          &lsquo;[0-9]</em>&rsquo;(FW)
+      ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
+          %     so write both of them, with the decimal separator in-between.
+          {weights_nonneg(IW, I)},
+          &lsquo;[0-9]+&rsquo;(IW),
+          &ldquo;.&rdquo;,
+          {weights_fraction(FW, F)},
+          &lsquo;[0-9]*&rsquo;(FW)</p>

<pre><code>   )
</code></pre>

<ul>
<li>),</li>
<li>{   number_integer_parts(UnsignedN, IntegerPart, Fractional),</li>
<li>   N is copysign(UnsignedN, Sign)</li>
<li>}.
-gv_numeral(N) &mdash;></li>
<li>{number_sign_parts(N, Sign, UnsignedN)},</li>
<li>sign_negative(Sign),</li>
<li>{number_integer_parts(UnsignedN, IntegerPart, Fractional)},</li>
<li>(   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part</li>
<li>   %     and do not write the decimal separator.</li>
<li>   {Fractional =:= 0}</li>
<li>&ndash;>  integer(IntegerPart)</li>
<li>;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,</li>
<li>   %     preceded by the decimal separator.</li>
<li>   {IntegerPart =:= 0}</li>
<li>&ndash;>  &ldquo;.&rdquo;,</li>
<li>   integer(Fractional)</li>
<li>;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,</li>
<li>   %     so write both of them, with the decimal separator in-between.</li>
<li>   integer(IntegerPart),</li>
<li>   &ldquo;.&rdquo;,</li>
<li>   integer(Fractional)</li>
<li>;   &lsquo;[&ndash;]?&rsquo;(Sg),</li>
<li>   (   &ldquo;.&rdquo;,</li>
<li><pre><code>   '[0-9]+'(FW),
</code></pre></li>
<li><pre><code>   {IW = []}
</code></pre></li>
<li>   ;   &lsquo;[0-9]+&rsquo;(IW),</li>
<li><pre><code>   (   ".",
</code></pre></li>
<li><pre><code>       '[0-9]*'(FW),
</code></pre></li>
<li><pre><code>   ;   {FW = []}
</code></pre></li>
<li><pre><code>   )
</code></pre></li>
<li>   ),</li>
<li>   {rational_parts_weights(N0, IW, FW)},</li>
<li>   {N is copysign(N0, Sg)}
).</li>
</ul>


<p>```</p>

<h2 id="77"> 77: 正在比较变动前 f390238 和变动后 c5f7d82 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index cf595d9..c9b3e1d 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -8,12 +8,15 @@
 /** <module> GraphViz numeral</p>

<p> @author Wouter Beek
&ndash;@version 2014/05-2014/06
+@version 2014/05-2014/06, 2015/01
 */</p>

<p> :&ndash; use_module(math(math_ext)).
+:&ndash; use_module(math(radix)).
+:&ndash; use_module(math(rational_ext)).</p>

<p> :&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_abnf_common)).
 :&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_cardinal)).</p>

<p>```</p>

<h2 id="78"> 78: 正在比较变动前 c5f7d82 和变动后 acf6467 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index b68f753..157681f 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -49,6 +49,8 @@
 @version 2014/06, 2014/11-2015/01
 */</p>

<p>+:&ndash; use_module(library(dcg/basics), [float//1,integer//1]).
+
 :&ndash; use_module(plDcg(dcg_abnf)).
 :&ndash; use_module(plDcg(dcg_ascii)).
 :&ndash; use_module(plDcg(dcg_atom)).
diff &mdash;git a/gv_color.pl b/gv_color.pl
index 2263fa1..7aea965 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -13,10 +13,11 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2014/06, 2014/10-2014/11
+@version 2014/06, 2014/10-2014/11, 2015/01
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/basics), [float//1]).
 :&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).
diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index c9b3e1d..439a024 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -77,7 +77,7 @@ gv_numeral(N) &mdash;></p>

<pre><code>       {IW = []}
   ;   '[0-9]+'(IW),
       (   ".",
</code></pre>

<ul>
<li><pre><code>       '[0-9]*'(FW),
</code></pre></li>
<li><pre><code>       '[0-9]*'(FW)
   ;   {FW = []}
   )
</code></pre>

<p>   ),</p></li>
</ul>


<p>```</p>

<h2 id="79"> 79: 正在比较变动前 acf6467 和变动后 6656a2d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 157681f..3ae0920 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -59,7 +59,6 @@
 :&ndash; use_module(plDcg(dcg_generics)).
 :&ndash; use_module(plDcg(dcg_quote)).
 :&ndash; use_module(plDcg(dcg_replace)).
&ndash;:&ndash; use_module(plDcg(language/c)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>@@ -109,7 +108,7 @@ gv_attr_type(viewPort).</p>

<p> addDouble(N) &mdash;>
   (&ldquo;+&rdquo; ; &ldquo;&rdquo;),
&ndash;  c_double(N).
+  float(N).</p>

<p>@@ -198,7 +197,7 @@ dirType(none).
 %! double(+Double:float)// .</p>

<p> double(N) &mdash;>
&ndash;  c_double(N).
+  float(N).</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index 439a024..5776a4a 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -22,6 +22,8 @@</p>

<p>+
+
 %! gv_numeral(?Value:compound)// .
 %
 % # Syntax</p>

<p>```</p>

<h2 id="80"> 80: 正在比较变动前 6656a2d 和变动后 256c9ce </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 3c731a0..06aa96f 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 3c731a03db6ee32031815d24c505e784273f46ef
+Subproject commit 06aa96fbeef941157e9bcccc7c088d72ba8c8d3a
diff &mdash;git a/plDcg b/plDcg
index d2e4a8a..2f2ae3a 160000
&mdash;&ndash; a/plDcg
+++ b/plDcg
@@ -1 +1 @@
-Subproject commit d2e4a8a094b7c405222574a4f9fe8c472296d7e6
+Subproject commit 2f2ae3a9228e8add2dfa4835ff045a3635a062ba
diff &mdash;git a/plHtml b/plHtml
index dfd7c27..b8bd7a6 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit dfd7c27dfd102e8eb6bfd9c516fccfcd23b5abf0
+Subproject commit b8bd7a6d92f1076a5be2c4686e998a0bfc840ac8
diff &mdash;git a/plUri b/plUri
index 0be7e9c..6550f33 160000
&mdash;&ndash; a/plUri
+++ b/plUri
@@ -1 +1 @@
-Subproject commit 0be7e9cae7b42dea30f08aa751438d382387b8a2
+Subproject commit 6550f331120c7f63739f69692791760afb507280</p>

<p>```</p>

<h2 id="81"> 81: 正在比较变动前 256c9ce 和变动后 bf4ebea </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
index 6c22435..26ddd86 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,9 +4,6 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>&ndash;[submodule &ldquo;plDcg&rdquo;]
&ndash;   path = plDcg
&ndash;   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
 [submodule &ldquo;plUri&rdquo;]</p>

<pre><code>path = plUri
url = https://github.com/wouterbeek/plUri.git
</code></pre>

<p>diff &mdash;git a/debug_project.pl b/debug_project.pl
index 17195c1..d53a92f 100644
&mdash;&ndash; a/debug_project.pl
+++ b/debug_project.pl
@@ -1,7 +1,8 @@
 :&ndash; module(
   debug_project,
   [
&ndash;    debug_all_files/0
+    debug_all_files/0,
+    start_pldoc_server/0
   ]
 ).</p>

<p>@@ -11,20 +12,35 @@ Generic code for debugging a project:
   * Load all subdirectories and Prolog files contained in those directories.</p>

<p> @author Wouter Beek
&ndash;@version 2014/11/19
+@version 2015/02/26
 */</p>

<p> :&ndash; use_module(library(ansi_term)).
 :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(pldoc)).
+:&ndash; use_module(library(portray_text)).
+
+:&ndash; set_prolog_flag(
+  answer_write_options,
+  [max_depth(100),portrayed(true),spacing(next_argument)]
+).
+:&ndash; set_prolog_flag(
+  debugger_write_options,
+  [max_depth(100),portrayed(true),spacing(next_argument)]
+).
+:&ndash; set_portray_text(ellipsis, 1000).
+
+:&ndash; dynamic(user:debug_mode).
+:&ndash; multifile(user:debug_mode).
+
+:&ndash; initialization(init_debug_mode).</p>

<p>&ndash;:&ndash; use_module(os(dir_ext)).</p>

<p>&ndash;% Avoid errors when using gtrace/0 in threads.
&ndash;:&ndash; initialization(guitracer).</p>

<p> debug_all_files:&ndash;
+  ensure_loaded(plc(io/dir_ext)),
   absolute_file_name(project(.), Dir, [access(read),file_type(directory)]),
   directory_files(</p>

<pre><code> Dir,
</code></pre>

<p>@@ -55,6 +71,30 @@ do_not_load0(index).
 do_not_load0(load).
 do_not_load0(load_project).
 do_not_load0(run).
+do_not_load0(style).
+
+
+
+%! start_pldoc_server is det.
+% The plDoc server should be started <em>before</em> documented modules are loaded.
+
+start_pldoc_server:&ndash;
+  doc_server(9999).
+
+
+
+
+
+% INITIALIZATION
+
+init_debug_mode:&ndash;
+  % Set the debug mode flag.
+  (   user:debug_mode
+  &ndash;>  true
+  ;   assert(user:debug_mode)
+  ),
+  % Avoid errors when using gtrace/0 in threads.
+  guitracer.</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 3ae0920..9794eef 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -51,14 +51,14 @@</p>

<p> :&ndash; use_module(library(dcg/basics), [float//1,integer//1]).</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_cardinal)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
&ndash;:&ndash; use_module(plDcg(dcg_quote)).
&ndash;:&ndash; use_module(plDcg(dcg_replace)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_ascii)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_cardinal)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_generics)).
+:&ndash; use_module(plc(dcg/dcg_quote)).
+:&ndash; use_module(plc(dcg/dcg_replace)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 0fa4dcc..4e7ae2d 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -18,17 +18,16 @@ Support for GraphViz attributes.
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(os(file_ext)).</p>

<h2>&ndash;:&ndash; use_module(os(file_gnu)).</h2>

<p>&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_meta)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_meta)).
+:&ndash; use_module(plc(dcg/dcg_generics)).
+:&ndash; use_module(plc(generics/db_ext)).
+:&ndash; use_module(plc(io/file_ext)).
+:&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(html_table)).
+:&ndash; use_module(plHtml(elements/html_table)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).</p>

<p>@@ -100,7 +99,7 @@ gv_attr_value(Context, Name=Value) &mdash;></p>

<p>&ndash;% HELPERS
+% HELPERS %</p>

<p> %! check_minimum(+Value:atom, +Minimum:number) is semidet.
 % Trivially succeeds if no minimum value is available for a given attribute.
@@ -112,7 +111,9 @@ check_minimum(V, Min1):&ndash;</p>

<p>&ndash;% INITIALIZATION
+
+
+% INITIALIZATION %</p>

<p> %! assert_gv_attr_row(+Row:list(atom)) is det.</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 7aea965..34d99eb 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -22,19 +22,18 @@
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(generics(persistent_db_ext)).
&ndash;:&ndash; use_module(os(file_ext)).</p>

<h2>&ndash;:&ndash; use_module(os(file_gnu)).</h2>

<p>&ndash;:&ndash; use_module(plDcg(abnf_core_rules)).
&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_cardinal)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plc(dcg/abnf_core_rules)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_cardinal)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(generics/db_ext)).
+:&ndash; use_module(plc(generics/persistent_db_ext)).
+:&ndash; use_module(plc(io/file_ext)).
+:&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(html_table)).
+:&ndash; use_module(plHtml(elements/html_table)).</p>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p>@@ -46,6 +45,8 @@</p>

<p>+
+
 % color(+Color:compound)// .
 % A <em>color</em> is represented by a compound term of one of the following forms:
 %   1. <code>rgb(Red:nonneg,Green:nonneg,Blue:nonneg)</code>
@@ -89,7 +90,9 @@ wc_weight(Float) &mdash;></p>

<p>&ndash;% INITIALIZATION
+
+
+% INITIALIZATION %</p>

<p> %! gv_color_download is det.</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index e047a74..19657f5 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -29,15 +29,15 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 :&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_arrow)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_bracket)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
&ndash;:&ndash; use_module(plDcg(dcg_meta)).
&ndash;:&ndash; use_module(plDcg(dcg_quote)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_arrow)).
+:&ndash; use_module(plc(dcg/dcg_ascii)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_bracket)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_generics)).
+:&ndash; use_module(plc(dcg/dcg_meta)).
+:&ndash; use_module(plc(dcg/dcg_quote)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
diff &mdash;git a/gv_file.pl b/gv_file.pl
index d191e10..6cb739f 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -28,9 +28,9 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).</p>

<p>&ndash;:&ndash; use_module(generics(code_ext)).
&ndash;:&ndash; use_module(os(file_ext)).
&ndash;:&ndash; use_module(os(run_ext)).
+:&ndash; use_module(plc(generics/code_ext)).
+:&ndash; use_module(plc(io/file_ext)).
+:&ndash; use_module(plc(process/run_ext)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -41,18 +41,18 @@ user:prolog_file_type(dot, dot).
 user:prolog_file_type(pdf, pdf).</p>

<p> :&ndash; predicate_options(codes_to_gv_file/3, 3, [
&ndash;     pass_to(file_to_gv/3, 3)
&ndash;   ]).
+  pass_to(file_to_gv/3, 3)
+]).
 :&ndash; predicate_options(file_to_gv/2, 2, [
&ndash;     pass_to(file_to_gv/3, 3)
&ndash;   ]).
+  pass_to(file_to_gv/3, 3)
+]).
 :&ndash; predicate_options(file_to_gv/3, 3, [
&ndash;     method(+atom),
&ndash;     output(+atom)
&ndash;   ]).
+  method(+atom),
+  output(+atom)
+]).
 :&ndash; predicate_options(export_graph_to_gv_file/3, 3, [
&ndash;     pass_to(codes_to_gv_file/3, 3)
&ndash;   ]).
+  pass_to(codes_to_gv_file/3, 3)
+]).</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 1410c25..65ae2bd 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -43,9 +43,9 @@ cell:   <TD> label </TD>
 @version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_bracket)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_bracket)).
+:&ndash; use_module(plc(dcg/dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index 5776a4a..ac294b4 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -11,14 +11,13 @@
 @version 2014/05-2014/06, 2015/01
 */</p>

<p>&ndash;:&ndash; use_module(math(math_ext)).
&ndash;:&ndash; use_module(math(radix)).</p>

<h2>&ndash;:&ndash; use_module(math(rational_ext)).</h2>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_abnf_common)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_cardinal)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_abnf_common)).
+:&ndash; use_module(plc(dcg/dcg_ascii)).
+:&ndash; use_module(plc(dcg/dcg_cardinal)).
+:&ndash; use_module(plc(math/math_ext)).
+:&ndash; use_module(plc(math/radix)).
+:&ndash; use_module(plc(math/rational_ext)).</p>

<p>diff &mdash;git a/load.pl b/load.pl
index 5cec32c..de8b5ca 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -7,7 +7,6 @@
 :&ndash; use_module(load_project).
 :&ndash; load_project([</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plDcg,
 plHtml,
 plUri
]).
diff &mdash;git a/plDcg b/plDcg
deleted file mode 160000
index 2f2ae3a..0000000
&mdash;&ndash; a/plDcg
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 2f2ae3a9228e8add2dfa4835ff045a3635a062ba</li>
</ul>


<p>```</p>

<h2 id="82"> 82: 正在比较变动前 bf4ebea 和变动后 70aec99 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
index 26ddd86..6c22435 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,6 +4,9 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>+[submodule &ldquo;plDcg&rdquo;]
+   path = plDcg
+   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
 [submodule &ldquo;plUri&rdquo;]</p>

<pre><code>path = plUri
url = https://github.com/wouterbeek/plUri.git
</code></pre>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 06aa96f..9d0e491 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 06aa96fbeef941157e9bcccc7c088d72ba8c8d3a
+Subproject commit 9d0e49135bbd1916d901ccd18be605699f48c5cc
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 9794eef..3ae0920 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -51,14 +51,14 @@</p>

<p> :&ndash; use_module(library(dcg/basics), [float//1,integer//1]).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_cardinal)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(dcg/dcg_generics)).
&ndash;:&ndash; use_module(plc(dcg/dcg_quote)).
&ndash;:&ndash; use_module(plc(dcg/dcg_replace)).
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_atom)).
+:&ndash; use_module(plDcg(dcg_cardinal)).
+:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_generics)).
+:&ndash; use_module(plDcg(dcg_quote)).
+:&ndash; use_module(plDcg(dcg_replace)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 4e7ae2d..25519af 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -18,16 +18,17 @@ Support for GraphViz attributes.
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(dcg/dcg_meta)).
&ndash;:&ndash; use_module(plc(dcg/dcg_generics)).
&ndash;:&ndash; use_module(plc(generics/db_ext)).
&ndash;:&ndash; use_module(plc(io/file_ext)).
&ndash;:&ndash; use_module(plc(io/file_gnu)).
+:&ndash; use_module(generics(db_ext)).
+:&ndash; use_module(os(file_ext)).
+:&ndash; use_module(os(file_gnu)).
+
+:&ndash; use_module(plDcg(dcg_atom)).
+:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_meta)).
+:&ndash; use_module(plDcg(dcg_generics)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(elements/html_table)).
+:&ndash; use_module(plHtml(html_table)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).</p>

<p>@@ -80,16 +81,16 @@ gv_attr_value(Context, Name=Value) &mdash;></p>

<pre><code> % Check the validity of the context argument.
 gv_attr(Name, UsedBy, Types, _, Minimum, _),
 memberchk(Context, UsedBy),
</code></pre>

<ul>
<li><p>+
 %  Pick a value type non-deterministically.
 member(Type, Types),</p></li>
<li><p>+
 % The <code>style</code> type is the only one that requires the context argument.
 (   Type == style
 &ndash;>  Dcg =.. [Type,Context]
 ;   Dcg =.. [Type]
 ),</p></li>
<li><p>+
 % Check validity of Value w.r.t. minimum value &mdash; if available.
 check_minimum(Value, Minimum)
},
@@ -99,7 +100,7 @@ gv_attr_value(Context, Name=Value) &mdash;></p></li>
</ul>


<p>&ndash;% HELPERS %
+% HELPERS</p>

<p> %! check_minimum(+Value:atom, +Minimum:number) is semidet.
 % Trivially succeeds if no minimum value is available for a given attribute.
@@ -111,9 +112,7 @@ check_minimum(V, Min1):&ndash;</p>

<h2>&ndash;</h2>

<p>&ndash;% INITIALIZATION %
+% INITIALIZATION</p>

<p> %! assert_gv_attr_row(+Row:list(atom)) is det.</p>

<p>@@ -130,13 +129,8 @@ assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;</p>

<p> gv_attrs_download:&ndash;
   gv_attrs_url(Url),</p>

<h2>&ndash;  download_html_dom(Url, Dom, [html_dialect(html4),verbose(silent)]),</h2>

<ul>
<li>download_html_dom(Url, Dom, [dialect(html4),silent(true)]),
xpath(Dom, //table(@align=center), TableDom),</li>
<li>% @tbd This does not work, since in <code>record_name(Element, Name)</code>,</li>
<li>%      <code>Element</code> is a signleton list whereas a compound term is expected.

<h2>&ndash;  %%%%xpath(Dom, /html/body/table, TableDom),</h2>

<p>html_to_table(TableDom, _, Rows),
maplist(assert_gv_attr_row, Rows).</p></li>
</ul>


<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 34d99eb..7aea965 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -22,18 +22,19 @@
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/abnf_core_rules)).
&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_cardinal)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(generics/db_ext)).
&ndash;:&ndash; use_module(plc(generics/persistent_db_ext)).
&ndash;:&ndash; use_module(plc(io/file_ext)).
&ndash;:&ndash; use_module(plc(io/file_gnu)).
+:&ndash; use_module(generics(db_ext)).
+:&ndash; use_module(generics(persistent_db_ext)).
+:&ndash; use_module(os(file_ext)).
+:&ndash; use_module(os(file_gnu)).
+
+:&ndash; use_module(plDcg(abnf_core_rules)).
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_atom)).
+:&ndash; use_module(plDcg(dcg_cardinal)).
+:&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(elements/html_table)).
+:&ndash; use_module(plHtml(html_table)).</p>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p>@@ -45,8 +46,6 @@</p>

<h2>&ndash;</h2>

<p> % color(+Color:compound)// .
 % A <em>color</em> is represented by a compound term of one of the following forms:
 %   1. <code>rgb(Red:nonneg,Green:nonneg,Blue:nonneg)</code>
@@ -90,9 +89,7 @@ wc_weight(Float) &mdash;></p>

<h2>&ndash;</h2>

<p>&ndash;% INITIALIZATION %
+% INITIALIZATION</p>

<p> %! gv_color_download is det.</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 19657f5..e047a74 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -29,15 +29,15 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 :&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_arrow)).
&ndash;:&ndash; use_module(plc(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_bracket)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(dcg/dcg_generics)).
&ndash;:&ndash; use_module(plc(dcg/dcg_meta)).
&ndash;:&ndash; use_module(plc(dcg/dcg_quote)).
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_arrow)).
+:&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_atom)).
+:&ndash; use_module(plDcg(dcg_bracket)).
+:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plDcg(dcg_generics)).
+:&ndash; use_module(plDcg(dcg_meta)).
+:&ndash; use_module(plDcg(dcg_quote)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 6cb739f..d191e10 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -28,9 +28,9 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).</p>

<p>&ndash;:&ndash; use_module(plc(generics/code_ext)).
&ndash;:&ndash; use_module(plc(io/file_ext)).
&ndash;:&ndash; use_module(plc(process/run_ext)).
+:&ndash; use_module(generics(code_ext)).
+:&ndash; use_module(os(file_ext)).
+:&ndash; use_module(os(run_ext)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -41,18 +41,18 @@ user:prolog_file_type(dot, dot).
 user:prolog_file_type(pdf, pdf).</p>

<p> :&ndash; predicate_options(codes_to_gv_file/3, 3, [
&ndash;  pass_to(file_to_gv/3, 3)
&ndash;]).
+     pass_to(file_to_gv/3, 3)
+   ]).
 :&ndash; predicate_options(file_to_gv/2, 2, [
&ndash;  pass_to(file_to_gv/3, 3)
&ndash;]).
+     pass_to(file_to_gv/3, 3)
+   ]).
 :&ndash; predicate_options(file_to_gv/3, 3, [
&ndash;  method(+atom),
&ndash;  output(+atom)
&ndash;]).
+     method(+atom),
+     output(+atom)
+   ]).
 :&ndash; predicate_options(export_graph_to_gv_file/3, 3, [
&ndash;  pass_to(codes_to_gv_file/3, 3)
&ndash;]).
+     pass_to(codes_to_gv_file/3, 3)
+   ]).</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 65ae2bd..1410c25 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -43,9 +43,9 @@ cell:   <TD> label </TD>
 @version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_bracket)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_bracket)).
+:&ndash; use_module(plDcg(dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index ac294b4..5776a4a 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -11,13 +11,14 @@
 @version 2014/05-2014/06, 2015/01
 */</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_abnf_common)).
&ndash;:&ndash; use_module(plc(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(plc(dcg/dcg_cardinal)).
&ndash;:&ndash; use_module(plc(math/math_ext)).
&ndash;:&ndash; use_module(plc(math/radix)).
&ndash;:&ndash; use_module(plc(math/rational_ext)).
+:&ndash; use_module(math(math_ext)).
+:&ndash; use_module(math(radix)).
+:&ndash; use_module(math(rational_ext)).
+
+:&ndash; use_module(plDcg(dcg_abnf)).
+:&ndash; use_module(plDcg(dcg_abnf_common)).
+:&ndash; use_module(plDcg(dcg_ascii)).
+:&ndash; use_module(plDcg(dcg_cardinal)).</p>

<p>diff &mdash;git a/load.pl b/load.pl
index de8b5ca..5cec32c 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -7,6 +7,7 @@
 :&ndash; use_module(load_project).
 :&ndash; load_project([</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plDcg,
 plHtml,
 plUri
]).
diff &mdash;git a/plDcg b/plDcg
new file mode 160000
index 0000000..45a2d2b
&mdash;&ndash; /dev/null
+++ b/plDcg
@@ -0,0 +1 @@
+Subproject commit 45a2d2b3ce1e3e18533586005b2a6a63eb2300d0
diff &mdash;git a/plHtml b/plHtml
index b8bd7a6..c2491cb 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit b8bd7a6d92f1076a5be2c4686e998a0bfc840ac8
+Subproject commit c2491cb789baef4b2c7b9e30ca79d65a7213af02
diff &mdash;git a/plUri b/plUri
index 6550f33..f1696b3 160000
&mdash;&ndash; a/plUri
+++ b/plUri
@@ -1 +1 @@
-Subproject commit 6550f331120c7f63739f69692791760afb507280
+Subproject commit f1696b3c41635b4c6af3e961e819a5e6c0bf5b75</li>
</ul>


<p>```</p>

<h2 id="83"> 83: 正在比较变动前 70aec99 和变动后 e06e6ba </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
index 6c22435..26ddd86 100644
&mdash;&ndash; a/.gitmodules
+++ b/.gitmodules
@@ -4,9 +4,6 @@
 [submodule &ldquo;plHtml&rdquo;]</p>

<pre><code>path = plHtml
url = https://github.com/wouterbeek/plHtml.git
</code></pre>

<p>&ndash;[submodule &ldquo;plDcg&rdquo;]
&ndash;   path = plDcg
&ndash;   url = <a href="https://github.com/wouterbeek/plDcg.git">https://github.com/wouterbeek/plDcg.git</a>
 [submodule &ldquo;plUri&rdquo;]</p>

<pre><code>path = plUri
url = https://github.com/wouterbeek/plUri.git
</code></pre>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 3ae0920..9794eef 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -51,14 +51,14 @@</p>

<p> :&ndash; use_module(library(dcg/basics), [float//1,integer//1]).</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_cardinal)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
&ndash;:&ndash; use_module(plDcg(dcg_quote)).
&ndash;:&ndash; use_module(plDcg(dcg_replace)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_ascii)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_cardinal)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_generics)).
+:&ndash; use_module(plc(dcg/dcg_quote)).
+:&ndash; use_module(plc(dcg/dcg_replace)).</p>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 25519af..68f42db 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -18,17 +18,16 @@ Support for GraphViz attributes.
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(os(file_ext)).</p>

<h2>&ndash;:&ndash; use_module(os(file_gnu)).</h2>

<p>&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_meta)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_meta)).
+:&ndash; use_module(plc(dcg/dcg_generics)).
+:&ndash; use_module(plc(generics/db_ext)).
+:&ndash; use_module(plc(io/file_ext)).
+:&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(html_table)).
+:&ndash; use_module(plHtml(elements/html_table)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).</p>

<p>@@ -100,7 +99,7 @@ gv_attr_value(Context, Name=Value) &mdash;></p>

<p>&ndash;% HELPERS
+% HELPERS %</p>

<p> %! check_minimum(+Value:atom, +Minimum:number) is semidet.
 % Trivially succeeds if no minimum value is available for a given attribute.
@@ -112,7 +111,9 @@ check_minimum(V, Min1):&ndash;</p>

<p>&ndash;% INITIALIZATION
+
+
+% INITIALIZATION %</p>

<p> %! assert_gv_attr_row(+Row:list(atom)) is det.</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 7aea965..34d99eb 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -22,19 +22,18 @@
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(generics(db_ext)).
&ndash;:&ndash; use_module(generics(persistent_db_ext)).
&ndash;:&ndash; use_module(os(file_ext)).</p>

<h2>&ndash;:&ndash; use_module(os(file_gnu)).</h2>

<p>&ndash;:&ndash; use_module(plDcg(abnf_core_rules)).
&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_cardinal)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plc(dcg/abnf_core_rules)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_cardinal)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(generics/db_ext)).
+:&ndash; use_module(plc(generics/persistent_db_ext)).
+:&ndash; use_module(plc(io/file_ext)).
+:&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(html_table)).
+:&ndash; use_module(plHtml(elements/html_table)).</p>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p>@@ -46,6 +45,8 @@</p>

<p>+
+
 % color(+Color:compound)// .
 % A <em>color</em> is represented by a compound term of one of the following forms:
 %   1. <code>rgb(Red:nonneg,Green:nonneg,Blue:nonneg)</code>
@@ -89,7 +90,9 @@ wc_weight(Float) &mdash;></p>

<p>&ndash;% INITIALIZATION
+
+
+% INITIALIZATION %</p>

<p> %! gv_color_download is det.</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index e047a74..19657f5 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -29,15 +29,15 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 :&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_arrow)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_atom)).
&ndash;:&ndash; use_module(plDcg(dcg_bracket)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
&ndash;:&ndash; use_module(plDcg(dcg_generics)).
&ndash;:&ndash; use_module(plDcg(dcg_meta)).
&ndash;:&ndash; use_module(plDcg(dcg_quote)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_arrow)).
+:&ndash; use_module(plc(dcg/dcg_ascii)).
+:&ndash; use_module(plc(dcg/dcg_atom)).
+:&ndash; use_module(plc(dcg/dcg_bracket)).
+:&ndash; use_module(plc(dcg/dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_generics)).
+:&ndash; use_module(plc(dcg/dcg_meta)).
+:&ndash; use_module(plc(dcg/dcg_quote)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
diff &mdash;git a/gv_file.pl b/gv_file.pl
index d191e10..6cb739f 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -28,9 +28,9 @@ and GraphViz output files or SVG DOM structures.
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).</p>

<p>&ndash;:&ndash; use_module(generics(code_ext)).
&ndash;:&ndash; use_module(os(file_ext)).
&ndash;:&ndash; use_module(os(run_ext)).
+:&ndash; use_module(plc(generics/code_ext)).
+:&ndash; use_module(plc(io/file_ext)).
+:&ndash; use_module(plc(process/run_ext)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -41,18 +41,18 @@ user:prolog_file_type(dot, dot).
 user:prolog_file_type(pdf, pdf).</p>

<p> :&ndash; predicate_options(codes_to_gv_file/3, 3, [
&ndash;     pass_to(file_to_gv/3, 3)
&ndash;   ]).
+  pass_to(file_to_gv/3, 3)
+]).
 :&ndash; predicate_options(file_to_gv/2, 2, [
&ndash;     pass_to(file_to_gv/3, 3)
&ndash;   ]).
+  pass_to(file_to_gv/3, 3)
+]).
 :&ndash; predicate_options(file_to_gv/3, 3, [
&ndash;     method(+atom),
&ndash;     output(+atom)
&ndash;   ]).
+  method(+atom),
+  output(+atom)
+]).
 :&ndash; predicate_options(export_graph_to_gv_file/3, 3, [
&ndash;     pass_to(codes_to_gv_file/3, 3)
&ndash;   ]).
+  pass_to(codes_to_gv_file/3, 3)
+]).</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 1410c25..65ae2bd 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -43,9 +43,9 @@ cell:   <TD> label </TD>
 @version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
 */</p>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_bracket)).
&ndash;:&ndash; use_module(plDcg(dcg_content)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_bracket)).
+:&ndash; use_module(plc(dcg/dcg_content)).</p>

<p> :&ndash; use_module(plHtml(html_dcg)).</p>

<p>diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index 5776a4a..ac294b4 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -11,14 +11,13 @@
 @version 2014/05-2014/06, 2015/01
 */</p>

<p>&ndash;:&ndash; use_module(math(math_ext)).
&ndash;:&ndash; use_module(math(radix)).</p>

<h2>&ndash;:&ndash; use_module(math(rational_ext)).</h2>

<p>&ndash;:&ndash; use_module(plDcg(dcg_abnf)).
&ndash;:&ndash; use_module(plDcg(dcg_abnf_common)).
&ndash;:&ndash; use_module(plDcg(dcg_ascii)).
&ndash;:&ndash; use_module(plDcg(dcg_cardinal)).
+:&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_abnf_common)).
+:&ndash; use_module(plc(dcg/dcg_ascii)).
+:&ndash; use_module(plc(dcg/dcg_cardinal)).
+:&ndash; use_module(plc(math/math_ext)).
+:&ndash; use_module(plc(math/radix)).
+:&ndash; use_module(plc(math/rational_ext)).</p>

<p>diff &mdash;git a/load.pl b/load.pl
index 5cec32c..de8b5ca 100644
&mdash;&ndash; a/load.pl
+++ b/load.pl
@@ -7,7 +7,6 @@
 :&ndash; use_module(load_project).
 :&ndash; load_project([</p>

<pre><code> plc-'Prolog-Library-Collection',
</code></pre>

<ul>
<li> plDcg,
 plHtml,
 plUri
]).
diff &mdash;git a/plDcg b/plDcg
deleted file mode 160000
index 45a2d2b..0000000
&mdash;&ndash; a/plDcg
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 45a2d2b3ce1e3e18533586005b2a6a63eb2300d0</li>
</ul>


<p>```</p>

<h2 id="84"> 84: 正在比较变动前 e06e6ba 和变动后 0fd12ca </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/plHtml b/plHtml
index c2491cb..37bd0bf 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit c2491cb789baef4b2c7b9e30ca79d65a7213af02
+Subproject commit 37bd0bf33676fc06f9153221715a2cf00c4065d0
diff &mdash;git a/plUri b/plUri
index f1696b3..6550f33 160000
&mdash;&ndash; a/plUri
+++ b/plUri
@@ -1 +1 @@
-Subproject commit f1696b3c41635b4c6af3e961e819a5e6c0bf5b75
+Subproject commit 6550f331120c7f63739f69692791760afb507280</p>

<p>```</p>

<h2 id="85"> 85: 正在比较变动前 0fd12ca 和变动后 67c4157 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/README.md b/README.md
index eb8512b..b4e3017 100644
&mdash;&ndash; a/README.md
+++ b/README.md
@@ -1,26 +1,25 @@
 plGraphViz
 ==========</p>

<p>-Easily export graphs represented as Prolog terms to
&ndash; <a href="http://www.graphviz.org/">GraphViz</a>.
+This library allows you to easily export graphs represented as Prolog terms
+using <a href="http://www.graphviz.org/">GraphViz</a>, an advanced graph drawing library.
 The Prolog terms have the following form:</p>

<p> <del>prolog
 graph(Vertices, Edges, GraphAttrs)
 </del></p>

<p>&ndash;<code>Vertices</code> and <code>Edges</code> are lists of compounds terms of
&ndash; the following form:
+<code>Vertices</code> and <code>Edges</code> are lists of compound terms of the following form:</p>

<p> <del>prolog
 vertex(Id, VertexAttrs)
-edges(FromId, ToId, EdgeAttrs)
+edge(FromId, ToId, EdgeAttrs)
 </del></p>

<p>&ndash;<code>Id</code> identifies a vertex and need not occur in any of the edges
&ndash; (i.e., unconnected vertices are allowed).
+<code>Id</code> identifies a vertex and may or may not occur in any of the edges
+(i.e., unconnected vertices are allowed).
 <code>FromId</code> and <code>ToId</code> may occur in the list of vertices,
&ndash; in order to draw an edge between vertices with set attributes.
+in order to draw an edge between vertices with set attributes.</p>

<p> Attributes have the form <code>Name=Value</code>.
 <code>GraphAttrs</code> are attributes of the graph.
@@ -28,13 +27,12 @@ Attributes have the form <code>Name=Value</code>.
 <code>EdgeAttrs</code> are attributes of the edge.</p>

<p> Attribute values are given as Prolog terms as well,
&ndash; and are type-checked before exporting.
+and are type-checked before exporting.
 Many of the GraphViz attributes are supported.
 New ones are added on an as-needed bases
&ndash; (open an issue on Github if you want to see a specific feature added).
-Supports HTML-like labels, allowing complex tables to be shown
&ndash; inside vertices.
-Support for vertex clusters is currently under way.
+(open an issue on Github if you want to see a specific feature added!).
+HTML-like labels are supported, allowing complex tables to be shown
+inside vertices.</p>

<hr />

<p>@@ -62,7 +60,7 @@ $ swipl run.pl
 <img src="https://raw.githubusercontent.com/wouterbeek/plGraphViz/master/example1.png" title="Example graph." alt="" /></p>

<p> The graphic can be saved to a different file by instantiating
&ndash; the <code>File</code> argument.
+the <code>File</code> argument.</p>

<hr />

<p>@@ -152,4 +150,3 @@ export_graph_to_gv_file(</p>

<hr />

<h2> Developed during 2013-2014 by <a href="http://www.wouterbeek.com">Wouter Beek</a>.</h2>

<p>```</p>

<h2 id="86"> 86: 正在比较变动前 67c4157 和变动后 b972e2b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 68f42db..8ba1535 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -11,7 +11,7 @@
 Support for GraphViz attributes.</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11-2014/12
+@version 2014/06, 2014/11-2014/12, 2015/03
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -23,6 +23,7 @@ Support for GraphViz attributes.
 :&ndash; use_module(plc(dcg/dcg_meta)).
 :&ndash; use_module(plc(dcg/dcg_generics)).
 :&ndash; use_module(plc(generics/db_ext)).
+:&ndash; use_module(plc(generics/print_ext)).
 :&ndash; use_module(plc(io/file_ext)).
 :&ndash; use_module(plc(io/file_gnu)).</p>

<p>@@ -129,11 +130,16 @@ assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
 % Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.</p>

<p> gv_attrs_download:&ndash;
&ndash;  gv_attrs_url(Url),
&ndash;  download_html_dom(Url, Dom, [dialect(html4),silent(true)]),
&ndash;  xpath(Dom, //table(@align=center), TableDom),
&ndash;  html_to_table(TableDom, <em>, Rows),
&ndash;  maplist(assert_gv_attr_row, Rows).
+  report_on_process(
+    &lsquo;Updating GraphViz attributes table&hellip; &rsquo;,
+    (
+      gv_attrs_uri(Uri),
+      download_html_dom(Uri, Dom, [dialect(html5),silent(true)]),
+      xpath(Dom, //table(@align=lower_case(center)), TableDom),
+      html_to_table(TableDom, </em>, Rows),
+      maplist(assert_gv_attr_row, Rows)
+    )
+  ).</p>

<p> %! gv_attrs_file(-File:atom) is det.
@@ -167,9 +173,9 @@ gv_attrs_update(_):&ndash;
   gv_attrs_download.</p>

<p>&ndash;%! gv_attrs_url(-Url:url) is det.
+%! gv_attrs_uri(-Url:url) is det.</p>

<p>-gv_attrs_url(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).
+gv_attrs_uri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</p>

<p> %! safe_db_attach(+File:atom) is det.
diff &mdash;git a/gv_color.pl b/gv_color.pl
index 34d99eb..0ab3fa7 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -13,7 +13,7 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2014/06, 2014/10-2014/11, 2015/01
+@version 2014/06, 2014/10-2014/11, 2015/01, 2015/03
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -29,6 +29,7 @@
 :&ndash; use_module(plc(dcg/dcg_content)).
 :&ndash; use_module(plc(generics/db_ext)).
 :&ndash; use_module(plc(generics/persistent_db_ext)).
+:&ndash; use_module(plc(generics/print_ext)).
 :&ndash; use_module(plc(io/file_ext)).
 :&ndash; use_module(plc(io/file_gnu)).</p>

<p>@@ -97,11 +98,16 @@ wc_weight(Float) &mdash;>
 %! gv_color_download is det.</p>

<p> gv_color_download:&ndash;
&ndash;  gv_color_url(Url),
&ndash;  download_html_dom(Url, Dom, [html_dialect(html4),verbose(silent)]),
&ndash;  xpath(Dom, //table(1), TableDom1),
&ndash;  xpath(Dom, //table(2), TableDom2),
&ndash;  maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2]).
+  report_on_process(
+    &lsquo;Updating the GraphViz color table&hellip;&rsquo;,
+    (
+      gv_color_uri(Uri),
+      download_html_dom(Uri, Dom, [html_dialect(html4),silent(true)]),
+      xpath(Dom, //table(1), TableDom1),
+      xpath(Dom, //table(2), TableDom2),
+      maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2])
+    )
+  ).</p>

<p> assert_color_table(Colorscheme, TableDom):&ndash;
   html_to_table(TableDom, <em>, Rows),
@@ -141,7 +147,7 @@ gv_color_update(</em>):&ndash;
   gv_color_download.</p>

<p>&ndash;%! gv_color_url(-Url:url) is det.
+%! gv_color_uri(-Url:url) is det.</p>

<p>-gv_color_url(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).
+gv_color_uri(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).</p>

<p>```</p>

<h2 id="87"> 87: 正在比较变动前 b972e2b 和变动后 8bbc84c </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 6cb739f..991df5f 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -22,7 +22,8 @@ Also converts between GraphViz DOT formatted files
 and GraphViz output files or SVG DOM structures.</p>

<p> @author Wouter Beek
&ndash;@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08, 2014/11-2014/12
+@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08, 2014/11-2014/12,
+         2015/03
 */</p>

<p> :&ndash; use_module(library(option)).
@@ -30,7 +31,8 @@ and GraphViz output files or SVG DOM structures.</p>

<p> :&ndash; use_module(plc(generics/code_ext)).
 :&ndash; use_module(plc(io/file_ext)).
&ndash;:&ndash; use_module(plc(process/run_ext)).
+:&ndash; use_module(plc(process/process_ext)).
+:&ndash; use_module(plc(process/program_db)).</p>

<p> :&ndash; use_module(plGraphViz(gv_dot)).</p>

<p>@@ -114,15 +116,12 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
   % Run the GraphViz conversion command in the shell.
   format(atom(OutputTypeFlag), &lsquo;-T~a&rsquo;, [OutputType]),
   format(atom(OutputFileFlag), &lsquo;-o~a&rsquo;, [OutputFile]),
&ndash;  process_create(
&ndash;    path(Method),
&ndash;    % @tbd Windows hack:
&ndash;    %%%%&lsquo;C:\Program Files (x86)\Graphviz2.38\bin\dot.exe&rsquo;,
+  atomic_list_concat([&lsquo;GraphViz&rsquo;,Method], &lsquo; &rsquo;, Program),
+  handle_process(
+    Method,</p>

<pre><code> [OutputTypeFlag,file(InputFile),OutputFileFlag],
</code></pre>

<ul>
<li> [process(PID)]</li>
<li>),</li>
<li>process_wait(PID, exit(ShellStatus)),</li>
<li>exit_code_handler(&lsquo;GraphViz&rsquo;, ShellStatus).</li>
<li> [detached(true),program(Program)]</li>
<li>).</li>
</ul>


<p>@@ -155,7 +154,7 @@ export_graph_to_gv_file(ExportGraph, OutputFile, Options):&ndash;</p>

<p> open_dot(File):&ndash;
   once(find_program_by_file_type(dot, Program)),
&ndash;  run_program(Program, [File]).
+  handle_process(Program, [File], [program(&lsquo;GraphViz DOT&rsquo;)]).</p>

<p>```</p>

<h2 id="88"> 88: 正在比较变动前 8bbc84c 和变动后 033fa14 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index 7193a38..e6bec15 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1,4 +1,5 @@
 <em>~
 </em>#
 <em>.db
+</em>.log
 data/*
diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index 9d0e491..ca7adb3 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit 9d0e49135bbd1916d901ccd18be605699f48c5cc
+Subproject commit ca7adb30da33a289e40b01e5e163f860d5c096c7
diff &mdash;git a/README.md b/README.md
index b4e3017..23a45db 100644
&mdash;&ndash; a/README.md
+++ b/README.md
@@ -48,7 +48,6 @@ $ git submodule update &mdash;init</p>

<p> ~~~prolog
 $ swipl run.pl
&ndash;?&ndash; use_module(plGraphViz(gv_file)).
 ?&ndash; export_graph_to_gv_file(</p>

<pre><code>  graph([vertex(1,[]),vertex(2,[])],[edge(1,2,[])],[]),
  File,
</code></pre>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 991df5f..2e0539d 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -42,9 +42,6 @@ and GraphViz output files or SVG DOM structures.
 user:prolog_file_type(dot, dot).
 user:prolog_file_type(pdf, pdf).</p>

<p>&ndash;:&ndash; predicate_options(codes_to_gv_file/3, 3, [
&ndash;  pass_to(file_to_gv/3, 3)
&ndash;]).
 :&ndash; predicate_options(file_to_gv/2, 2, [
   pass_to(file_to_gv/3, 3)
 ]).
@@ -53,30 +50,13 @@ user:prolog_file_type(pdf, pdf).
   output(+atom)
 ]).
 :&ndash; predicate_options(export_graph_to_gv_file/3, 3, [
&ndash;  pass_to(codes_to_gv_file/3, 3)
+  pass_to(file_to_gv/3, 3)
 ]).</p>

<p>&ndash;%! codes_to_gv_file(
&ndash;%!   +Codes:list(code),
&ndash;%!   ?OutputFile:atom,
&ndash;%!   +Options:list(nvpair)</p>

<h2>&ndash;%! ) is det.</h2>

<p>-codes_to_gv_file(Codes, OutputFile, Options):&ndash;
&ndash;  absolute_file_name(data(tmp), TmpFile, [access(write),extensions([dot])]),
&ndash;  setup_call_cleanup(
&ndash;    open(TmpFile, write, Write, [encoding(utf8)]),
&ndash;    put_codes(Write, Codes),
&ndash;    close(Write)
&ndash;  ),</p>

<h2>&ndash;  file_to_gv(TmpFile, OutputFile, Options).</h2>

<h2>&ndash;</h2>

<p> %! file_to_gv(+InputFile:atom, +Options:list(nvpair)) is det.</p>

<p> file_to_gv(InputFile, Options):&ndash;
@@ -120,7 +100,7 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
   handle_process(</p>

<pre><code> Method,
 [OutputTypeFlag,file(InputFile),OutputFileFlag],
</code></pre>

<ul>
<li> [detached(true),program(Program)]</li>
<li> [program(Program)]
).</li>
</ul>


<p>@@ -142,19 +122,30 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;</p>

<p> export_graph_to_gv_file(ExportGraph, OutputFile, Options):&ndash;
   once(phrase(gv_graph(ExportGraph), Codes)),
&ndash;  codes_to_gv_file(Codes, OutputFile, Options).
+<br/>
+  % Be thread-safe.
+  thread_self(Id),
+  atomic_list_concat([gv_file,Id], &lsquo;_&rsquo;, ThreadName),
+  absolute_file_name(
+    data(ThreadName),
+    TmpFile,
+    [access(write),extensions([dot])]
+  ),
+  setup_call_cleanup(
+    open(TmpFile, write, Write, [encoding(utf8)]),
+    put_codes(Write, Codes),
+    close(Write)
+  ),
+  file_to_gv(TmpFile, OutputFile, Options).</p>

<p> %! open_dot(+File:atom) is det.
 % Opens the given DOT file.
&ndash;%
&ndash;% @tbd Test support on Windows.
&ndash;% @tbd Test support on OS-X.</p>

<p> open_dot(File):&ndash;
   once(find_program_by_file_type(dot, Program)),
&ndash;  handle_process(Program, [File], [program(&lsquo;GraphViz DOT&rsquo;)]).
+  handle_process(Program, [file(File)], []).</p>

<p>diff &mdash;git a/plHtml b/plHtml
index 37bd0bf..2919705 160000
&mdash;&ndash; a/plHtml
+++ b/plHtml
@@ -1 +1 @@
-Subproject commit 37bd0bf33676fc06f9153221715a2cf00c4065d0
+Subproject commit 2919705d079b1ab28bf3c502a87d1648fd842ed3
diff &mdash;git a/plUri b/plUri
index 6550f33..1a55127 160000
&mdash;&ndash; a/plUri
+++ b/plUri
@@ -1 +1 @@
-Subproject commit 6550f331120c7f63739f69692791760afb507280
+Subproject commit 1a55127517ee0b0cf2ad4fecbe3f84402f5f4c12
diff &mdash;git a/run.pl b/run.pl
index 8bba736..8c751f4 100644
&mdash;&ndash; a/run.pl
+++ b/run.pl
@@ -7,3 +7,5 @@
   :&ndash; ensure_loaded(load).
 :&ndash; endif.</p>

<p>+:&ndash; use_module(plGraphViz(gv_file)).
+</p>

<p>```</p>

<h2 id="89"> 89: 正在比较变动前 033fa14 和变动后 fdb5a9e </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 9794eef..ce8012b 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -212,7 +212,13 @@ doubleList(L) &mdash;>
 % @tbd Support for context-dependent replacements.</p>

<p> escString(String) &mdash;>
&ndash;  {dcg_phrase(dcg_replace(double_quote, escaped_double_quote), String, String0)},
+  {
+    atom_phrase(
+      dcg_replace(double_quote, escaped_double_quote),
+      String,
+      String0
+    )
+  },
   quoted(atom(String0)).
 escaped_double_quote &mdash;>
   &ldquo;\\&rdquo;&ldquo;.
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 8ba1535..fc8529a 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -119,8 +119,8 @@ check_minimum(V, Min1):&ndash;
 %! assert_gv_attr_row(+Row:list(atom)) is det.</p>

<p> assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
&ndash;  dcg_phrase(translate_usedby(UsedBy2), UsedBy1),
&ndash;  once(dcg_phrase(translate_type(Types2), Types1)),
+  atom_phrase(translate_usedby(UsedBy2), UsedBy1),
+  once(atom_phrase(translate_type(Types2), Types1)),
   sort(UsedBy2, UsedBy3),
   translate_default(Default1, Default2),
   assert_gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes).</p>

<p>```</p>

<h2 id="90"> 90: 正在比较变动前 fdb5a9e 和变动后 6ec582e </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>```</p>

<h2 id="91"> 91: 正在比较变动前 6ec582e 和变动后 68b53b8 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index fc8529a..20036b3 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -28,7 +28,7 @@ Support for GraphViz attributes.
 :&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(elements/html_table)).
+:&ndash; use_module(plHtml(element/html_table)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 0ab3fa7..7da7313 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -34,7 +34,7 @@
 :&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(elements/html_table)).
+:&ndash; use_module(plHtml(element/html_table)).</p>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p>```</p>

<h2 id="92"> 92: 正在比较变动前 68b53b8 和变动后 46e8f3c </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 20036b3..add0721 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -28,7 +28,7 @@ Support for GraphViz attributes.
 :&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(element/html_table)).
+:&ndash; use_module(plHtml(html_table)).</p>

<p> :&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 7da7313..41e153b 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -34,7 +34,7 @@
 :&ndash; use_module(plc(io/file_gnu)).</p>

<p> :&ndash; use_module(plHtml(html)).
&ndash;:&ndash; use_module(plHtml(element/html_table)).
+:&ndash; use_module(plHtml(html_table)).</p>

<p> :&ndash; db_add_novel(user:prolog_file_type(log, logging)).</p>

<p>```</p>

<h2 id="93"> 93: 正在比较变动前 46e8f3c 和变动后 3162d88 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 2e0539d..2c6ed93 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -113,7 +113,7 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
&ndash;%   &ndash; <code>method(+Method:atom</code>
+%   &ndash; <code>method(+Method:atom)</code>
 %     The algorithm used by GraphViz for positioning the tree nodes.
 %     Either =dot= (default) or =sfdp=.
 %   &ndash; <code>output(+FileType:atom)</code>
@@ -122,7 +122,7 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;</p>

<p> export_graph_to_gv_file(ExportGraph, OutputFile, Options):&ndash;</p>

<h2>   once(phrase(gv_graph(ExportGraph), Codes)),</h2>

<p>+
   % Be thread-safe.
   thread_self(Id),
   atomic_list_concat([gv_file,Id], &lsquo;_&rsquo;, ThreadName),</p>

<p>```</p>

<h2 id="94"> 94: 正在比较变动前 3162d88 和变动后 714b2e0 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index ce8012b..1e3515c 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -49,7 +49,7 @@
 @version 2014/06, 2014/11-2015/01
 */</p>

<p>&ndash;:&ndash; use_module(library(dcg/basics), [float//1,integer//1]).
+:&ndash; use_module(library(dcg/basics)).</p>

<p> :&ndash; use_module(plc(dcg/dcg_abnf)).
 :&ndash; use_module(plc(dcg/dcg_ascii)).
diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index add0721..489ce51 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -15,6 +15,7 @@ Support for GraphViz attributes.
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index 41e153b..c4c82b4 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -17,7 +17,7 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/basics), [float//1]).
+:&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 19657f5..637a5ab 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -26,6 +26,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(ordsets)).</p>

<p>```</p>

<h2 id="95"> 95: 正在比较变动前 714b2e0 和变动后 af7a387 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 1e3515c..6d572ab 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -49,7 +49,7 @@
 @version 2014/06, 2014/11-2015/01
 */</p>

<p>&ndash;:&ndash; use_module(library(dcg/basics)).
+:&ndash; use_module(library(dcg/basics), except([string//1])).</p>

<p> :&ndash; use_module(plc(dcg/dcg_abnf)).
 :&ndash; use_module(plc(dcg/dcg_ascii)).</p>

<p>```</p>

<h2 id="96"> 96: 正在比较变动前 af7a387 和变动后 7b434e3 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index c4c82b4..1f3f9d6 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -22,8 +22,8 @@
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/abnf_core_rules)).
 :&ndash; use_module(plc(dcg/dcg_abnf)).
+:&ndash; use_module(plc(dcg/dcg_abnf_rules)).
 :&ndash; use_module(plc(dcg/dcg_atom)).
 :&ndash; use_module(plc(dcg/dcg_cardinal)).
 :&ndash; use_module(plc(dcg/dcg_content)).
diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index ac294b4..bff1255 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -16,6 +16,7 @@
 :&ndash; use_module(plc(dcg/dcg_ascii)).
 :&ndash; use_module(plc(dcg/dcg_cardinal)).
 :&ndash; use_module(plc(math/math_ext)).
+:&ndash; use_module(plc(math/positional)).
 :&ndash; use_module(plc(math/radix)).
 :&ndash; use_module(plc(math/rational_ext)).</p>

<p>@@ -56,7 +57,7 @@ gv_numeral(N) &mdash;></p>

<pre><code>   (   % [1] The fractional is zero, so only write the integer part
       %     and do not write the decimal separator.
       {F =:= 0}
</code></pre>

<ul>
<li>   &ndash;>  {weights_nonneg(IW, I)},</li>
<li>   &ndash;>  {positional(I, IW)},
       &lsquo;[0-9]+&rsquo;(IW)
   ;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,
       %     preceded by the decimal separator.
@@ -66,7 +67,7 @@ gv_numeral(N) &mdash;>
       &lsquo;[0-9]*&rsquo;(FW)
   ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
       %     so write both of them, with the decimal separator in-between.</li>
<li><pre><code>   {weights_nonneg(IW, I)},
</code></pre></li>
<li><pre><code>   {positional(I, IW)},
   '[0-9]+'(IW),
   ".",
   {weights_fraction(FW, F)},
</code></pre></li>
</ul>


<p>```</p>

<h2 id="97"> 97: 正在比较变动前 7b434e3 和变动后 dcbcb4d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index 637a5ab..e98361b 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -146,151 +146,14 @@ gv_generic_attributes_statement(<em>, </em>, []) &mdash;> [], !.
 gv_generic_attributes_statement(Kind, I, KindAttrs) &mdash;>
   indent(I),
   gv_kind(Kind), &ldquo; &rdquo;,
&ndash;  bracketed(square, &lsquo;*&rsquo;(gv_attr(Kind), KindAttrs, [])),</p>

<h2>&ndash;  line_feed.</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gv_graph(+Graph:compound)//
&ndash;% The follow graph attributes are supported,
&ndash;% beyond the GraphViz attributes for graphs:
&ndash;%   * <code>directed(+boolean)</code>
&ndash;%      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
&ndash;%      Default: <code>false</code>.
&ndash;%   * <code>name(+GraphName:atom)</code>
&ndash;%   * <code>strict(+StrictGraph:boolean)</code>
&ndash;%      This forbids the creation of self-arcs and multi-edges;
&ndash;%      they are ignored in the input file.
&ndash;%      Only in combinattion with directionality <code>directed</code>.
&ndash;%
&ndash;% <code>abnf
-% graph = ["strict"] ("graph" / "digraph") [ID] "{" stmt_list "}"
-%</code>
&ndash;%
&ndash;% <code>GraphTerm</code> is a compound term of the following form:
&ndash;% <code>prolog
-% graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
-%</code>
&ndash;%
&ndash;% <code>RankedVertexTerms</code> is a list of compound terms of the following form:
&ndash;% <code>prolog
-% rank(RankNode,ContentNodes)
-%</code>
&ndash;%
&ndash;% @tbd Add support for subgraphs (arbitrary nesting).
&ndash;% @tbd Add support for escape strings:
&ndash;%      <a href="http://www.graphviz.org/doc/info/attrs.html#k:escString">http://www.graphviz.org/doc/info/attrs.html#k:escString</a>
&ndash;% @tbd Assert attributes that are generic with respect to a subgraph.</p>

<h2>&ndash;% @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</h2>

<p>-gv_graph(graph(VTerms,ETerms,GAttrs)) &mdash;></p>

<h2>&ndash;  gv_graph(graph(VTerms,[],ETerms,GAttrs)).</h2>

<p>-gv_graph(graph(VTerms,RankedVTerms,ETerms,GAttrs1)) &mdash;>
&ndash;  {
&ndash;    shared_attributes(VTerms, SharedVAttrs, NewVTerms),
&ndash;    shared_attributes(ETerms, SharedEAttrs, NewETerms),
&ndash;    select_nvpair(strict=Strict, GAttrs1, GAttrs2, false),
&ndash;    select_nvpair(directed=Directed, GAttrs2, GAttrs3, true),
&ndash;    select_nvpair(name=GName, GAttrs3, GAttrs4, noname),
&ndash;    add_default_nvpair(GAttrs4, overlap, false, GAttrs5),
&ndash;    I = 0</p>

<h2>&ndash;  },</h2>

<ul>
<li>% The first statement in the GraphViz output.</li>
<li>% States that this file represents a graph according to the GraphViz format.</li>
<li>indent(I),</li>
<li>gv_strict(Strict),</li>
<li>gv_graph_type(Directed), &ldquo; &rdquo;,

<h2>&ndash;  gv_id(GName), &ldquo; &rdquo;,</h2></li>
<li>% The body of the DOT file appears between curly braces.</li>
<li>bracketed(</li>
<li> curly,</li>
<li> gv_graph0(</li>
<li>   I,</li>
<li>   NewVTerms, SharedVAttrs, RankedVTerms,</li>
<li>   NewETerms, SharedEAttrs,</li>
<li>   Directed, GAttrs5</li>
<li> )</li>
<li>),

<h2>&ndash;  line_feed.</h2>

<p>-gv_graph0(</p></li>
<li>I,</li>
<li>NewVTerms, SharedVAttrs, RankedVTerms,</li>
<li>NewETerms, SharedEAttrs,</li>
<li>Directed, GAttrs
&ndash;) &mdash;>

<h2>&ndash;  line_feed,</h2></li>
<li>% The following lines are indented.

<h2>&ndash;  {NewI is I + 1},</h2></li>
<li>% Attributes that apply to the graph as a whole.

<h2>&ndash;  gv_generic_attributes_statement(graph, NewI, GAttrs),</h2></li>
<li>% Attributes that are the same for all nodes.

<h2>&ndash;  gv_generic_attributes_statement(node, NewI, SharedVAttrs),</h2></li>
<li>% Attributes that are the same for all edges.

<h2>&ndash;  gv_generic_attributes_statement(edge, NewI, SharedEAttrs),</h2></li>
<li>% Only add a line_feed if some content was already written</li>
<li>% and some content is about to be written.</li>
<li>(</li>
<li> {</li>
<li>   % Succeeds if no content was written.</li>
<li>   (GAttrs == [], SharedVAttrs == [], SharedEAttrs == [])</li>
<li> ;</li>
<li>   % Succeeds if no content is about to be written.</li>
<li>   (NewVTerms == [], RankedVTerms == [])</li>
<li> }</li>
<li>&ndash;></li>
<li> &ldquo;&rdquo;</li>
<li>;</li>
<li> line_feed

<h2>&ndash;  ),</h2></li>
<li>% The list of GraphViz nodes.</li>
<li>&lsquo;*&rsquo;(gv_node_statement(NewI), NewVTerms, []),

<h2>&ndash;  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</h2></li>
<li>% The ranked GraphViz nodes (displayed at the same height).</li>
<li>&lsquo;*&rsquo;(gv_ranked_node_collection(NewI), RankedVTerms, []),

<h2>&ndash;  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; line_feed),</h2></li>
<li>{</li>
<li> findall(</li>
<li>   edge(FromId,ToId,[]),</li>
<li>   (</li>
<li><pre><code> nth0(Index1, RankedVTerms, rank(vertex(FromId,_),_)),
</code></pre></li>
<li><pre><code> nth0(Index2, RankedVTerms, rank(vertex(ToId,_),_)),
</code></pre></li>
<li><pre><code> % We assume that the rank vertices are nicely ordered.
</code></pre></li>
<li><pre><code> succ(Index1, Index2)
</code></pre></li>
<li>   ),</li>
<li>   RankEdges</li>
<li> )

<h2>&ndash;  },</h2></li>
<li>% The rank edges.

<h2>&ndash;  &lsquo;*&rsquo;(gv_edge_statement(NewI, Directed), RankEdges, []),</h2></li>
<li>% The non-rank edges.

<h2>&ndash;  &lsquo;*&rsquo;(gv_edge_statement(NewI, Directed), NewETerms, []),</h2></li>
<li>% Note that we do not include a line_feed here.</li>
<li>&ldquo;[&rdquo;,</li>
<li>gv_attrs(Kind, KindAttrs),</li>
<li><p>&ldquo;]\n&rdquo;.</p></li>
<li><p>% We want to indent the closing curly brace.</p>

<h2>&ndash;  indent(I).</h2>

<h2>&ndash;</h2>

&ndash;%! gv_graph_type(+Directed:boolean)// .

<h2>&ndash;% The type of graph that is represented.</h2>

<p>-gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
-gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
+gv_attrs(_, []) &mdash;> !, &ldquo;&rdquo;.
+gv_attrs(Kind, [H|T]) &mdash;></p></li>
<li>gv_attr(Kind, H),</li>
<li>gv_attrs(Kind, T).</li>
</ul>


<p>@@ -456,53 +319,3 @@ gv_ranked_node_collection(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;></p>

<pre><code> indent(I)
</code></pre>

<p>   )),</p>

<h2>   line_feed.</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gv_strict(+Strict:boolean)// is det.
&ndash;% The keyword denoting that the graph is strict, i.e., has no self-arcs and
&ndash;% no multi-edges.</p>

<h2>&ndash;% This only applies to directed graphs.</h2>

<p>-gv_strict(false) &mdash;> [].</p>

<h2>-gv_strict(true) &mdash;> &ldquo;strict &rdquo;.</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS</h2>

<p>-add_default_nvpair(Attrs1, N, Default, Attrs2):&ndash;</p>

<h2>&ndash;  add_default_nvpair(Attrs1, N, Default, _, Attrs2).</h2>

<p>-add_default_nvpair(Attrs, N, _, V, Attrs):&ndash;
&ndash;  memberchk(N=V, Attrs), !.
-add_default_nvpair(Attrs1, N, Default, Default, Attrs2):&ndash;</p>

<h2>&ndash;  ord_add_element(Attrs1, N=Default, Attrs2).</h2>

<p>-select_nvpair(N=V, Attrs1, Attrs2, _):&ndash;
&ndash;  memberchk(N=V, Attrs1), !,
&ndash;  select(N=V, Attrs1, Attrs2).</p>

<h2>-select_nvpair(_=Default, Attrs, Attrs, Default).</h2>

<p>&ndash;
-extract_shared([], []):&ndash; !.
-extract_shared(Argss, Shared):&ndash;</p>

<h2>&ndash;  ord_intersection(Argss, Shared).</h2>

<p>-remove_shared_attributes(Shared, Args1, Args2):&ndash;</p>

<h2>&ndash;  ord_subtract(Args1, Shared, Args2).</h2>

<p>-shared_attributes(Terms1, SharedAs, Terms2):&ndash;
&ndash;  maplist(term_to_attrs, Terms1, As1),
&ndash;  extract_shared(As1, SharedAs),
&ndash;  maplist(remove_shared_attributes(SharedAs), As1, As2),</p>

<h2>&ndash;  maplist(term_change_attrs, Terms1, As2, Terms2).</h2>

<p>-term_change_attrs(edge(From,To,_), A, edge(From,To,A)).</p>

<h2>-term_change_attrs(vertex(Id,_), A, vertex(Id,A)).</h2>

<p>-term_to_attrs(edge(<em>,</em>,A), A).</p>

<h2>-term_to_attrs(vertex(_,A), A).</h2>

<p>diff &mdash;git a/gv_file.pl b/gv_file.pl
index 2c6ed93..5d2228e 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -1,40 +1,24 @@
 :&ndash; module(
   gv_file,
   [
&ndash;    file_to_gv/2, % +InputFile:atom
&ndash;                  % +Options:list(nvpair)
&ndash;    file_to_gv/3, % +InputFile:atom
&ndash;                  % ?OutputFile:atom
&ndash;                  % +Options:list(nvpair)
&ndash;    export_graph_to_gv_file/3, % +ExportGraph:compound
&ndash;                               % ?OutputFile:atom
&ndash;                               % +Options:list(nvpair)
&ndash;    open_dot/1 % +File:file
+    gv_export/3 % +ExportGraph:compound
+                % +OutputFile:atom
+                % +Options:list(nvpair)
   ]
 ).</p>

<p> /** <module> GraphViz file</p>

<p>-Predicates for converting GIF-formatted terms</p>

<h2>-into GraphViz output files or SVG DOM structures.</h2>

<p>-Also converts between GraphViz DOT formatted files</p>

<h2>-and GraphViz output files or SVG DOM structures.</h2>

<p> @author Wouter Beek
&ndash;@version 2013/09, 2013/11-2014/01, 2014/05, 2014/07-2014/08, 2014/11-2014/12,
&ndash;         2015/03
+@version 2015/07
 */</p>

<p>+:&ndash; use_module(library(error)).
+:&ndash; use_module(library(gv/gv_dot)).
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).</p>

<p>&ndash;:&ndash; use_module(plc(generics/code_ext)).
&ndash;:&ndash; use_module(plc(io/file_ext)).
 :&ndash; use_module(plc(process/process_ext)).</p>

<h2>&ndash;:&ndash; use_module(plc(process/program_db)).</h2>

<p>&ndash;:&ndash; use_module(plGraphViz(gv_dot)).</p>

<p> :&ndash; dynamic(user:prolog_file_type/2).
 :&ndash; multifile(user:prolog_file_type/2).
@@ -42,29 +26,43 @@ and GraphViz output files or SVG DOM structures.
 user:prolog_file_type(dot, dot).
 user:prolog_file_type(pdf, pdf).</p>

<p>&ndash;:&ndash; predicate_options(file_to_gv/2, 2, [
&ndash;  pass_to(file_to_gv/3, 3)
&ndash;]).
&ndash;:&ndash; predicate_options(file_to_gv/3, 3, [
&ndash;  method(+atom),
&ndash;  output(+atom)
&ndash;]).
&ndash;:&ndash; predicate_options(export_graph_to_gv_file/3, 3, [
&ndash;  pass_to(file_to_gv/3, 3)</p>

<h2>&ndash;]).</h2>

<p>+:&ndash; predicate_options(gv_export/3, 3, [pass_to(file_to_gv/3, 3)]).
+:&ndash; predicate_options(file_to_gv/3, 3, [method(+atom),output(+atom)]).</p>

<p>+%! gv_export(
+%!   +ExportGraph:compound,
+%!   +OutputFile:atom,
+%!   +Options:list(nvpair)
+%! ) is det.
+% Returns a file containing a GraphViz visualization of the given graph.
+%
+% The following options are supported:
+%   &ndash; <code>method(+Method:atom)</code>
+%     The algorithm used by GraphViz for positioning the tree nodes.
+%     Either =dot= (default) or =sfdp=.
+%   &ndash; <code>output(+FileType:atom)</code>
+%     The file type of the generated GraphViz file.
+%     Default: <code>pdf</code>.</p>

<p>&ndash;%! file_to_gv(+InputFile:atom, +Options:list(nvpair)) is det.
+gv_export(ExportGraph, OutputFile, Options):&ndash;
+  once(phrase(gv_graph(ExportGraph), Codes)),</p>

<p>-file_to_gv(InputFile, Options):&ndash;
&ndash;  file_to_gv(InputFile, <em>, Options).
+  % Be thread-safe.
+  thread_self(Id),
+  atomic_list_concat([gv_file,Id], &lsquo;</em>&rsquo;, ThreadName),
+  absolute_file_name(data(ThreadName), TmpFile, [access(write),file_type(dot)]),
+  setup_call_cleanup(
+    open(TmpFile, write, Write, [encoding(utf8)]),
+    put_codes(Write, Codes),
+    close(Write)
+  ),
+  file_to_gv(TmpFile, OutputFile, Options).</p>

<p> %! file_to_gv(
 %!   +InputFile:atom,
&ndash;%!   ?OutputFile:atom,
+%!   +OutputFile:atom,
 %!   +Options:list(nvpair)
 %! ) is det.
 % Converts a GraphViz DOT file to an image file, using a specific
@@ -87,12 +85,6 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
   findall(OutputType0, gv_output_type(OutputType0), OutputTypes),
   must_be(oneof(OutputTypes), OutputType),</p>

<ul>
<li>% The output file is either given or created.</li>
<li>(   var(OutputFile)</li>
<li>&ndash;>  file_alternative(InputFile, <em>, </em>, OutputType, OutputFile)</li>
<li>;   is_absolute_file_name(OutputFile)

<h2>&ndash;  ),</h2>

<p>% Run the GraphViz conversion command in the shell.
format(atom(OutputTypeFlag), &lsquo;-T~a&rsquo;, [OutputType]),
format(atom(OutputFileFlag), &lsquo;-o~a&rsquo;, [OutputFile]),
@@ -105,53 +97,7 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;</p></li>
</ul>


<p>&ndash;%! export_graph_to_gv_file(
&ndash;%!   +ExportGraph:compound,
&ndash;%!   ?OutputFile:atom,
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
&ndash;% Returns a file containing a GraphViz visualization of the given graph.
&ndash;%
&ndash;% The following options are supported:
&ndash;%   &ndash; <code>method(+Method:atom)</code>
&ndash;%     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   &ndash; <code>output(+FileType:atom)</code>
&ndash;%     The file type of the generated GraphViz file.</p>

<h2>&ndash;%     Default: <code>pdf</code>.</h2>

<p>-export_graph_to_gv_file(ExportGraph, OutputFile, Options):&ndash;</p>

<h2>&ndash;  once(phrase(gv_graph(ExportGraph), Codes)),</h2>

<ul>
<li>% Be thread-safe.</li>
<li>thread_self(Id),</li>
<li>atomic_list_concat([gv_file,Id], &lsquo;_&rsquo;, ThreadName),</li>
<li>absolute_file_name(</li>
<li> data(ThreadName),</li>
<li> TmpFile,</li>
<li> [access(write),extensions([dot])]</li>
<li>),</li>
<li>setup_call_cleanup(</li>
<li> open(TmpFile, write, Write, [encoding(utf8)]),</li>
<li> put_codes(Write, Codes),</li>
<li> close(Write)</li>
<li>),

<h2>&ndash;  file_to_gv(TmpFile, OutputFile, Options).</h2>

<h2>&ndash;</h2>

&ndash;%! open_dot(+File:atom) is det.

<h2>&ndash;% Opens the given DOT file.</h2>

<p>-open_dot(File):&ndash;</p></li>
<li>once(find_program_by_file_type(dot, Program)),

<h2>&ndash;  handle_process(Program, [file(File)], []).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<p>&ndash;% HELPERS
+% HELPERS %</p></li>
</ul>


<p> gv_method(circo).
 gv_method(dot).
@@ -162,7 +108,6 @@ gv_method(sfdp).
 gv_method(twopi).</p>

<p>&ndash;
 gv_output_type(bmp).
 gv_output_type(canon).
 gv_output_type(dot).
diff &mdash;git a/gv_graph.pl b/gv_graph.pl
new file mode 100644
index 0000000..dd4af97
&mdash;&ndash; /dev/null
+++ b/gv_graph.pl
@@ -0,0 +1,229 @@
+:&ndash; module(
+  gv_graph,
+  [
+    gv_graph//1 % +Graph:compound
+  ]
+).
+
+/<em>* <module> GraphViz graph
+
+@author Wouter Beek
+@version 2015/07
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(option)).
+
+
+
+%! gv_graph(+Graph:compound)//
+% The follow graph attributes are supported,
+% beyond the GraphViz attributes for graphs:
+%   * <code>directed(+boolean)</code>
+%      Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
+%      Default: <code>false</code>.
+%   * <code>name(+GraphName:atom)</code>
+%   * <code>strict(+StrictGraph:boolean)</code>
+%      This forbids the creation of self-arcs and multi-edges;
+%      they are ignored in the input file.
+%      Only in combinattion with directionality <code>directed</code>.
+%
+% <code>abnf
+% graph = ["strict"] ("graph" / "digraph") [ID] "{" stmt_list "}"
+%</code>
+%
+% <code>GraphTerm</code> is a compound term of the following form:
+% <code>prolog
+% graph(VertexTerms,RankedVertexTerms,EdgeTerms,GraphAttributes)
+%</code>
+%
+% <code>RankedVertexTerms</code> is a list of compound terms of the following form:
+% <code>prolog
+% rank(RankNode,ContentNodes)
+%</code>
+%
+% @tbd Add support for subgraphs (arbitrary nesting).
+% @tbd Add support for escape strings:
+%      <a href="http://www.graphviz.org/doc/info/attrs.html#k:escString">http://www.graphviz.org/doc/info/attrs.html#k:escString</a>
+% @tbd Assert attributes that are generic with respect to a subgraph.
+% @tbd Not all vertex and edge properties can be shared it seems (e.g., label).
+
+gv_graph(G) &mdash;>
+  gv_graph(G, 0).
+
+gv_graph(G1, I) &mdash;>
+  {
+    include_ranks(G1, G2),
+    G2 = graph(VTerms,RankedVTerms,ETerms,GAttrs1),
+    shared_attributes(VTerms, SharedVAttrs, NewVTerms),
+    shared_attributes(ETerms, SharedEAttrs, NewETerms),
+    add_default(GAttrs1, overlap(false), GAttrs2),
+    I = 0
+  },
+
+  % The first statement in the GraphViz output.
+  % States that this file represents a graph according to the GraphViz format.
+  indent(I),
+<br/>
+  % Strictness.
+  {select_option(strict(Strict), GAttrs2, GAttrs3, false)},
+  gv_strict(Strict),
+<br/>
+  % Directedness.
+  {select_option(directed(Directed), GAttrs3, GAttrs4, true)},
+  gv_graph_type(Directed), &ldquo; &rdquo;,
+<br/>
+  % Graph name.
+  (   {select_name(GName), GAttrs4, GAttrs5)}
+  &ndash;>  gv_id(GName), &ldquo; &rdquo;,
+  ;   {GAttrs5 = GAttrs4}
+  ),
+
+  % The body of the DOT file appears between curly braces.
+  &ldquo;{\n&rdquo;,
+
+  % The following lines are indented.
+  {NewI is I + 1},
+
+  % Attributes that apply to the graph as a whole.
+  gv_generic_attributes_statement(graph, NewI, GAttrs5),
+
+  % Attributes that are the same for all nodes.
+  gv_generic_attributes_statement(node, NewI, SharedVAttrs),
+
+  % Attributes that are the same for all edges.
+  gv_generic_attributes_statement(edge, NewI, SharedEAttrs),
+
+  % Only add a line_feed if some content was already written
+  % and some content is about to be written.
+  (   % Succeeds if no content was written.
+      {(GAttrs == [], SharedVAttrs == [], SharedEAttrs == [])}
+  &ndash;>  &ldquo;&rdquo;
+  ;   % Succeeds if no content is about to be written.
+      {(NewVTerms == [], RankedVTerms == [])}
+  &ndash;>  &ldquo;&rdquo;
+  ;   &ldquo;\n&rdquo;
+  ),
+
+  % The list of GraphViz nodes.
+  gv_node_statements(NewI, NewVTerms),
+  (   {NewVTerms == []}
+  &ndash;>  &ldquo;&rdquo;
+  ;   &ldquo;\n&rdquo;
+  ),
+
+  % The ranked GraphViz nodes (displayed at the same height).
+  gv_ranked_node_collections(NewI, RankedVTerms),
+  (   {RankedVTerms == []}
+  &ndash;>  &ldquo;&rdquo;
+  ;   &ldquo;\n&rdquo;
+  ),
+
+  {
+    findall(
+      edge(FromId,ToId,[]),
+      (
+        nth0(Index1, RankedVTerms, rank(vertex(FromId,<em>),</em>)),
+        nth0(Index2, RankedVTerms, rank(vertex(ToId,<em>),</em>)),
+        % We assume that the rank vertices are nicely ordered.
+        succ(Index1, Index2)
+      ),
+      RankEdges
+    )
+  },
+
+  % The rank edges.
+  gv_edge_statements(NewI, Directed, RankEdges),
+
+  % The non-rank edges.
+  gv_edge_statements(NewI, Directed, NewETerms),
+<br/>
+  % Note that we do not include a line_feed here.
+
+  % We want to indent the closing curly brace.
+  indent(I),
+  &ldquo;}\n&rdquo;.
+
+gv_edge_statements(<em>, </em>, []) &mdash;> !, &ldquo;&rdquo;.
+gv_edge_statements(I, Dir, [H|T]) &mdash;>
+  gv_edge_statement(I, Dir, H),
+  gv_edge_statements(I, Dir, T).
+
+gv_node_statements(<em>, []) &mdash;> !, &ldquo;&rdquo;.
+gv_node_statements(I, [H|T]) &mdash;>
+  gv_node_statement(I, H),
+  gv_node_statements(I, T).
+
+gv_ranked_node_collections(</em>, []) &mdash;> !, &ldquo;&rdquo;.
+gv_ranked_node_collections(I, [H|T]) &mdash;>
+  gv_ranked_node_collection(I, H),
+  gv_ranked_node_collections(I, T),
+
+
+
+% HELPERS %
+
+%! add_default_option(
+%!   +Options:list(compound),
+%!   +Default:compound,
+%!   -NewOptions:list(compound)
+%! ) is det.
+
+add_default(L1, Opt, L2):&ndash;
+  Opt =.. [N,V],
+  Opt0 =.. [N,<em>],
+  (   option(Opt0, L1)
+  &ndash;>  true
+  ;   L2 = [Opt|L1]
+  ).
+
+
+%! gv_graph_type(+Directed:boolean)// is det.
+% The type of graph that is represented.
+
+gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
+gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
+
+
+%! gv_strict(+Strict:boolean)// is det.
+% The keyword denoting that the graph is strict, i.e., has no self-arcs and
+% no multi-edges.
+% This only applies to directed graphs.
+
+gv_strict(false) &mdash;> [].
+gv_strict(true) &mdash;> &ldquo;strict &rdquo;.
+
+
+%! invlude_ranges(+Graph:compound, -GraphWithRanks:compound) is det.
+% Ensures that there is a ranks components in
+% the graph-denoting compound term.
+
+include_ranks(graph(Vs,Rs,Es,L), graph(Vs,Rs,Es,L)).
+include_ranks(graph(Vs,Es,L), graph(Vs,[],Es,L)).
+
+
+%! shared_attributes(
+%!   +Terms:list(compound),
+%!   -SharedAttributes:list(compound),
+%!   -NewTerms:list(compound)
+%! ) is det.
+
+shared_attributes(Ts1, Shared, Ts2):&ndash;
+  maplist(term_to_attrs, Ts1, L1),
+  extract_shared(L1, Shared),
+  maplist(remove_shared_attributes(Shared), L1, L2),
+  maplist(term_change_attrs, Ts1, L2, Ts2).
+
+term_to_attrs(edge(</em>,<em>,A), A).
+term_to_attrs(vertex(</em>,A), A).
+
+extract_shared([], []):&ndash; !.
+extract_shared(Argss, Shared):&ndash;
+  ord_intersection(Argss, Shared).
+
+remove_shared_attributes(Shared, Args1, Args2):&ndash;
+  ord_subtract(Args1, Shared, Args2).
+
+term_change_attrs(edge(From,To,<em>), A, edge(From,To,A)).
+term_change_attrs(vertex(Id,</em>), A, vertex(Id,A)).</p>

<p>```</p>

<h2 id="98"> 98: 正在比较变动前 dcbcb4d 和变动后 50a3dbc </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
index ca7adb3..88874a7 160000
&mdash;&ndash; a/Prolog-Library-Collection
+++ b/Prolog-Library-Collection
@@ -1 +1 @@
-Subproject commit ca7adb30da33a289e40b01e5e163f860d5c096c7
+Subproject commit 88874a7f451df36309d1d6ade03bc7186b4f6c8b
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index 6d572ab..b3e41ca 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -51,15 +51,6 @@</p>

<p> :&ndash; use_module(library(dcg/basics), except([string//1])).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_cardinal)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(dcg/dcg_generics)).
&ndash;:&ndash; use_module(plc(dcg/dcg_quote)).</p>

<h2>&ndash;:&ndash; use_module(plc(dcg/dcg_replace)).</h2>

<p> :&ndash; use_module(plGraphViz(gv_html)).</p>

<p>@@ -203,25 +194,32 @@ double(N) &mdash;></p>

<p> %! doubleList(+Doubles:list(float))// .</p>

<p>-doubleList(L) &mdash;>
&ndash;  &lsquo;+&rsquo;(double, L, [separator(colon)]).
+doubleList([]) &mdash;> !, &ldquo;&rdquo;.
+doubleList([H]) &mdash;> !, double(H)
+doubleList([H|T]) &mdash;> double(H), &ldquo;:&rdquo;, doubleList(T).</p>

<p> %! escString(+String:atom)// .
 % @tbd Support for context-dependent replacements.</p>

<p>-escString(String) &mdash;>
+escString(S1) &mdash;>
   {
&ndash;    atom_phrase(
&ndash;      dcg_replace(double_quote, escaped_double_quote),
&ndash;      String,
&ndash;      String0
&ndash;    )
+    atom_codes(S1, Cs1),
+    phrase(escape_double_quotes, Cs1, Cs2),
+    atom_codes(S2, Cs2)
   },
&ndash;  quoted(atom(String0)).
-escaped_double_quote &mdash;>
&ndash;  &ldquo;\\&rdquo;&ldquo;.
+  &rdquo;\&ldquo;&rdquo;,
+  atom(S2),
+  &ldquo;\&rdquo;&ldquo;.
+
+escape_double_quotes, [92,34] &mdash;>
+  [34], !,
+  escape_double_quotes.
+escape_double_quotes, [X] &mdash;>
+  [X],
+  escape_double_quotes.
+</p>

<p>@@ -449,7 +447,9 @@ smoothType(triangle).
 % A GraphViz string.</p>

<p> string(Content) &mdash;>
&ndash;  quoted(atom(Content)).
+  &ldquo;\&rdquo;&ldquo;,
+  atom(Content),
+  &rdquo;\&ldquo;&rdquo;.</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 489ce51..1e8ccdf 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -6,34 +6,25 @@
   ]
 ).</p>

<h2>&ndash;/** <module> GraphViz: Attributes</h2>

<p>-Support for GraphViz attributes.
+/** <module> GraphViz attributes</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11-2014/12, 2015/03
+@version 2015/07
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/basics)).
+:&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(dcg/dcg_meta)).
&ndash;:&ndash; use_module(plc(dcg/dcg_generics)).
&ndash;:&ndash; use_module(plc(generics/db_ext)).
&ndash;:&ndash; use_module(plc(generics/print_ext)).
&ndash;:&ndash; use_module(plc(io/file_ext)).</p>

<h2>&ndash;:&ndash; use_module(plc(io/file_gnu)).</h2>

<p>&ndash;:&ndash; use_module(plHtml(html)).</p>

<h2>&ndash;:&ndash; use_module(plHtml(html_table)).</h2>

<p> :&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).
+:&ndash; use_module(plGraphViz(gv_util)).
+
+:&ndash; dynamic(user:prolog_file_type/2).
+:&ndash; multifile(user:prolog_file_type/2).</p>

<p>&ndash;:&ndash; db_add_novel(user:prolog_file_type(log, logging)).
+user:prolog_file_type(log, logging).</p>

<p> %! gv_attr(
 %!   ?Name:atom,
@@ -131,13 +122,13 @@ assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
 % Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.</p>

<p> gv_attrs_download:&ndash;
&ndash;  report_on_process(
+  verbose_process(</p>

<pre><code> 'Updating GraphViz attributes table... ',
 (
   gv_attrs_uri(Uri),
</code></pre>

<ul>
<li>   download_html_dom(Uri, Dom, [dialect(html5),silent(true)]),</li>
<li>   html_download(Uri, Dom),
   xpath(Dom, //table(@align=lower_case(center)), TableDom),</li>
<li>   html_to_table(TableDom, _, Rows),</li>
<li>   html_table(TableDom, _, Rows),
   maplist(assert_gv_attr_row, Rows)
 )
).
@@ -146,22 +137,19 @@ gv_attrs_download:&ndash;
%! gv_attrs_file(-File:atom) is det.</li>
</ul>


<p> gv_attrs_file(File):&ndash;
&ndash;  absolute_file_name(
&ndash;    data(gv_attrs),
&ndash;    File,
&ndash;    [access(write),file_type(logging)]
&ndash;  ).
+  absolute_file_name(gv_attrs, File, [access(write),file_type(logging)]).</p>

<p> %! gv_attrs_init is det.</p>

<p> gv_attrs_init:&ndash;
   gv_attrs_file(File),
&ndash;  safe_db_attach(File),
+  persistent_db_attach(File),
   file_age(File, Age),
   gv_attrs_update(Age).</p>

<p>+
 %! gv_attrs_update(+Age:float) is det.</p>

<p> % The persistent store is still fresh.
@@ -174,20 +162,12 @@ gv_attrs_update(_):&ndash;
   gv_attrs_download.</p>

<p>+
 %! gv_attrs_uri(-Url:url) is det.</p>

<p> gv_attrs_uri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</p>

<h2>&ndash;%! safe_db_attach(+File:atom) is det.</h2>

<p>-safe_db_attach(File):&ndash;
&ndash;  exists_file(File), !,
&ndash;  db_attach(File, []).
-safe_db_attach(File):&ndash;
&ndash;  touch_file(File),</p>

<h2>&ndash;  safe_db_attach(File).</h2>

<p> %! translate_default(+Default1:atom, -Default2:atom) is det.</p>

<p>@@ -198,24 +178,36 @@ translate_default(&lsquo;<none>&rsquo;, _):&ndash; !.
 translate_default(Default, Default).</p>

<p>+
 %! translate_type(-Types:list(atom))// is det.</p>

<p>+translate_type([]) &mdash;> !, [].
 translate_type([H|T]) &mdash;>
   {gv_attr_type(H)},
   atom(H),
   whites,
   translate_type(T).
-translate_type([]) &mdash;> !, [].
+</p>

<p> %! translated_usedby(
 %!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))
 %! )// is det.</p>

<p>-translate_usedby([cluster|T]) &mdash;> <code>C</code>, !, translate_usedby(T).
-translate_usedby([edge|T]) &mdash;> <code>E</code>, !, translate_usedby(T).
-translate_usedby([graph|T]) &mdash;> <code>G</code>, !, translate_usedby(T).
-translate_usedby([node|T]) &mdash;> <code>N</code>, !, translate_usedby(T).
-translate_usedby([subgraph|T]) &mdash;> <code>S</code>, !, translate_usedby(T).</p>

<h2>-translate_usedby([]) &mdash;> [].</h2>

<p>+translate_usedby([cluster|T]) &mdash;>
+  &ldquo;C&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([edge|T]) &mdash;>
+  &ldquo;E&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([graph|T]) &mdash;>
+  &ldquo;G&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([node|T]) &mdash;>
+  &ldquo;N&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([subgraph|T]) &mdash;>
+  &ldquo;S&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([]) &mdash;>
+  &ldquo;&rdquo;.
diff &mdash;git a/gv_color.pl b/gv_color.pl
index 1f3f9d6..b8cf308 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -56,34 +56,41 @@</p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
   &ldquo;#&rdquo;,
&ndash;  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue], []).
+  hex_color(Red),
+  hex_color(Green),
+  hex_color(Blue).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
&ndash;  &ldquo;#&rdquo;,
&ndash;  &lsquo;#&rsquo;(4, hex_color, [Red,Green,Blue,Alpha], []).
+  color(rgb(Red,Green,Blue)),
+  hex_color(Alpha).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
&ndash;  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
+  hsv_color(Hue),
+  hsv_color(Saturation),
+  hsv_color(Value).
 color(Name) &mdash;>
   {gv_color(_, Name)},
   atom(Name).</p>

<p> hex_color(I) &mdash;>
&ndash;  {W1 is I / 16},
&ndash;  &lsquo;HEX&rsquo;(W1),
&ndash;  {W2 is I mod 16},
&ndash;  &lsquo;HEX&rsquo;(W2).
+  xinteger(I).</p>

<p> hsv_color(D, Head, Tail):&ndash;
   format(codes(Head,Tail), &lsquo;~2f&rsquo;, [D]).</p>

<p>+
 %! colorList(+Pairs:list(pair(compound,float)))// .</p>

<p>-colorList(Pairs) &mdash;>
&ndash;  &lsquo;+&rsquo;(wc, Pairs, []).
+colorList([H]) &mdash;> !,
+  wc(H).
+colorList([H|T]) &mdash;>
+  wc(H),
+  colorList(T).</p>

<p> wc(Color-Float) &mdash;>
   color(Color),
&ndash;  &lsquo;?&rsquo;(wc_weight(Float), []).
+  (   wc_weight(Float)
+  ;   &ldquo;&rdquo;
+  ).</p>

<p> wc_weight(Float) &mdash;>
   &ldquo;;&rdquo;,
diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index e98361b..c26d629 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -30,19 +30,8 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 :&ndash; use_module(library(lists), except([delete/3,subset/2])).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_arrow)).
&ndash;:&ndash; use_module(plc(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_bracket)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(dcg/dcg_generics)).
&ndash;:&ndash; use_module(plc(dcg/dcg_meta)).</p>

<h2>&ndash;:&ndash; use_module(plc(dcg/dcg_quote)).</h2>

<p> :&ndash; use_module(plGraphViz(gv_attrs)).
 :&ndash; use_module(plGraphViz(gv_html)).
&ndash;:&ndash; use_module(plGraphViz(gv_numeral)).</p>

<p>@@ -90,7 +79,7 @@ gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
 %                   undirected (operator <code>--</code>).</p>

<p> gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
-gv_edge_operator(true) &mdash;> arrow(right, 2).
+gv_edge_operator(true) &mdash;> &ldquo;&ndash;>&rdquo;.</p>

<p>@@ -120,7 +109,9 @@ gv_edge_statement(I, Directed, edge(FromId,ToId,EAttrs)) &mdash;></p>

<p>   % We want <code>colorscheme/1</code> from the edges and
   % <code>directionality/1</code> from the graph.
&ndash;  bracketed(square, &lsquo;*&rsquo;(gv_attr(edge), EAttrs, [])),
+  &ldquo;[&rdquo;,
+  gv_attrs(edge, EAttrs),
+  &ldquo;]&rdquo;,
   line_feed.</p>

<p>@@ -184,11 +175,14 @@ gv_id(html_like_label(Content)) &mdash;> !,
 % Double-quoted strings.
 % The quotes are already part of the given atom.
 gv_id(double_quoted_string(Atom)) &mdash;> !,
&ndash;  quoted(atom(Atom)).
+  &ldquo;\&rdquo;&ldquo;,
+  atom(Atom),
+  &rdquo;\&ldquo;&rdquo;.
 % Numerals.
 gv_id(N) &mdash;>
   {number(N)}, !,
&ndash;  gv_numeral(N).
+  % @tbd Use gv_numeral//1.
+  number(N).
 % Alpha-numeric strings.
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -198,8 +192,10 @@ gv_id(Atom) &mdash;>
   % GraphViz keyword.
   {+ gv_keyword([H|T])}.</p>

<p>-gv_id_first(X) &mdash;> ascii_letter(X).
-gv_id_first(X) &mdash;> underscore(X).
+gv_id_first(X) &mdash;>
+  ascii_alpha(X).
+gv_id_first(X) &mdash;>
+  underscore(X).</p>

<p> gv_id_rest([]) &mdash;> [].
 gv_id_rest([H|T]) &mdash;>
@@ -213,10 +209,10 @@ gv_id_rest([H|T]) &mdash;>
 %! gv_keyword(+Codes:list(code)) is semidet.
 % Succeeds if the given codes for a GraphViz reserved keyword.</p>

<p>-gv_keyword(Codes):&ndash;
+gv_keyword(Cs):&ndash;
   % Obviously, the keywords do not occur on the difference list input.
   % So we must use phrase/[2,3].
&ndash;  phrase(gv_keyword, Codes).
+  phrase(gv_keyword, Cs).</p>

<p> %! gv_keyword// .
 % GraphViz has reserved keywords that cannot be used as identifiers.
@@ -260,18 +256,23 @@ gv_node_id(Id) &mdash;></p>

<p> gv_node_statement(I, vertex(Id,VAttrs)) &mdash;>
   indent(I),
&ndash;  gv_node_id(Id), &ldquo; &rdquo;,
&ndash;  bracketed(square, &lsquo;*&rsquo;(gv_attr(node), VAttrs, [])),
&ndash;  line_feed.
+  gv_node_id(Id),
+  &ldquo; [&rdquo;,
+  gv_attrs(node, VAttrs),
+  &ldquo;\n&rdquo;.</p>

<p> gv_port &mdash;>
   gv_port_location,
&ndash;  &lsquo;?&rsquo;(gv_port_angle, []).
+  (   gv_port_angle
+  ;   &ldquo;&rdquo;
+  ).
 gv_port &mdash;>
   gv_port_angle,
&ndash;  &lsquo;?&rsquo;(gv_port_location, []).
+  (   gv_port_location
+  ;   &ldquo;&rdquo;
+  ).
 gv_port &mdash;>
   &ldquo;:&rdquo;,
   gv_compass_pt(<em>).
@@ -284,38 +285,31 @@ gv_port_location &mdash;>
   &ldquo;:&rdquo;,
   gv_id(</em>).
 gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
&ndash;  bracketed(
&ndash;    round,
&ndash;    (
&ndash;      gv_id(<em>),
&ndash;      &ldquo;,&rdquo;,
&ndash;      gv_id(</em>)
&ndash;    )
&ndash;  ).
+  &ldquo;:(&rdquo;,
+  gv_id(<em>),
+  &ldquo;,&rdquo;,
+  gv_id(</em>)
+  &ldquo;)&rdquo;.</p>

<p> gv_ranked_node_collection(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
   indent(I),
&ndash;  bracketed(curly, (</p>

<h2>&ndash;    line_feed,</h2>

<ul>
<li> % The rank attribute.</li>
<li> {NewI is I + 1},</li>
<li> indent(NewI),</li>
<li> gv_attr(subgraph, rank=same),</li>
<li> &ldquo;;&rdquo;,

<h2>&ndash;    line_feed,</h2></li>
<li> % Vertice statements.</li>
<li> &lsquo;*&rsquo;(</li>
<li>   gv_node_statement(NewI),</li>
<li>   [Rank_V_Term|Content_V_Terms],</li>
<li>   []

<h2>&ndash;    ),</h2></li>
<li> % We want to indent the closing curly brace.</li>
<li> indent(I)</li>
<li>)),</li>
<li>line_feed.</li>
<li>&ldquo;{\n&rdquo;,</li>
<li></li>
<li>% The rank attribute.</li>
<li>{NewI is I + 1},</li>
<li>indent(NewI),</li>
<li>gv_attr(subgraph, rank=same),</li>
<li>&ldquo;;\n&rdquo;,</li>
<li></li>
<li>% Vertice statements.</li>
<li>&lsquo;*&rsquo;(</li>
<li> gv_node_statement(NewI),</li>
<li> [Rank_V_Term|Content_V_Terms],</li>
<li> []</li>
<li>),</li>
<li></li>
<li>% We want to indent the closing curly brace.</li>
<li>indent(I),</li>
<li>&ldquo;\n&rdquo;.
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 5d2228e..45135f3 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -18,8 +18,6 @@
:&ndash; use_module(library(option)).
:&ndash; use_module(library(process)).</li>
</ul>


<h2>&ndash;:&ndash; use_module(plc(process/process_ext)).</h2>

<p> :&ndash; dynamic(user:prolog_file_type/2).
 :&ndash; multifile(user:prolog_file_type/2).</p>

<p>@@ -88,11 +86,10 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
   % Run the GraphViz conversion command in the shell.
   format(atom(OutputTypeFlag), &lsquo;-T~a&rsquo;, [OutputType]),
   format(atom(OutputFileFlag), &lsquo;-o~a&rsquo;, [OutputFile]),
&ndash;  atomic_list_concat([&lsquo;GraphViz&rsquo;,Method], &lsquo; &rsquo;, Program),
&ndash;  handle_process(
&ndash;    Method,
+  process_ext(
+    path(Method),</p>

<pre><code> [OutputTypeFlag,file(InputFile),OutputFileFlag],
</code></pre>

<ul>
<li> [program(Program)]</li>
<li> []
).</li>
</ul>


<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 65ae2bd..79d2564 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -56,7 +56,9 @@ cell:   <TD> label </TD>
 %! gv_html_like_label(?Content:compound)// .</p>

<p> gv_html_like_label(Content) &mdash;>
&ndash;  bracketed(angular, label(Content)).
+  &ldquo;&lt;&rdquo;,
+  label(Content),
+  &ldquo;>&rdquo;.</p>

<p>diff &mdash;git a/gv_util.pl b/gv_util.pl
new file mode 100644
index 0000000..b2cbdcc
&mdash;&ndash; /dev/null
+++ b/gv_util.pl
@@ -0,0 +1,260 @@
+:&ndash; module(
+  gv_util,
+  [
+    ascii_alpha//1, % ?X:code
+    atom_phrase/2, % :Goal_1
+                   % +Atom:atom
+    atom_phrase/3, % :Goal_1
+                   % +Atom1:atom
+                   % -Atom2:atom
+    file_age/2, % +File:atom
+                % -Age:float
+    html_download/2, % +Uri:atom
+                     % -Dom:compound
+    indent//1, % +N:nonneg
+    persistent_db_attach/2, % +Module:atom
+                            % +File:atom
+    underscore//1, % ?X:code
+    verbose_process/2 % +Process:atom
+                      % :Goal_0
+  ]
+).
+
+/<em>* <module> GraphViz utilities
+
+Utilities that should not be specific to the GraphViz library
+but that are considered too small to publish independently.
+
+@author Wouter Beek
+@version 2015/07
+</em>/
+
+:&ndash; use_module(library(ansi_term)).
+:&ndash; use_module(library(http/http_open)).
+:&ndash; use_module(library(http/http_ssl_plugin)). % HTTPS support.
+:&ndash; use_module(library(lambda)).
+:&ndash; use_module(library(option)).
+:&ndash; use_module(library(process)).
+:&ndash; use_module(library(sgml)).
+:&ndash; use_module(library(xpath)).
+
+:&ndash; meta_predicate(atom_phrase(1,+)).
+:&ndash; meta_predicate(atom_phrase(1,+,&ndash;)).
+:&ndash; meta_predicate(dcg_call(//,?,?)).
+:&ndash; meta_predicate(dcg_call(1,+,?,?)).
+:&ndash; meta_predicate(http_get(+,1,+)).
+:&ndash; meta_predicate(http_stream(+,1,+)).
+:&ndash; meta_predicate(verbose_process(+,0)).
+
+
+
+%! ascii_alpha(?X:code)// .
+
+ascii_alpha(X) &mdash;>
+  between_code(65, 90, X)
+ascii_alpha(X) &mdash;>
+  between_code(97, 122, X)
+
+
+
+%! ascii_alpha_numeric(?X:code)// .
+
+ascii_alpha_numeric(X) &mdash;>
+  ascii_alpha(X).
+ascii_alpha_numeric(X) &mdash;>
+  ascii_numberic(X).
+
+
+
+%! ascii_numeric(?X:code)// .
+
+ascii_numeric(X) &mdash;>
+  between_code(48, 57, X).
+
+
+
+%! atom_phrase(:Goal_1, +Atom:atom) is det.
+
+atom_phrase(Goal_1, A):&ndash;
+  atom_codes(A, Cs),
+  phrase(Goal_1, Cs).
+
+
+
+%! atom_phrase(:Goal_1, +Atom1:atom, +Atom2:atom) is det.
+
+atom_phrase(Goal_1, A1, A2):&ndash;
+  atom_codes(A1, Cs1),
+  phrase(Goal_1, Cs1, Cs2),
+  atom_codes(A2, Cs2).
+
+
+
+%! between_code(+Low:code, +High:code, ?X:code)// .
+
+between_code(Low, High, X) &mdash;>
+  [X],
+  {between(Low, High, X)}.
+
+
+
+%! dcg_call(:Dcg_0)// is det.
+
+dcg_call(Dcg, X, Y):&ndash;
+  call(Dcg, X, Y).
+
+%! dcg_call(:Dcg_1, +Argument1)// is det.
+
+dcg_call(Dcg, A1, X, Y):&ndash;
+  call(Dcg, A1, X, Y).
+
+
+
+%! file_age(+File:atom, -Age:float) is det.
+
+file_age(File, Age):&ndash;
+  time_file(File, LastModified),
+  get_time(Now),
+  Age is Now &ndash; LastModified.
+
+
+
+%! html_download(+Uri:atom, -Dom:compound) is det.
+
+html_download(Uri, Dom):&ndash;
+  http_get(
+    Uri,
+    \Stream<sup>load</sup>_html(Stream, Dom, [dialect(html5),max_errors(-1)]),
+    copy
+    []
+  ).
+
+
+
+%! http_get(+Uri:atom, :Success_1, +Options:list(compound)) is det.
+
+http_get(Uri, Success_1, Opts0):&ndash;
+  merge_options([method(get),status_code(Status)], Opts0, Opts),
+  setup_call_cleanup(
+    http_open(Uri, Stream, Opts),
+    http_stream(Status, Success_1, Stream),
+    close(Stream)
+  ).
+
+%! http_stream(+Status:between(100,599), :Success_1, +Read:stream) is det.
+
+http_stream(Status, Success_1, Stream):&ndash;
+  between(200, 299, Status), !,
+  call(Success_1, Stream).
+http_stream(Status, _, Stream):&ndash;
+  format(user_error, &lsquo;[STATUS ~D] &rsquo;, [Status]),
+  copy_stream_data(Stream, user_error),
+  format(user_error, &lsquo;\n&rsquo;, []).
+
+
+
+%! html_table(+Dom:list(compound), -Header:list, -Data:list(list)) is det.
+
+html_table(Dom, Header, Data):&ndash;
+  ignore(html_table_row(header, Dom, Header)),
+  findall(
+    Data0,
+    html_table_row(data, Table, Data0),
+    Data
+  ).
+
+%! html_table_row(
+%!   +Mode:oneof([data,header]),
+%!   +Dom:list(compound),
+%!   -Data:list
+%! ) is det.
+
+html_table_row(data, Dom, Row):&ndash; !,
+  xpath(Dom, //tr, Tr),
+  findall(
+    Cell,
+    xpath(Tr, //td(normalize_space), Cell),
+    Row
+  ),
+  Row \== [].
+html_table_row(header, Dom, Row):&ndash;
+  xpath(Dom, //tr, Tr),
+  findall(
+    Cell,
+    xpath(Tr, //th(normalize_space), Cell),
+    Row
+  ),
+  Row \== [].
+
+
+
+%! indent(+N:nonneg)// is det.
+
+indent(0) &mdash;> !, &ldquo;&rdquo;.
+indent(N) &mdash;>
+  &ldquo; &rdquo;,
+  {succ(M, N)},
+  indent(M).
+
+
+
+%! persistent_db_attach(+Module:atom, +File:atom) is det.
+% Safe attachement of a persistent database dump.
+% This first make sure the given file exists.
+
+persistent_db_attach(Mod, File):&ndash;
+  exists_file(File), !,
+  Mod:db_attach(File, []).
+persistent_db_attach(Mod, File):&ndash;
+  touch_file(File),
+  persistent_db_attach(Mod, File).
+
+touch_file(File):&ndash;
+  create_process(path(touch), [file(File)], []).
+
+
+
+%! underscore(?C:code)// .
+
+underscore(95) &mdash;>
+  [95].
+
+
+
+%! verbose_process(+Name:atom, :Goal_0) is det.
+
+verbose_process(Name, Goal_0):&ndash;
+  setup_call_catcher_cleanup(
+    start(Name),
+    Goal_0,
+    E,
+    (   E == true
+    &ndash;>  success(Name)
+    ;   failure(Name)
+    )
+  ).
+
+failure(Name):&ndash;
+  warning(&lsquo;[FAILURE]&rsquo;),
+  normal(&lsquo; Process &rsquo;),
+  normal(Name),
+  normal(&lsquo;:&rsquo;),
+  nl,
+  normal(E).
+
+start(Name):&ndash;
+  normal(&lsquo;Starting process &rsquo;),
+  normal(Name),
+  normal(&lsquo;.&rsquo;).
+
+success(Name):&ndash;
+  success(&lsquo;[SUCCESS]&rsquo;),
+  normal(&lsquo; Ending process &rsquo;),
+  normal(Name),
+  normal(&lsquo;.&rsquo;).
+
+emphasis(X):&ndash; ansi_format([bold], &lsquo;~a&rsquo;, [X]).
+normal(X):&ndash; ansi_format([], &lsquo;~a&rsquo;, [X]).
+notification(X):&ndash; ansi_format([bold,fg(yellow)], &lsquo;~a&rsquo;, [X]).
+success(X):&ndash; ansi_format([bold,fg(green)], &lsquo;~a&rsquo;, [X]).
+warning(X):&ndash; ansi_format([bold,fg(red)], &lsquo;~a&rsquo;, [X]).</p>

<p>```</p>

<h2 id="99"> 99: 正在比较变动前 50a3dbc 和变动后 a97e8e1 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/Prolog-Library-Collection b/Prolog-Library-Collection
deleted file mode 160000
index 88874a7..0000000
&mdash;&ndash; a/Prolog-Library-Collection
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 88874a7f451df36309d1d6ade03bc7186b4f6c8b
diff &mdash;git a/debug.pl b/debug.pl
deleted file mode 100644
index 12b4526..0000000
&mdash;&ndash; a/debug.pl
+++ /dev/null
@@ -1,7 +0,0 @@</p>

<h2>&ndash;% Debug file for library plGraphViz.</h2>

<h2>&ndash;:&ndash; [load].</h2>

<p>&ndash;:&ndash; use_module(debug_project).</p>

<h2>&ndash;:&ndash; debug_all_files.</h2>

<p>diff &mdash;git a/debug_project.pl b/debug_project.pl
deleted file mode 100644
index d53a92f..0000000
&mdash;&ndash; a/debug_project.pl
+++ /dev/null
@@ -1,106 +0,0 @@
&ndash;:&ndash; module(
&ndash;  debug_project,
&ndash;  [
&ndash;    debug_all_files/0,
&ndash;    start_pldoc_server/0
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> Debug project</h2>

<p>-Generic code for debugging a project:</p>

<h2>&ndash;  * Load all subdirectories and Prolog files contained in those directories.</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2015/02/26</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(ansi_term)).
&ndash;:&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(pldoc)).</p>

<h2>&ndash;:&ndash; use_module(library(portray_text)).</h2>

<p>&ndash;:&ndash; set_prolog_flag(
&ndash;  answer_write_options,
&ndash;  [max_depth(100),portrayed(true),spacing(next_argument)]
&ndash;).
&ndash;:&ndash; set_prolog_flag(
&ndash;  debugger_write_options,
&ndash;  [max_depth(100),portrayed(true),spacing(next_argument)]
&ndash;).</p>

<h2>&ndash;:&ndash; set_portray_text(ellipsis, 1000).</h2>

<p>&ndash;:&ndash; dynamic(user:debug_mode).</p>

<h2>&ndash;:&ndash; multifile(user:debug_mode).</h2>

<h2>&ndash;:&ndash; initialization(init_debug_mode).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<p>-debug_all_files:&ndash;
&ndash;  ensure_loaded(plc(io/dir_ext)),
&ndash;  absolute_file_name(project(.), Dir, [access(read),file_type(directory)]),
&ndash;  directory_files(
&ndash;    Dir,
&ndash;    Files1,
&ndash;    [
&ndash;      file_types([prolog]),
&ndash;      include_directories(false),
&ndash;      include_self(false),
&ndash;      recursive(true)
&ndash;    ]
&ndash;  ),
&ndash;  exclude(do_not_load, Files1, Files2),
&ndash;  maplist(use_module0, Files2).
-use_module0(File):&ndash;
&ndash;  print_message(informational, loading_module(File)),</p>

<h2>&ndash;  use_module(File).</h2>

<p>-do_not_load(File1):&ndash;
&ndash;  file_base_name(File1, File2),
&ndash;  file_name_extension(File3, pl, File2),</p>

<h2>&ndash;  do_not_load0(File3).</h2>

<p>-do_not_load0(dcg_ascii).
-do_not_load0(dcg_unicode).
-do_not_load0(debug).
-do_not_load0(debug_project).
-do_not_load0(index).
-do_not_load0(load).
-do_not_load0(load_project).
-do_not_load0(run).</p>

<h2>-do_not_load0(style).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! start_pldoc_server is det.</p>

<h2>&ndash;% The plDoc server should be started <em>before</em> documented modules are loaded.</h2>

<p>-start_pldoc_server:&ndash;</p>

<h2>&ndash;  doc_server(9999).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% INITIALIZATION</h2>

<p>-init_debug_mode:&ndash;
&ndash;  % Set the debug mode flag.
&ndash;  (   user:debug_mode
&ndash;  &ndash;>  true
&ndash;  ;   assert(user:debug_mode)
&ndash;  ),
&ndash;  % Avoid errors when using gtrace/0 in threads.</p>

<h2>&ndash;  guitracer.</h2>

<h2>&ndash;</h2>

<h2>&ndash;% MESSAGES</h2>

<h2>&ndash;:&ndash; multifile(prolog:message//1).</h2>

<p>-prolog:message(loading_module(File)) &mdash;>
&ndash;  [&lsquo;[M] &rsquo;,File].
diff &mdash;git a/gv_attr_type.pl b/gv_attr_type.pl
index b3e41ca..4e1b7f2 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/gv_attr_type.pl
@@ -36,7 +36,7 @@
   ]
 ).
 :&ndash; reexport(
&ndash;  plGraphViz(gv_color),
+  library(gv/gv_color),
   [</p>

<pre><code> color//1, % +Color:compound
 colorList//1 % +ColorList:list(compound)
</code></pre>

<p>@@ -46,12 +46,15 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2014/06, 2014/11-2015/01
+@version 2015/07
 */</p>

<h2> :&ndash; use_module(library(dcg/basics), except([string//1])).</h2>

<p>&ndash;:&ndash; use_module(plGraphViz(gv_html)).
+:&ndash; use_module(library(dcg/dcg_abnf)).
+:&ndash; use_module(library(dcg/dcg_ascii)).
+:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(dcg/dcg_quoted)).
+:&ndash; use_module(library(gv/gv_html)).</p>

<p>@@ -194,9 +197,8 @@ double(N) &mdash;></p>

<p> %! doubleList(+Doubles:list(float))// .</p>

<p>-doubleList([]) &mdash;> !, &ldquo;&rdquo;.
-doubleList([H]) &mdash;> !, double(H)
-doubleList([H|T]) &mdash;> double(H), &ldquo;:&rdquo;, doubleList(T).
+doubleList(L) &mdash;>
+  &lsquo;*&rsquo;(double, L, [separator(colon)]).</p>

<p>@@ -204,14 +206,8 @@ doubleList([H|T]) &mdash;> double(H), &ldquo;:&rdquo;, doubleList(T).
 % @tbd Support for context-dependent replacements.</p>

<p> escString(S1) &mdash;>
&ndash;  {
&ndash;    atom_codes(S1, Cs1),
&ndash;    phrase(escape_double_quotes, Cs1, Cs2),
&ndash;    atom_codes(S2, Cs2)
&ndash;  },
&ndash;  &ldquo;\&rdquo;&ldquo;,
&ndash;  atom(S2),
&ndash;  &rdquo;\&ldquo;&rdquo;.
+  {atom_phrase(escape_double_quotes, S1, S2)},
+  quoted(atom(S2)).</p>

<p> escape_double_quotes, [92,34] &mdash;>
   [34], !,
@@ -285,9 +281,7 @@ pagedir(&lsquo;TR&rsquo;).
 % <code>point(X:float,Y:float,Changeable:boolean)</code>.</p>

<p> point(point(X,Y,Changeable)) &mdash;>
&ndash;  float(X),
&ndash;  &ldquo;,&rdquo;,
&ndash;  float(Y),
+  &lsquo;#&rsquo;(2, float, [X,Y], [separator(comma)]),
   input_changeable(Changeable).</p>

<p> input_changeable(false) &mdash;> &ldquo;&rdquo;.
@@ -348,10 +342,12 @@ rankdir(&lsquo;TB&rsquo;).
 %! rect(+Rectangle:compound)// .</p>

<p> rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  float(LowerLeftX), &ldquo;,&rdquo;,
&ndash;  float(LowerLeftY), &ldquo;,&rdquo;,
&ndash;  float(UpperRightX), &ldquo;,&rdquo;,
&ndash;  float(UpperRightY).
+  &lsquo;#&rsquo;(
+    4,
+    float,
+    [LowerLeftX,LowerLeftY,UpperRightX,UpperRightY],
+    [separator(comma)]
+  ).</p>

<p>@@ -447,9 +443,7 @@ smoothType(triangle).
 % A GraphViz string.</p>

<p> string(Content) &mdash;>
&ndash;  &ldquo;\&rdquo;&ldquo;,
&ndash;  atom(Content),
&ndash;  &rdquo;\&ldquo;&rdquo;.
+  quoted(atom(Content)).</p>

<p>diff &mdash;git a/gv_attrs.pl b/gv_attrs.pl
index 1e8ccdf..cce4f9d 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/gv_attrs.pl
@@ -13,13 +13,18 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(deb_ext)).
 :&ndash; use_module(library(dcg/basics)).
+:&ndash; use_module(library(dcg/dcg_call)).
+:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(file_ext)).
+:&ndash; use_module(library(http/html_download)).
+:&ndash; use_module(library(http/html_table)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(persistency)).
+:&ndash; use_module(library(persistency_ext)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(plGraphViz(gv_attr_type), [gv_attr_type/1]).
&ndash;:&ndash; use_module(plGraphViz(gv_util)).
+:&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type/1]).</p>

<p> :&ndash; dynamic(user:prolog_file_type/2).
 :&ndash; multifile(user:prolog_file_type/2).
@@ -144,7 +149,7 @@ gv_attrs_file(File):&ndash;</p>

<p> gv_attrs_init:&ndash;
   gv_attrs_file(File),
&ndash;  persistent_db_attach(File),
+  attach_persistent_db(File),
   file_age(File, Age),
   gv_attrs_update(Age).</p>

<p>diff &mdash;git a/gv_color.pl b/gv_color.pl
index b8cf308..dd1690b 100644
&mdash;&ndash; a/gv_color.pl
+++ b/gv_color.pl
@@ -18,7 +18,7 @@</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/basics)).
&ndash;:&ndash; use_module(library(lists), except([delete/3,subset/2])).
+:&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>@@ -56,16 +56,12 @@</p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
   &ldquo;#&rdquo;,
&ndash;  hex_color(Red),
&ndash;  hex_color(Green),
&ndash;  hex_color(Blue).
+  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue], []).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   color(rgb(Red,Green,Blue)),
   hex_color(Alpha).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
&ndash;  hsv_color(Hue),
&ndash;  hsv_color(Saturation),
&ndash;  hsv_color(Value).
+  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
 color(Name) &mdash;>
   {gv_color(_, Name)},
   atom(Name).
@@ -80,11 +76,8 @@ hsv_color(D, Head, Tail):&ndash;</p>

<p> %! colorList(+Pairs:list(pair(compound,float)))// .</p>

<p>-colorList([H]) &mdash;> !,
&ndash;  wc(H).
-colorList([H|T]) &mdash;>
&ndash;  wc(H),
&ndash;  colorList(T).
+colorList(L) &mdash;>
+  &lsquo;+&rsquo;(wc, L, []).</p>

<p> wc(Color-Float) &mdash;>
   color(Color),
@@ -105,11 +98,11 @@ wc_weight(Float) &mdash;>
 %! gv_color_download is det.</p>

<p> gv_color_download:&ndash;
&ndash;  report_on_process(
+  verbose_call(</p>

<pre><code> 'Updating the GraphViz color table...',
 (
   gv_color_uri(Uri),
</code></pre>

<ul>
<li>   download_html_dom(Uri, Dom, [html_dialect(html4),silent(true)]),</li>
<li>   html_download(Uri, Dom),
   xpath(Dom, //table(1), TableDom1),
   xpath(Dom, //table(2), TableDom2),
   maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2])
@@ -117,7 +110,7 @@ gv_color_download:&ndash;
).</li>
</ul>


<p> assert_color_table(Colorscheme, TableDom):&ndash;
&ndash;  html_to_table(TableDom, <em>, Rows),
+  html_table(TableDom, </em>, Rows),
   append(Rows, Cells),
   forall(</p>

<pre><code> member(Cell, Cells),
</code></pre>

<p>@@ -157,4 +150,3 @@ gv_color_update(_):&ndash;
 %! gv_color_uri(-Url:url) is det.</p>

<h2> gv_color_uri(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).</h2>

<p>diff &mdash;git a/gv_dot.pl b/gv_dot.pl
index c26d629..9c53cc5 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/gv_dot.pl
@@ -1,7 +1,6 @@
 :&ndash; module(
   gv_dot,
   [
&ndash;    gv_graph//1 % +Graph:compound
   ]
 ).</p>

<p>@@ -22,17 +21,19 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11-2014/12
+@version 2015/07
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/basics)).
&ndash;:&ndash; use_module(library(lists), except([delete/3,subset/2])).
+:&ndash; use_module(library(dcg/dcg_ascii)).
+:&ndash; use_module(library(dcg/dcg_bracketed)).
+:&ndash; use_module(library(dcg/dcg_content)).
+:&ndash; use_module(library(gv/gv_attrs)).
+:&ndash; use_module(library(gv/gv_html)).
+:&ndash; use_module(library(lists)).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; use_module(plGraphViz(gv_attrs)).</p>

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_html)).</h2>

<p>@@ -44,14 +45,24 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 % A single GraphViz attribute.
 % We assume that the attribute has already been validated.</p>

<p>-gv_attr(Context, Name=Value) &mdash;>
&ndash;  gv_id(Name),
+gv_attr(Context, N=V) &mdash;>
+  gv_id(N),
   &ldquo;=&rdquo;,
&ndash;  gv_attr_value(Context, Name=Value),
+  gv_attr_value(Context, N=V),
   &ldquo;;&rdquo;.</p>

<p>+%! gv_attrs(
+%!   +Kind:oneof([edge,graph,node]),
+%!   +Attributes:list(compound)
+%! )// is det.
+
+gv_attrs(Kind, L) &mdash;>
+  bracketed(square, &lsquo;*&rsquo;(gv_attr, L, [])).
+
+
+
 %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
 % <code>``
 % compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
@@ -76,7 +87,7 @@ gv_compass_pt(w) --&gt; "w".
 % undirected.
 %
 % @arg Directed Whether an edge is directed (operator</code>&ndash;><code>) or
-%                   undirected (operator</code>&mdash;<code>).
+%               undirected (operator</code>&mdash;`).</p>

<p> gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
 gv_edge_operator(true) &mdash;> &ldquo;&ndash;>&rdquo;.
@@ -109,10 +120,8 @@ gv_edge_statement(I, Directed, edge(FromId,ToId,EAttrs)) &mdash;></p>

<p>   % We want <code>colorscheme/1</code> from the edges and
   % <code>directionality/1</code> from the graph.
&ndash;  &ldquo;[&rdquo;,
   gv_attrs(edge, EAttrs),
&ndash;  &ldquo;]&rdquo;,
&ndash;  line_feed.
+  &ldquo;\n&rdquo;.</p>

<p>@@ -137,14 +146,8 @@ gv_generic_attributes_statement(<em>, </em>, []) &mdash;> [], !.
 gv_generic_attributes_statement(Kind, I, KindAttrs) &mdash;>
   indent(I),
   gv_kind(Kind), &ldquo; &rdquo;,
&ndash;  &ldquo;[&rdquo;,
   gv_attrs(Kind, KindAttrs),</p>

<h2>&ndash;  &ldquo;]\n&rdquo;.</h2>

<p>-gv_attrs(_, []) &mdash;> !, &ldquo;&rdquo;.
-gv_attrs(Kind, [H|T]) &mdash;>
&ndash;  gv_attr(Kind, H),
&ndash;  gv_attrs(Kind, T).
+  &ldquo;\n&rdquo;.</p>

<p>@@ -175,9 +178,7 @@ gv_id(html_like_label(Content)) &mdash;> !,
 % Double-quoted strings.
 % The quotes are already part of the given atom.
 gv_id(double_quoted_string(Atom)) &mdash;> !,
&ndash;  &ldquo;\&rdquo;&ldquo;,
&ndash;  atom(Atom),
&ndash;  &rdquo;\&ldquo;&rdquo;.
+  quoted(atom(Atom)).
 % Numerals.
 gv_id(N) &mdash;>
   {number(N)}, !,
@@ -193,7 +194,7 @@ gv_id(Atom) &mdash;>
   {+ gv_keyword([H|T])}.</p>

<p> gv_id_first(X) &mdash;>
&ndash;  ascii_alpha(X).
+  ascii_letter(X).
 gv_id_first(X) &mdash;>
   underscore(X).</p>

<p>@@ -257,7 +258,6 @@ gv_node_id(Id) &mdash;>
 gv_node_statement(I, vertex(Id,VAttrs)) &mdash;>
   indent(I),
   gv_node_id(Id),
&ndash;  &ldquo; [&rdquo;,
   gv_attrs(node, VAttrs),
   &ldquo;\n&rdquo;.</p>

<p>@@ -293,9 +293,12 @@ gv_port_location &mdash;></p>

<p>-gv_ranked_node_collection(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
+gv_ranked_node_collection(I, Rank) &mdash;>
   indent(I),
&ndash;  &ldquo;{\n&rdquo;,
+  bracketed(curly, gv_ranked_node_collection0(I, Rank)).
+
+gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
+  &ldquo;\n&rdquo;,</p>

<p>   % The rank attribute.
   {NewI is I + 1},
diff &mdash;git a/gv_file.pl b/gv_file.pl
index 45135f3..da17737 100644
&mdash;&ndash; a/gv_file.pl
+++ b/gv_file.pl
@@ -29,6 +29,8 @@ user:prolog_file_type(pdf, pdf).</p>

<p>+
+
 %! gv_export(
 %!   +ExportGraph:compound,
 %!   +OutputFile:atom,
diff &mdash;git a/gv_graph.pl b/gv_graph.pl
index dd4af97..9ae7353 100644
&mdash;&ndash; a/gv_graph.pl
+++ b/gv_graph.pl
@@ -12,11 +12,15 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_abnf)).
+:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(option)).</p>

<p>+
+
 %! gv_graph(+Graph:compound)//
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
@@ -145,20 +149,16 @@ gv_graph(G1, I) &mdash;>
   indent(I),
   &ldquo;}\n&rdquo;.</p>

<p>-gv_edge_statements(<em>, </em>, []) &mdash;> !, &ldquo;&rdquo;.
-gv_edge_statements(I, Dir, [H|T]) &mdash;>
&ndash;  gv_edge_statement(I, Dir, H),
&ndash;  gv_edge_statements(I, Dir, T).
+gv_edge_statements(I, Dir, L) &mdash;>
+  &lsquo;<em>&rsquo;(gv_edge_statement(I, Dir), L, []).
+
+gv_node_statements(I, L) &mdash;>
+  &lsquo;</em>&rsquo;(gv_node_statement(I), L, []).
+
+gv_ranked_node_collections(I, L) &mdash;>
+  &lsquo;*&rsquo;(gv_ranked_node_collection(I), L, []).</p>

<p>-gv_node_statements(_, []) &mdash;> !, &ldquo;&rdquo;.
-gv_node_statements(I, [H|T]) &mdash;>
&ndash;  gv_node_statement(I, H),
&ndash;  gv_node_statements(I, T).</p>

<p>-gv_ranked_node_collections(_, []) &mdash;> !, &ldquo;&rdquo;.
-gv_ranked_node_collections(I, [H|T]) &mdash;>
&ndash;  gv_ranked_node_collection(I, H),
&ndash;  gv_ranked_node_collections(I, T),</p>

<p>@@ -191,7 +191,7 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
 % no multi-edges.
 % This only applies to directed graphs.</p>

<p>-gv_strict(false) &mdash;> [].
+gv_strict(false) &mdash;> &ldquo;&rdquo;.
 gv_strict(true) &mdash;> &ldquo;strict &rdquo;.</p>

<p>diff &mdash;git a/gv_html.pl b/gv_html.pl
index 79d2564..ced6d6b 100644
&mdash;&ndash; a/gv_html.pl
+++ b/gv_html.pl
@@ -40,14 +40,13 @@ cell:   <TD> label </TD></p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
&ndash;@version 2013/07, 2013/09, 2014/03-2014/06, 2014/11
+@version 2015/07
 */</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_bracket)).</p>

<h2>&ndash;:&ndash; use_module(plc(dcg/dcg_content)).</h2>

<p>&ndash;:&ndash; use_module(plHtml(html_dcg)).
+:&ndash; use_module(library(dcg/dcg_abnf)).
+:&ndash; use_module(library(dcg/dcg_bracket)).
+:&ndash; use_module(library(dcg/dcg_content)).
+:&ndash; use_module(library(http/html_dcg)).</p>

<p>@@ -56,9 +55,7 @@ cell:   <TD> label </TD>
 %! gv_html_like_label(?Content:compound)// .</p>

<p> gv_html_like_label(Content) &mdash;>
&ndash;  &ldquo;&lt;&rdquo;,
&ndash;  label(Content),
&ndash;  &ldquo;>&rdquo;.
+  bracketed(angular, label(Content)).</p>

<p>@@ -262,7 +259,7 @@ textitem(String) &mdash;></p>

<p>&ndash;% HELPERS
+% HELPERS %</p>

<p> %! supported_html_element(+Name:atom) is semidet.
 %! supported_html_element(-Name:atom) is multi.
diff &mdash;git a/gv_numeral.pl b/gv_numeral.pl
index bff1255..1e5c723 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/gv_numeral.pl
@@ -11,14 +11,14 @@
 @version 2014/05-2014/06, 2015/01
 */</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_abnf_common)).
&ndash;:&ndash; use_module(plc(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(plc(dcg/dcg_cardinal)).
&ndash;:&ndash; use_module(plc(math/math_ext)).
&ndash;:&ndash; use_module(plc(math/positional)).
&ndash;:&ndash; use_module(plc(math/radix)).
&ndash;:&ndash; use_module(plc(math/rational_ext)).
+:&ndash; use_module(library(dcg/dcg_abnf)).
+:&ndash; use_module(library(dcg/dcg_abnf_common)).
+:&ndash; use_module(library(dcg/dcg_ascii)).
+:&ndash; use_module(library(dcg/dcg_cardinal)).
+:&ndash; use_module(library(math/math_ext)).
+:&ndash; use_module(library(math/positional)).
+:&ndash; use_module(library(math/radconv)).
+:&ndash; use_module(library(math/rational_ext)).</p>

<p>@@ -63,14 +63,14 @@ gv_numeral(N) &mdash;></p>

<pre><code>       %     preceded by the decimal separator.
       {I =:= 0}
   -&gt;  ".",
</code></pre>

<ul>
<li><pre><code>   {weights_fraction(FW, F)},
</code></pre></li>
<li><pre><code>   {positional_fraction(FW, F)},
   '[0-9]*'(FW)
</code></pre>

<p>   ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
       %     so write both of them, with the decimal separator in-between.
       {positional(I, IW)},
       &lsquo;[0-9]+&rsquo;(IW),
       &ldquo;.&rdquo;,</p></li>
<li><pre><code>   {weights_fraction(FW, F)},
</code></pre></li>
<li><pre><code>   {positional_fraction(FW, F)},
   '[0-9]*'(FW)
</code></pre>

<p>   )
;   &lsquo;[&ndash;]?&rsquo;(Sg),
diff &mdash;git a/gv_util.pl b/gv_util.pl
deleted file mode 100644
index b2cbdcc..0000000
&mdash;&ndash; a/gv_util.pl
+++ /dev/null
@@ -1,260 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>gv_util,</li>
<li>[</li>
<li> ascii_alpha//1, % ?X:code</li>
<li> atom_phrase/2, % :Goal_1</li>
<li><pre><code>            % +Atom:atom
</code></pre></li>
<li> atom_phrase/3, % :Goal_1</li>
<li><pre><code>            % +Atom1:atom
</code></pre></li>
<li><pre><code>            % -Atom2:atom
</code></pre></li>
<li> file_age/2, % +File:atom</li>
<li><pre><code>         % -Age:float
</code></pre></li>
<li> html_download/2, % +Uri:atom</li>
<li><pre><code>              % -Dom:compound
</code></pre></li>
<li> indent//1, % +N:nonneg</li>
<li> persistent_db_attach/2, % +Module:atom</li>
<li><pre><code>                     % +File:atom
</code></pre></li>
<li> underscore//1, % ?X:code</li>
<li> verbose_process/2 % +Process:atom</li>
<li><pre><code>               % :Goal_0
</code></pre></li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz utilities</h2>

-Utilities that should not be specific to the GraphViz library

<h2>-but that are considered too small to publish independently.</h2>

&ndash;@author Wouter Beek
&ndash;@version 2015/07

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(ansi_term)).
&ndash;:&ndash; use_module(library(http/http_open)).
&ndash;:&ndash; use_module(library(http/http_ssl_plugin)). % HTTPS support.
&ndash;:&ndash; use_module(library(lambda)).
&ndash;:&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(process)).
&ndash;:&ndash; use_module(library(sgml)).

<h2>&ndash;:&ndash; use_module(library(xpath)).</h2>

&ndash;:&ndash; meta_predicate(atom_phrase(1,+)).
&ndash;:&ndash; meta_predicate(atom_phrase(1,+,&ndash;)).
&ndash;:&ndash; meta_predicate(dcg_call(//,?,?)).
&ndash;:&ndash; meta_predicate(dcg_call(1,+,?,?)).
&ndash;:&ndash; meta_predicate(http_get(+,1,+)).
&ndash;:&ndash; meta_predicate(http_stream(+,1,+)).

<h2>&ndash;:&ndash; meta_predicate(verbose_process(+,0)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! ascii_alpha(?X:code)// .</h2>

<p>-ascii_alpha(X) &mdash;></p></li>
<li>between_code(65, 90, X)
-ascii_alpha(X) &mdash;>

<h2>&ndash;  between_code(97, 122, X)</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! ascii_alpha_numeric(?X:code)// .</h2>

<p>-ascii_alpha_numeric(X) &mdash;></p></li>
<li>ascii_alpha(X).
-ascii_alpha_numeric(X) &mdash;>

<h2>&ndash;  ascii_numberic(X).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! ascii_numeric(?X:code)// .</h2>

-ascii_numeric(X) &mdash;>

<h2>&ndash;  between_code(48, 57, X).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! atom_phrase(:Goal_1, +Atom:atom) is det.</h2>

<p>-atom_phrase(Goal_1, A):&ndash;</p></li>
<li>atom_codes(A, Cs),

<h2>&ndash;  phrase(Goal_1, Cs).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! atom_phrase(:Goal_1, +Atom1:atom, +Atom2:atom) is det.</h2>

<p>-atom_phrase(Goal_1, A1, A2):&ndash;</p></li>
<li>atom_codes(A1, Cs1),</li>
<li>phrase(Goal_1, Cs1, Cs2),

<h2>&ndash;  atom_codes(A2, Cs2).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! between_code(+Low:code, +High:code, ?X:code)// .</h2>

<p>-between_code(Low, High, X) &mdash;></p></li>
<li>[X],

<h2>&ndash;  {between(Low, High, X)}.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! dcg_call(:Dcg_0)// is det.</h2>

-dcg_call(Dcg, X, Y):&ndash;

<h2>&ndash;  call(Dcg, X, Y).</h2>

<h2>&ndash;%! dcg_call(:Dcg_1, +Argument1)// is det.</h2>

-dcg_call(Dcg, A1, X, Y):&ndash;

<h2>&ndash;  call(Dcg, A1, X, Y).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! file_age(+File:atom, -Age:float) is det.</h2>

<p>-file_age(File, Age):&ndash;</p></li>
<li>time_file(File, LastModified),</li>
<li>get_time(Now),

<h2>&ndash;  Age is Now &ndash; LastModified.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! html_download(+Uri:atom, -Dom:compound) is det.</h2>

<p>-html_download(Uri, Dom):&ndash;</p></li>
<li>http_get(</li>
<li> Uri,</li>
<li> \Stream<sup>load</sup>_html(Stream, Dom, [dialect(html5),max_errors(-1)]),</li>
<li> copy</li>
<li> []

<h2>&ndash;  ).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! http_get(+Uri:atom, :Success_1, +Options:list(compound)) is det.</h2>

<p>-http_get(Uri, Success_1, Opts0):&ndash;</p></li>
<li>merge_options([method(get),status_code(Status)], Opts0, Opts),</li>
<li>setup_call_cleanup(</li>
<li> http_open(Uri, Stream, Opts),</li>
<li> http_stream(Status, Success_1, Stream),</li>
<li> close(Stream)

<h2>&ndash;  ).</h2>

<h2>&ndash;%! http_stream(+Status:between(100,599), :Success_1, +Read:stream) is det.</h2>

<p>-http_stream(Status, Success_1, Stream):&ndash;</p></li>
<li>between(200, 299, Status), !,</li>
<li>call(Success_1, Stream).
-http_stream(Status, _, Stream):&ndash;</li>
<li>format(user_error, &lsquo;[STATUS ~D] &rsquo;, [Status]),</li>
<li>copy_stream_data(Stream, user_error),

<h2>&ndash;  format(user_error, &lsquo;\n&rsquo;, []).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! html_table(+Dom:list(compound), -Header:list, -Data:list(list)) is det.</h2>

<p>-html_table(Dom, Header, Data):&ndash;</p></li>
<li>ignore(html_table_row(header, Dom, Header)),</li>
<li>findall(</li>
<li> Data0,</li>
<li> html_table_row(data, Table, Data0),</li>
<li> Data

<h2>&ndash;  ).</h2>

&ndash;%! html_table_row(
&ndash;%!   +Mode:oneof([data,header]),
&ndash;%!   +Dom:list(compound),
&ndash;%!   -Data:list

<h2>&ndash;%! ) is det.</h2>

<p>-html_table_row(data, Dom, Row):&ndash; !,</p></li>
<li>xpath(Dom, //tr, Tr),</li>
<li>findall(</li>
<li> Cell,</li>
<li> xpath(Tr, //td(normalize_space), Cell),</li>
<li> Row</li>
<li>),</li>
<li>Row \== [].
-html_table_row(header, Dom, Row):&ndash;</li>
<li>xpath(Dom, //tr, Tr),</li>
<li>findall(</li>
<li> Cell,</li>
<li> xpath(Tr, //th(normalize_space), Cell),</li>
<li> Row</li>
<li>),

<h2>&ndash;  Row \== [].</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! indent(+N:nonneg)// is det.</h2>

<p>-indent(0) &mdash;> !, &ldquo;&rdquo;.
-indent(N) &mdash;></p></li>
<li>&ldquo; &rdquo;,</li>
<li>{succ(M, N)},

<h2>&ndash;  indent(M).</h2>

<h2>&ndash;</h2>

&ndash;%! persistent_db_attach(+Module:atom, +File:atom) is det.
&ndash;% Safe attachement of a persistent database dump.

<h2>&ndash;% This first make sure the given file exists.</h2>

<p>-persistent_db_attach(Mod, File):&ndash;</p></li>
<li>exists_file(File), !,</li>
<li>Mod:db_attach(File, []).
-persistent_db_attach(Mod, File):&ndash;</li>
<li>touch_file(File),

<h2>&ndash;  persistent_db_attach(Mod, File).</h2>

-touch_file(File):&ndash;

<h2>&ndash;  create_process(path(touch), [file(File)], []).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! underscore(?C:code)// .</h2>

-underscore(95) &mdash;>

<h2>&ndash;  [95].</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! verbose_process(+Name:atom, :Goal_0) is det.</h2>

<p>-verbose_process(Name, Goal_0):&ndash;</p></li>
<li>setup_call_catcher_cleanup(</li>
<li> start(Name),</li>
<li> Goal_0,</li>
<li> E,</li>
<li> (   E == true</li>
<li> &ndash;>  success(Name)</li>
<li> ;   failure(Name)</li>
<li> )

<h2>&ndash;  ).</h2>

<p>-failure(Name):&ndash;</p></li>
<li>warning(&lsquo;[FAILURE]&rsquo;),</li>
<li>normal(&lsquo; Process &rsquo;),</li>
<li>normal(Name),</li>
<li>normal(&lsquo;:&rsquo;),</li>
<li>nl,

<h2>&ndash;  normal(E).</h2>

<p>-start(Name):&ndash;</p></li>
<li>normal(&lsquo;Starting process &rsquo;),</li>
<li>normal(Name),

<h2>&ndash;  normal(&lsquo;.&rsquo;).</h2>

<p>-success(Name):&ndash;</p></li>
<li>success(&lsquo;[SUCCESS]&rsquo;),</li>
<li>normal(&lsquo; Ending process &rsquo;),</li>
<li>normal(Name),

<h2>&ndash;  normal(&lsquo;.&rsquo;).</h2>

-emphasis(X):&ndash; ansi_format([bold], &lsquo;~a&rsquo;, [X]).
-normal(X):&ndash; ansi_format([], &lsquo;~a&rsquo;, [X]).
-notification(X):&ndash; ansi_format([bold,fg(yellow)], &lsquo;~a&rsquo;, [X]).
-success(X):&ndash; ansi_format([bold,fg(green)], &lsquo;~a&rsquo;, [X]).
-warning(X):&ndash; ansi_format([bold,fg(red)], &lsquo;~a&rsquo;, [X]).
diff &mdash;git a/load.pl b/load.pl
deleted file mode 100644
index de8b5ca..0000000
&mdash;&ndash; a/load.pl
+++ /dev/null
@@ -1,13 +0,0 @@

<h2>&ndash;% Load file for the plGraphViz library.</h2>

&ndash;:&ndash; dynamic(user:project/2).
&ndash;:&ndash; multifile(user:project/2).

<h2>&ndash;   user:project(plGraphViz, &lsquo;GraphViz support for SWI-Prolog.&rsquo;).</h2>

<p>&ndash;:&ndash; use_module(load_project).
&ndash;:&ndash; load_project([</p></li>
<li> plc-&lsquo;Prolog-Library-Collection&rsquo;,</li>
<li> plHtml,</li>
<li> plUri

<h2>&ndash;]).</h2>

<p>diff &mdash;git a/load_project.pl b/load_project.pl
deleted file mode 100644
index 3f0ebef..0000000
&mdash;&ndash; a/load_project.pl
+++ /dev/null
@@ -1,125 +0,0 @@
&ndash;:&ndash; module(</p></li>
<li>load_project,</li>
<li>[</li>
<li> load_project/1, % +ChildProjects:list(or([atom,pair(atom)]))</li>
<li> load_subproject/2, % +ParentFileSearchPath:atom</li>
<li><pre><code>                % +Child:or([atom,pair(atom)])
</code></pre></li>
<li> set_data_subdirectory/1 % +ParentDirectory:atom</li>
<li>]

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> Load project</h2>

<p>-Generic code for loading a project:</p></li>
<li><ul>
<li>Create a subdirectory for data.</li>
</ul>
</li>
<li><ul>
<li>Load the root of subprojects onto the file search path.

<h2>&ndash;  * Load the index of subprojects onto the file search path.</h2>

&ndash;@author Wouter Beek
&ndash;@version 2014/11/10

<h2>&ndash;*/</h2>

&ndash;:&ndash; use_module(library(ansi_term)). % Colorized terminal messages.
&ndash;:&ndash; use_module(library(apply)).

<h2>&ndash;:&ndash; use_module(library(pldoc)).</h2>

&ndash;:&ndash; dynamic(user:project/2).
&ndash;:&ndash; multifile(user:project/2).
&ndash;:&ndash; dynamic(user:project/3).

<h2>&ndash;:&ndash; multifile(user:project/3).</h2>

<h2>&ndash;</h2>

<p>-load_project(ChildProjects):&ndash;</p></li>
<li>doc_server(9999),</li>
</ul>
</li>
<li><h2>&ndash;  parent_alias(ParentFsp),</h2></li>
<li>% Entry point.</li>
<li>source_file(load_project(_), ThisFile),</li>
<li>file_directory_name(ThisFile, ThisDir),</li>
<li>assert(user:file_search_path(ParentFsp, ThisDir)),

<h2>&ndash;  assert(user:file_search_path(project, ThisDir)),</h2></li>
<li>% Set the data subdirectory.

<h2>&ndash;  set_data_subdirectory(ThisDir),</h2></li>
<li>% Load the root of submodules onto the file search path.

<h2>&ndash;  maplist(load_subproject(ParentFsp), ChildProjects),</h2></li>
<li>% Load the index into the file search path.

<h2>&ndash;  load_project_index(ParentFsp).</h2>

<h2>&ndash;</h2>

&ndash;%! load_subproject(
&ndash;%!   +ParentFileSearchPath:atom,
&ndash;%!   +Child:or([atom,pair(atom)])

<h2>&ndash;%! ) is det.</h2>

<p>-load_subproject(ParentFsp, ChildFsp-ChildDir):&ndash; !,</p></li>
<li>load_subproject_file_search_path(ParentFsp, ChildFsp, ChildDir),</li>
<li>load_project_index(ChildFsp).
-load_subproject(ParentFsp, Child):&ndash;

<h2>&ndash;  load_subproject(ParentFsp, Child-Child).</h2>

&ndash;
&ndash;%! load_subproject_file_search_path(
&ndash;%!   +ParentFileSearchPath:atom,
&ndash;%!   +ChildFileSearchPath:atom,
&ndash;%!   +ChildDirectory:atom

<h2>&ndash;%! ) is det.</h2>

<p>&ndash;% The file search path for the subproject has already been set.
-load_subproject_file_search_path(<em>, ChildFsp, </em>):&ndash;</p></li>
<li>user:file_search_path(ChildFsp, _).
-load_subproject_file_search_path(ParentFsp, ChildFsp, ChildDir):&ndash;</li>
<li>Spec =.. [ParentFsp,ChildDir],</li>
<li>absolute_file_name(Spec, _, [access(read),file_type(directory)]), !,</li>
<li>assert(user:file_search_path(ChildFsp, Spec)).
-load_subproject_file_search_path(_, ChildFsp, ChildDir):&ndash;

<h2>&ndash;  print_message(warning, missing_subproject_directory(ChildFsp,ChildDir)).</h2>

&ndash;

<h2>&ndash;%! load_project_index(+FileSearchPath:atom) is det.</h2>

<p>-load_project_index(Fsp):&ndash;</p></li>
<li>Spec =.. [Fsp,index],</li>
<li>absolute_file_name(</li>
<li> Spec,</li>
<li> File,</li>
<li> [access(read),file_errors(fail),file_type(prolog)]</li>
<li>), !,</li>
<li>ensure_loaded(File).

<h2>-load_project_index(_).</h2>

&ndash;

<h2>&ndash;%! parent_alias(-ParentFsp:atom) is det.</h2>

<p>-parent_alias(ParentFsp):&ndash;</p></li>
<li>user:project(<em>, </em>, ParentFsp), !.
-parent_alias(ParentFsp):&ndash;

<h2>&ndash;  user:project(ParentFsp, _).</h2>

&ndash;

<h2>&ndash;%! set_data_subdirectory(+ParentDirectory:atom) is det.</h2>

<p>-set_data_subdirectory(ParentDir):&ndash;</p></li>
<li>directory_file_path(ParentDir, data, DataDir),</li>
<li>make_directory_path(DataDir),

<h2>&ndash;  assert(user:file_search_path(data, DataDir)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;% Messages</h2>

<h2>&ndash;:&ndash; multifile(prolog:message//1).</h2>

<p>-prolog:message(missing_subproject_directory(ChildFsp,ChildDir)) &mdash;></p></li>
<li>[</li>
<li> &lsquo;The ~a submodule is not present.&rsquo;&ndash;[ChildFsp], nl,</li>
<li> &lsquo;Check whether subdirectory ~a is present in your project directory:&rsquo;&ndash;[ChildDir], nl,</li>
<li> &lsquo;    git submodule init&rsquo;, nl,</li>
<li> &lsquo;    git submodule update&rsquo;

<h2>&ndash;  ].</h2>

diff &mdash;git a/plHtml b/plHtml
deleted file mode 160000
index 2919705..0000000
&mdash;&ndash; a/plHtml
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 2919705d079b1ab28bf3c502a87d1648fd842ed3
diff &mdash;git a/plUri b/plUri
deleted file mode 160000
index 1a55127..0000000
&mdash;&ndash; a/plUri
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 1a55127517ee0b0cf2ad4fecbe3f84402f5f4c12
diff &mdash;git a/run.pl b/run.pl
deleted file mode 100644
index 8c751f4..0000000
&mdash;&ndash; a/run.pl
+++ /dev/null
@@ -1,11 +0,0 @@

<h2>&ndash;% Standalone execution of the plGraphViz library.</h2>

<p>&ndash;:&ndash; if(current_prolog_flag(argv, [&lsquo;&mdash;debug&rsquo;|_])).</p></li>
<li>:&ndash; ensure_loaded(debug).
&ndash;:&ndash; else.</li>
<li>:&ndash; set_prolog_flag(verbose, silent).</li>
<li>:&ndash; ensure_loaded(load).

<h2>&ndash;:&ndash; endif.</h2>

<h2>&ndash;:&ndash; use_module(plGraphViz(gv_file)).</h2></li>
</ul>


<p>```</p>

<h2 id="100"> 100: 正在比较变动前 a97e8e1 和变动后 9513a9b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/LICENSE.txt b/LICENSE.txt
new file mode 100644
index 0000000..c7b7798
&mdash;&ndash; /dev/null
+++ b/LICENSE.txt
@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright &copy; 2015 Wouter Beek
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the &ldquo;Software&rdquo;), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED &ldquo;AS IS&rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
diff &mdash;git a/pack.pl b/pack.pl
new file mode 100644
index 0000000..f0f5b22
&mdash;&ndash; /dev/null
+++ b/pack.pl
@@ -0,0 +1,9 @@
+author(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#x6d;&#x65;&#64;&#119;&#x6f;&#x75;&#x74;&#x65;&#x72;&#x62;&#x65;&#x65;&#x6b;&#46;&#99;&#x6f;&#x6d;">&#x6d;&#101;&#64;&#119;&#x6f;&#117;&#116;&#x65;&#114;&#98;&#x65;&#101;&#x6b;&#x2e;&#x63;&#111;&#x6d;</a>&rsquo;).
+download(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz/release/*.zip">https://github.com/wouterbeek/plGraphViz/release/*.zip</a>&rsquo;).
+home(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz">https://github.com/wouterbeek/plGraphViz</a>&rsquo;).
+maintainer(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#105;&#x6c;&#116;&#111;&#x3a;&#109;&#x65;&#64;&#119;&#x6f;&#x75;&#x74;&#101;&#114;&#98;&#x65;&#x65;&#107;&#x2e;&#99;&#111;&#x6d;">&#109;&#x65;&#64;&#x77;&#111;&#x75;&#116;&#101;&#114;&#98;&#101;&#x65;&#107;&#x2e;&#x63;&#x6f;&#x6d;</a>&rsquo;).
+name(plGraphViz).
+packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#58;&#109;&#101;&#x40;&#x77;&#111;&#x75;&#116;&#101;&#114;&#x62;&#x65;&#x65;&#107;&#x2e;&#x63;&#111;&#109;">&#x6d;&#x65;&#64;&#119;&#111;&#117;&#116;&#x65;&#x72;&#x62;&#101;&#101;&#107;&#46;&#x63;&#111;&#x6d;</a>&rsquo;).
+requires(&lsquo;Prolog_Library_Collection&rsquo;).
+title(plGraphViz).
+version(&lsquo;0.0.1&rsquo;).
diff &mdash;git a/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
similarity index 86%
rename from gv_attr_type.pl
rename to prolog/gv/gv_attr_type.pl
index 4e1b7f2..ff163fe 100644
&mdash;&ndash; a/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_attr_type,
   [
&ndash;    gv_attr_type/1, % ?Type:atom
+    gv_attr_type//1, % ?Type:atom</p>

<pre><code> addDouble//1, % +Double:float
 addPoint//1, % +Point:compound
 arrowType//1, % +ArrowType:atom
</code></pre>

<p>@@ -62,38 +62,38 @@</p>

<p> %! gv_attr_type(?Type:atom) is nondet.</p>

<p>-gv_attr_type(addDouble).
-gv_attr_type(addPoint).
-gv_attr_type(arrowType).
-gv_attr_type(bool).
-gv_attr_type(color).
-gv_attr_type(colorList).
-gv_attr_type(clusterMode).
-gv_attr_type(dirType).
-gv_attr_type(double).
-gv_attr_type(doubleList).
-gv_attr_type(escString).
-gv_attr_type(layerList).
-gv_attr_type(layerRange).
-gv_attr_type(lblString).
-gv_attr_type(int).
-gv_attr_type(outputMode).
-gv_attr_type(packMode).
-gv_attr_type(pagedir).
-gv_attr_type(point).
-gv_attr_type(pointList).
-gv_attr_type(portPos).
-gv_attr_type(quadType).
-gv_attr_type(rankType).
-gv_attr_type(rankdir).
-gv_attr_type(rect).
-gv_attr_type(shape).
-gv_attr_type(smoothType).
-gv_attr_type(splineType).
-gv_attr_type(startType).
-gv_attr_type(string).
-gv_attr_type(style).
-gv_attr_type(viewPort).
+gv_attr_type(addDouble) &mdash;> &ldquo;addDouble&rdquo;.
+gv_attr_type(addPoint) &mdash;> &ldquo;addPoint&rdquo;.
+gv_attr_type(arrowType) &mdash;> &ldquo;arrowType&rdquo;.
+gv_attr_type(bool) &mdash;> &ldquo;bool&rdquo;.
+gv_attr_type(color) &mdash;> &ldquo;color&rdquo;.
+gv_attr_type(colorList) &mdash;> &ldquo;colorList&rdquo;.
+gv_attr_type(clusterMode) &mdash;> &ldquo;clusterMode&rdquo;.
+gv_attr_type(dirType) &mdash;> &ldquo;dirType&rdquo;.
+gv_attr_type(double) &mdash;> &ldquo;double&rdquo;.
+gv_attr_type(doubleList) &mdash;> &ldquo;doubleList&rdquo;.
+gv_attr_type(escString) &mdash;> &ldquo;escString&rdquo;.
+gv_attr_type(layerList) &mdash;> &ldquo;layerList&rdquo;.
+gv_attr_type(layerRange) &mdash;> &ldquo;layerRange&rdquo;.
+gv_attr_type(lblString) &mdash;> &ldquo;lblString&rdquo;.
+gv_attr_type(int) &mdash;> &ldquo;int&rdquo;.
+gv_attr_type(outputMode) &mdash;> &ldquo;outputMode&rdquo;.
+gv_attr_type(packMode) &mdash;> &ldquo;packMode&rdquo;.
+gv_attr_type(pagedir) &mdash;> &ldquo;pagedir&rdquo;.
+gv_attr_type(point) &mdash;> &ldquo;point&rdquo;.
+gv_attr_type(pointList) &mdash;> &ldquo;pointList&rdquo;.
+gv_attr_type(portPos) &mdash;> &ldquo;portPos&rdquo;.
+gv_attr_type(quadType) &mdash;> &ldquo;quadType&rdquo;.
+gv_attr_type(rankType) &mdash;> &ldquo;rankType&rdquo;.
+gv_attr_type(rankdir) &mdash;> &ldquo;rankdir&rdquo;.
+gv_attr_type(rect) &mdash;> &ldquo;rect&rdquo;.
+gv_attr_type(shape) &mdash;> &ldquo;shape&rdquo;.
+gv_attr_type(smoothType) &mdash;> &ldquo;smoothType&rdquo;.
+gv_attr_type(splineType) &mdash;> &ldquo;splineType&rdquo;.
+gv_attr_type(startType) &mdash;> &ldquo;startType&rdquo;.
+gv_attr_type(string) &mdash;> &ldquo;string&rdquo;.
+gv_attr_type(style) &mdash;> &ldquo;style&rdquo;.
+gv_attr_type(viewPort) &mdash;> &ldquo;viewPort&rdquo;.</p>

<p>diff &mdash;git a/gv_attrs.pl b/prolog/gv/gv_attrs.pl
similarity index 86%
rename from gv_attrs.pl
rename to prolog/gv/gv_attrs.pl
index cce4f9d..d773a8b 100644
&mdash;&ndash; a/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -24,12 +24,7 @@
 :&ndash; use_module(library(persistency_ext)).
 :&ndash; use_module(library(xpath)).</p>

<h2>&ndash;:&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type/1]).</h2>

<p>&ndash;:&ndash; dynamic(user:prolog_file_type/2).</p>

<h2>&ndash;:&ndash; multifile(user:prolog_file_type/2).</h2>

<p>-user:prolog_file_type(log, logging).
+:&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).</p>

<p> %! gv_attr(
 %!   ?Name:atom,
@@ -127,32 +122,30 @@ assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
 % Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.</p>

<p> gv_attrs_download:&ndash;
&ndash;  verbose_process(
&ndash;    &lsquo;Updating GraphViz attributes table&hellip; &rsquo;,
&ndash;    (
&ndash;      gv_attrs_uri(Uri),
&ndash;      html_download(Uri, Dom),
&ndash;      xpath(Dom, //table(@align=lower_case(center)), TableDom),
&ndash;      html_table(TableDom, _, Rows),
&ndash;      maplist(assert_gv_attr_row, Rows)
&ndash;    )
+  verbose_call(
+    &lsquo;updating GraphViz attributes table&rsquo;,
+    gv_attrs_download0
   ).</p>

<p>+gv_attrs_download0:&ndash;
+  gv_attrs_uri(Uri),
+  html_download(Uri, Dom),
+  xpath_chk(Dom, //table(@align=lower_case(center)), TableDom),
+  html_table(TableDom, _, Rows),
+  maplist(assert_gv_attr_row, Rows).
+</p>

<p> %! gv_attrs_file(-File:atom) is det.</p>

<p> gv_attrs_file(File):&ndash;
&ndash;  absolute_file_name(gv_attrs, File, [access(write),file_type(logging)]).
+  absolute_file_name(&lsquo;gv_attrs.log&rsquo;, File, [access(write)]).</p>

<p> %! gv_attrs_init is det.</p>

<p> gv_attrs_init:&ndash;
   gv_attrs_file(File),
&ndash;  attach_persistent_db(File),
&ndash;  file_age(File, Age),</p>

<h2>&ndash;  gv_attrs_update(Age).</h2>

<ul>
<li>init_persistent_db(File, gv_attrs_update).</li>
</ul>


<p> %! gv_attrs_update(+Age:float) is det.
@@ -186,12 +179,13 @@ translate_default(Default, Default).</p>

<p> %! translate_type(-Types:list(atom))// is det.</p>

<p>-translate_type([]) &mdash;> !, [].
 translate_type([H|T]) &mdash;>
&ndash;  {gv_attr_type(H)},
&ndash;  atom(H),
+  gv_attr_type(H),
   whites,
   translate_type(T).
+translate_type([H]) &mdash;>
+  gv_attr_type(H).
+translate_type([]) &mdash;> &ldquo;&rdquo;.</p>

<p>diff &mdash;git a/gv_color.pl b/prolog/gv/gv_color.pl
similarity index 78%
rename from gv_color.pl
rename to prolog/gv/gv_color.pl
index dd1690b..0553aa2 100644
&mdash;&ndash; a/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -17,27 +17,17 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(deb_ext)).
 :&ndash; use_module(library(dcg/basics)).
+:&ndash; use_module(library(dcg/dcg_abnf)).
+:&ndash; use_module(library(dcg/dcg_content)).
+:&ndash; use_module(library(file_ext)).
+:&ndash; use_module(library(http/html_download)).
+:&ndash; use_module(library(http/html_table)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(persistency)).
+:&ndash; use_module(library(persistency_ext)).
 :&ndash; use_module(library(xpath)).</p>

<p>&ndash;:&ndash; use_module(plc(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(plc(dcg/dcg_abnf_rules)).
&ndash;:&ndash; use_module(plc(dcg/dcg_atom)).
&ndash;:&ndash; use_module(plc(dcg/dcg_cardinal)).
&ndash;:&ndash; use_module(plc(dcg/dcg_content)).
&ndash;:&ndash; use_module(plc(generics/db_ext)).
&ndash;:&ndash; use_module(plc(generics/persistent_db_ext)).
&ndash;:&ndash; use_module(plc(generics/print_ext)).
&ndash;:&ndash; use_module(plc(io/file_ext)).</p>

<h2>&ndash;:&ndash; use_module(plc(io/file_gnu)).</h2>

<p>&ndash;:&ndash; use_module(plHtml(html)).</p>

<h2>&ndash;:&ndash; use_module(plHtml(html_table)).</h2>

<h2>&ndash;:&ndash; db_add_novel(user:prolog_file_type(log, logging)).</h2>

<p> %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.</p>

<p> :&ndash; persistent(gv_color(colorscheme:oneof([svg,x11]),color:atom)).
@@ -99,7 +89,7 @@ wc_weight(Float) &mdash;></p>

<p> gv_color_download:&ndash;
   verbose_call(
&ndash;    &lsquo;Updating the GraphViz color table&hellip;&rsquo;,
+    &lsquo;updating the GraphViz color table&rsquo;,</p>

<pre><code> (
   gv_color_uri(Uri),
   html_download(Uri, Dom),
</code></pre>

<p>@@ -121,18 +111,14 @@ assert_color_table(Colorscheme, TableDom):&ndash;
 %! gv_color_file(-File:atom) is det.</p>

<p> gv_color_file(File):&ndash;
&ndash;  absolute_file_name(
&ndash;    data(gv_color),
&ndash;    File,
&ndash;    [access(write),file_type(logging)]
&ndash;  ).
+  absolute_file_name(&lsquo;gv_color.log&rsquo;, File, [access(write)]).</p>

<p> %! gv_color_init is det.</p>

<p> gv_color_init:&ndash;
   gv_color_file(File),
&ndash;  persistent_db_init(File, gv_color_update).
+  init_persistent_db(File, gv_color_update).</p>

<p> %! gv_color_update(+Age:float) is det.
diff &mdash;git a/gv_file.pl b/prolog/gv/gv_file.pl
similarity index 96%
rename from gv_file.pl
rename to prolog/gv/gv_file.pl
index da17737..a175071 100644
&mdash;&ndash; a/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -13,8 +13,9 @@
 @version 2015/07
 */</p>

<p>+:&ndash; use_module(library(code_ext)).
 :&ndash; use_module(library(error)).
&ndash;:&ndash; use_module(library(gv/gv_dot)).
+:&ndash; use_module(library(gv/gv_graph)).
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(process)).</p>

<p>@@ -55,7 +56,7 @@ gv_export(ExportGraph, OutputFile, Options):&ndash;
   absolute_file_name(data(ThreadName), TmpFile, [access(write),file_type(dot)]),
   setup_call_cleanup(</p>

<pre><code> open(TmpFile, write, Write, [encoding(utf8)]),
</code></pre>

<ul>
<li> put_codes(Write, Codes),</li>
<li> with_output_to(Write, put_codes(Codes)),
 close(Write)
),
file_to_gv(TmpFile, OutputFile, Options).
@@ -88,7 +89,7 @@ file_to_gv(InputFile, OutputFile, Options):&ndash;
% Run the GraphViz conversion command in the shell.
format(atom(OutputTypeFlag), &lsquo;-T~a&rsquo;, [OutputType]),
format(atom(OutputFileFlag), &lsquo;-o~a&rsquo;, [OutputFile]),</li>
<li>process_ext(</li>
<li>process_create(
  path(Method),
  [OutputTypeFlag,file(InputFile),OutputFileFlag],
  []
diff &mdash;git a/gv_graph.pl b/prolog/gv/gv_graph.pl
similarity index 93%
rename from gv_graph.pl
rename to prolog/gv/gv_graph.pl
index 9ae7353..6bd4b86 100644
&mdash;&ndash; a/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -7,6 +7,13 @@</li>
</ul>


<p> /** <module> GraphViz graph</p>

<p>+Generates GraphViz graphs in the DOT format based on
+a Prolog representation of a graph.
+
+In GraphViz vertices are called &lsquo;nodes&rsquo;.
+
+&mdash;&ndash;
+
 @author Wouter Beek
 @version 2015/07
 */
@@ -14,6 +21,7 @@
 :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_content)).
+:&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(option)).</p>

<p>@@ -79,8 +87,9 @@ gv_graph(G1, I) &mdash;>
   gv_graph_type(Directed), &ldquo; &rdquo;,</p>

<p>   % Graph name.
&ndash;  (   {select_name(GName), GAttrs4, GAttrs5)}
&ndash;  &ndash;>  gv_id(GName), &ldquo; &rdquo;,
+  (   {select_option(name(GName), GAttrs4, GAttrs5)}
+  &ndash;>  gv_id(GName),
+      &ldquo; &rdquo;
   ;   {GAttrs5 = GAttrs4}
   ),</p>

<p>@@ -102,7 +111,7 @@ gv_graph(G1, I) &mdash;>
   % Only add a line_feed if some content was already written
   % and some content is about to be written.
   (   % Succeeds if no content was written.
&ndash;      {(GAttrs == [], SharedVAttrs == [], SharedEAttrs == [])}
+      {(GAttrs5 == [], SharedVAttrs == [], SharedEAttrs == [])}
   &ndash;>  &ldquo;&rdquo;
   ;   % Succeeds if no content is about to be written.</p>

<pre><code>   {(NewVTerms == [], RankedVTerms == [])}
</code></pre>

<p>@@ -171,8 +180,8 @@ gv_ranked_node_collections(I, L) &mdash;>
 %! ) is det.</p>

<p> add_default(L1, Opt, L2):&ndash;
&ndash;  Opt =.. [N,V],
&ndash;  Opt0 =.. [N,<em>],
+  Opt =.. [N,</em>Value],
+  Opt0 =.. [N,_FreshVar],
   (   option(Opt0, L1)
   &ndash;>  true
   ;   L2 = [Opt|L1]
diff &mdash;git a/gv_dot.pl b/prolog/gv/gv_graph_comp.pl
similarity index 79%
rename from gv_dot.pl
rename to prolog/gv/gv_graph_comp.pl
index 9c53cc5..8a7d28a 100644
&mdash;&ndash; a/gv_dot.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -1,16 +1,21 @@
 :&ndash; module(
&ndash;  gv_dot,
+  gv_graph_comp,
   [
+    gv_edge_statement//3, % +Indent:nonneg
+                          % +Directed:boolean
+                          % +Edge:compound
+    gv_generic_attributes_statement//3, % +Kind:oneof([edge,graph,node])
+                                        % +Indent:nonneg
+                                        % +CategoryAttributes:list(compound)
+    gv_id//1, % +Name:compound
+    gv_node_statement//2, % +Indent:nonneg
+                          % +Vertex:compound
+    gv_ranked_node_collection//2 % +Indent:nonneg
+                % +Rank:???  <br/>
   ]
 ).</p>

<h2>&ndash;/** <module> GraphViz DOT generator</h2>

<h2>-DCG rules for GraphViz DOT file generation.</h2>

<h2>-Methods for writing to the GraphViz DOT format.</h2>

<p>-In GraphViz vertices are called &lsquo;nodes&rsquo;.
+/** <module> GraphViz graph components</p>

<p> ```abnf
 attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
@@ -26,9 +31,11 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/basics)).
+:&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_ascii)).
 :&ndash; use_module(library(dcg/dcg_bracketed)).
 :&ndash; use_module(library(dcg/dcg_content)).
+:&ndash; use_module(library(dcg/dcg_quoted)).
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_html)).
 :&ndash; use_module(library(lists)).
@@ -38,66 +45,10 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p>&ndash;%! gv_attr(
&ndash;%!   +Context:oneof([edge,graph,node]),
&ndash;%!   +Attribute:nvpair
&ndash;%! )// is det.
&ndash;% A single GraphViz attribute.</p>

<h2>&ndash;% We assume that the attribute has already been validated.</h2>

<p>-gv_attr(Context, N=V) &mdash;>
&ndash;  gv_id(N),
&ndash;  &ldquo;=&rdquo;,
&ndash;  gv_attr_value(Context, N=V),</p>

<h2>&ndash;  &ldquo;;&rdquo;.</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gv_attrs(
&ndash;%!   +Kind:oneof([edge,graph,node]),
&ndash;%!   +Attributes:list(compound)</p>

<h2>&ndash;%! )// is det.</h2>

<p>-gv_attrs(Kind, L) &mdash;></p>

<h2>&ndash;  bracketed(square, &lsquo;*&rsquo;(gv_attr, L, [])).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gv_compass_pt(+Direction:oneof([&lsquo;<em>&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
&ndash;% ```
&ndash;% compass_pt : (n | ne | e | se | s | sw | w | nw | c | </em>)</p>

<h2>&ndash;% ```</h2>

<p>-gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
-gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
-gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
-gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
-gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
-gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
-gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
-gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
-gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.</p>

<h2>-gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gv_edge_operator(+Directed:boolean)// .
&ndash;% The binary edge operator between two vertices.
&ndash;% The operator that is used depends on whether the graph is directed or
&ndash;% undirected.
&ndash;%
&ndash;% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or</p>

<h2>&ndash;%               undirected (operator <code>--</code>).</h2>

<p>-gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.</p>

<h2>-gv_edge_operator(true) &mdash;> &ldquo;&ndash;>&rdquo;.</h2>

<h2>&ndash;</h2>

<p> %! gv_edge_statement(
 %!   +Indent:nonneg,
 %!   +Directed:boolean,
&ndash;%!   +EdgeTerm:compound
+%!   +Edge:compound
 %! )// is det.
 % A GraphViz statement describing an edge.
 %
@@ -105,29 +56,40 @@ gv_edge_operator(true) &mdash;> &ldquo;&ndash;>&rdquo;.
 % @arg Directed Whether the graph is directed or not.
 % @arg GraphAttributes The attributes of the graph. Some of these attributes
 %      may be used in the edge statement (e.g., the colorscheme).
&ndash;% @arg EdgeTerm A compound term in the GIFormat, representing an edge.
+% @arg Edge A compound term in the GIFormat, representing an edge.
 %
 % @tbd Instead of gv_node_id//1 we could have a gv_subgraph//1
 %      at the from and/or to location.
 % @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</p>

<p>-gv_edge_statement(I, Directed, edge(FromId,ToId,EAttrs)) &mdash;>
+gv_edge_statement(I, Dir, edge(From,To,Attrs)) &mdash;>
   indent(I),</p>

<ul>
<li>gv_node_id(FromId), &ldquo; &rdquo;,</li>
<li>gv_edge_operator(Directed), &ldquo; &rdquo;,</li>
<li>gv_node_id(ToId), &ldquo; &rdquo;,</li>
<li>gv_node_id(From), &ldquo; &rdquo;,</li>
<li>gv_edge_operator(Dir), &ldquo; &rdquo;,</li>
<li><p>gv_node_id(To), &ldquo; &rdquo;,</p>

<p>% We want <code>colorscheme/1</code> from the edges and
% <code>directionality/1</code> from the graph.</p></li>
<li>gv_attrs(edge, EAttrs),</li>
<li>gv_attrs(edge, Attrs),
&ldquo;\n&rdquo;.</li>
</ul>


<p>+%! gv_edge_operator(+Directed:boolean)// .
+% The binary edge operator between two vertices.
+% The operator that is used depends on whether the graph is directed or
+% undirected.
+%
+% @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
+%      undirected (operator <code>--</code>).
+
+gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
+gv_edge_operator(true) &mdash;> &ldquo;&ndash;>&rdquo;.
+</p>

<p> %! gv_generic_attributes_statement(
 %!   +Kind:oneof([edge,graph,node]),
&ndash;%!   +Indent:integer,
+%!   +Indent:nonneg,
 %!   +CategoryAttributes:list(nvpair)
 %! )//
 % A GraphViz statement describing generic attributes for a category of items.
@@ -142,16 +104,88 @@ gv_edge_statement(I, Directed, edge(FromId,ToId,EAttrs)) &mdash;>
 % attr_stmt = (graph / node / edge) attr_list
 % ```</p>

<p>-gv_generic_attributes_statement(<em>, </em>, []) &mdash;> [], !.
-gv_generic_attributes_statement(Kind, I, KindAttrs) &mdash;>
+gv_generic_attributes_statement(<em>, </em>, []) &mdash;> !, &ldquo;&rdquo;.
+gv_generic_attributes_statement(Kind, I, Attrs) &mdash;>
   indent(I),
   gv_kind(Kind), &ldquo; &rdquo;,
&ndash;  gv_attrs(Kind, KindAttrs),
+  gv_attrs(Kind, Attrs),
+  &ldquo;\n&rdquo;.
+
+%! gv_kind(+Kind:oneof([edge,graph,node]))// .
+
+gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
+gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
+gv_kind(node) &mdash;> &ldquo;node&rdquo;.
+
+
+
+%! gv_node_statement(+Indent:nonneg, +Vertex:compound)// is det.
+% A GraphViz statement describing a vertex (GraphViz calls vertices &lsquo;nodes&rsquo;).
+
+gv_node_statement(I, vertex(Id,Attrs)) &mdash;>
+  indent(I),
+  gv_node_id(Id),
+  gv_attrs(node, Attrs),
+  &ldquo;\n&rdquo;.
+
+
+
+%! gv_ranked_node_collection(+Indent:nonneg, Rank:???)// is det.
+
+gv_ranked_node_collection(I, Rank) &mdash;>
+  indent(I),
+  bracketed(curly, gv_ranked_node_collection0(I, Rank)).
+
+gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
+  &ldquo;\n&rdquo;,
+<br/>
+  % The rank attribute.
+  {NewI is I + 1},
+  indent(NewI),
+  gv_attr(subgraph, rank=same),
+  &ldquo;;\n&rdquo;,
+<br/>
+  % Vertice statements.
+  &lsquo;*&rsquo;(
+    gv_node_statement(NewI),
+    [Rank_V_Term|Content_V_Terms],
+    []
+  ),
+<br/>
+  % We want to indent the closing curly brace.
+  indent(I),
   &ldquo;\n&rdquo;.</p>

<p>&ndash;%! gv_id(?Atom:compound)// is det.
+
+
+% HELPERS %
+
+%! gv_attrs(
+%!   +Kind:oneof([edge,graph,node]),
+%!   +Attributes:list(compound)
+%! )// is det.
+
+gv_attrs(Kind, L) &mdash;>
+  bracketed(square, &lsquo;*&rsquo;(gv_attr(Kind), L, [])).
+
+%! gv_attr(
+%!   +Context:oneof([edge,graph,node]),
+%!   +Attribute:nvpair
+%! )// is det.
+% A single GraphViz attribute.
+% We assume that the attribute has already been validated.
+
+gv_attr(Context, N=V) &mdash;>
+  gv_id(N),
+  &ldquo;=&rdquo;,
+  gv_attr_value(Context, N=V),
+  &ldquo;;&rdquo;.
+
+
+
+%! gv_id(+Id:compound)// is det.
 % Parse a GraphViz identifier.
 % There are 4 variants:
 %   1. Any string of alphabetic (<code>[a-zA-Z'200-'377]</code>) characters,
@@ -193,20 +227,24 @@ gv_id(Atom) &mdash;>
   % GraphViz keyword.
   {+ gv_keyword([H|T])}.</p>

<p>+%! gv_id_first(+First:code)// is det.
+% Generates the first character of a GraphViz identifier.
+
 gv_id_first(X) &mdash;>
   ascii_letter(X).
 gv_id_first(X) &mdash;>
   underscore(X).</p>

<p>-gv_id_rest([]) &mdash;> [].
+%! gv_id_rest(+NonFirst:code)// is det.
+% Generates a non-first character of a GraphViz identifier.
+
+gv_id_rest([]) &mdash;> !, &ldquo;&rdquo;.
 gv_id_rest([H|T]) &mdash;>
   (   ascii_alpha_numeric(H)
   ;   underscore(H)
   ),
   gv_id_rest(T).</p>

<h2>&ndash;</h2>

<p> %! gv_keyword(+Codes:list(code)) is semidet.
 % Succeeds if the given codes for a GraphViz reserved keyword.</p>

<p>@@ -228,14 +266,6 @@ gv_keyword &mdash;> &ldquo;subgraph&rdquo;.</p>

<h2>&ndash;%! gv_kind(+Kind:oneof([edge,graph,node]))// .</h2>

<p>-gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
-gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.</p>

<h2>-gv_kind(node) &mdash;> &ldquo;node&rdquo;.</h2>

<h2>&ndash;</h2>

<p> %! gv_node_id(+NodeId:compound)// .
 % GraphViz node identifiers can be of the following two types:
 %   1. A GraphViz identifier, see gv_id//1.
@@ -252,16 +282,7 @@ gv_node_id(Id) &mdash;></p>

<p>&ndash;%! gv_node_statement(+Indent:nonneg, +VertexTerm:compound)// .</p>

<h2>&ndash;% A GraphViz statement describing a vertex (GraphViz calls vertices &lsquo;nodes&rsquo;).</h2>

<p>-gv_node_statement(I, vertex(Id,VAttrs)) &mdash;>
&ndash;  indent(I),
&ndash;  gv_node_id(Id),
&ndash;  gv_attrs(node, VAttrs),</p>

<h2>&ndash;  &ldquo;\n&rdquo;.</h2>

<p>&ndash;
+%! gv_port// is det.</p>

<p> gv_port &mdash;>
   gv_port_location,
@@ -285,34 +306,25 @@ gv_port_location &mdash;>
   &ldquo;:&rdquo;,
   gv_id(<em>).
 gv_port_location &mdash;>
&ndash;  &ldquo;:(&rdquo;,
&ndash;  gv_id(</em>),
&ndash;  &ldquo;,&rdquo;,
&ndash;  gv_id(_)</p>

<h2>&ndash;  &ldquo;)&rdquo;.</h2>

<p>&ndash;
+  &ldquo;:&rdquo;,
+  bracketed((
+    gv_id(<em>),
+    &ldquo;,&rdquo;,
+    gv_id(</em>)
+  )).</p>

<p>-gv_ranked_node_collection(I, Rank) &mdash;>
&ndash;  indent(I),
&ndash;  bracketed(curly, gv_ranked_node_collection0(I, Rank)).
+%! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
+% <code>
+% compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
+%</code></p>

<p>-gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;></p>

<h2>&ndash;  &ldquo;\n&rdquo;,</h2>

<ul>
<li>% The rank attribute.</li>
<li>{NewI is I + 1},</li>
<li>indent(NewI),</li>
<li>gv_attr(subgraph, rank=same),

<ul>
<li>&ldquo;;\n&rdquo;,</li>
</ul>
</li>
<li></li>
<li>% Vertice statements.</li>
<li>&lsquo;*&rsquo;(</li>
<li> gv_node_statement(NewI),</li>
<li> [Rank_V_Term|Content_V_Terms],</li>
<li> []

<ul>
<li>),</li>
</ul>
</li>
<li></li>
<li>% We want to indent the closing curly brace.</li>
<li>indent(I),</li>
<li>&ldquo;\n&rdquo;.
+gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
+gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
+gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
+gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
+gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
+gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
+gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
+gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
+gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
+gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
diff &mdash;git a/gv_html.pl b/prolog/gv/gv_html.pl
similarity index 99%
rename from gv_html.pl
rename to prolog/gv/gv_html.pl
index ced6d6b..c16d26b 100644
&mdash;&ndash; a/gv_html.pl
+++ b/prolog/gv/gv_html.pl
@@ -44,7 +44,7 @@ cell:   <TD> label </TD>
*/</li>
</ul>


<p> :&ndash; use_module(library(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(library(dcg/dcg_bracket)).
+:&ndash; use_module(library(dcg/dcg_bracketed)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(http/html_dcg)).</p>

<p>diff &mdash;git a/gv_numeral.pl b/prolog/gv/gv_numeral.pl
similarity index 98%
rename from gv_numeral.pl
rename to prolog/gv/gv_numeral.pl
index 1e5c723..4ba0d64 100644
&mdash;&ndash; a/gv_numeral.pl
+++ b/prolog/gv/gv_numeral.pl
@@ -14,7 +14,6 @@
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_abnf_common)).
 :&ndash; use_module(library(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(library(dcg/dcg_cardinal)).
 :&ndash; use_module(library(math/math_ext)).
 :&ndash; use_module(library(math/positional)).
 :&ndash; use_module(library(math/radconv)).
diff &mdash;git a/test/debug.pl b/test/debug.pl
new file mode 100644
index 0000000..b0f85ea
&mdash;&ndash; /dev/null
+++ b/test/debug.pl
@@ -0,0 +1,15 @@
+:&ndash; use_module(library(ansi_term)).
+:&ndash; use_module(library(prolog_pack)).
+
+pack_ensure_removed(Pack):&ndash;
+  pack_property(Pack, <em>), !,
+  pack_remove(Pack).
+pack_ensure_removed(</em>).
+
+test:&ndash;
+  pack_ensure_removed(plGraphViz),
+  source_file(test, ThisFile),
+  file_directory_name(ThisFile, ThisDirectory),
+  assert(user:file_search_path(gvTest, ThisDirectory)),
+  assert(user:file_search_path(library, gvTest(&lsquo;../prolog&rsquo;))).
+:&ndash; test.
diff &mdash;git a/test/test.pl b/test/test.pl
new file mode 100644
index 0000000..6e59928
&mdash;&ndash; /dev/null
+++ b/test/test.pl
@@ -0,0 +1,10 @@
+:&ndash; ensure_loaded(debug).
+
+:&ndash; use_module(library(gv/gv_attrs)).
+:&ndash; use_module(library(gv/gv_attr_type)).
+:&ndash; use_module(library(gv/gv_color)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(gv/gv_graph)).
+:&ndash; use_module(library(gv/gv_graph_comp)).
+:&ndash; use_module(library(gv/gv_html)).
+:&ndash; use_module(library(gv/gv_numeral)).</p>

<p>```</p>

<h2 id="101"> 101: 正在比较变动前 9513a9b 和变动后 7163f60 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 0553aa2..6c2cc4c 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -90,15 +90,17 @@ wc_weight(Float) &mdash;>
 gv_color_download:&ndash;
   verbose_call(</p>

<pre><code> 'updating the GraphViz color table',
</code></pre>

<ul>
<li> (</li>
<li>   gv_color_uri(Uri),</li>
<li>   html_download(Uri, Dom),</li>
<li>   xpath(Dom, //table(1), TableDom1),</li>
<li>   xpath(Dom, //table(2), TableDom2),</li>
<li>   maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2])</li>
<li> )</li>
<li> gv_color_download0
).</li>
</ul>


<p>+gv_color_download0:&ndash;
+  gv_color_uri(Uri),
+  html_download(Uri, Dom),
+  xpath_chk(Dom, //table(1), TableDom1),
+  xpath_chk(Dom, //table(2), TableDom2),
+  maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2]).
+
+
 assert_color_table(Colorscheme, TableDom):&ndash;
   html_table(TableDom, _, Rows),
   append(Rows, Cells),</p>

<p>```</p>

<h2 id="102"> 102: 正在比较变动前 7163f60 和变动后 b2f4aef </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index f0f5b22..cf24d04 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#58;&#109;&#101;&#64;&#119;&#111;&#117;&#116;&#x65;&#114;&#98;&#101;&#101;&#107;&#46;&#99;&#x6f;&#x6d;">&#109;&#101;&#x40;&#119;&#x6f;&#x75;&#116;&#x65;&#x72;&#x62;&#101;&#101;&#107;&#46;&#x63;&#x6f;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.1&rsquo;).
+version(&lsquo;0.0.2&rsquo;).</p>

<p>```</p>

<h2 id="103"> 103: 正在比较变动前 b2f4aef 和变动后 ba30c25 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index cf24d04..775776f 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#109;&#x65;&#64;&#119;&#x6f;&#x75;&#x74;&#x65;&#x72;&#98;&#101;&#101;&#x6b;&#46;&#99;&#x6f;&#x6d;">&#109;&#x65;&#x40;&#x77;&#111;&#117;&#x74;&#x65;&#x72;&#98;&#101;&#101;&#x6b;&#46;&#99;&#x6f;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.2&rsquo;).
+version(&lsquo;0.0.3&rsquo;).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 8a7d28a..7fd9709 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -177,7 +177,8 @@ gv_attrs(Kind, L) &mdash;>
 % A single GraphViz attribute.
 % We assume that the attribute has already been validated.</p>

<p>-gv_attr(Context, N=V) &mdash;>
+gv_attr(Context, Attr) &mdash;>
+  {Attr =.. [N,V]},
   gv_id(N),
   &ldquo;=&rdquo;,
   gv_attr_value(Context, N=V),</p>

<p>```</p>

<h2 id="104"> 104: 正在比较变动前 ba30c25 和变动后 0eea41b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 775776f..ea8929c 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#97;&#x69;&#108;&#116;&#x6f;&#x3a;&#109;&#x65;&#64;&#119;&#x6f;&#x75;&#x74;&#101;&#x72;&#98;&#x65;&#x65;&#x6b;&#46;&#x63;&#111;&#x6d;">&#x6d;&#101;&#64;&#x77;&#x6f;&#x75;&#x74;&#101;&#114;&#x62;&#101;&#101;&#107;&#x2e;&#99;&#x6f;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.3&rsquo;).
+version(&lsquo;0.0.4&rsquo;).
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index a175071..7a92cf5 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -53,7 +53,7 @@ gv_export(ExportGraph, OutputFile, Options):&ndash;
   % Be thread-safe.
   thread_self(Id),
   atomic_list_concat([gv_file,Id], &lsquo;_&rsquo;, ThreadName),
&ndash;  absolute_file_name(data(ThreadName), TmpFile, [access(write),file_type(dot)]),
+  absolute_file_name(ThreadName, TmpFile, [access(write),file_type(dot)]),
   setup_call_cleanup(</p>

<pre><code> open(TmpFile, write, Write, [encoding(utf8)]),
 with_output_to(Write, put_codes(Codes)),
</code></pre>

<p>@@ -69,20 +69,26 @@ gv_export(ExportGraph, OutputFile, Options):&ndash;
 % Converts a GraphViz DOT file to an image file, using a specific
 % visualization method.</p>

<p>-file_to_gv(InputFile, OutputFile, Options):&ndash;
&ndash;  option(output(dot), Options), !,
+file_to_gv(InputFile, OutputFile, Opts):&ndash;
+  var(OutputFile), !,
+  option(output(Ext), Opts, pdf),
+  file_name_extension(out, Ext, LocalName),
+  absolute_file_name(LocalName, OutputFile, Opts),
+  file_to_gv(InputFile, OutputFile, Opts).
+file_to_gv(InputFile, OutputFile, Opts):&ndash;
+  option(output(dot), Opts), !,
   (   var(OutputFile)
   &ndash;>  OutputFile = InputFile
   ;   rename_file(InputFile, OutputFile)
   ).
-file_to_gv(InputFile, OutputFile, Options):&ndash;
+file_to_gv(InputFile, OutputFile, Opts):&ndash;
   % Typecheck for <code>method</code> option.
&ndash;  option(method(Method), Options, dot),
+  option(method(Method), Opts, dot),
   findall(Method0, gv_method(Method0), Methods),
   must_be(oneof(Methods), Method),</p>

<p>   % Typecheck for <code>output</code> option.
&ndash;  option(output(OutputType), Options, pdf),
+  option(output(OutputType), Opts, pdf),
   findall(OutputType0, gv_output_type(OutputType0), OutputTypes),
   must_be(oneof(OutputTypes), OutputType),</p>

<p>```</p>

<h2 id="105"> 105: 正在比较变动前 0eea41b 和变动后 c1691bd </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index ea8929c..8806f20 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#x3a;&#109;&#101;&#64;&#119;&#x6f;&#x75;&#x74;&#101;&#x72;&#98;&#101;&#101;&#x6b;&#x2e;&#99;&#x6f;&#109;">&#x6d;&#x65;&#64;&#119;&#x6f;&#117;&#116;&#x65;&#x72;&#98;&#101;&#101;&#107;&#46;&#99;&#111;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.4&rsquo;).
+version(&lsquo;0.0.5&rsquo;).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index d773a8b..0e6b003 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -18,8 +18,8 @@
 :&ndash; use_module(library(dcg/dcg_call)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(file_ext)).
&ndash;:&ndash; use_module(library(http/html_download)).
&ndash;:&ndash; use_module(library(http/html_table)).
+:&ndash; use_module(library(html/html_download)).
+:&ndash; use_module(library(html/html_table)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency_ext)).
 :&ndash; use_module(library(xpath)).
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 6c2cc4c..bc08dcc 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -22,8 +22,8 @@
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(file_ext)).
&ndash;:&ndash; use_module(library(http/html_download)).
&ndash;:&ndash; use_module(library(http/html_table)).
+:&ndash; use_module(library(html/html_download)).
+:&ndash; use_module(library(html/html_table)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency_ext)).
 :&ndash; use_module(library(xpath)).
diff &mdash;git a/prolog/gv/gv_dom.pl b/prolog/gv/gv_dom.pl
new file mode 100644
index 0000000..e85849d
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_dom.pl
@@ -0,0 +1,35 @@
+:&ndash; module(
+  gv_dom,
+  [
+    gv_dom/3 % +ExportGraph:compound
+             % -Dom:list(compound)
+             % +Options:list(compound)
+  ]
+).
+
+/<em>* <module> GraphViz DOM
+
+@author Wouter Beek
+@version 2015/07
+</em>/
+
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(option)).
+:&ndash; use_module(library(svg/svg_dom)).
+
+
+
+
+
+%! gv_dom(
+%!   +ExportGraph:compound,
+%!   -Dom:list(compound),
+%!   +Options:list(compound)
+%! ) is det.
+
+gv_dom(ExportG, Dom, Opts1):&ndash;
+  % Make sure the file type of the output file is SvgDom.
+  merge_options([output(svg)], Opts1, Opts2),
+  gv_export(ExportG, ToFile, Opts2),
+  svg_dom(ToFile, Dom),
+  delete_file(ToFile).
diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
index c16d26b..5f2db03 100644
&mdash;&ndash; a/prolog/gv/gv_html.pl
+++ b/prolog/gv/gv_html.pl
@@ -46,7 +46,7 @@ cell:   <TD> label </TD>
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_bracketed)).
 :&ndash; use_module(library(dcg/dcg_content)).
&ndash;:&ndash; use_module(library(http/html_dcg)).
+:&ndash; use_module(library(html/html_dcg)).</p>

<p>```</p>

<h2 id="106"> 106: 正在比较变动前 c1691bd 和变动后 3de9fc2 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 8806f20..d590fb2 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#109;&#x65;&#x40;&#x77;&#111;&#x75;&#116;&#x65;&#114;&#98;&#x65;&#101;&#107;&#46;&#x63;&#x6f;&#109;">&#109;&#x65;&#64;&#119;&#x6f;&#x75;&#116;&#101;&#114;&#98;&#101;&#101;&#x6b;&#46;&#99;&#111;&#x6d;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.5&rsquo;).
+version(&lsquo;0.0.6&rsquo;).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
new file mode 100644
index 0000000..0bc966a
&mdash;&ndash; /dev/null
+++ b/prolog/graph/build_export_graph.pl
@@ -0,0 +1,360 @@
+:&ndash; module(
+  build_export_graph,
+  [
+    build_export_graph/3 % +Graph:compound
+                         % -ExportGraph:compound
+                         % +Options:list(compound)
+  ]
+).
+
+/<em>* <module> Build graph representation for exporting
+
+Support for building GIF representations.
+
+# Graph Intermediate Format (GIF)
+
+## Graph
+
+<code>prolog
+graph(Vs:ordset(compound),Ranks,Es:compound,Attributes:list(nvpair))
+</code>
+
+### Edge
+
+<code>prolog
+edge(FromVertexId,ToVertexId,Attributes:list(nvpair))
+</code>
+
+### Rank
+
+<code>prolog
+rank(RankVertex:compound,ContentVertices:ordset(compound))
+</code>
+
+### Vertex
+
+<code>prolog
+vertex(Id,Attributes:list(nvpair))
+</code>
+
+# Property functions
+
+Edge label:
+  1. [[graph_edge]] edge_label/2
+
+Vertex coordinates:
+  1. [[circle_coords]] circular_coord/4
+  2. [[random_coords]] random_coord/4
+
+&mdash;&ndash;
+
+@author Wouter Beek
+@version 2015/07
+</em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(list_ext)).
+:&ndash; use_module(library(option_ext)).
+:&ndash; use_module(library(ordsets)).
+
+:&ndash; predicate_options(build_export_graph/4, 4, [
+     pass_to(edge_term/3, 3),
+     pass_to(graph_attributes/2, 2),
+     pass_to(vertex_term/3, 3)
+   ]).
+:&ndash; predicate_options(edge_term/3, 3, [
+     edge_arrowhead(+callable),
+     edge_color(+callable),
+     edge_id(+callable),
+     edge_label(+callable),
+     edge_penwidth(+callable),
+     edge_style(+callable)
+   ]).
+:&ndash; predicate_options(graph_attributes/2, 2, [
+     graph_charset(+oneof([&lsquo;iso-8859-1&rsquo;,&lsquo;Latin1&rsquo;,&lsquo;UTF-8&rsquo;])),
+     graph_colorscheme(+oneof([none,svg,x11])),
+     graph_directed(+boolean),
+     graph_fontsize(+float),
+     graph_label(+atom),
+     graph_overlap(+boolean)
+   ]).
+:&ndash; predicate_options(vertex_term/3, 3, [
+     vertex_color(+callable),
+     vertex_id(+callable),
+     vertex_image(+callable),
+     vertex_label(+callable),
+     vertex_peripheries(+callable),
+     vertex_position(+callable),
+     vertex_shape(+callable),
+     vertex_uri(+callable)
+   ]).
+
+:&ndash; meta_predicate(build_export_graph(+,&ndash;,:)).
+
+is_meta(edge_arrowhead).
+is_meta(edge_color).
+is_meta(edge_id).
+is_meta(edge_label).
+is_meta(edge_penwidth).
+is_meta(edge_style).
+is_meta(vertex_color).
+is_meta(vertex_id).
+is_meta(vertex_image).
+is_meta(vertex_label).
+is_meta(vertex_peripheries).
+is_meta(vertex_position).
+is_meta(vertex_shape).
+is_meta(vertex_uri).
+
+
+
+
+
+%! build_export_graph(
+%!   +Graph:compound,
+%!   -ExportGraph:compound,
+%!   +Options:list(compound)
+%! ) is det.
+
+build_export_graph(graph(Vs,Es), graph(VTerms,ETerms,GAttrs), Opts1):&ndash;
+  meta_options(is_meta, Opts1, Opts2),
+
+  % V terms.
+  maplist(vertex_term0(Vs, Opts2), Vs, VTerms),
+
+  % Edge terms.
+  maplist(edge_term0(Vs, Opts2), Es, ETerms),
+
+  % Graph attributes.
+  graph_attributes(GAttrs, Opts2).
+
+vertex_term0(Vs, Opts, V, VTerm):&ndash;
+  vertex_term(Vs, V, VTerm, Opts).
+
+edge_term0(Vs, Opts, E, ETerm):&ndash;
+  edge_term(Vs, E, ETerm, Opts).
+
+
+
+%! edge_term(
+%!   +Vertices:ordset(compound),
+%!   +Edge:compound,
+%!   -EdgeTerm:compound,
+%!   +Options:list(compound)
+%! ) is det.
+% The following options are supported:
+%   * <code>edge_arrowhead(+callable)</code>
+%     No default.
+%   * <code>edge_color(+callable)</code>
+%     No default.
+%   * <code>edge_id(+callable)</code>
+%     Function that assignes the unique identifiers for an edge&rsquo;s
+%     incident vertices.
+%   * <code>edge_label(+callable)</code>
+%     No default.
+%   * <code>edge_penwidth(+callable)</code>
+%     No default.
+%   * <code>edge_style(+callable)</code>
+%     No default.
+
+edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;
+  % Arrowhead
+  if_option(edge_arrowhead(ArrowheadFunction), Opts,
+    call(ArrowheadFunction, E, EArrowhead)
+  ),
+<br/>
+  % Color.
+  if_option(edge_color(ColorFunction), Opts,
+    call(ColorFunction, E, EColor)
+  ),
+<br/>
+  % Id.
+  (   option(edge_id(IdFunction), Opts)
+  &ndash;>  call(IdFunction, E, FromId, ToId)
+  ;     E = edge(FromV,<em>,ToV),
+        nth0chk(FromId, Vs, FromV),
+        nth0chk(ToId, Vs, ToV)
+  ),
+<br/>
+  % Label.
+  if_option(edge_label(LabelFunction), Opts,
+    call(LabelFunction, E, ELabel)
+  ),
+<br/>
+  % Penwidth.
+  if_option(edge_penwidth(PenwidthFunction), Opts,
+    call(PenwidthFunction, E, EPenwidth)
+  ),
+<br/>
+  % Style.
+  if_option(edge_style(StyleFunction), Opts,
+    call(StyleFunction, E, EStyle)
+  ),
+
+  merge_options(
+    [
+      arrowhead=EArrowhead,
+      color=EColor,
+      label=ELabel,
+      penwidth=EPenwidth,
+      style=EStyle
+    ],
+    EAttrs
+  ).
+
+
+
+%! graph_attributes(
+%!   -GraphAttributes:list(nvpair),
+%!   +Options:list(compound)
+%! ) is det.
+% The following options are supported:
+%   * <code>graph_charset(+oneof(['iso-8859-1','Latin1','UTF-8']))</code>
+%     The name of the character set that is used to encode text in the graph.
+%     Default: <code>UTF-8</code>.
+%   * <code>graph_colorscheme(+oneof([none,svg,x11]))</code>
+%     The colorscheme from which the color in this graph are taken.
+%     Default: <code>x11</code>.
+%   * <code>graph_directed(+boolean)</code>
+%     Whether the graph is directed (<code>true</code>) or undirected (<code>false</code>).
+%     Default: <code>false</code>.
+%   * <code>graph_fontsize(+float)</code>
+%     The font size of text in the graph.
+%     Default: <code>11.0</code>.
+%   * <code>graph_label(+atom)</code>
+%     The graph label.
+%     No default.
+%   * <code>graph_overlap(+boolean)</code>
+%     Whether the vertices are allowed to overlap.
+%     Default: <code>false</code>.
+
+graph_attributes(GAttrs, Opts):&ndash;
+  % Characer set.
+  option(graph_charset(Charset), Opts, &lsquo;UTF-8&rsquo;),
+  % Colorscheme.
+  option(graph_colorscheme(Colorscheme), Opts, x11),
+  % Directed.
+  option(graph_directed(Directed), Opts, false),
+  % Fontsize.
+  option(graph_fontsize(Fontsize), Opts, 11.0),
+  % Label.
+  option(graph_label(GLabel), Opts, &lsquo;&rsquo;),
+  % Overlap.
+  option(graph_overlap(Overlap), Opts, false),
+
+  merge_options(
+    [
+      charset=Charset,
+      colorscheme=Colorscheme,
+      directed=Directed,
+      fontsize=Fontsize,
+      label=GLabel,
+      overlap=Overlap
+    ],
+    GAttrs
+  ).
+
+
+
+%! vertex_term(
+%!   +Vertices:ordset(compound),
+%!   +Vertex:compound,
+%!   -VertexTerm:compound,
+%!   +Options:list(compound)
+%! ) is det.
+% The following options are supported:
+%   * <code>vertex_color(:ColorFunction)</code>
+%     A function that assigns colors to vertices.
+%     No default.
+%   * <code>vertex_id(:ColorFunction)</code>
+%     A functions that assigns unique identifiers to vertices.
+%   * <code>vertex_image(:ImageFunction)</code>
+%     A function that assigns images to vertices.
+%     No default.
+%   * <code>vertex_label(:LabelFunction)</code>
+%     A function that assigns labels to vertices.
+%     No default.
+%   * <code>vertex_peripheries(:PeripheriesFunction)</code>
+%     A function that assinges peripheries to vertices.
+%     No default.
+%   * <code>vertex_position(:PositionFunction)</code>
+%     No default.
+%   * <code>vertex_shape(:ShapeFunction)</code>
+%     A function that assinges shapes to vertices.
+%     No default.
+%   * <code>vertex_uri(:UriFunction)</code>
+
+vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;
+  % Color.
+  if_option(vertex_color(ColorFunction), Opts,
+    call(ColorFunction, V, VColor)
+  ),
+<br/>
+  % Id.
+  (   option(vertex_id(IdFunction), Opts)
+  &ndash;>  call(IdFunction, V, VId)
+  ;   nth0chk(VId, Vs, V)
+  ),
+<br/>
+  % Image.
+  ignore(
+    if_option(vertex_image(ImageFunction), Opts,
+      call(ImageFunction, V, VImage)
+    )
+  ),
+
+  % Label.
+  if_option(vertex_label(LabelFunction), Opts,
+    call(LabelFunction, V, VLabel)
+  ),
+
+  % Peripheries.
+  if_option(vertex_peripheries(PeripheriesFunction), Opts,
+    call(PeripheriesFunction, V, VPeripheries)
+  ),
+
+  % Position.
+  if_option(vertex_position(PositionFunction), Opts,
+    call(PositionFunction, Vs, Opts, V, VPosition)
+  ),
+
+  % Shape.
+  if_option(vertex_shape(ShapeFunction), Opts,
+    call(ShapeFunction, V, VShape)
+  ),
+<br/>
+  % URI
+  if_option(vertex_uri(UriFunction), Opts,
+    call(UriFunction, V, VUri)
+  ),
+
+  merge_options(
+    [
+      color=VColor,
+      image=VImage,
+      label=VLabel,
+      peripheries=VPeripheries,
+      pos=VPosition,
+      shape=VShape,
+      &lsquo;URL&rsquo;=VUri
+    ],
+    VAttrs
+  ).
+
+
+
+
+
+% HELPERS %
+
+%! merge_options(+FromOptions:list(nvpair), -ToOptions:list(nvpair)) is det.
+
+merge_options([], []).
+% Skip uninstantiated values.
+merge_options([H|T1], T2):&ndash;
+  merge_options(T1, T2),
+  H =.. [</em>,V],
+  var(V), !.
+% Include instantiated values.
+merge_options([H|T1], [H|T2]):&ndash;
+  merge_options(T1, T2).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 0e6b003..6634b3e 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -18,14 +18,13 @@
 :&ndash; use_module(library(dcg/dcg_call)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(file_ext)).
+:&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
 :&ndash; use_module(library(html/html_download)).
 :&ndash; use_module(library(html/html_table)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency_ext)).
 :&ndash; use_module(library(xpath)).</p>

<h2>&ndash;:&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).</h2>

<p> %! gv_attr(
 %!   ?Name:atom,
 %!   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
diff &mdash;git a/test/test.pl b/test/test.pl
index 6e59928..898c04e 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -1,10 +1,13 @@
 :&ndash; ensure_loaded(debug).</p>

<p>&ndash;:&ndash; use_module(library(gv/gv_attrs)).
&ndash;:&ndash; use_module(library(gv/gv_attr_type)).
&ndash;:&ndash; use_module(library(gv/gv_color)).
&ndash;:&ndash; use_module(library(gv/gv_file)).
&ndash;:&ndash; use_module(library(gv/gv_graph)).
&ndash;:&ndash; use_module(library(gv/gv_graph_comp)).
&ndash;:&ndash; use_module(library(gv/gv_html)).
&ndash;:&ndash; use_module(library(gv/gv_numeral)).
+%/graph
+  :&ndash; use_module(library(graph/build_export_graph)).
+%/gv
+  :&ndash; use_module(library(gv/gv_attrs)).
+  :&ndash; use_module(library(gv/gv_attr_type)).
+  :&ndash; use_module(library(gv/gv_color)).
+  :&ndash; use_module(library(gv/gv_file)).
+  :&ndash; use_module(library(gv/gv_graph)).
+  :&ndash; use_module(library(gv/gv_graph_comp)).
+  :&ndash; use_module(library(gv/gv_html)).
+  :&ndash; use_module(library(gv/gv_numeral)).</p>

<p>```</p>

<h2 id="107"> 107: 正在比较变动前 3de9fc2 和变动后 cb34d89 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index d590fb2..8093a1f 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#x6d;&#x65;&#x40;&#x77;&#111;&#117;&#x74;&#101;&#114;&#x62;&#101;&#x65;&#107;&#x2e;&#x63;&#x6f;&#x6d;">&#x6d;&#x65;&#64;&#x77;&#111;&#117;&#x74;&#101;&#x72;&#x62;&#101;&#101;&#107;&#46;&#x63;&#x6f;&#x6d;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.6&rsquo;).
+version(&lsquo;0.0.7&rsquo;).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 6634b3e..5e55234 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -22,7 +22,7 @@
 :&ndash; use_module(library(html/html_download)).
 :&ndash; use_module(library(html/html_table)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(persistency_ext)).
+:&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p> %! gv_attr(
@@ -144,7 +144,13 @@ gv_attrs_file(File):&ndash;</p>

<p> gv_attrs_init:&ndash;
   gv_attrs_file(File),
&ndash;  init_persistent_db(File, gv_attrs_update).
+  (   exists_file(File)
+  &ndash;>  true
+  ;   touch(File)
+  ),
+  db_attach(File, []),
+  file_age(File, Age),
+  gv_attrs_update(Age).</p>

<p> %! gv_attrs_update(+Age:float) is det.
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index bc08dcc..9235e27 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -25,7 +25,7 @@
 :&ndash; use_module(library(html/html_download)).
 :&ndash; use_module(library(html/html_table)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(persistency_ext)).
+:&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p> %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.
@@ -120,7 +120,13 @@ gv_color_file(File):&ndash;</p>

<p> gv_color_init:&ndash;
   gv_color_file(File),
&ndash;  init_persistent_db(File, gv_color_update).
+  (   exists_file(File)
+  &ndash;>  true
+  ;   touch(File)
+  ),
+  db_attach(File, []),
+  file_age(File, Age),
+  gv_color_update(Age).</p>

<p> %! gv_color_update(+Age:float) is det.</p>

<p>```</p>

<h2 id="108"> 108: 正在比较变动前 cb34d89 和变动后 7f0e20f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 8093a1f..487feb1 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#105;&#x6c;&#116;&#111;&#x3a;&#x6d;&#x65;&#x40;&#119;&#x6f;&#117;&#x74;&#101;&#114;&#x62;&#101;&#101;&#x6b;&#x2e;&#99;&#111;&#109;">&#109;&#x65;&#x40;&#119;&#111;&#117;&#116;&#x65;&#114;&#98;&#101;&#x65;&#107;&#x2e;&#99;&#x6f;&#x6d;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.7&rsquo;).
+version(&lsquo;0.0.8&rsquo;).
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index 6bd4b86..7f008c7 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -84,7 +84,8 @@ gv_graph(G1, I) &mdash;></p>

<p>   % Directedness.
   {select_option(directed(Directed), GAttrs3, GAttrs4, true)},
&ndash;  gv_graph_type(Directed), &ldquo; &rdquo;,
+  gv_graph_type(Directed),
+  &ldquo; &rdquo;,</p>

<p>   % Graph name.
   (   {select_option(name(GName), GAttrs4, GAttrs5)}
@@ -183,7 +184,7 @@ add_default(L1, Opt, L2):&ndash;
   Opt =.. [N,<em>Value],
   Opt0 =.. [N,</em>FreshVar],
   (   option(Opt0, L1)
&ndash;  &ndash;>  true
+  &ndash;>  L2 = L1
   ;   L2 = [Opt|L1]
   ).</p>

<p>```</p>

<h2 id="109"> 109: 正在比较变动前 7f0e20f 和变动后 c16a7a7 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 487feb1..57e9348 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#58;&#x6d;&#x65;&#x40;&#119;&#x6f;&#117;&#116;&#x65;&#x72;&#x62;&#101;&#x65;&#107;&#46;&#99;&#111;&#109;">&#x6d;&#x65;&#64;&#119;&#x6f;&#x75;&#x74;&#x65;&#114;&#x62;&#101;&#x65;&#107;&#46;&#99;&#111;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.8&rsquo;).
+version(&lsquo;0.0.9&rsquo;).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 0bc966a..67a9e1b 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -193,11 +193,11 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;</p>

<p>   merge_options(</p>

<pre><code> [
</code></pre>

<ul>
<li>   arrowhead=EArrowhead,</li>
<li>   color=EColor,</li>
<li>   label=ELabel,</li>
<li>   penwidth=EPenwidth,</li>
<li>   style=EStyle</li>
<li>   arrowhead(EArrowhead),</li>
<li>   color(EColor),</li>
<li>   label(ELabel),</li>
<li>   penwidth(EPenwidth),</li>
<li>   style(EStyle)
 ],
 EAttrs
).
@@ -244,12 +244,12 @@ graph_attributes(GAttrs, Opts):&ndash;</li>
</ul>


<p>   merge_options(</p>

<pre><code> [
</code></pre>

<ul>
<li>   charset=Charset,</li>
<li>   colorscheme=Colorscheme,</li>
<li>   directed=Directed,</li>
<li>   fontsize=Fontsize,</li>
<li>   label=GLabel,</li>
<li>   overlap=Overlap</li>
<li>   charset(Charset),</li>
<li>   colorscheme(Colorscheme),</li>
<li>   directed(Directed),</li>
<li>   fontsize(Fontsize),</li>
<li>   label(GLabel),</li>
<li>   overlap(Overlap)
 ],
 GAttrs
).
@@ -330,13 +330,13 @@ vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;</li>
</ul>


<p>   merge_options(</p>

<pre><code> [
</code></pre>

<ul>
<li>   color=VColor,</li>
<li>   image=VImage,</li>
<li>   label=VLabel,</li>
<li>   peripheries=VPeripheries,</li>
<li>   pos=VPosition,</li>
<li>   shape=VShape,</li>
<li>   &lsquo;URL&rsquo;=VUri</li>
<li>   color(VColor),</li>
<li>   image(VImage),</li>
<li>   label(VLabel),</li>
<li>   peripheries(VPeripheries),</li>
<li>   pos(VPosition),</li>
<li>   shape(VShape),</li>
<li>   &lsquo;URL&rsquo;(VUri)
 ],
 VAttrs
).</li>
</ul>


<p>```</p>

<h2 id="110"> 110: 正在比较变动前 c16a7a7 和变动后 8bbb08c </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 57e9348..d1fef6b 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#105;&#108;&#x74;&#x6f;&#58;&#x6d;&#101;&#64;&#x77;&#x6f;&#117;&#x74;&#101;&#114;&#x62;&#101;&#x65;&#107;&#46;&#x63;&#111;&#x6d;">&#x6d;&#x65;&#x40;&#119;&#x6f;&#x75;&#116;&#x65;&#x72;&#98;&#101;&#101;&#x6b;&#46;&#x63;&#x6f;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.9&rsquo;).
+version(&lsquo;0.0.10&rsquo;).
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index 7f008c7..bff4257 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -160,13 +160,13 @@ gv_graph(G1, I) &mdash;>
   &ldquo;}\n&rdquo;.</p>

<p> gv_edge_statements(I, Dir, L) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(I, Dir), L, []).
+  &lsquo;</em>&rsquo;(gv_edge_statement(I, Dir), L, []), !.</p>

<p> gv_node_statements(I, L) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(gv_node_statement(I), L, []).
+  &lsquo;</em>&rsquo;(gv_node_statement(I), L, []), !.</p>

<p> gv_ranked_node_collections(I, L) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(gv_ranked_node_collection(I), L, []).
+  &lsquo;</em>&rsquo;(gv_ranked_node_collection(I), L, []), !.</p>

<p>diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 7fd9709..930fb32 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -109,7 +109,7 @@ gv_generic_attributes_statement(Kind, I, Attrs) &mdash;>
   indent(I),
   gv_kind(Kind), &ldquo; &rdquo;,
   gv_attrs(Kind, Attrs),
&ndash;  &ldquo;\n&rdquo;.
+  &ldquo;\n&rdquo;, !.</p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>```</p>

<h2 id="111"> 111: 正在比较变动前 8bbb08c 和变动后 34c8b1a </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index d1fef6b..854ddee 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#105;&#x6c;&#116;&#111;&#58;&#x6d;&#101;&#64;&#x77;&#x6f;&#x75;&#116;&#101;&#114;&#x62;&#101;&#101;&#x6b;&#46;&#x63;&#111;&#109;">&#x6d;&#101;&#x40;&#x77;&#x6f;&#x75;&#x74;&#x65;&#x72;&#98;&#101;&#101;&#107;&#46;&#x63;&#111;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.10&rsquo;).
+version(&lsquo;0.0.11&rsquo;).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 5e55234..5d97cb1 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -20,10 +20,10 @@
 :&ndash; use_module(library(file_ext)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
 :&ndash; use_module(library(html/html_download)).
&ndash;:&ndash; use_module(library(html/html_table)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).
+:&ndash; use_module(library(xpath/xpath_table)).</p>

<p> %! gv_attr(
 %!   ?Name:atom,
@@ -130,7 +130,7 @@ gv_attrs_download0:&ndash;
   gv_attrs_uri(Uri),
   html_download(Uri, Dom),
   xpath_chk(Dom, //table(@align=lower_case(center)), TableDom),
&ndash;  html_table(TableDom, <em>, Rows),
+  xpath_table(TableDom, </em>, Rows),
   maplist(assert_gv_attr_row, Rows).</p>

<p>diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 9235e27..d6eb478 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -13,7 +13,7 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2014/06, 2014/10-2014/11, 2015/01, 2015/03
+@version 2015/08
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -23,10 +23,10 @@
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(file_ext)).
 :&ndash; use_module(library(html/html_download)).
&ndash;:&ndash; use_module(library(html/html_table)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).
+:&ndash; use_module(library(xpath/xpath_table)).</p>

<p> %! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.</p>

<p>@@ -102,7 +102,7 @@ gv_color_download0:&ndash;</p>

<p> assert_color_table(Colorscheme, TableDom):&ndash;
&ndash;  html_table(TableDom, <em>, Rows),
+  xpath_table(TableDom, </em>, Rows),
   append(Rows, Cells),
   forall(</p>

<pre><code> member(Cell, Cells),
</code></pre>

<p>diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index 7a92cf5..577a33a 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -25,8 +25,13 @@
 user:prolog_file_type(dot, dot).
 user:prolog_file_type(pdf, pdf).</p>

<p>&ndash;:&ndash; predicate_options(gv_export/3, 3, [pass_to(file_to_gv/3, 3)]).
&ndash;:&ndash; predicate_options(file_to_gv/3, 3, [method(+atom),output(+atom)]).
+:&ndash; predicate_options(gv_export/3, 3, [
+     pass_to(file_to_gv/3, 3)
+   ]).
+:&ndash; predicate_options(file_to_gv/3, 3, [
+     method(+atom),
+     output(+atom)
+   ]).</p>

<p>```</p>

<h2 id="112"> 112: 正在比较变动前 34c8b1a 和变动后 d883d06 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 854ddee..74f024d 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#x69;&#108;&#116;&#111;&#x3a;&#109;&#101;&#64;&#x77;&#x6f;&#117;&#x74;&#x65;&#114;&#x62;&#101;&#x65;&#107;&#46;&#99;&#x6f;&#109;">&#109;&#x65;&#64;&#119;&#111;&#x75;&#x74;&#101;&#114;&#98;&#101;&#101;&#107;&#46;&#x63;&#111;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.11&rsquo;).
+version(&lsquo;0.0.12&rsquo;).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 67a9e1b..e96f484 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -171,7 +171,10 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;
   % Id.
   (   option(edge_id(IdFunction), Opts)
   &ndash;>  call(IdFunction, E, FromId, ToId)
&ndash;  ;     E = edge(FromV,<em>,ToV),
+  ;     (   E = edge(FromV,</em>,ToV)
+        &ndash;>  true
+        ;   E = edge(FromV,ToV)
+        ),</p>

<pre><code>     nth0chk(FromId, Vs, FromV),
     nth0chk(ToId, Vs, ToV)
</code></pre>

<p>   ),</p>

<p>```</p>

<h2 id="113"> 113: 正在比较变动前 d883d06 和变动后 66ac0a0 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 74f024d..2a85425 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#58;&#x6d;&#x65;&#64;&#x77;&#x6f;&#117;&#x74;&#101;&#x72;&#98;&#101;&#101;&#x6b;&#x2e;&#99;&#x6f;&#109;">&#x6d;&#101;&#64;&#x77;&#x6f;&#x75;&#x74;&#x65;&#x72;&#98;&#101;&#101;&#107;&#x2e;&#x63;&#x6f;&#x6d;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.12&rsquo;).
+version(&lsquo;0.0.13&rsquo;).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index e96f484..b031d16 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -241,7 +241,8 @@ graph_attributes(GAttrs, Opts):&ndash;
   % Fontsize.
   option(graph_fontsize(Fontsize), Opts, 11.0),
   % Label.
&ndash;  option(graph_label(GLabel), Opts, &lsquo;&rsquo;),
+  % Defaults to the empty string.
+  option(graph_label(GLabel), Opts, &lsquo;&ldquo;&rdquo;&rsquo;),
   % Overlap.
   option(graph_overlap(Overlap), Opts, false),</p>

<p>```</p>

<h2 id="114"> 114: 正在比较变动前 66ac0a0 和变动后 ab5a102 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 2a85425..dfee09c 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#97;&#x69;&#108;&#116;&#x6f;&#58;&#x6d;&#x65;&#x40;&#119;&#x6f;&#x75;&#116;&#101;&#x72;&#x62;&#x65;&#101;&#107;&#x2e;&#x63;&#x6f;&#x6d;">&#x6d;&#x65;&#x40;&#119;&#111;&#117;&#116;&#x65;&#x72;&#x62;&#101;&#x65;&#107;&#46;&#99;&#x6f;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.13&rsquo;).
+version(&lsquo;0.0.14&rsquo;).
diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index ff163fe..c6508a3 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -213,9 +213,9 @@ escape_double_quotes, [92,34] &mdash;>
   [34], !,
   escape_double_quotes.
 escape_double_quotes, [X] &mdash;>
&ndash;  [X],
+  [X], !,</p>

<h2>   escape_double_quotes.</h2>

<p>+escape_double_quotes &mdash;> [].</p>

<p>```</p>

<h2 id="115"> 115: 正在比较变动前 ab5a102 和变动后 65f43b8 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index e6bec15..7193a38 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1,5 +1,4 @@
 <em>~
 </em>#
 <em>.db
&ndash;</em>.log
 data/<em>
diff &mdash;git a/gv_attrs.log b/gv_attrs.log
new file mode 100644
index 0000000..a9c6010
&mdash;&ndash; /dev/null
+++ b/gv_attrs.log
@@ -0,0 +1,169 @@
+assert(gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;)).
+assert(gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;)).
+assert(gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)</em>sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;)).
+assert(gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headtarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(inputscale,[graph],[double],<em>,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeltarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;)).
+assert(gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;nslimit nslimit1&rsquo;,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;)).
+assert(gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;)).
+assert(gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailtarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;)).
+assert(gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;)).
+assert(gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;)).
diff &mdash;git a/gv_color.log b/gv_color.log
new file mode 100644
index 0000000..23d6cdf
&mdash;&ndash; /dev/null
+++ b/gv_color.log
@@ -0,0 +1,802 @@
+assert(gv_color(x11,aliceblue)).
+assert(gv_color(x11,antiquewhite)).
+assert(gv_color(x11,antiquewhite1)).
+assert(gv_color(x11,antiquewhite2)).
+assert(gv_color(x11,antiquewhite3)).
+assert(gv_color(x11,antiquewhite4)).
+assert(gv_color(x11,aquamarine)).
+assert(gv_color(x11,aquamarine1)).
+assert(gv_color(x11,aquamarine2)).
+assert(gv_color(x11,aquamarine3)).
+assert(gv_color(x11,aquamarine4)).
+assert(gv_color(x11,azure)).
+assert(gv_color(x11,azure1)).
+assert(gv_color(x11,azure2)).
+assert(gv_color(x11,azure3)).
+assert(gv_color(x11,azure4)).
+assert(gv_color(x11,beige)).
+assert(gv_color(x11,bisque)).
+assert(gv_color(x11,bisque1)).
+assert(gv_color(x11,bisque2)).
+assert(gv_color(x11,bisque3)).
+assert(gv_color(x11,bisque4)).
+assert(gv_color(x11,black)).
+assert(gv_color(x11,blanchedalmond)).
+assert(gv_color(x11,blue)).
+assert(gv_color(x11,blue1)).
+assert(gv_color(x11,blue2)).
+assert(gv_color(x11,blue3)).
+assert(gv_color(x11,blue4)).
+assert(gv_color(x11,blueviolet)).
+assert(gv_color(x11,brown)).
+assert(gv_color(x11,brown1)).
+assert(gv_color(x11,brown2)).
+assert(gv_color(x11,brown3)).
+assert(gv_color(x11,brown4)).
+assert(gv_color(x11,burlywood)).
+assert(gv_color(x11,burlywood1)).
+assert(gv_color(x11,burlywood2)).
+assert(gv_color(x11,burlywood3)).
+assert(gv_color(x11,burlywood4)).
+assert(gv_color(x11,cadetblue)).
+assert(gv_color(x11,cadetblue1)).
+assert(gv_color(x11,cadetblue2)).
+assert(gv_color(x11,cadetblue3)).
+assert(gv_color(x11,cadetblue4)).
+assert(gv_color(x11,chartreuse)).
+assert(gv_color(x11,chartreuse1)).
+assert(gv_color(x11,chartreuse2)).
+assert(gv_color(x11,chartreuse3)).
+assert(gv_color(x11,chartreuse4)).
+assert(gv_color(x11,chocolate)).
+assert(gv_color(x11,chocolate1)).
+assert(gv_color(x11,chocolate2)).
+assert(gv_color(x11,chocolate3)).
+assert(gv_color(x11,chocolate4)).
+assert(gv_color(x11,coral)).
+assert(gv_color(x11,coral1)).
+assert(gv_color(x11,coral2)).
+assert(gv_color(x11,coral3)).
+assert(gv_color(x11,coral4)).
+assert(gv_color(x11,cornflowerblue)).
+assert(gv_color(x11,cornsilk)).
+assert(gv_color(x11,cornsilk1)).
+assert(gv_color(x11,cornsilk2)).
+assert(gv_color(x11,cornsilk3)).
+assert(gv_color(x11,cornsilk4)).
+assert(gv_color(x11,crimson)).
+assert(gv_color(x11,cyan)).
+assert(gv_color(x11,cyan1)).
+assert(gv_color(x11,cyan2)).
+assert(gv_color(x11,cyan3)).
+assert(gv_color(x11,cyan4)).
+assert(gv_color(x11,darkgoldenrod)).
+assert(gv_color(x11,darkgoldenrod1)).
+assert(gv_color(x11,darkgoldenrod2)).
+assert(gv_color(x11,darkgoldenrod3)).
+assert(gv_color(x11,darkgoldenrod4)).
+assert(gv_color(x11,darkgreen)).
+assert(gv_color(x11,darkkhaki)).
+assert(gv_color(x11,darkolivegreen)).
+assert(gv_color(x11,darkolivegreen1)).
+assert(gv_color(x11,darkolivegreen2)).
+assert(gv_color(x11,darkolivegreen3)).
+assert(gv_color(x11,darkolivegreen4)).
+assert(gv_color(x11,darkorange)).
+assert(gv_color(x11,darkorange1)).
+assert(gv_color(x11,darkorange2)).
+assert(gv_color(x11,darkorange3)).
+assert(gv_color(x11,darkorange4)).
+assert(gv_color(x11,darkorchid)).
+assert(gv_color(x11,darkorchid1)).
+assert(gv_color(x11,darkorchid2)).
+assert(gv_color(x11,darkorchid3)).
+assert(gv_color(x11,darkorchid4)).
+assert(gv_color(x11,darksalmon)).
+assert(gv_color(x11,darkseagreen)).
+assert(gv_color(x11,darkseagreen1)).
+assert(gv_color(x11,darkseagreen2)).
+assert(gv_color(x11,darkseagreen3)).
+assert(gv_color(x11,darkseagreen4)).
+assert(gv_color(x11,darkslateblue)).
+assert(gv_color(x11,darkslategray)).
+assert(gv_color(x11,darkslategray1)).
+assert(gv_color(x11,darkslategray2)).
+assert(gv_color(x11,darkslategray3)).
+assert(gv_color(x11,darkslategray4)).
+assert(gv_color(x11,darkslategrey)).
+assert(gv_color(x11,darkturquoise)).
+assert(gv_color(x11,darkviolet)).
+assert(gv_color(x11,deeppink)).
+assert(gv_color(x11,deeppink1)).
+assert(gv_color(x11,deeppink2)).
+assert(gv_color(x11,deeppink3)).
+assert(gv_color(x11,deeppink4)).
+assert(gv_color(x11,deepskyblue)).
+assert(gv_color(x11,deepskyblue1)).
+assert(gv_color(x11,deepskyblue2)).
+assert(gv_color(x11,deepskyblue3)).
+assert(gv_color(x11,deepskyblue4)).
+assert(gv_color(x11,dimgray)).
+assert(gv_color(x11,dimgrey)).
+assert(gv_color(x11,dodgerblue)).
+assert(gv_color(x11,dodgerblue1)).
+assert(gv_color(x11,dodgerblue2)).
+assert(gv_color(x11,dodgerblue3)).
+assert(gv_color(x11,dodgerblue4)).
+assert(gv_color(x11,firebrick)).
+assert(gv_color(x11,firebrick1)).
+assert(gv_color(x11,firebrick2)).
+assert(gv_color(x11,firebrick3)).
+assert(gv_color(x11,firebrick4)).
+assert(gv_color(x11,floralwhite)).
+assert(gv_color(x11,forestgreen)).
+assert(gv_color(x11,gainsboro)).
+assert(gv_color(x11,ghostwhite)).
+assert(gv_color(x11,gold)).
+assert(gv_color(x11,gold1)).
+assert(gv_color(x11,gold2)).
+assert(gv_color(x11,gold3)).
+assert(gv_color(x11,gold4)).
+assert(gv_color(x11,goldenrod)).
+assert(gv_color(x11,goldenrod1)).
+assert(gv_color(x11,goldenrod2)).
+assert(gv_color(x11,goldenrod3)).
+assert(gv_color(x11,goldenrod4)).
+assert(gv_color(x11,gray)).
+assert(gv_color(x11,gray0)).
+assert(gv_color(x11,gray1)).
+assert(gv_color(x11,gray10)).
+assert(gv_color(x11,gray100)).
+assert(gv_color(x11,gray11)).
+assert(gv_color(x11,gray12)).
+assert(gv_color(x11,gray13)).
+assert(gv_color(x11,gray14)).
+assert(gv_color(x11,gray15)).
+assert(gv_color(x11,gray16)).
+assert(gv_color(x11,gray17)).
+assert(gv_color(x11,gray18)).
+assert(gv_color(x11,gray19)).
+assert(gv_color(x11,gray2)).
+assert(gv_color(x11,gray20)).
+assert(gv_color(x11,gray21)).
+assert(gv_color(x11,gray22)).
+assert(gv_color(x11,gray23)).
+assert(gv_color(x11,gray24)).
+assert(gv_color(x11,gray25)).
+assert(gv_color(x11,gray26)).
+assert(gv_color(x11,gray27)).
+assert(gv_color(x11,gray28)).
+assert(gv_color(x11,gray29)).
+assert(gv_color(x11,gray3)).
+assert(gv_color(x11,gray30)).
+assert(gv_color(x11,gray31)).
+assert(gv_color(x11,gray32)).
+assert(gv_color(x11,gray33)).
+assert(gv_color(x11,gray34)).
+assert(gv_color(x11,gray35)).
+assert(gv_color(x11,gray36)).
+assert(gv_color(x11,gray37)).
+assert(gv_color(x11,gray38)).
+assert(gv_color(x11,gray39)).
+assert(gv_color(x11,gray4)).
+assert(gv_color(x11,gray40)).
+assert(gv_color(x11,gray41)).
+assert(gv_color(x11,gray42)).
+assert(gv_color(x11,gray43)).
+assert(gv_color(x11,gray44)).
+assert(gv_color(x11,gray45)).
+assert(gv_color(x11,gray46)).
+assert(gv_color(x11,gray47)).
+assert(gv_color(x11,gray48)).
+assert(gv_color(x11,gray49)).
+assert(gv_color(x11,gray5)).
+assert(gv_color(x11,gray50)).
+assert(gv_color(x11,gray51)).
+assert(gv_color(x11,gray52)).
+assert(gv_color(x11,gray53)).
+assert(gv_color(x11,gray54)).
+assert(gv_color(x11,gray55)).
+assert(gv_color(x11,gray56)).
+assert(gv_color(x11,gray57)).
+assert(gv_color(x11,gray58)).
+assert(gv_color(x11,gray59)).
+assert(gv_color(x11,gray6)).
+assert(gv_color(x11,gray60)).
+assert(gv_color(x11,gray61)).
+assert(gv_color(x11,gray62)).
+assert(gv_color(x11,gray63)).
+assert(gv_color(x11,gray64)).
+assert(gv_color(x11,gray65)).
+assert(gv_color(x11,gray66)).
+assert(gv_color(x11,gray67)).
+assert(gv_color(x11,gray68)).
+assert(gv_color(x11,gray69)).
+assert(gv_color(x11,gray7)).
+assert(gv_color(x11,gray70)).
+assert(gv_color(x11,gray71)).
+assert(gv_color(x11,gray72)).
+assert(gv_color(x11,gray73)).
+assert(gv_color(x11,gray74)).
+assert(gv_color(x11,gray75)).
+assert(gv_color(x11,gray76)).
+assert(gv_color(x11,gray77)).
+assert(gv_color(x11,gray78)).
+assert(gv_color(x11,gray79)).
+assert(gv_color(x11,gray8)).
+assert(gv_color(x11,gray80)).
+assert(gv_color(x11,gray81)).
+assert(gv_color(x11,gray82)).
+assert(gv_color(x11,gray83)).
+assert(gv_color(x11,gray84)).
+assert(gv_color(x11,gray85)).
+assert(gv_color(x11,gray86)).
+assert(gv_color(x11,gray87)).
+assert(gv_color(x11,gray88)).
+assert(gv_color(x11,gray89)).
+assert(gv_color(x11,gray9)).
+assert(gv_color(x11,gray90)).
+assert(gv_color(x11,gray91)).
+assert(gv_color(x11,gray92)).
+assert(gv_color(x11,gray93)).
+assert(gv_color(x11,gray94)).
+assert(gv_color(x11,gray95)).
+assert(gv_color(x11,gray96)).
+assert(gv_color(x11,gray97)).
+assert(gv_color(x11,gray98)).
+assert(gv_color(x11,gray99)).
+assert(gv_color(x11,green)).
+assert(gv_color(x11,green1)).
+assert(gv_color(x11,green2)).
+assert(gv_color(x11,green3)).
+assert(gv_color(x11,green4)).
+assert(gv_color(x11,greenyellow)).
+assert(gv_color(x11,grey)).
+assert(gv_color(x11,grey0)).
+assert(gv_color(x11,grey1)).
+assert(gv_color(x11,grey10)).
+assert(gv_color(x11,grey100)).
+assert(gv_color(x11,grey11)).
+assert(gv_color(x11,grey12)).
+assert(gv_color(x11,grey13)).
+assert(gv_color(x11,grey14)).
+assert(gv_color(x11,grey15)).
+assert(gv_color(x11,grey16)).
+assert(gv_color(x11,grey17)).
+assert(gv_color(x11,grey18)).
+assert(gv_color(x11,grey19)).
+assert(gv_color(x11,grey2)).
+assert(gv_color(x11,grey20)).
+assert(gv_color(x11,grey21)).
+assert(gv_color(x11,grey22)).
+assert(gv_color(x11,grey23)).
+assert(gv_color(x11,grey24)).
+assert(gv_color(x11,grey25)).
+assert(gv_color(x11,grey26)).
+assert(gv_color(x11,grey27)).
+assert(gv_color(x11,grey28)).
+assert(gv_color(x11,grey29)).
+assert(gv_color(x11,grey3)).
+assert(gv_color(x11,grey30)).
+assert(gv_color(x11,grey31)).
+assert(gv_color(x11,grey32)).
+assert(gv_color(x11,grey33)).
+assert(gv_color(x11,grey34)).
+assert(gv_color(x11,grey35)).
+assert(gv_color(x11,grey36)).
+assert(gv_color(x11,grey37)).
+assert(gv_color(x11,grey38)).
+assert(gv_color(x11,grey39)).
+assert(gv_color(x11,grey4)).
+assert(gv_color(x11,grey40)).
+assert(gv_color(x11,grey41)).
+assert(gv_color(x11,grey42)).
+assert(gv_color(x11,grey43)).
+assert(gv_color(x11,grey44)).
+assert(gv_color(x11,grey45)).
+assert(gv_color(x11,grey46)).
+assert(gv_color(x11,grey47)).
+assert(gv_color(x11,grey48)).
+assert(gv_color(x11,grey49)).
+assert(gv_color(x11,grey5)).
+assert(gv_color(x11,grey50)).
+assert(gv_color(x11,grey51)).
+assert(gv_color(x11,grey52)).
+assert(gv_color(x11,grey53)).
+assert(gv_color(x11,grey54)).
+assert(gv_color(x11,grey55)).
+assert(gv_color(x11,grey56)).
+assert(gv_color(x11,grey57)).
+assert(gv_color(x11,grey58)).
+assert(gv_color(x11,grey59)).
+assert(gv_color(x11,grey6)).
+assert(gv_color(x11,grey60)).
+assert(gv_color(x11,grey61)).
+assert(gv_color(x11,grey62)).
+assert(gv_color(x11,grey63)).
+assert(gv_color(x11,grey64)).
+assert(gv_color(x11,grey65)).
+assert(gv_color(x11,grey66)).
+assert(gv_color(x11,grey67)).
+assert(gv_color(x11,grey68)).
+assert(gv_color(x11,grey69)).
+assert(gv_color(x11,grey7)).
+assert(gv_color(x11,grey70)).
+assert(gv_color(x11,grey71)).
+assert(gv_color(x11,grey72)).
+assert(gv_color(x11,grey73)).
+assert(gv_color(x11,grey74)).
+assert(gv_color(x11,grey75)).
+assert(gv_color(x11,grey76)).
+assert(gv_color(x11,grey77)).
+assert(gv_color(x11,grey78)).
+assert(gv_color(x11,grey79)).
+assert(gv_color(x11,grey8)).
+assert(gv_color(x11,grey80)).
+assert(gv_color(x11,grey81)).
+assert(gv_color(x11,grey82)).
+assert(gv_color(x11,grey83)).
+assert(gv_color(x11,grey84)).
+assert(gv_color(x11,grey85)).
+assert(gv_color(x11,grey86)).
+assert(gv_color(x11,grey87)).
+assert(gv_color(x11,grey88)).
+assert(gv_color(x11,grey89)).
+assert(gv_color(x11,grey9)).
+assert(gv_color(x11,grey90)).
+assert(gv_color(x11,grey91)).
+assert(gv_color(x11,grey92)).
+assert(gv_color(x11,grey93)).
+assert(gv_color(x11,grey94)).
+assert(gv_color(x11,grey95)).
+assert(gv_color(x11,grey96)).
+assert(gv_color(x11,grey97)).
+assert(gv_color(x11,grey98)).
+assert(gv_color(x11,grey99)).
+assert(gv_color(x11,honeydew)).
+assert(gv_color(x11,honeydew1)).
+assert(gv_color(x11,honeydew2)).
+assert(gv_color(x11,honeydew3)).
+assert(gv_color(x11,honeydew4)).
+assert(gv_color(x11,hotpink)).
+assert(gv_color(x11,hotpink1)).
+assert(gv_color(x11,hotpink2)).
+assert(gv_color(x11,hotpink3)).
+assert(gv_color(x11,hotpink4)).
+assert(gv_color(x11,indianred)).
+assert(gv_color(x11,indianred1)).
+assert(gv_color(x11,indianred2)).
+assert(gv_color(x11,indianred3)).
+assert(gv_color(x11,indianred4)).
+assert(gv_color(x11,indigo)).
+assert(gv_color(x11,invis)).
+assert(gv_color(x11,ivory)).
+assert(gv_color(x11,ivory1)).
+assert(gv_color(x11,ivory2)).
+assert(gv_color(x11,ivory3)).
+assert(gv_color(x11,ivory4)).
+assert(gv_color(x11,khaki)).
+assert(gv_color(x11,khaki1)).
+assert(gv_color(x11,khaki2)).
+assert(gv_color(x11,khaki3)).
+assert(gv_color(x11,khaki4)).
+assert(gv_color(x11,lavender)).
+assert(gv_color(x11,lavenderblush)).
+assert(gv_color(x11,lavenderblush1)).
+assert(gv_color(x11,lavenderblush2)).
+assert(gv_color(x11,lavenderblush3)).
+assert(gv_color(x11,lavenderblush4)).
+assert(gv_color(x11,lawngreen)).
+assert(gv_color(x11,lemonchiffon)).
+assert(gv_color(x11,lemonchiffon1)).
+assert(gv_color(x11,lemonchiffon2)).
+assert(gv_color(x11,lemonchiffon3)).
+assert(gv_color(x11,lemonchiffon4)).
+assert(gv_color(x11,lightblue)).
+assert(gv_color(x11,lightblue1)).
+assert(gv_color(x11,lightblue2)).
+assert(gv_color(x11,lightblue3)).
+assert(gv_color(x11,lightblue4)).
+assert(gv_color(x11,lightcoral)).
+assert(gv_color(x11,lightcyan)).
+assert(gv_color(x11,lightcyan1)).
+assert(gv_color(x11,lightcyan2)).
+assert(gv_color(x11,lightcyan3)).
+assert(gv_color(x11,lightcyan4)).
+assert(gv_color(x11,lightgoldenrod)).
+assert(gv_color(x11,lightgoldenrod1)).
+assert(gv_color(x11,lightgoldenrod2)).
+assert(gv_color(x11,lightgoldenrod3)).
+assert(gv_color(x11,lightgoldenrod4)).
+assert(gv_color(x11,lightgoldenrodyellow)).
+assert(gv_color(x11,lightgray)).
+assert(gv_color(x11,lightgrey)).
+assert(gv_color(x11,lightpink)).
+assert(gv_color(x11,lightpink1)).
+assert(gv_color(x11,lightpink2)).
+assert(gv_color(x11,lightpink3)).
+assert(gv_color(x11,lightpink4)).
+assert(gv_color(x11,lightsalmon)).
+assert(gv_color(x11,lightsalmon1)).
+assert(gv_color(x11,lightsalmon2)).
+assert(gv_color(x11,lightsalmon3)).
+assert(gv_color(x11,lightsalmon4)).
+assert(gv_color(x11,lightseagreen)).
+assert(gv_color(x11,lightskyblue)).
+assert(gv_color(x11,lightskyblue1)).
+assert(gv_color(x11,lightskyblue2)).
+assert(gv_color(x11,lightskyblue3)).
+assert(gv_color(x11,lightskyblue4)).
+assert(gv_color(x11,lightslateblue)).
+assert(gv_color(x11,lightslategray)).
+assert(gv_color(x11,lightslategrey)).
+assert(gv_color(x11,lightsteelblue)).
+assert(gv_color(x11,lightsteelblue1)).
+assert(gv_color(x11,lightsteelblue2)).
+assert(gv_color(x11,lightsteelblue3)).
+assert(gv_color(x11,lightsteelblue4)).
+assert(gv_color(x11,lightyellow)).
+assert(gv_color(x11,lightyellow1)).
+assert(gv_color(x11,lightyellow2)).
+assert(gv_color(x11,lightyellow3)).
+assert(gv_color(x11,lightyellow4)).
+assert(gv_color(x11,limegreen)).
+assert(gv_color(x11,linen)).
+assert(gv_color(x11,magenta)).
+assert(gv_color(x11,magenta1)).
+assert(gv_color(x11,magenta2)).
+assert(gv_color(x11,magenta3)).
+assert(gv_color(x11,magenta4)).
+assert(gv_color(x11,maroon)).
+assert(gv_color(x11,maroon1)).
+assert(gv_color(x11,maroon2)).
+assert(gv_color(x11,maroon3)).
+assert(gv_color(x11,maroon4)).
+assert(gv_color(x11,mediumaquamarine)).
+assert(gv_color(x11,mediumblue)).
+assert(gv_color(x11,mediumorchid)).
+assert(gv_color(x11,mediumorchid1)).
+assert(gv_color(x11,mediumorchid2)).
+assert(gv_color(x11,mediumorchid3)).
+assert(gv_color(x11,mediumorchid4)).
+assert(gv_color(x11,mediumpurple)).
+assert(gv_color(x11,mediumpurple1)).
+assert(gv_color(x11,mediumpurple2)).
+assert(gv_color(x11,mediumpurple3)).
+assert(gv_color(x11,mediumpurple4)).
+assert(gv_color(x11,mediumseagreen)).
+assert(gv_color(x11,mediumslateblue)).
+assert(gv_color(x11,mediumspringgreen)).
+assert(gv_color(x11,mediumturquoise)).
+assert(gv_color(x11,mediumvioletred)).
+assert(gv_color(x11,midnightblue)).
+assert(gv_color(x11,mintcream)).
+assert(gv_color(x11,mistyrose)).
+assert(gv_color(x11,mistyrose1)).
+assert(gv_color(x11,mistyrose2)).
+assert(gv_color(x11,mistyrose3)).
+assert(gv_color(x11,mistyrose4)).
+assert(gv_color(x11,moccasin)).
+assert(gv_color(x11,navajowhite)).
+assert(gv_color(x11,navajowhite1)).
+assert(gv_color(x11,navajowhite2)).
+assert(gv_color(x11,navajowhite3)).
+assert(gv_color(x11,navajowhite4)).
+assert(gv_color(x11,navy)).
+assert(gv_color(x11,navyblue)).
+assert(gv_color(x11,none)).
+assert(gv_color(x11,oldlace)).
+assert(gv_color(x11,olivedrab)).
+assert(gv_color(x11,olivedrab1)).
+assert(gv_color(x11,olivedrab2)).
+assert(gv_color(x11,olivedrab3)).
+assert(gv_color(x11,olivedrab4)).
+assert(gv_color(x11,orange)).
+assert(gv_color(x11,orange1)).
+assert(gv_color(x11,orange2)).
+assert(gv_color(x11,orange3)).
+assert(gv_color(x11,orange4)).
+assert(gv_color(x11,orangered)).
+assert(gv_color(x11,orangered1)).
+assert(gv_color(x11,orangered2)).
+assert(gv_color(x11,orangered3)).
+assert(gv_color(x11,orangered4)).
+assert(gv_color(x11,orchid)).
+assert(gv_color(x11,orchid1)).
+assert(gv_color(x11,orchid2)).
+assert(gv_color(x11,orchid3)).
+assert(gv_color(x11,orchid4)).
+assert(gv_color(x11,palegoldenrod)).
+assert(gv_color(x11,palegreen)).
+assert(gv_color(x11,palegreen1)).
+assert(gv_color(x11,palegreen2)).
+assert(gv_color(x11,palegreen3)).
+assert(gv_color(x11,palegreen4)).
+assert(gv_color(x11,paleturquoise)).
+assert(gv_color(x11,paleturquoise1)).
+assert(gv_color(x11,paleturquoise2)).
+assert(gv_color(x11,paleturquoise3)).
+assert(gv_color(x11,paleturquoise4)).
+assert(gv_color(x11,palevioletred)).
+assert(gv_color(x11,palevioletred1)).
+assert(gv_color(x11,palevioletred2)).
+assert(gv_color(x11,palevioletred3)).
+assert(gv_color(x11,palevioletred4)).
+assert(gv_color(x11,papayawhip)).
+assert(gv_color(x11,peachpuff)).
+assert(gv_color(x11,peachpuff1)).
+assert(gv_color(x11,peachpuff2)).
+assert(gv_color(x11,peachpuff3)).
+assert(gv_color(x11,peachpuff4)).
+assert(gv_color(x11,peru)).
+assert(gv_color(x11,pink)).
+assert(gv_color(x11,pink1)).
+assert(gv_color(x11,pink2)).
+assert(gv_color(x11,pink3)).
+assert(gv_color(x11,pink4)).
+assert(gv_color(x11,plum)).
+assert(gv_color(x11,plum1)).
+assert(gv_color(x11,plum2)).
+assert(gv_color(x11,plum3)).
+assert(gv_color(x11,plum4)).
+assert(gv_color(x11,powderblue)).
+assert(gv_color(x11,purple)).
+assert(gv_color(x11,purple1)).
+assert(gv_color(x11,purple2)).
+assert(gv_color(x11,purple3)).
+assert(gv_color(x11,purple4)).
+assert(gv_color(x11,red)).
+assert(gv_color(x11,red1)).
+assert(gv_color(x11,red2)).
+assert(gv_color(x11,red3)).
+assert(gv_color(x11,red4)).
+assert(gv_color(x11,rosybrown)).
+assert(gv_color(x11,rosybrown1)).
+assert(gv_color(x11,rosybrown2)).
+assert(gv_color(x11,rosybrown3)).
+assert(gv_color(x11,rosybrown4)).
+assert(gv_color(x11,royalblue)).
+assert(gv_color(x11,royalblue1)).
+assert(gv_color(x11,royalblue2)).
+assert(gv_color(x11,royalblue3)).
+assert(gv_color(x11,royalblue4)).
+assert(gv_color(x11,saddlebrown)).
+assert(gv_color(x11,salmon)).
+assert(gv_color(x11,salmon1)).
+assert(gv_color(x11,salmon2)).
+assert(gv_color(x11,salmon3)).
+assert(gv_color(x11,salmon4)).
+assert(gv_color(x11,sandybrown)).
+assert(gv_color(x11,seagreen)).
+assert(gv_color(x11,seagreen1)).
+assert(gv_color(x11,seagreen2)).
+assert(gv_color(x11,seagreen3)).
+assert(gv_color(x11,seagreen4)).
+assert(gv_color(x11,seashell)).
+assert(gv_color(x11,seashell1)).
+assert(gv_color(x11,seashell2)).
+assert(gv_color(x11,seashell3)).
+assert(gv_color(x11,seashell4)).
+assert(gv_color(x11,sienna)).
+assert(gv_color(x11,sienna1)).
+assert(gv_color(x11,sienna2)).
+assert(gv_color(x11,sienna3)).
+assert(gv_color(x11,sienna4)).
+assert(gv_color(x11,skyblue)).
+assert(gv_color(x11,skyblue1)).
+assert(gv_color(x11,skyblue2)).
+assert(gv_color(x11,skyblue3)).
+assert(gv_color(x11,skyblue4)).
+assert(gv_color(x11,slateblue)).
+assert(gv_color(x11,slateblue1)).
+assert(gv_color(x11,slateblue2)).
+assert(gv_color(x11,slateblue3)).
+assert(gv_color(x11,slateblue4)).
+assert(gv_color(x11,slategray)).
+assert(gv_color(x11,slategray1)).
+assert(gv_color(x11,slategray2)).
+assert(gv_color(x11,slategray3)).
+assert(gv_color(x11,slategray4)).
+assert(gv_color(x11,slategrey)).
+assert(gv_color(x11,snow)).
+assert(gv_color(x11,snow1)).
+assert(gv_color(x11,snow2)).
+assert(gv_color(x11,snow3)).
+assert(gv_color(x11,snow4)).
+assert(gv_color(x11,springgreen)).
+assert(gv_color(x11,springgreen1)).
+assert(gv_color(x11,springgreen2)).
+assert(gv_color(x11,springgreen3)).
+assert(gv_color(x11,springgreen4)).
+assert(gv_color(x11,steelblue)).
+assert(gv_color(x11,steelblue1)).
+assert(gv_color(x11,steelblue2)).
+assert(gv_color(x11,steelblue3)).
+assert(gv_color(x11,steelblue4)).
+assert(gv_color(x11,tan)).
+assert(gv_color(x11,tan1)).
+assert(gv_color(x11,tan2)).
+assert(gv_color(x11,tan3)).
+assert(gv_color(x11,tan4)).
+assert(gv_color(x11,thistle)).
+assert(gv_color(x11,thistle1)).
+assert(gv_color(x11,thistle2)).
+assert(gv_color(x11,thistle3)).
+assert(gv_color(x11,thistle4)).
+assert(gv_color(x11,tomato)).
+assert(gv_color(x11,tomato1)).
+assert(gv_color(x11,tomato2)).
+assert(gv_color(x11,tomato3)).
+assert(gv_color(x11,tomato4)).
+assert(gv_color(x11,transparent)).
+assert(gv_color(x11,turquoise)).
+assert(gv_color(x11,turquoise1)).
+assert(gv_color(x11,turquoise2)).
+assert(gv_color(x11,turquoise3)).
+assert(gv_color(x11,turquoise4)).
+assert(gv_color(x11,violet)).
+assert(gv_color(x11,violetred)).
+assert(gv_color(x11,violetred1)).
+assert(gv_color(x11,violetred2)).
+assert(gv_color(x11,violetred3)).
+assert(gv_color(x11,violetred4)).
+assert(gv_color(x11,wheat)).
+assert(gv_color(x11,wheat1)).
+assert(gv_color(x11,wheat2)).
+assert(gv_color(x11,wheat3)).
+assert(gv_color(x11,wheat4)).
+assert(gv_color(x11,white)).
+assert(gv_color(x11,whitesmoke)).
+assert(gv_color(x11,yellow)).
+assert(gv_color(x11,yellow1)).
+assert(gv_color(x11,yellow2)).
+assert(gv_color(x11,yellow3)).
+assert(gv_color(x11,yellow4)).
+assert(gv_color(x11,yellowgreen)).
+assert(gv_color(svg,aliceblue)).
+assert(gv_color(svg,antiquewhite)).
+assert(gv_color(svg,aqua)).
+assert(gv_color(svg,aquamarine)).
+assert(gv_color(svg,azure)).
+assert(gv_color(svg,beige)).
+assert(gv_color(svg,bisque)).
+assert(gv_color(svg,black)).
+assert(gv_color(svg,blanchedalmond)).
+assert(gv_color(svg,blue)).
+assert(gv_color(svg,blueviolet)).
+assert(gv_color(svg,brown)).
+assert(gv_color(svg,burlywood)).
+assert(gv_color(svg,cadetblue)).
+assert(gv_color(svg,chartreuse)).
+assert(gv_color(svg,chocolate)).
+assert(gv_color(svg,coral)).
+assert(gv_color(svg,cornflowerblue)).
+assert(gv_color(svg,cornsilk)).
+assert(gv_color(svg,crimson)).
+assert(gv_color(svg,cyan)).
+assert(gv_color(svg,darkblue)).
+assert(gv_color(svg,darkcyan)).
+assert(gv_color(svg,darkgoldenrod)).
+assert(gv_color(svg,darkgray)).
+assert(gv_color(svg,darkgreen)).
+assert(gv_color(svg,darkgrey)).
+assert(gv_color(svg,darkkhaki)).
+assert(gv_color(svg,darkmagenta)).
+assert(gv_color(svg,darkolivegreen)).
+assert(gv_color(svg,darkorange)).
+assert(gv_color(svg,darkorchid)).
+assert(gv_color(svg,darkred)).
+assert(gv_color(svg,darksalmon)).
+assert(gv_color(svg,darkseagreen)).
+assert(gv_color(svg,darkslateblue)).
+assert(gv_color(svg,darkslategray)).
+assert(gv_color(svg,darkslategrey)).
+assert(gv_color(svg,darkturquoise)).
+assert(gv_color(svg,darkviolet)).
+assert(gv_color(svg,deeppink)).
+assert(gv_color(svg,deepskyblue)).
+assert(gv_color(svg,dimgray)).
+assert(gv_color(svg,dimgrey)).
+assert(gv_color(svg,dodgerblue)).
+assert(gv_color(svg,firebrick)).
+assert(gv_color(svg,floralwhite)).
+assert(gv_color(svg,forestgreen)).
+assert(gv_color(svg,fuchsia)).
+assert(gv_color(svg,gainsboro)).
+assert(gv_color(svg,ghostwhite)).
+assert(gv_color(svg,gold)).
+assert(gv_color(svg,goldenrod)).
+assert(gv_color(svg,gray)).
+assert(gv_color(svg,grey)).
+assert(gv_color(svg,green)).
+assert(gv_color(svg,greenyellow)).
+assert(gv_color(svg,honeydew)).
+assert(gv_color(svg,hotpink)).
+assert(gv_color(svg,indianred)).
+assert(gv_color(svg,indigo)).
+assert(gv_color(svg,ivory)).
+assert(gv_color(svg,khaki)).
+assert(gv_color(svg,lavender)).
+assert(gv_color(svg,lavenderblush)).
+assert(gv_color(svg,lawngreen)).
+assert(gv_color(svg,lemonchiffon)).
+assert(gv_color(svg,lightblue)).
+assert(gv_color(svg,lightcoral)).
+assert(gv_color(svg,lightcyan)).
+assert(gv_color(svg,lightgoldenrodyellow)).
+assert(gv_color(svg,lightgray)).
+assert(gv_color(svg,lightgreen)).
+assert(gv_color(svg,lightgrey)).
+assert(gv_color(svg,lightpink)).
+assert(gv_color(svg,lightsalmon)).
+assert(gv_color(svg,lightseagreen)).
+assert(gv_color(svg,lightskyblue)).
+assert(gv_color(svg,lightslategray)).
+assert(gv_color(svg,lightslategrey)).
+assert(gv_color(svg,lightsteelblue)).
+assert(gv_color(svg,lightyellow)).
+assert(gv_color(svg,lime)).
+assert(gv_color(svg,limegreen)).
+assert(gv_color(svg,linen)).
+assert(gv_color(svg,magenta)).
+assert(gv_color(svg,maroon)).
+assert(gv_color(svg,mediumaquamarine)).
+assert(gv_color(svg,mediumblue)).
+assert(gv_color(svg,mediumorchid)).
+assert(gv_color(svg,mediumpurple)).
+assert(gv_color(svg,mediumseagreen)).
+assert(gv_color(svg,mediumslateblue)).
+assert(gv_color(svg,mediumspringgreen)).
+assert(gv_color(svg,mediumturquoise)).
+assert(gv_color(svg,mediumvioletred)).
+assert(gv_color(svg,midnightblue)).
+assert(gv_color(svg,mintcream)).
+assert(gv_color(svg,mistyrose)).
+assert(gv_color(svg,moccasin)).
+assert(gv_color(svg,navajowhite)).
+assert(gv_color(svg,navy)).
+assert(gv_color(svg,oldlace)).
+assert(gv_color(svg,olive)).
+assert(gv_color(svg,olivedrab)).
+assert(gv_color(svg,orange)).
+assert(gv_color(svg,orangered)).
+assert(gv_color(svg,orchid)).
+assert(gv_color(svg,palegoldenrod)).
+assert(gv_color(svg,palegreen)).
+assert(gv_color(svg,paleturquoise)).
+assert(gv_color(svg,palevioletred)).
+assert(gv_color(svg,papayawhip)).
+assert(gv_color(svg,peachpuff)).
+assert(gv_color(svg,peru)).
+assert(gv_color(svg,pink)).
+assert(gv_color(svg,plum)).
+assert(gv_color(svg,powderblue)).
+assert(gv_color(svg,purple)).
+assert(gv_color(svg,red)).
+assert(gv_color(svg,rosybrown)).
+assert(gv_color(svg,royalblue)).
+assert(gv_color(svg,saddlebrown)).
+assert(gv_color(svg,salmon)).
+assert(gv_color(svg,sandybrown)).
+assert(gv_color(svg,seagreen)).
+assert(gv_color(svg,seashell)).
+assert(gv_color(svg,sienna)).
+assert(gv_color(svg,silver)).
+assert(gv_color(svg,skyblue)).
+assert(gv_color(svg,slateblue)).
+assert(gv_color(svg,slategray)).
+assert(gv_color(svg,slategrey)).
+assert(gv_color(svg,snow)).
+assert(gv_color(svg,springgreen)).
+assert(gv_color(svg,steelblue)).
+assert(gv_color(svg,tan)).
+assert(gv_color(svg,teal)).
+assert(gv_color(svg,thistle)).
+assert(gv_color(svg,tomato)).
+assert(gv_color(svg,turquoise)).
+assert(gv_color(svg,violet)).
+assert(gv_color(svg,wheat)).
+assert(gv_color(svg,white)).
+assert(gv_color(svg,whitesmoke)).
+assert(gv_color(svg,yellow)).
+assert(gv_color(svg,yellowgreen)).</p>

<p>```</p>

<h2 id="116"> 116: 正在比较变动前 65f43b8 和变动后 c6de3d1 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitignore b/.gitignore
index 7193a38..bd24270 100644
&mdash;&ndash; a/.gitignore
+++ b/.gitignore
@@ -1,4 +1,3 @@
 <em>~
 </em>#
 <em>.db
-data/</em>
diff &mdash;git a/pack.pl b/pack.pl
index dfee09c..edfd45f 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#x6d;&#101;&#64;&#119;&#x6f;&#x75;&#x74;&#101;&#114;&#x62;&#x65;&#x65;&#x6b;&#x2e;&#99;&#111;&#109;">&#109;&#101;&#x40;&#x77;&#111;&#117;&#x74;&#x65;&#x72;&#98;&#x65;&#x65;&#107;&#x2e;&#99;&#111;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.14&rsquo;).
+version(&lsquo;0.0.15&rsquo;).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 5d97cb1..fa00670 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -9,7 +9,7 @@
 /** <module> GraphViz attributes</p>

<p> @author Wouter Beek
&ndash;@version 2015/07
+@version 2015/07-2015/08
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -17,10 +17,10 @@
 :&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(dcg/dcg_call)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
&ndash;:&ndash; use_module(library(file_ext)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
&ndash;:&ndash; use_module(library(html/html_download)).
+:&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/file_ext)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
diff &mdash;git a/gv_color.log b/prolog/gv/gv_color.log
similarity index 100%
rename from gv_color.log
rename to prolog/gv/gv_color.log
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index d6eb478..57c7f90 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -21,9 +21,9 @@
 :&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_content)).
&ndash;:&ndash; use_module(library(file_ext)).
&ndash;:&ndash; use_module(library(html/html_download)).
+:&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/file_ext)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 930fb32..18cdf7a 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -11,7 +11,7 @@</p>

<pre><code> gv_node_statement//2, % +Indent:nonneg
                       % +Vertex:compound
 gv_ranked_node_collection//2 % +Indent:nonneg
</code></pre>

<ul>
<li><pre><code>         % +Rank:???    
</code></pre></li>
<li><pre><code>                          % +Rank
</code></pre>

<p>]
).</p></li>
</ul>


<p>@@ -26,7 +26,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07
+@version 2015/07-2015/08
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -68,7 +68,7 @@ gv_edge_statement(I, Dir, edge(From,To,Attrs)) &mdash;>
   gv_node_id(From), &ldquo; &rdquo;,
   gv_edge_operator(Dir), &ldquo; &rdquo;,</p>

<h2>   gv_node_id(To), &ldquo; &rdquo;,</h2>

<p>+
   % We want <code>colorscheme/1</code> from the edges and
   % <code>directionality/1</code> from the graph.
   gv_attrs(edge, Attrs),
@@ -130,7 +130,7 @@ gv_node_statement(I, vertex(Id,Attrs)) &mdash;></p>

<p>&ndash;%! gv_ranked_node_collection(+Indent:nonneg, Rank:???)// is det.
+%! gv_ranked_node_collection(+Indent:nonneg, Rank)// is det.</p>

<p> gv_ranked_node_collection(I, Rank) &mdash;>
   indent(I),
@@ -138,20 +138,20 @@ gv_ranked_node_collection(I, Rank) &mdash;></p>

<p> gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;></p>

<h2>   &ldquo;\n&rdquo;,</h2>

<p>+
   % The rank attribute.
   {NewI is I + 1},
   indent(NewI),
   gv_attr(subgraph, rank=same),</p>

<h2>   &ldquo;;\n&rdquo;,</h2>

<p>+
   % Vertice statements.
   &lsquo;*&rsquo;(</p>

<pre><code> gv_node_statement(NewI),
 [Rank_V_Term|Content_V_Terms],
 []
</code></pre>

<h2>   ),</h2>

<p>+
   % We want to indent the closing curly brace.
   indent(I),
   &ldquo;\n&rdquo;.
diff &mdash;git a/gv_attrs.log b/test/gv_attrs.log
similarity index 100%
rename from gv_attrs.log
rename to test/gv_attrs.log</p>

<p>```</p>

<h2 id="117"> 117: 正在比较变动前 c6de3d1 和变动后 cab2231 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/gv_attrs.log b/gv_attrs.log
new file mode 100644
index 0000000..a9c6010
&mdash;&ndash; /dev/null
+++ b/gv_attrs.log
@@ -0,0 +1,169 @@
+assert(gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;)).
+assert(gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;)).
+assert(gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)*sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;)).
+assert(gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headtarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(inputscale,[graph],[double],<em>,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeltarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;)).
+assert(gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;nslimit nslimit1&rsquo;,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;)).
+assert(gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;)).
+assert(gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailtarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;)).
+assert(gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;)).
+assert(gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;)).
diff &mdash;git a/gv_color.log b/gv_color.log
new file mode 100644
index 0000000..23d6cdf
&mdash;&ndash; /dev/null
+++ b/gv_color.log
@@ -0,0 +1,802 @@
+assert(gv_color(x11,aliceblue)).
+assert(gv_color(x11,antiquewhite)).
+assert(gv_color(x11,antiquewhite1)).
+assert(gv_color(x11,antiquewhite2)).
+assert(gv_color(x11,antiquewhite3)).
+assert(gv_color(x11,antiquewhite4)).
+assert(gv_color(x11,aquamarine)).
+assert(gv_color(x11,aquamarine1)).
+assert(gv_color(x11,aquamarine2)).
+assert(gv_color(x11,aquamarine3)).
+assert(gv_color(x11,aquamarine4)).
+assert(gv_color(x11,azure)).
+assert(gv_color(x11,azure1)).
+assert(gv_color(x11,azure2)).
+assert(gv_color(x11,azure3)).
+assert(gv_color(x11,azure4)).
+assert(gv_color(x11,beige)).
+assert(gv_color(x11,bisque)).
+assert(gv_color(x11,bisque1)).
+assert(gv_color(x11,bisque2)).
+assert(gv_color(x11,bisque3)).
+assert(gv_color(x11,bisque4)).
+assert(gv_color(x11,black)).
+assert(gv_color(x11,blanchedalmond)).
+assert(gv_color(x11,blue)).
+assert(gv_color(x11,blue1)).
+assert(gv_color(x11,blue2)).
+assert(gv_color(x11,blue3)).
+assert(gv_color(x11,blue4)).
+assert(gv_color(x11,blueviolet)).
+assert(gv_color(x11,brown)).
+assert(gv_color(x11,brown1)).
+assert(gv_color(x11,brown2)).
+assert(gv_color(x11,brown3)).
+assert(gv_color(x11,brown4)).
+assert(gv_color(x11,burlywood)).
+assert(gv_color(x11,burlywood1)).
+assert(gv_color(x11,burlywood2)).
+assert(gv_color(x11,burlywood3)).
+assert(gv_color(x11,burlywood4)).
+assert(gv_color(x11,cadetblue)).
+assert(gv_color(x11,cadetblue1)).
+assert(gv_color(x11,cadetblue2)).
+assert(gv_color(x11,cadetblue3)).
+assert(gv_color(x11,cadetblue4)).
+assert(gv_color(x11,chartreuse)).
+assert(gv_color(x11,chartreuse1)).
+assert(gv_color(x11,chartreuse2)).
+assert(gv_color(x11,chartreuse3)).
+assert(gv_color(x11,chartreuse4)).
+assert(gv_color(x11,chocolate)).
+assert(gv_color(x11,chocolate1)).
+assert(gv_color(x11,chocolate2)).
+assert(gv_color(x11,chocolate3)).
+assert(gv_color(x11,chocolate4)).
+assert(gv_color(x11,coral)).
+assert(gv_color(x11,coral1)).
+assert(gv_color(x11,coral2)).
+assert(gv_color(x11,coral3)).
+assert(gv_color(x11,coral4)).
+assert(gv_color(x11,cornflowerblue)).
+assert(gv_color(x11,cornsilk)).
+assert(gv_color(x11,cornsilk1)).
+assert(gv_color(x11,cornsilk2)).
+assert(gv_color(x11,cornsilk3)).
+assert(gv_color(x11,cornsilk4)).
+assert(gv_color(x11,crimson)).
+assert(gv_color(x11,cyan)).
+assert(gv_color(x11,cyan1)).
+assert(gv_color(x11,cyan2)).
+assert(gv_color(x11,cyan3)).
+assert(gv_color(x11,cyan4)).
+assert(gv_color(x11,darkgoldenrod)).
+assert(gv_color(x11,darkgoldenrod1)).
+assert(gv_color(x11,darkgoldenrod2)).
+assert(gv_color(x11,darkgoldenrod3)).
+assert(gv_color(x11,darkgoldenrod4)).
+assert(gv_color(x11,darkgreen)).
+assert(gv_color(x11,darkkhaki)).
+assert(gv_color(x11,darkolivegreen)).
+assert(gv_color(x11,darkolivegreen1)).
+assert(gv_color(x11,darkolivegreen2)).
+assert(gv_color(x11,darkolivegreen3)).
+assert(gv_color(x11,darkolivegreen4)).
+assert(gv_color(x11,darkorange)).
+assert(gv_color(x11,darkorange1)).
+assert(gv_color(x11,darkorange2)).
+assert(gv_color(x11,darkorange3)).
+assert(gv_color(x11,darkorange4)).
+assert(gv_color(x11,darkorchid)).
+assert(gv_color(x11,darkorchid1)).
+assert(gv_color(x11,darkorchid2)).
+assert(gv_color(x11,darkorchid3)).
+assert(gv_color(x11,darkorchid4)).
+assert(gv_color(x11,darksalmon)).
+assert(gv_color(x11,darkseagreen)).
+assert(gv_color(x11,darkseagreen1)).
+assert(gv_color(x11,darkseagreen2)).
+assert(gv_color(x11,darkseagreen3)).
+assert(gv_color(x11,darkseagreen4)).
+assert(gv_color(x11,darkslateblue)).
+assert(gv_color(x11,darkslategray)).
+assert(gv_color(x11,darkslategray1)).
+assert(gv_color(x11,darkslategray2)).
+assert(gv_color(x11,darkslategray3)).
+assert(gv_color(x11,darkslategray4)).
+assert(gv_color(x11,darkslategrey)).
+assert(gv_color(x11,darkturquoise)).
+assert(gv_color(x11,darkviolet)).
+assert(gv_color(x11,deeppink)).
+assert(gv_color(x11,deeppink1)).
+assert(gv_color(x11,deeppink2)).
+assert(gv_color(x11,deeppink3)).
+assert(gv_color(x11,deeppink4)).
+assert(gv_color(x11,deepskyblue)).
+assert(gv_color(x11,deepskyblue1)).
+assert(gv_color(x11,deepskyblue2)).
+assert(gv_color(x11,deepskyblue3)).
+assert(gv_color(x11,deepskyblue4)).
+assert(gv_color(x11,dimgray)).
+assert(gv_color(x11,dimgrey)).
+assert(gv_color(x11,dodgerblue)).
+assert(gv_color(x11,dodgerblue1)).
+assert(gv_color(x11,dodgerblue2)).
+assert(gv_color(x11,dodgerblue3)).
+assert(gv_color(x11,dodgerblue4)).
+assert(gv_color(x11,firebrick)).
+assert(gv_color(x11,firebrick1)).
+assert(gv_color(x11,firebrick2)).
+assert(gv_color(x11,firebrick3)).
+assert(gv_color(x11,firebrick4)).
+assert(gv_color(x11,floralwhite)).
+assert(gv_color(x11,forestgreen)).
+assert(gv_color(x11,gainsboro)).
+assert(gv_color(x11,ghostwhite)).
+assert(gv_color(x11,gold)).
+assert(gv_color(x11,gold1)).
+assert(gv_color(x11,gold2)).
+assert(gv_color(x11,gold3)).
+assert(gv_color(x11,gold4)).
+assert(gv_color(x11,goldenrod)).
+assert(gv_color(x11,goldenrod1)).
+assert(gv_color(x11,goldenrod2)).
+assert(gv_color(x11,goldenrod3)).
+assert(gv_color(x11,goldenrod4)).
+assert(gv_color(x11,gray)).
+assert(gv_color(x11,gray0)).
+assert(gv_color(x11,gray1)).
+assert(gv_color(x11,gray10)).
+assert(gv_color(x11,gray100)).
+assert(gv_color(x11,gray11)).
+assert(gv_color(x11,gray12)).
+assert(gv_color(x11,gray13)).
+assert(gv_color(x11,gray14)).
+assert(gv_color(x11,gray15)).
+assert(gv_color(x11,gray16)).
+assert(gv_color(x11,gray17)).
+assert(gv_color(x11,gray18)).
+assert(gv_color(x11,gray19)).
+assert(gv_color(x11,gray2)).
+assert(gv_color(x11,gray20)).
+assert(gv_color(x11,gray21)).
+assert(gv_color(x11,gray22)).
+assert(gv_color(x11,gray23)).
+assert(gv_color(x11,gray24)).
+assert(gv_color(x11,gray25)).
+assert(gv_color(x11,gray26)).
+assert(gv_color(x11,gray27)).
+assert(gv_color(x11,gray28)).
+assert(gv_color(x11,gray29)).
+assert(gv_color(x11,gray3)).
+assert(gv_color(x11,gray30)).
+assert(gv_color(x11,gray31)).
+assert(gv_color(x11,gray32)).
+assert(gv_color(x11,gray33)).
+assert(gv_color(x11,gray34)).
+assert(gv_color(x11,gray35)).
+assert(gv_color(x11,gray36)).
+assert(gv_color(x11,gray37)).
+assert(gv_color(x11,gray38)).
+assert(gv_color(x11,gray39)).
+assert(gv_color(x11,gray4)).
+assert(gv_color(x11,gray40)).
+assert(gv_color(x11,gray41)).
+assert(gv_color(x11,gray42)).
+assert(gv_color(x11,gray43)).
+assert(gv_color(x11,gray44)).
+assert(gv_color(x11,gray45)).
+assert(gv_color(x11,gray46)).
+assert(gv_color(x11,gray47)).
+assert(gv_color(x11,gray48)).
+assert(gv_color(x11,gray49)).
+assert(gv_color(x11,gray5)).
+assert(gv_color(x11,gray50)).
+assert(gv_color(x11,gray51)).
+assert(gv_color(x11,gray52)).
+assert(gv_color(x11,gray53)).
+assert(gv_color(x11,gray54)).
+assert(gv_color(x11,gray55)).
+assert(gv_color(x11,gray56)).
+assert(gv_color(x11,gray57)).
+assert(gv_color(x11,gray58)).
+assert(gv_color(x11,gray59)).
+assert(gv_color(x11,gray6)).
+assert(gv_color(x11,gray60)).
+assert(gv_color(x11,gray61)).
+assert(gv_color(x11,gray62)).
+assert(gv_color(x11,gray63)).
+assert(gv_color(x11,gray64)).
+assert(gv_color(x11,gray65)).
+assert(gv_color(x11,gray66)).
+assert(gv_color(x11,gray67)).
+assert(gv_color(x11,gray68)).
+assert(gv_color(x11,gray69)).
+assert(gv_color(x11,gray7)).
+assert(gv_color(x11,gray70)).
+assert(gv_color(x11,gray71)).
+assert(gv_color(x11,gray72)).
+assert(gv_color(x11,gray73)).
+assert(gv_color(x11,gray74)).
+assert(gv_color(x11,gray75)).
+assert(gv_color(x11,gray76)).
+assert(gv_color(x11,gray77)).
+assert(gv_color(x11,gray78)).
+assert(gv_color(x11,gray79)).
+assert(gv_color(x11,gray8)).
+assert(gv_color(x11,gray80)).
+assert(gv_color(x11,gray81)).
+assert(gv_color(x11,gray82)).
+assert(gv_color(x11,gray83)).
+assert(gv_color(x11,gray84)).
+assert(gv_color(x11,gray85)).
+assert(gv_color(x11,gray86)).
+assert(gv_color(x11,gray87)).
+assert(gv_color(x11,gray88)).
+assert(gv_color(x11,gray89)).
+assert(gv_color(x11,gray9)).
+assert(gv_color(x11,gray90)).
+assert(gv_color(x11,gray91)).
+assert(gv_color(x11,gray92)).
+assert(gv_color(x11,gray93)).
+assert(gv_color(x11,gray94)).
+assert(gv_color(x11,gray95)).
+assert(gv_color(x11,gray96)).
+assert(gv_color(x11,gray97)).
+assert(gv_color(x11,gray98)).
+assert(gv_color(x11,gray99)).
+assert(gv_color(x11,green)).
+assert(gv_color(x11,green1)).
+assert(gv_color(x11,green2)).
+assert(gv_color(x11,green3)).
+assert(gv_color(x11,green4)).
+assert(gv_color(x11,greenyellow)).
+assert(gv_color(x11,grey)).
+assert(gv_color(x11,grey0)).
+assert(gv_color(x11,grey1)).
+assert(gv_color(x11,grey10)).
+assert(gv_color(x11,grey100)).
+assert(gv_color(x11,grey11)).
+assert(gv_color(x11,grey12)).
+assert(gv_color(x11,grey13)).
+assert(gv_color(x11,grey14)).
+assert(gv_color(x11,grey15)).
+assert(gv_color(x11,grey16)).
+assert(gv_color(x11,grey17)).
+assert(gv_color(x11,grey18)).
+assert(gv_color(x11,grey19)).
+assert(gv_color(x11,grey2)).
+assert(gv_color(x11,grey20)).
+assert(gv_color(x11,grey21)).
+assert(gv_color(x11,grey22)).
+assert(gv_color(x11,grey23)).
+assert(gv_color(x11,grey24)).
+assert(gv_color(x11,grey25)).
+assert(gv_color(x11,grey26)).
+assert(gv_color(x11,grey27)).
+assert(gv_color(x11,grey28)).
+assert(gv_color(x11,grey29)).
+assert(gv_color(x11,grey3)).
+assert(gv_color(x11,grey30)).
+assert(gv_color(x11,grey31)).
+assert(gv_color(x11,grey32)).
+assert(gv_color(x11,grey33)).
+assert(gv_color(x11,grey34)).
+assert(gv_color(x11,grey35)).
+assert(gv_color(x11,grey36)).
+assert(gv_color(x11,grey37)).
+assert(gv_color(x11,grey38)).
+assert(gv_color(x11,grey39)).
+assert(gv_color(x11,grey4)).
+assert(gv_color(x11,grey40)).
+assert(gv_color(x11,grey41)).
+assert(gv_color(x11,grey42)).
+assert(gv_color(x11,grey43)).
+assert(gv_color(x11,grey44)).
+assert(gv_color(x11,grey45)).
+assert(gv_color(x11,grey46)).
+assert(gv_color(x11,grey47)).
+assert(gv_color(x11,grey48)).
+assert(gv_color(x11,grey49)).
+assert(gv_color(x11,grey5)).
+assert(gv_color(x11,grey50)).
+assert(gv_color(x11,grey51)).
+assert(gv_color(x11,grey52)).
+assert(gv_color(x11,grey53)).
+assert(gv_color(x11,grey54)).
+assert(gv_color(x11,grey55)).
+assert(gv_color(x11,grey56)).
+assert(gv_color(x11,grey57)).
+assert(gv_color(x11,grey58)).
+assert(gv_color(x11,grey59)).
+assert(gv_color(x11,grey6)).
+assert(gv_color(x11,grey60)).
+assert(gv_color(x11,grey61)).
+assert(gv_color(x11,grey62)).
+assert(gv_color(x11,grey63)).
+assert(gv_color(x11,grey64)).
+assert(gv_color(x11,grey65)).
+assert(gv_color(x11,grey66)).
+assert(gv_color(x11,grey67)).
+assert(gv_color(x11,grey68)).
+assert(gv_color(x11,grey69)).
+assert(gv_color(x11,grey7)).
+assert(gv_color(x11,grey70)).
+assert(gv_color(x11,grey71)).
+assert(gv_color(x11,grey72)).
+assert(gv_color(x11,grey73)).
+assert(gv_color(x11,grey74)).
+assert(gv_color(x11,grey75)).
+assert(gv_color(x11,grey76)).
+assert(gv_color(x11,grey77)).
+assert(gv_color(x11,grey78)).
+assert(gv_color(x11,grey79)).
+assert(gv_color(x11,grey8)).
+assert(gv_color(x11,grey80)).
+assert(gv_color(x11,grey81)).
+assert(gv_color(x11,grey82)).
+assert(gv_color(x11,grey83)).
+assert(gv_color(x11,grey84)).
+assert(gv_color(x11,grey85)).
+assert(gv_color(x11,grey86)).
+assert(gv_color(x11,grey87)).
+assert(gv_color(x11,grey88)).
+assert(gv_color(x11,grey89)).
+assert(gv_color(x11,grey9)).
+assert(gv_color(x11,grey90)).
+assert(gv_color(x11,grey91)).
+assert(gv_color(x11,grey92)).
+assert(gv_color(x11,grey93)).
+assert(gv_color(x11,grey94)).
+assert(gv_color(x11,grey95)).
+assert(gv_color(x11,grey96)).
+assert(gv_color(x11,grey97)).
+assert(gv_color(x11,grey98)).
+assert(gv_color(x11,grey99)).
+assert(gv_color(x11,honeydew)).
+assert(gv_color(x11,honeydew1)).
+assert(gv_color(x11,honeydew2)).
+assert(gv_color(x11,honeydew3)).
+assert(gv_color(x11,honeydew4)).
+assert(gv_color(x11,hotpink)).
+assert(gv_color(x11,hotpink1)).
+assert(gv_color(x11,hotpink2)).
+assert(gv_color(x11,hotpink3)).
+assert(gv_color(x11,hotpink4)).
+assert(gv_color(x11,indianred)).
+assert(gv_color(x11,indianred1)).
+assert(gv_color(x11,indianred2)).
+assert(gv_color(x11,indianred3)).
+assert(gv_color(x11,indianred4)).
+assert(gv_color(x11,indigo)).
+assert(gv_color(x11,invis)).
+assert(gv_color(x11,ivory)).
+assert(gv_color(x11,ivory1)).
+assert(gv_color(x11,ivory2)).
+assert(gv_color(x11,ivory3)).
+assert(gv_color(x11,ivory4)).
+assert(gv_color(x11,khaki)).
+assert(gv_color(x11,khaki1)).
+assert(gv_color(x11,khaki2)).
+assert(gv_color(x11,khaki3)).
+assert(gv_color(x11,khaki4)).
+assert(gv_color(x11,lavender)).
+assert(gv_color(x11,lavenderblush)).
+assert(gv_color(x11,lavenderblush1)).
+assert(gv_color(x11,lavenderblush2)).
+assert(gv_color(x11,lavenderblush3)).
+assert(gv_color(x11,lavenderblush4)).
+assert(gv_color(x11,lawngreen)).
+assert(gv_color(x11,lemonchiffon)).
+assert(gv_color(x11,lemonchiffon1)).
+assert(gv_color(x11,lemonchiffon2)).
+assert(gv_color(x11,lemonchiffon3)).
+assert(gv_color(x11,lemonchiffon4)).
+assert(gv_color(x11,lightblue)).
+assert(gv_color(x11,lightblue1)).
+assert(gv_color(x11,lightblue2)).
+assert(gv_color(x11,lightblue3)).
+assert(gv_color(x11,lightblue4)).
+assert(gv_color(x11,lightcoral)).
+assert(gv_color(x11,lightcyan)).
+assert(gv_color(x11,lightcyan1)).
+assert(gv_color(x11,lightcyan2)).
+assert(gv_color(x11,lightcyan3)).
+assert(gv_color(x11,lightcyan4)).
+assert(gv_color(x11,lightgoldenrod)).
+assert(gv_color(x11,lightgoldenrod1)).
+assert(gv_color(x11,lightgoldenrod2)).
+assert(gv_color(x11,lightgoldenrod3)).
+assert(gv_color(x11,lightgoldenrod4)).
+assert(gv_color(x11,lightgoldenrodyellow)).
+assert(gv_color(x11,lightgray)).
+assert(gv_color(x11,lightgrey)).
+assert(gv_color(x11,lightpink)).
+assert(gv_color(x11,lightpink1)).
+assert(gv_color(x11,lightpink2)).
+assert(gv_color(x11,lightpink3)).
+assert(gv_color(x11,lightpink4)).
+assert(gv_color(x11,lightsalmon)).
+assert(gv_color(x11,lightsalmon1)).
+assert(gv_color(x11,lightsalmon2)).
+assert(gv_color(x11,lightsalmon3)).
+assert(gv_color(x11,lightsalmon4)).
+assert(gv_color(x11,lightseagreen)).
+assert(gv_color(x11,lightskyblue)).
+assert(gv_color(x11,lightskyblue1)).
+assert(gv_color(x11,lightskyblue2)).
+assert(gv_color(x11,lightskyblue3)).
+assert(gv_color(x11,lightskyblue4)).
+assert(gv_color(x11,lightslateblue)).
+assert(gv_color(x11,lightslategray)).
+assert(gv_color(x11,lightslategrey)).
+assert(gv_color(x11,lightsteelblue)).
+assert(gv_color(x11,lightsteelblue1)).
+assert(gv_color(x11,lightsteelblue2)).
+assert(gv_color(x11,lightsteelblue3)).
+assert(gv_color(x11,lightsteelblue4)).
+assert(gv_color(x11,lightyellow)).
+assert(gv_color(x11,lightyellow1)).
+assert(gv_color(x11,lightyellow2)).
+assert(gv_color(x11,lightyellow3)).
+assert(gv_color(x11,lightyellow4)).
+assert(gv_color(x11,limegreen)).
+assert(gv_color(x11,linen)).
+assert(gv_color(x11,magenta)).
+assert(gv_color(x11,magenta1)).
+assert(gv_color(x11,magenta2)).
+assert(gv_color(x11,magenta3)).
+assert(gv_color(x11,magenta4)).
+assert(gv_color(x11,maroon)).
+assert(gv_color(x11,maroon1)).
+assert(gv_color(x11,maroon2)).
+assert(gv_color(x11,maroon3)).
+assert(gv_color(x11,maroon4)).
+assert(gv_color(x11,mediumaquamarine)).
+assert(gv_color(x11,mediumblue)).
+assert(gv_color(x11,mediumorchid)).
+assert(gv_color(x11,mediumorchid1)).
+assert(gv_color(x11,mediumorchid2)).
+assert(gv_color(x11,mediumorchid3)).
+assert(gv_color(x11,mediumorchid4)).
+assert(gv_color(x11,mediumpurple)).
+assert(gv_color(x11,mediumpurple1)).
+assert(gv_color(x11,mediumpurple2)).
+assert(gv_color(x11,mediumpurple3)).
+assert(gv_color(x11,mediumpurple4)).
+assert(gv_color(x11,mediumseagreen)).
+assert(gv_color(x11,mediumslateblue)).
+assert(gv_color(x11,mediumspringgreen)).
+assert(gv_color(x11,mediumturquoise)).
+assert(gv_color(x11,mediumvioletred)).
+assert(gv_color(x11,midnightblue)).
+assert(gv_color(x11,mintcream)).
+assert(gv_color(x11,mistyrose)).
+assert(gv_color(x11,mistyrose1)).
+assert(gv_color(x11,mistyrose2)).
+assert(gv_color(x11,mistyrose3)).
+assert(gv_color(x11,mistyrose4)).
+assert(gv_color(x11,moccasin)).
+assert(gv_color(x11,navajowhite)).
+assert(gv_color(x11,navajowhite1)).
+assert(gv_color(x11,navajowhite2)).
+assert(gv_color(x11,navajowhite3)).
+assert(gv_color(x11,navajowhite4)).
+assert(gv_color(x11,navy)).
+assert(gv_color(x11,navyblue)).
+assert(gv_color(x11,none)).
+assert(gv_color(x11,oldlace)).
+assert(gv_color(x11,olivedrab)).
+assert(gv_color(x11,olivedrab1)).
+assert(gv_color(x11,olivedrab2)).
+assert(gv_color(x11,olivedrab3)).
+assert(gv_color(x11,olivedrab4)).
+assert(gv_color(x11,orange)).
+assert(gv_color(x11,orange1)).
+assert(gv_color(x11,orange2)).
+assert(gv_color(x11,orange3)).
+assert(gv_color(x11,orange4)).
+assert(gv_color(x11,orangered)).
+assert(gv_color(x11,orangered1)).
+assert(gv_color(x11,orangered2)).
+assert(gv_color(x11,orangered3)).
+assert(gv_color(x11,orangered4)).
+assert(gv_color(x11,orchid)).
+assert(gv_color(x11,orchid1)).
+assert(gv_color(x11,orchid2)).
+assert(gv_color(x11,orchid3)).
+assert(gv_color(x11,orchid4)).
+assert(gv_color(x11,palegoldenrod)).
+assert(gv_color(x11,palegreen)).
+assert(gv_color(x11,palegreen1)).
+assert(gv_color(x11,palegreen2)).
+assert(gv_color(x11,palegreen3)).
+assert(gv_color(x11,palegreen4)).
+assert(gv_color(x11,paleturquoise)).
+assert(gv_color(x11,paleturquoise1)).
+assert(gv_color(x11,paleturquoise2)).
+assert(gv_color(x11,paleturquoise3)).
+assert(gv_color(x11,paleturquoise4)).
+assert(gv_color(x11,palevioletred)).
+assert(gv_color(x11,palevioletred1)).
+assert(gv_color(x11,palevioletred2)).
+assert(gv_color(x11,palevioletred3)).
+assert(gv_color(x11,palevioletred4)).
+assert(gv_color(x11,papayawhip)).
+assert(gv_color(x11,peachpuff)).
+assert(gv_color(x11,peachpuff1)).
+assert(gv_color(x11,peachpuff2)).
+assert(gv_color(x11,peachpuff3)).
+assert(gv_color(x11,peachpuff4)).
+assert(gv_color(x11,peru)).
+assert(gv_color(x11,pink)).
+assert(gv_color(x11,pink1)).
+assert(gv_color(x11,pink2)).
+assert(gv_color(x11,pink3)).
+assert(gv_color(x11,pink4)).
+assert(gv_color(x11,plum)).
+assert(gv_color(x11,plum1)).
+assert(gv_color(x11,plum2)).
+assert(gv_color(x11,plum3)).
+assert(gv_color(x11,plum4)).
+assert(gv_color(x11,powderblue)).
+assert(gv_color(x11,purple)).
+assert(gv_color(x11,purple1)).
+assert(gv_color(x11,purple2)).
+assert(gv_color(x11,purple3)).
+assert(gv_color(x11,purple4)).
+assert(gv_color(x11,red)).
+assert(gv_color(x11,red1)).
+assert(gv_color(x11,red2)).
+assert(gv_color(x11,red3)).
+assert(gv_color(x11,red4)).
+assert(gv_color(x11,rosybrown)).
+assert(gv_color(x11,rosybrown1)).
+assert(gv_color(x11,rosybrown2)).
+assert(gv_color(x11,rosybrown3)).
+assert(gv_color(x11,rosybrown4)).
+assert(gv_color(x11,royalblue)).
+assert(gv_color(x11,royalblue1)).
+assert(gv_color(x11,royalblue2)).
+assert(gv_color(x11,royalblue3)).
+assert(gv_color(x11,royalblue4)).
+assert(gv_color(x11,saddlebrown)).
+assert(gv_color(x11,salmon)).
+assert(gv_color(x11,salmon1)).
+assert(gv_color(x11,salmon2)).
+assert(gv_color(x11,salmon3)).
+assert(gv_color(x11,salmon4)).
+assert(gv_color(x11,sandybrown)).
+assert(gv_color(x11,seagreen)).
+assert(gv_color(x11,seagreen1)).
+assert(gv_color(x11,seagreen2)).
+assert(gv_color(x11,seagreen3)).
+assert(gv_color(x11,seagreen4)).
+assert(gv_color(x11,seashell)).
+assert(gv_color(x11,seashell1)).
+assert(gv_color(x11,seashell2)).
+assert(gv_color(x11,seashell3)).
+assert(gv_color(x11,seashell4)).
+assert(gv_color(x11,sienna)).
+assert(gv_color(x11,sienna1)).
+assert(gv_color(x11,sienna2)).
+assert(gv_color(x11,sienna3)).
+assert(gv_color(x11,sienna4)).
+assert(gv_color(x11,skyblue)).
+assert(gv_color(x11,skyblue1)).
+assert(gv_color(x11,skyblue2)).
+assert(gv_color(x11,skyblue3)).
+assert(gv_color(x11,skyblue4)).
+assert(gv_color(x11,slateblue)).
+assert(gv_color(x11,slateblue1)).
+assert(gv_color(x11,slateblue2)).
+assert(gv_color(x11,slateblue3)).
+assert(gv_color(x11,slateblue4)).
+assert(gv_color(x11,slategray)).
+assert(gv_color(x11,slategray1)).
+assert(gv_color(x11,slategray2)).
+assert(gv_color(x11,slategray3)).
+assert(gv_color(x11,slategray4)).
+assert(gv_color(x11,slategrey)).
+assert(gv_color(x11,snow)).
+assert(gv_color(x11,snow1)).
+assert(gv_color(x11,snow2)).
+assert(gv_color(x11,snow3)).
+assert(gv_color(x11,snow4)).
+assert(gv_color(x11,springgreen)).
+assert(gv_color(x11,springgreen1)).
+assert(gv_color(x11,springgreen2)).
+assert(gv_color(x11,springgreen3)).
+assert(gv_color(x11,springgreen4)).
+assert(gv_color(x11,steelblue)).
+assert(gv_color(x11,steelblue1)).
+assert(gv_color(x11,steelblue2)).
+assert(gv_color(x11,steelblue3)).
+assert(gv_color(x11,steelblue4)).
+assert(gv_color(x11,tan)).
+assert(gv_color(x11,tan1)).
+assert(gv_color(x11,tan2)).
+assert(gv_color(x11,tan3)).
+assert(gv_color(x11,tan4)).
+assert(gv_color(x11,thistle)).
+assert(gv_color(x11,thistle1)).
+assert(gv_color(x11,thistle2)).
+assert(gv_color(x11,thistle3)).
+assert(gv_color(x11,thistle4)).
+assert(gv_color(x11,tomato)).
+assert(gv_color(x11,tomato1)).
+assert(gv_color(x11,tomato2)).
+assert(gv_color(x11,tomato3)).
+assert(gv_color(x11,tomato4)).
+assert(gv_color(x11,transparent)).
+assert(gv_color(x11,turquoise)).
+assert(gv_color(x11,turquoise1)).
+assert(gv_color(x11,turquoise2)).
+assert(gv_color(x11,turquoise3)).
+assert(gv_color(x11,turquoise4)).
+assert(gv_color(x11,violet)).
+assert(gv_color(x11,violetred)).
+assert(gv_color(x11,violetred1)).
+assert(gv_color(x11,violetred2)).
+assert(gv_color(x11,violetred3)).
+assert(gv_color(x11,violetred4)).
+assert(gv_color(x11,wheat)).
+assert(gv_color(x11,wheat1)).
+assert(gv_color(x11,wheat2)).
+assert(gv_color(x11,wheat3)).
+assert(gv_color(x11,wheat4)).
+assert(gv_color(x11,white)).
+assert(gv_color(x11,whitesmoke)).
+assert(gv_color(x11,yellow)).
+assert(gv_color(x11,yellow1)).
+assert(gv_color(x11,yellow2)).
+assert(gv_color(x11,yellow3)).
+assert(gv_color(x11,yellow4)).
+assert(gv_color(x11,yellowgreen)).
+assert(gv_color(svg,aliceblue)).
+assert(gv_color(svg,antiquewhite)).
+assert(gv_color(svg,aqua)).
+assert(gv_color(svg,aquamarine)).
+assert(gv_color(svg,azure)).
+assert(gv_color(svg,beige)).
+assert(gv_color(svg,bisque)).
+assert(gv_color(svg,black)).
+assert(gv_color(svg,blanchedalmond)).
+assert(gv_color(svg,blue)).
+assert(gv_color(svg,blueviolet)).
+assert(gv_color(svg,brown)).
+assert(gv_color(svg,burlywood)).
+assert(gv_color(svg,cadetblue)).
+assert(gv_color(svg,chartreuse)).
+assert(gv_color(svg,chocolate)).
+assert(gv_color(svg,coral)).
+assert(gv_color(svg,cornflowerblue)).
+assert(gv_color(svg,cornsilk)).
+assert(gv_color(svg,crimson)).
+assert(gv_color(svg,cyan)).
+assert(gv_color(svg,darkblue)).
+assert(gv_color(svg,darkcyan)).
+assert(gv_color(svg,darkgoldenrod)).
+assert(gv_color(svg,darkgray)).
+assert(gv_color(svg,darkgreen)).
+assert(gv_color(svg,darkgrey)).
+assert(gv_color(svg,darkkhaki)).
+assert(gv_color(svg,darkmagenta)).
+assert(gv_color(svg,darkolivegreen)).
+assert(gv_color(svg,darkorange)).
+assert(gv_color(svg,darkorchid)).
+assert(gv_color(svg,darkred)).
+assert(gv_color(svg,darksalmon)).
+assert(gv_color(svg,darkseagreen)).
+assert(gv_color(svg,darkslateblue)).
+assert(gv_color(svg,darkslategray)).
+assert(gv_color(svg,darkslategrey)).
+assert(gv_color(svg,darkturquoise)).
+assert(gv_color(svg,darkviolet)).
+assert(gv_color(svg,deeppink)).
+assert(gv_color(svg,deepskyblue)).
+assert(gv_color(svg,dimgray)).
+assert(gv_color(svg,dimgrey)).
+assert(gv_color(svg,dodgerblue)).
+assert(gv_color(svg,firebrick)).
+assert(gv_color(svg,floralwhite)).
+assert(gv_color(svg,forestgreen)).
+assert(gv_color(svg,fuchsia)).
+assert(gv_color(svg,gainsboro)).
+assert(gv_color(svg,ghostwhite)).
+assert(gv_color(svg,gold)).
+assert(gv_color(svg,goldenrod)).
+assert(gv_color(svg,gray)).
+assert(gv_color(svg,grey)).
+assert(gv_color(svg,green)).
+assert(gv_color(svg,greenyellow)).
+assert(gv_color(svg,honeydew)).
+assert(gv_color(svg,hotpink)).
+assert(gv_color(svg,indianred)).
+assert(gv_color(svg,indigo)).
+assert(gv_color(svg,ivory)).
+assert(gv_color(svg,khaki)).
+assert(gv_color(svg,lavender)).
+assert(gv_color(svg,lavenderblush)).
+assert(gv_color(svg,lawngreen)).
+assert(gv_color(svg,lemonchiffon)).
+assert(gv_color(svg,lightblue)).
+assert(gv_color(svg,lightcoral)).
+assert(gv_color(svg,lightcyan)).
+assert(gv_color(svg,lightgoldenrodyellow)).
+assert(gv_color(svg,lightgray)).
+assert(gv_color(svg,lightgreen)).
+assert(gv_color(svg,lightgrey)).
+assert(gv_color(svg,lightpink)).
+assert(gv_color(svg,lightsalmon)).
+assert(gv_color(svg,lightseagreen)).
+assert(gv_color(svg,lightskyblue)).
+assert(gv_color(svg,lightslategray)).
+assert(gv_color(svg,lightslategrey)).
+assert(gv_color(svg,lightsteelblue)).
+assert(gv_color(svg,lightyellow)).
+assert(gv_color(svg,lime)).
+assert(gv_color(svg,limegreen)).
+assert(gv_color(svg,linen)).
+assert(gv_color(svg,magenta)).
+assert(gv_color(svg,maroon)).
+assert(gv_color(svg,mediumaquamarine)).
+assert(gv_color(svg,mediumblue)).
+assert(gv_color(svg,mediumorchid)).
+assert(gv_color(svg,mediumpurple)).
+assert(gv_color(svg,mediumseagreen)).
+assert(gv_color(svg,mediumslateblue)).
+assert(gv_color(svg,mediumspringgreen)).
+assert(gv_color(svg,mediumturquoise)).
+assert(gv_color(svg,mediumvioletred)).
+assert(gv_color(svg,midnightblue)).
+assert(gv_color(svg,mintcream)).
+assert(gv_color(svg,mistyrose)).
+assert(gv_color(svg,moccasin)).
+assert(gv_color(svg,navajowhite)).
+assert(gv_color(svg,navy)).
+assert(gv_color(svg,oldlace)).
+assert(gv_color(svg,olive)).
+assert(gv_color(svg,olivedrab)).
+assert(gv_color(svg,orange)).
+assert(gv_color(svg,orangered)).
+assert(gv_color(svg,orchid)).
+assert(gv_color(svg,palegoldenrod)).
+assert(gv_color(svg,palegreen)).
+assert(gv_color(svg,paleturquoise)).
+assert(gv_color(svg,palevioletred)).
+assert(gv_color(svg,papayawhip)).
+assert(gv_color(svg,peachpuff)).
+assert(gv_color(svg,peru)).
+assert(gv_color(svg,pink)).
+assert(gv_color(svg,plum)).
+assert(gv_color(svg,powderblue)).
+assert(gv_color(svg,purple)).
+assert(gv_color(svg,red)).
+assert(gv_color(svg,rosybrown)).
+assert(gv_color(svg,royalblue)).
+assert(gv_color(svg,saddlebrown)).
+assert(gv_color(svg,salmon)).
+assert(gv_color(svg,sandybrown)).
+assert(gv_color(svg,seagreen)).
+assert(gv_color(svg,seashell)).
+assert(gv_color(svg,sienna)).
+assert(gv_color(svg,silver)).
+assert(gv_color(svg,skyblue)).
+assert(gv_color(svg,slateblue)).
+assert(gv_color(svg,slategray)).
+assert(gv_color(svg,slategrey)).
+assert(gv_color(svg,snow)).
+assert(gv_color(svg,springgreen)).
+assert(gv_color(svg,steelblue)).
+assert(gv_color(svg,tan)).
+assert(gv_color(svg,teal)).
+assert(gv_color(svg,thistle)).
+assert(gv_color(svg,tomato)).
+assert(gv_color(svg,turquoise)).
+assert(gv_color(svg,violet)).
+assert(gv_color(svg,wheat)).
+assert(gv_color(svg,white)).
+assert(gv_color(svg,whitesmoke)).
+assert(gv_color(svg,yellow)).
+assert(gv_color(svg,yellowgreen)).</p>

<p>```</p>

<h2 id="118"> 118: 正在比较变动前 cab2231 和变动后 008c5e6 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attrs.log b/prolog/gv/gv_attrs.log
new file mode 100644
index 0000000..a9c6010
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_attrs.log
@@ -0,0 +1,169 @@
+assert(gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;)).
+assert(gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;)).
+assert(gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)*sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;)).
+assert(gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
+assert(gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(headtarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
+assert(gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(inputscale,[graph],[double],<em>,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(labeltarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;)).
+assert(gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
+assert(gv_attr(&lsquo;nslimit nslimit1&rsquo;,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;)).
+assert(gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;)).
+assert(gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
+assert(gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;)).
+assert(gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
+assert(gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
+assert(gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
+assert(gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
+assert(gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(tailtarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
+assert(gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
+assert(gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;)).
+assert(gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;)).
+assert(gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;)).
+assert(gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
+assert(gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
+assert(gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;)).</p>

<p>```</p>

<h2 id="119"> 119: 正在比较变动前 008c5e6 和变动后 dba5c72 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index edfd45f..ed03c94 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#109;&#x65;&#64;&#x77;&#x6f;&#117;&#116;&#101;&#114;&#x62;&#x65;&#x65;&#x6b;&#46;&#99;&#x6f;&#109;">&#x6d;&#101;&#64;&#x77;&#111;&#117;&#x74;&#101;&#x72;&#98;&#x65;&#101;&#107;&#46;&#x63;&#x6f;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.15&rsquo;).
+version(&lsquo;0.0.16&rsquo;).</p>

<p>```</p>

<h2 id="120"> 120: 正在比较变动前 dba5c72 和变动后 eff64ee </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index ed03c94..203cbfc 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -6,4 +6,4 @@ name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#105;&#108;&#x74;&#x6f;&#x3a;&#109;&#101;&#x40;&#119;&#111;&#117;&#116;&#101;&#114;&#98;&#x65;&#101;&#107;&#46;&#99;&#x6f;&#109;">&#x6d;&#x65;&#x40;&#x77;&#111;&#117;&#x74;&#x65;&#x72;&#98;&#x65;&#101;&#x6b;&#x2e;&#99;&#x6f;&#109;</a>&rsquo;).
 requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.16&rsquo;).
+version(&lsquo;0.0.17&rsquo;).</p>

<p>```</p>

<h2 id="121"> 121: 正在比较变动前 eff64ee 和变动后 89eb423 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/test/debug.pl b/test/debug.pl
deleted file mode 100644
index b0f85ea..0000000
&mdash;&ndash; a/test/debug.pl
+++ /dev/null
@@ -1,15 +0,0 @@
&ndash;:&ndash; use_module(library(ansi_term)).</p>

<h2>&ndash;:&ndash; use_module(library(prolog_pack)).</h2>

<p>-pack_ensure_removed(Pack):&ndash;
&ndash;  pack_property(Pack, _), !,
&ndash;  pack_remove(Pack).</p>

<h2>-pack_ensure_removed(_).</h2>

<p>-test:&ndash;
&ndash;  pack_ensure_removed(plGraphViz),
&ndash;  source_file(test, ThisFile),
&ndash;  file_directory_name(ThisFile, ThisDirectory),
&ndash;  assert(user:file_search_path(gvTest, ThisDirectory)),
&ndash;  assert(user:file_search_path(library, gvTest(&lsquo;../prolog&rsquo;))).
&ndash;:&ndash; test.</p>

<p>```</p>

<h2 id="122"> 122: 正在比较变动前 89eb423 和变动后 2346997 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index c6508a3..b0dbd69 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -198,7 +198,7 @@ double(N) &mdash;>
 %! doubleList(+Doubles:list(float))// .</p>

<p> doubleList(L) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(double, L, [separator(colon)]).
+  </em>(double, L, [separator(colon)]).</p>

<p>@@ -292,7 +292,7 @@ input_changeable(true) &mdash;> &ldquo;!&rdquo;.
 %! pointList(+Points:list(compound))// .</p>

<p> pointList(Points) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(point, Points, []).
+  </em>(point, Points, []).</p>

<p>diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index bff4257..5de2ff1 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -160,13 +160,13 @@ gv_graph(G1, I) &mdash;>
   &ldquo;}\n&rdquo;.</p>

<p> gv_edge_statements(I, Dir, L) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(gv_edge_statement(I, Dir), L, []), !.
+  </em>(gv_edge_statement(I, Dir), L, []), !.</p>

<p> gv_node_statements(I, L) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(gv_node_statement(I), L, []), !.
+  </em>(gv_node_statement(I), L, []), !.</p>

<p> gv_ranked_node_collections(I, L) &mdash;>
&ndash;  &lsquo;<em>&rsquo;(gv_ranked_node_collection(I), L, []), !.
+  </em>(gv_ranked_node_collection(I), L, []), !.</p>

<p>diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 18cdf7a..033d0b9 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -146,7 +146,7 @@ gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
   &ldquo;;\n&rdquo;,</p>

<p>   % Vertice statements.
&ndash;  &lsquo;<em>&rsquo;(
+  </em>(</p>

<pre><code> gv_node_statement(NewI),
 [Rank_V_Term|Content_V_Terms],
 []
</code></pre>

<p>@@ -168,7 +168,7 @@ gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
 %! )// is det.</p>

<p> gv_attrs(Kind, L) &mdash;>
&ndash;  bracketed(square, &lsquo;<em>&rsquo;(gv_attr(Kind), L, [])).
+  bracketed(square, </em>(gv_attr(Kind), L, [])).</p>

<p> %! gv_attr(
 %!   +Context:oneof([edge,graph,node]),
diff &mdash;git a/test/test.pl b/test/test.pl
index 898c04e..ee92ae6 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -1,5 +1,3 @@</p>

<h2>&ndash;:&ndash; ensure_loaded(debug).</h2>

<p> %/graph
   :&ndash; use_module(library(graph/build_export_graph)).
 %/gv</p>

<p>```</p>

<h2 id="123"> 123: 正在比较变动前 2346997 和变动后 d22d50e </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/.gitmodules b/.gitmodules
deleted file mode 100644
index 26ddd86..0000000
&mdash;&ndash; a/.gitmodules
+++ /dev/null
@@ -1,9 +0,0 @@
&ndash;[submodule &ldquo;Prolog-Library-Collection&rdquo;]
&ndash;   path = Prolog-Library-Collection
&ndash;   url = <a href="https://github.com/wouterbeek/Prolog-Library-Collection.git">https://github.com/wouterbeek/Prolog-Library-Collection.git</a>
&ndash;[submodule &ldquo;plHtml&rdquo;]
&ndash;   path = plHtml
&ndash;   url = <a href="https://github.com/wouterbeek/plHtml.git">https://github.com/wouterbeek/plHtml.git</a>
&ndash;[submodule &ldquo;plUri&rdquo;]
&ndash;   path = plUri
&ndash;   url = <a href="https://github.com/wouterbeek/plUri.git">https://github.com/wouterbeek/plUri.git</a>
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index b031d16..507e8ad 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -1,6 +1,8 @@
 :&ndash; module(
   build_export_graph,
   [
+    build_export_graph/2, % +Graph:compound
+                          % -ExportGraph:compound</p>

<pre><code> build_export_graph/3 % +Graph:compound
                      % -ExportGraph:compound
                      % +Options:list(compound)
</code></pre>

<p>@@ -49,7 +51,7 @@ Vertex coordinates:</p>

<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07
+@version 2015/07, 2015/09
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -110,6 +112,11 @@ is_meta(vertex_uri).</p>

<p>+%! build_export_graph(+Graph:compound, -ExportGraph:compound) is det.
+
+build_export_graph(G, ExportG):&ndash;
+  build_export_graph(G, ExportG, []).
+
 %! build_export_graph(
 %!   +Graph:compound,
 %!   -ExportGraph:compound,</p>

<p>```</p>

<h2 id="124"> 124: 正在比较变动前 d22d50e 和变动后 e64cc35 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/install b/install
new file mode 100755
index 0000000..849699b
&mdash;&ndash; /dev/null
+++ b/install
@@ -0,0 +1,218 @@
+#!/usr/bin/env swipl
+
+:&ndash; module(install, []).
+
+/<em>* <module> Install
+
+Let&rsquo;s do this!
+
+@author Wouter Beek
+@version 2015/09/23
+</em>/
+
+:&ndash; use_module(library(filesex)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(option)).
+:&ndash; use_module(library(optparse)).
+:&ndash; use_module(library(prolog_pack)).
+:&ndash; use_module(library(uri)).
+
+:&ndash; dynamic(author/2).
+:&ndash; dynamic(download/1).
+:&ndash; dynamic(home/1).
+:&ndash; dynamic(maintainer/2).
+:&ndash; dynamic(name/1).
+:&ndash; dynamic(packager/2).
+:&ndash; dynamic(requires/1).
+:&ndash; dynamic(title/1).
+:&ndash; dynamic(version/1).
+
+:&ndash; initialization(install).
+
+
+
+
+
+%! install is det.
+
+install:&ndash;
+  OptSpec = [
+    [ % Github
+      default(true),
+      help(&lsquo;Whether Github should be used to install requirements.&rsquo;),
+      longflags([git,github]),
+      opt(github),
+      type(boolean)
+    ],
+    [ % Help
+      default(false),
+      help(&lsquo;Display help about the install command.&rsquo;),
+      longflags([help]),
+      opt(help),
+      shortflags([h]),
+      type(boolean)
+    ],
+    [ % Pack
+      default(true),
+      help(&lsquo;Whether the Prolog Pack system is used for installing requirements.&rsquo;),
+      longflags([pack]),
+      opt(pack),
+      type(boolean)
+    ],
+    [ % Parent
+      default(false),
+      help(&lsquo;Whether existing installations in the parent directory should be taken into account.&rsquo;),
+      longflags([parent]),
+      opt(parent),
+      type(boolean)
+    ]
+  ],
+  opt_arguments(OptSpec, Opts, <em>),
+
+  % Process help
+  (option(help(true), Opts) &ndash;> show_help(OptSpec) ; install(Opts)).
+
+
+%! install(+Options:list(compound)) is det.
+
+install(Opts):&ndash;
+  source_file(install, File),
+  file_directory_name(File, AppDir),
+  install(AppDir, AppDir, Opts),
+  clean_meta,
+  halt.
+
+
+%! install(
+%!   +ApplicationDirectory:atom,
+%!   +LibraryDirectory:atom,
+%!   +Options:list(compound)
+%! ) is det.
+
+install(AppDir, LibDir, Opts):&ndash;
+  % The pack information is taken from the library directory.
+  % This allows application requirements to be installed recursively.
+  directory_file_path(LibDir, &lsquo;pack.pl&rsquo;, Info),
+  access_file(Info, read),
+  load_meta(Info),
+
+  % Set this library&rsquo;s search path.
+  name(Name),
+  assert(user:file_search_path(Name, LibDir)),
+
+  % Pull in the required libraries.
+  forall(requires(LibName), install_required(AppDir, LibName, Opts)), !.
+install(</em>, <em>, </em>):&ndash;
+  msg_warning(&lsquo;Installation failed.&rsquo;).
+
+
+%! install_required(
+%!   +ApplicationDirectory:atom,
+%!   +LibName:atom,
+%!   +Options:list(compound)
+%! ) is det.
+
+% Developer&rsquo;s delight: library already available from parent directory.
+install_required(AppDir, LibName, Opts):&ndash;
+  option(parent(true), Opts),
+
+  file_directory_name(AppDir, ParentDir),
+  append_directories(ParentDir, LibName, LibDir),
+  exists_directory(LibDir), !,
+
+  % Print message.
+  atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; already installed.&rsquo;], Msg),
+  msg_success(Msg).
+% Install through the Prolog Pack system.
+install_required(<em>, LibName, Opts):&ndash;
+  option(pack(true), Opts),
+
+  prolog_pack:query_pack_server(search(LibName), Result,[]),
+  Result = true([pack(LibName,</em>,<em>,</em>,<em>)]), !,
+  pack_install(LibName).
+% Install through Github.
+install_required(AppDir, LibName, Opts):&ndash;
+  option(github(true), Opts),
+
+  % Remove the old version of the library.
+  append_directories(AppDir, LibName, LibDir),
+  (exists_directory(LibDir) &ndash;> delete_directory_and_contents(LibDir) ; true),
+
+  % Git clone the new version of the library.
+  atomic_list_concat([&lsquo;&rsquo;,wouterbeek,LibName], /, Path),
+  uri_components(Iri, uri_components(https,&lsquo;github.com&rsquo;,Path,</em>,<em>)),
+  prolog_pack:run_process(path(git), [clone,Iri,LibDir], []),
+
+  % Print message.
+  atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; was installed.&rsquo;], Msg),
+  msg_success(Msg),
+<br/>
+  % Recurse
+  install(AppDir, LibDir, Opts), !.
+% Oops!
+install_required(</em>, LibName, _):&ndash;
+  atomic_list_concat(
+    [&lsquo;Installation of library &rsquo;,LibName,&lsquo; failed.&rsquo;],
+    Msg
+  ),
+  msg_warning(Msg).
+
+
+
+
+
+% HELPERS %
+
+%! append_directories(+Dir1:atom, +Dir2:atom, -Dir3:atom) is det.
+
+append_directories(Dir1, Dir2, Dir3):&ndash;
+  atomic_list_concat(Subdirs1, /, Dir1),
+  atomic_list_concat(Subdirs2, /, Dir2),
+  append(Subdirs1, Subdirs2, Subdirs3),
+  atomic_list_concat(Subdirs3, /, Dir3).
+
+
+
+%! clean_meta is det.
+
+clean_meta:&ndash;
+  retractall(author/2),
+  retractall(download/1),
+  retractall(home/1),
+  retractall(maintainer/2),
+  retractall(name/1),
+  retractall(packager/2),
+  retractall(requires/1),
+  retractall(title/1),
+  retractall(version/1).
+
+
+
+%! show_help(+OptionSpecification:list(compound)) is det.
+
+show_help(OptSpec):&ndash;
+  opt_help(OptSpec, Help),
+  format(user_output, &lsquo;~a\n&rsquo;, [Help]),
+  halt.
+
+
+
+%! load_meta(+File:atom) is det.
+
+load_meta(File):&ndash;
+  clean_meta,
+  ensure_loaded(File).
+
+
+
+%! msg_success(+Message:atom) is det.
+
+msg_success(X):&ndash;
+    ansi_format([bold,fg(green)], &lsquo;~a~n&rsquo;, [X]).
+
+
+
+%! msg_warning(+Message:atom) is det.
+
+msg_warning(X):&ndash;
+    ansi_format([bold,fg(red)], &lsquo;~a~n&rsquo;, [X]).</p>

<p>```</p>

<h2 id="125"> 125: 正在比较变动前 e64cc35 和变动后 763a529 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/install b/install
deleted file mode 100755
index 849699b..0000000
&mdash;&ndash; a/install
+++ /dev/null
@@ -1,218 +0,0 @@</p>

<h2>&ndash;#!/usr/bin/env swipl</h2>

<h2>&ndash;:&ndash; module(install, []).</h2>

<h2>&ndash;/** <module> Install</h2>

<h2>-Let&rsquo;s do this!</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2015/09/23</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(filesex)).
&ndash;:&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(optparse)).
&ndash;:&ndash; use_module(library(prolog_pack)).</p>

<h2>&ndash;:&ndash; use_module(library(uri)).</h2>

<p>&ndash;:&ndash; dynamic(author/2).
&ndash;:&ndash; dynamic(download/1).
&ndash;:&ndash; dynamic(home/1).
&ndash;:&ndash; dynamic(maintainer/2).
&ndash;:&ndash; dynamic(name/1).
&ndash;:&ndash; dynamic(packager/2).
&ndash;:&ndash; dynamic(requires/1).
&ndash;:&ndash; dynamic(title/1).</p>

<h2>&ndash;:&ndash; dynamic(version/1).</h2>

<h2>&ndash;:&ndash; initialization(install).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! install is det.</h2>

<p>-install:&ndash;
&ndash;  OptSpec = [
&ndash;    [ % Github
&ndash;      default(true),
&ndash;      help(&lsquo;Whether Github should be used to install requirements.&rsquo;),
&ndash;      longflags([git,github]),
&ndash;      opt(github),
&ndash;      type(boolean)
&ndash;    ],
&ndash;    [ % Help
&ndash;      default(false),
&ndash;      help(&lsquo;Display help about the install command.&rsquo;),
&ndash;      longflags([help]),
&ndash;      opt(help),
&ndash;      shortflags([h]),
&ndash;      type(boolean)
&ndash;    ],
&ndash;    [ % Pack
&ndash;      default(true),
&ndash;      help(&lsquo;Whether the Prolog Pack system is used for installing requirements.&rsquo;),
&ndash;      longflags([pack]),
&ndash;      opt(pack),
&ndash;      type(boolean)
&ndash;    ],
&ndash;    [ % Parent
&ndash;      default(false),
&ndash;      help(&lsquo;Whether existing installations in the parent directory should be taken into account.&rsquo;),
&ndash;      longflags([parent]),
&ndash;      opt(parent),
&ndash;      type(boolean)
&ndash;    ]
&ndash;  ],</p>

<h2>&ndash;  opt_arguments(OptSpec, Opts, _),</h2>

<ul>
<li>% Process help

<h2>&ndash;  (option(help(true), Opts) &ndash;> show_help(OptSpec) ; install(Opts)).</h2>

&ndash;

<h2>&ndash;%! install(+Options:list(compound)) is det.</h2>

<p>-install(Opts):&ndash;</p></li>
<li>source_file(install, File),</li>
<li>file_directory_name(File, AppDir),</li>
<li>install(AppDir, AppDir, Opts),</li>
<li>clean_meta,

<h2>&ndash;  halt.</h2>

&ndash;
&ndash;%! install(
&ndash;%!   +ApplicationDirectory:atom,
&ndash;%!   +LibraryDirectory:atom,
&ndash;%!   +Options:list(compound)

<h2>&ndash;%! ) is det.</h2>

<p>-install(AppDir, LibDir, Opts):&ndash;</p></li>
<li>% The pack information is taken from the library directory.</li>
<li>% This allows application requirements to be installed recursively.</li>
<li>directory_file_path(LibDir, &lsquo;pack.pl&rsquo;, Info),</li>
<li>access_file(Info, read),

<h2>&ndash;  load_meta(Info),</h2></li>
<li>% Set this library&rsquo;s search path.</li>
<li>name(Name),

<h2>&ndash;  assert(user:file_search_path(Name, LibDir)),</h2></li>
<li>% Pull in the required libraries.</li>
<li>forall(requires(LibName), install_required(AppDir, LibName, Opts)), !.
-install(<em>, </em>, _):&ndash;

<h2>&ndash;  msg_warning(&lsquo;Installation failed.&rsquo;).</h2>

&ndash;
&ndash;%! install_required(
&ndash;%!   +ApplicationDirectory:atom,
&ndash;%!   +LibName:atom,
&ndash;%!   +Options:list(compound)

<h2>&ndash;%! ) is det.</h2>

&ndash;% Developer&rsquo;s delight: library already available from parent directory.
-install_required(AppDir, LibName, Opts):&ndash;

<h2>&ndash;  option(parent(true), Opts),</h2></li>
<li>file_directory_name(AppDir, ParentDir),</li>
<li>append_directories(ParentDir, LibName, LibDir),

<h2>&ndash;  exists_directory(LibDir), !,</h2></li>
<li>% Print message.</li>
<li>atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; already installed.&rsquo;], Msg),</li>
<li>msg_success(Msg).
&ndash;% Install through the Prolog Pack system.
-install_required(_, LibName, Opts):&ndash;

<h2>&ndash;  option(pack(true), Opts),</h2></li>
<li>prolog_pack:query_pack_server(search(LibName), Result,[]),</li>
<li>Result = true([pack(LibName,<em>,</em>,<em>,</em>)]), !,</li>
<li>pack_install(LibName).
&ndash;% Install through Github.
-install_required(AppDir, LibName, Opts):&ndash;

<h2>&ndash;  option(github(true), Opts),</h2></li>
<li>% Remove the old version of the library.</li>
<li>append_directories(AppDir, LibName, LibDir),

<h2>&ndash;  (exists_directory(LibDir) &ndash;> delete_directory_and_contents(LibDir) ; true),</h2></li>
<li>% Git clone the new version of the library.</li>
<li>atomic_list_concat([&lsquo;&rsquo;,wouterbeek,LibName], /, Path),</li>
<li>uri_components(Iri, uri_components(https,&lsquo;github.com&rsquo;,Path,<em>,</em>)),

<h2>&ndash;  prolog_pack:run_process(path(git), [clone,Iri,LibDir], []),</h2></li>
<li>% Print message.</li>
<li>atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; was installed.&rsquo;], Msg),

<ul>
<li>msg_success(Msg),</li>
</ul>
</li>
<li></li>
<li>% Recurse</li>
<li>install(AppDir, LibDir, Opts), !.
&ndash;% Oops!
-install_required(<em>, LibName, </em>):&ndash;</li>
<li>atomic_list_concat(</li>
<li> [&lsquo;Installation of library &rsquo;,LibName,&lsquo; failed.&rsquo;],</li>
<li> Msg</li>
<li>),

<h2>&ndash;  msg_warning(Msg).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

<h2>&ndash;%! append_directories(+Dir1:atom, +Dir2:atom, -Dir3:atom) is det.</h2>

<p>-append_directories(Dir1, Dir2, Dir3):&ndash;</p></li>
<li>atomic_list_concat(Subdirs1, /, Dir1),</li>
<li>atomic_list_concat(Subdirs2, /, Dir2),</li>
<li>append(Subdirs1, Subdirs2, Subdirs3),

<h2>&ndash;  atomic_list_concat(Subdirs3, /, Dir3).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! clean_meta is det.</h2>

<p>-clean_meta:&ndash;</p></li>
<li>retractall(author/2),</li>
<li>retractall(download/1),</li>
<li>retractall(home/1),</li>
<li>retractall(maintainer/2),</li>
<li>retractall(name/1),</li>
<li>retractall(packager/2),</li>
<li>retractall(requires/1),</li>
<li>retractall(title/1),

<h2>&ndash;  retractall(version/1).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! show_help(+OptionSpecification:list(compound)) is det.</h2>

<p>-show_help(OptSpec):&ndash;</p></li>
<li>opt_help(OptSpec, Help),</li>
<li>format(user_output, &lsquo;~a\n&rsquo;, [Help]),

<h2>&ndash;  halt.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! load_meta(+File:atom) is det.</h2>

<p>-load_meta(File):&ndash;</p></li>
<li>clean_meta,

<h2>&ndash;  ensure_loaded(File).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! msg_success(+Message:atom) is det.</h2>

-msg_success(X):&ndash;

<h2>&ndash;    ansi_format([bold,fg(green)], &lsquo;~a~n&rsquo;, [X]).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! msg_warning(+Message:atom) is det.</h2>

<p>-msg_warning(X):&ndash;</p></li>
<li> ansi_format([bold,fg(red)], &lsquo;~a~n&rsquo;, [X]).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index fa00670..99d6059 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -121,9 +121,9 @@ assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
% Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.</li>
</ul>


<p> gv_attrs_download:&ndash;
&ndash;  verbose_call(
&ndash;    &lsquo;updating GraphViz attributes table&rsquo;,
+  verbose(</p>

<pre><code> gv_attrs_download0
</code></pre>

<ul>
<li> &ldquo;updating GraphViz attributes table&rdquo;,
).</li>
</ul>


<p> gv_attrs_download0:&ndash;
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 57c7f90..2c56713 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -88,9 +88,9 @@ wc_weight(Float) &mdash;>
 %! gv_color_download is det.</p>

<p> gv_color_download:&ndash;
&ndash;  verbose_call(
&ndash;    &lsquo;updating the GraphViz color table&rsquo;,
&ndash;    gv_color_download0
+  verbose(
+    gv_color_download0,
+    &lsquo;updating the GraphViz color table&rsquo;
   ).</p>

<p> gv_color_download0:&ndash;
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index 577a33a..7fd5a58 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -10,7 +10,7 @@
 /** <module> GraphViz file</p>

<p> @author Wouter Beek
&ndash;@version 2015/07
+@version 2015/07, 2015/10
 */</p>

<p> :&ndash; use_module(library(code_ext)).
@@ -18,18 +18,13 @@
 :&ndash; use_module(library(gv/gv_graph)).
 :&ndash; use_module(library(option)).</p>

<h2> :&ndash; use_module(library(process)).</h2>

<p>&ndash;:&ndash; dynamic(user:prolog_file_type/2).</p>

<h2>&ndash;:&ndash; multifile(user:prolog_file_type/2).</h2>

<p>-user:prolog_file_type(dot, dot).
-user:prolog_file_type(pdf, pdf).
+:&ndash; use_module(library(string_ext)).</p>

<p> :&ndash; predicate_options(gv_export/3, 3, [</p>

<pre><code>  pass_to(file_to_gv/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(file_to_gv/3, 3, [
&ndash;     method(+atom),
+     method(+oneof([circo,dot,fdp,neato,osage,sfdp,twopi])),</p>

<pre><code>  output(+atom)
]).
</code></pre>

<p>@@ -37,39 +32,38 @@ user:prolog_file_type(pdf, pdf).</p>

<p>&ndash;%! gv_export(
&ndash;%!   +ExportGraph:compound,
&ndash;%!   +OutputFile:atom,
&ndash;%!   +Options:list(nvpair)
&ndash;%! ) is det.
+%! gv_export(+ExportGraph:compound, +File:atom, +Options:list(compound)) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
&ndash;%   &ndash; <code>method(+Method:atom)</code>
+%   * method(+oneof([circo,dot,fdp,neato,osage,sfdp,twopi])
 %     The algorithm used by GraphViz for positioning the tree nodes.
&ndash;%     Either =dot= (default) or =sfdp=.
&ndash;%   &ndash; <code>output(+FileType:atom)</code>
+%     Default is <code>dot'.
+%     For possible values see gv_method/1.
+%   * output(+atom)</code>
 %     The file type of the generated GraphViz file.
&ndash;%     Default: <code>pdf</code>.
+%     Default is <code>pdf</code>.
+%     For possible values see gv_output_type/1.</p>

<p>-gv_export(ExportGraph, OutputFile, Options):&ndash;
&ndash;  once(phrase(gv_graph(ExportGraph), Codes)),
+gv_export(ExportG, File, Opts):&ndash;
+  once(phrase(gv_graph(ExportG), Cs)),</p>

<p>   % Be thread-safe.
   thread_self(Id),
&ndash;  atomic_list_concat([gv_file,Id], &lsquo;<em>&rsquo;, ThreadName),
&ndash;  absolute_file_name(ThreadName, TmpFile, [access(write),file_type(dot)]),
+  string_list_concat([&ldquo;gv_file&rdquo;,Id], &ldquo;</em>&rdquo;, ThreadName),
+  absolute_file_name(ThreadName, TmpFile, [access(write),extensions([dot])]),
   setup_call_cleanup(</p>

<pre><code> open(TmpFile, write, Write, [encoding(utf8)]),
</code></pre>

<ul>
<li> with_output_to(Write, put_codes(Codes)),</li>
<li> with_output_to(Write, put_codes(Cs)),
 close(Write)
),</li>
<li>file_to_gv(TmpFile, OutputFile, Options).</li>
<li>file_to_gv(TmpFile, File, Opts).
+</li>
</ul>


<p> %! file_to_gv(
 %!   +InputFile:atom,
 %!   +OutputFile:atom,
&ndash;%!   +Options:list(nvpair)
+%!   +Options:list(compound)
 %! ) is det.
 % Converts a GraphViz DOT file to an image file, using a specific
 % visualization method.
@@ -98,8 +92,8 @@ file_to_gv(InputFile, OutputFile, Opts):&ndash;
   must_be(oneof(OutputTypes), OutputType),</p>

<p>   % Run the GraphViz conversion command in the shell.
&ndash;  format(atom(OutputTypeFlag), &lsquo;-T~a&rsquo;, [OutputType]),
&ndash;  format(atom(OutputFileFlag), &lsquo;-o~a&rsquo;, [OutputFile]),
+  format(atom(OutputTypeFlag), &ldquo;-T~a&rdquo;, [OutputType]),
+  format(atom(OutputFileFlag), &ldquo;-o~a&rdquo;, [OutputFile]),
   process_create(</p>

<pre><code> path(Method),
 [OutputTypeFlag,file(InputFile),OutputFileFlag],
</code></pre>

<p>@@ -108,6 +102,8 @@ file_to_gv(InputFile, OutputFile, Opts):&ndash;</p>

<p>+
+
 % HELPERS %</p>

<p> gv_method(circo).</p>

<p>```</p>

<h2 id="126"> 126: 正在比较变动前 763a529 和变动后 d962f81 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/install b/install
new file mode 100755
index 0000000..849699b
&mdash;&ndash; /dev/null
+++ b/install
@@ -0,0 +1,218 @@
+#!/usr/bin/env swipl
+
+:&ndash; module(install, []).
+
+/<em>* <module> Install
+
+Let&rsquo;s do this!
+
+@author Wouter Beek
+@version 2015/09/23
+</em>/
+
+:&ndash; use_module(library(filesex)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(option)).
+:&ndash; use_module(library(optparse)).
+:&ndash; use_module(library(prolog_pack)).
+:&ndash; use_module(library(uri)).
+
+:&ndash; dynamic(author/2).
+:&ndash; dynamic(download/1).
+:&ndash; dynamic(home/1).
+:&ndash; dynamic(maintainer/2).
+:&ndash; dynamic(name/1).
+:&ndash; dynamic(packager/2).
+:&ndash; dynamic(requires/1).
+:&ndash; dynamic(title/1).
+:&ndash; dynamic(version/1).
+
+:&ndash; initialization(install).
+
+
+
+
+
+%! install is det.
+
+install:&ndash;
+  OptSpec = [
+    [ % Github
+      default(true),
+      help(&lsquo;Whether Github should be used to install requirements.&rsquo;),
+      longflags([git,github]),
+      opt(github),
+      type(boolean)
+    ],
+    [ % Help
+      default(false),
+      help(&lsquo;Display help about the install command.&rsquo;),
+      longflags([help]),
+      opt(help),
+      shortflags([h]),
+      type(boolean)
+    ],
+    [ % Pack
+      default(true),
+      help(&lsquo;Whether the Prolog Pack system is used for installing requirements.&rsquo;),
+      longflags([pack]),
+      opt(pack),
+      type(boolean)
+    ],
+    [ % Parent
+      default(false),
+      help(&lsquo;Whether existing installations in the parent directory should be taken into account.&rsquo;),
+      longflags([parent]),
+      opt(parent),
+      type(boolean)
+    ]
+  ],
+  opt_arguments(OptSpec, Opts, <em>),
+
+  % Process help
+  (option(help(true), Opts) &ndash;> show_help(OptSpec) ; install(Opts)).
+
+
+%! install(+Options:list(compound)) is det.
+
+install(Opts):&ndash;
+  source_file(install, File),
+  file_directory_name(File, AppDir),
+  install(AppDir, AppDir, Opts),
+  clean_meta,
+  halt.
+
+
+%! install(
+%!   +ApplicationDirectory:atom,
+%!   +LibraryDirectory:atom,
+%!   +Options:list(compound)
+%! ) is det.
+
+install(AppDir, LibDir, Opts):&ndash;
+  % The pack information is taken from the library directory.
+  % This allows application requirements to be installed recursively.
+  directory_file_path(LibDir, &lsquo;pack.pl&rsquo;, Info),
+  access_file(Info, read),
+  load_meta(Info),
+
+  % Set this library&rsquo;s search path.
+  name(Name),
+  assert(user:file_search_path(Name, LibDir)),
+
+  % Pull in the required libraries.
+  forall(requires(LibName), install_required(AppDir, LibName, Opts)), !.
+install(</em>, <em>, </em>):&ndash;
+  msg_warning(&lsquo;Installation failed.&rsquo;).
+
+
+%! install_required(
+%!   +ApplicationDirectory:atom,
+%!   +LibName:atom,
+%!   +Options:list(compound)
+%! ) is det.
+
+% Developer&rsquo;s delight: library already available from parent directory.
+install_required(AppDir, LibName, Opts):&ndash;
+  option(parent(true), Opts),
+
+  file_directory_name(AppDir, ParentDir),
+  append_directories(ParentDir, LibName, LibDir),
+  exists_directory(LibDir), !,
+
+  % Print message.
+  atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; already installed.&rsquo;], Msg),
+  msg_success(Msg).
+% Install through the Prolog Pack system.
+install_required(<em>, LibName, Opts):&ndash;
+  option(pack(true), Opts),
+
+  prolog_pack:query_pack_server(search(LibName), Result,[]),
+  Result = true([pack(LibName,</em>,<em>,</em>,<em>)]), !,
+  pack_install(LibName).
+% Install through Github.
+install_required(AppDir, LibName, Opts):&ndash;
+  option(github(true), Opts),
+
+  % Remove the old version of the library.
+  append_directories(AppDir, LibName, LibDir),
+  (exists_directory(LibDir) &ndash;> delete_directory_and_contents(LibDir) ; true),
+
+  % Git clone the new version of the library.
+  atomic_list_concat([&lsquo;&rsquo;,wouterbeek,LibName], /, Path),
+  uri_components(Iri, uri_components(https,&lsquo;github.com&rsquo;,Path,</em>,<em>)),
+  prolog_pack:run_process(path(git), [clone,Iri,LibDir], []),
+
+  % Print message.
+  atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; was installed.&rsquo;], Msg),
+  msg_success(Msg),
+<br/>
+  % Recurse
+  install(AppDir, LibDir, Opts), !.
+% Oops!
+install_required(</em>, LibName, _):&ndash;
+  atomic_list_concat(
+    [&lsquo;Installation of library &rsquo;,LibName,&lsquo; failed.&rsquo;],
+    Msg
+  ),
+  msg_warning(Msg).
+
+
+
+
+
+% HELPERS %
+
+%! append_directories(+Dir1:atom, +Dir2:atom, -Dir3:atom) is det.
+
+append_directories(Dir1, Dir2, Dir3):&ndash;
+  atomic_list_concat(Subdirs1, /, Dir1),
+  atomic_list_concat(Subdirs2, /, Dir2),
+  append(Subdirs1, Subdirs2, Subdirs3),
+  atomic_list_concat(Subdirs3, /, Dir3).
+
+
+
+%! clean_meta is det.
+
+clean_meta:&ndash;
+  retractall(author/2),
+  retractall(download/1),
+  retractall(home/1),
+  retractall(maintainer/2),
+  retractall(name/1),
+  retractall(packager/2),
+  retractall(requires/1),
+  retractall(title/1),
+  retractall(version/1).
+
+
+
+%! show_help(+OptionSpecification:list(compound)) is det.
+
+show_help(OptSpec):&ndash;
+  opt_help(OptSpec, Help),
+  format(user_output, &lsquo;~a\n&rsquo;, [Help]),
+  halt.
+
+
+
+%! load_meta(+File:atom) is det.
+
+load_meta(File):&ndash;
+  clean_meta,
+  ensure_loaded(File).
+
+
+
+%! msg_success(+Message:atom) is det.
+
+msg_success(X):&ndash;
+    ansi_format([bold,fg(green)], &lsquo;~a~n&rsquo;, [X]).
+
+
+
+%! msg_warning(+Message:atom) is det.
+
+msg_warning(X):&ndash;
+    ansi_format([bold,fg(red)], &lsquo;~a~n&rsquo;, [X]).</p>

<p>```</p>

<h2 id="127"> 127: 正在比较变动前 d962f81 和变动后 63a5cd7 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/install b/install
deleted file mode 100755
index 849699b..0000000
&mdash;&ndash; a/install
+++ /dev/null
@@ -1,218 +0,0 @@</p>

<h2>&ndash;#!/usr/bin/env swipl</h2>

<h2>&ndash;:&ndash; module(install, []).</h2>

<h2>&ndash;/** <module> Install</h2>

<h2>-Let&rsquo;s do this!</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2015/09/23</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(filesex)).
&ndash;:&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(optparse)).
&ndash;:&ndash; use_module(library(prolog_pack)).</p>

<h2>&ndash;:&ndash; use_module(library(uri)).</h2>

<p>&ndash;:&ndash; dynamic(author/2).
&ndash;:&ndash; dynamic(download/1).
&ndash;:&ndash; dynamic(home/1).
&ndash;:&ndash; dynamic(maintainer/2).
&ndash;:&ndash; dynamic(name/1).
&ndash;:&ndash; dynamic(packager/2).
&ndash;:&ndash; dynamic(requires/1).
&ndash;:&ndash; dynamic(title/1).</p>

<h2>&ndash;:&ndash; dynamic(version/1).</h2>

<h2>&ndash;:&ndash; initialization(install).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! install is det.</h2>

<p>-install:&ndash;
&ndash;  OptSpec = [
&ndash;    [ % Github
&ndash;      default(true),
&ndash;      help(&lsquo;Whether Github should be used to install requirements.&rsquo;),
&ndash;      longflags([git,github]),
&ndash;      opt(github),
&ndash;      type(boolean)
&ndash;    ],
&ndash;    [ % Help
&ndash;      default(false),
&ndash;      help(&lsquo;Display help about the install command.&rsquo;),
&ndash;      longflags([help]),
&ndash;      opt(help),
&ndash;      shortflags([h]),
&ndash;      type(boolean)
&ndash;    ],
&ndash;    [ % Pack
&ndash;      default(true),
&ndash;      help(&lsquo;Whether the Prolog Pack system is used for installing requirements.&rsquo;),
&ndash;      longflags([pack]),
&ndash;      opt(pack),
&ndash;      type(boolean)
&ndash;    ],
&ndash;    [ % Parent
&ndash;      default(false),
&ndash;      help(&lsquo;Whether existing installations in the parent directory should be taken into account.&rsquo;),
&ndash;      longflags([parent]),
&ndash;      opt(parent),
&ndash;      type(boolean)
&ndash;    ]
&ndash;  ],</p>

<h2>&ndash;  opt_arguments(OptSpec, Opts, _),</h2>

<ul>
<li>% Process help

<h2>&ndash;  (option(help(true), Opts) &ndash;> show_help(OptSpec) ; install(Opts)).</h2>

&ndash;

<h2>&ndash;%! install(+Options:list(compound)) is det.</h2>

<p>-install(Opts):&ndash;</p></li>
<li>source_file(install, File),</li>
<li>file_directory_name(File, AppDir),</li>
<li>install(AppDir, AppDir, Opts),</li>
<li>clean_meta,

<h2>&ndash;  halt.</h2>

&ndash;
&ndash;%! install(
&ndash;%!   +ApplicationDirectory:atom,
&ndash;%!   +LibraryDirectory:atom,
&ndash;%!   +Options:list(compound)

<h2>&ndash;%! ) is det.</h2>

<p>-install(AppDir, LibDir, Opts):&ndash;</p></li>
<li>% The pack information is taken from the library directory.</li>
<li>% This allows application requirements to be installed recursively.</li>
<li>directory_file_path(LibDir, &lsquo;pack.pl&rsquo;, Info),</li>
<li>access_file(Info, read),

<h2>&ndash;  load_meta(Info),</h2></li>
<li>% Set this library&rsquo;s search path.</li>
<li>name(Name),

<h2>&ndash;  assert(user:file_search_path(Name, LibDir)),</h2></li>
<li>% Pull in the required libraries.</li>
<li>forall(requires(LibName), install_required(AppDir, LibName, Opts)), !.
-install(<em>, </em>, _):&ndash;

<h2>&ndash;  msg_warning(&lsquo;Installation failed.&rsquo;).</h2>

&ndash;
&ndash;%! install_required(
&ndash;%!   +ApplicationDirectory:atom,
&ndash;%!   +LibName:atom,
&ndash;%!   +Options:list(compound)

<h2>&ndash;%! ) is det.</h2>

&ndash;% Developer&rsquo;s delight: library already available from parent directory.
-install_required(AppDir, LibName, Opts):&ndash;

<h2>&ndash;  option(parent(true), Opts),</h2></li>
<li>file_directory_name(AppDir, ParentDir),</li>
<li>append_directories(ParentDir, LibName, LibDir),

<h2>&ndash;  exists_directory(LibDir), !,</h2></li>
<li>% Print message.</li>
<li>atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; already installed.&rsquo;], Msg),</li>
<li>msg_success(Msg).
&ndash;% Install through the Prolog Pack system.
-install_required(_, LibName, Opts):&ndash;

<h2>&ndash;  option(pack(true), Opts),</h2></li>
<li>prolog_pack:query_pack_server(search(LibName), Result,[]),</li>
<li>Result = true([pack(LibName,<em>,</em>,<em>,</em>)]), !,</li>
<li>pack_install(LibName).
&ndash;% Install through Github.
-install_required(AppDir, LibName, Opts):&ndash;

<h2>&ndash;  option(github(true), Opts),</h2></li>
<li>% Remove the old version of the library.</li>
<li>append_directories(AppDir, LibName, LibDir),

<h2>&ndash;  (exists_directory(LibDir) &ndash;> delete_directory_and_contents(LibDir) ; true),</h2></li>
<li>% Git clone the new version of the library.</li>
<li>atomic_list_concat([&lsquo;&rsquo;,wouterbeek,LibName], /, Path),</li>
<li>uri_components(Iri, uri_components(https,&lsquo;github.com&rsquo;,Path,<em>,</em>)),

<h2>&ndash;  prolog_pack:run_process(path(git), [clone,Iri,LibDir], []),</h2></li>
<li>% Print message.</li>
<li>atomic_list_concat([&lsquo;Library &rsquo;,LibName,&lsquo; was installed.&rsquo;], Msg),

<ul>
<li>msg_success(Msg),</li>
</ul>
</li>
<li></li>
<li>% Recurse</li>
<li>install(AppDir, LibDir, Opts), !.
&ndash;% Oops!
-install_required(<em>, LibName, </em>):&ndash;</li>
<li>atomic_list_concat(</li>
<li> [&lsquo;Installation of library &rsquo;,LibName,&lsquo; failed.&rsquo;],</li>
<li> Msg</li>
<li>),

<h2>&ndash;  msg_warning(Msg).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% HELPERS %</h2>

<h2>&ndash;%! append_directories(+Dir1:atom, +Dir2:atom, -Dir3:atom) is det.</h2>

<p>-append_directories(Dir1, Dir2, Dir3):&ndash;</p></li>
<li>atomic_list_concat(Subdirs1, /, Dir1),</li>
<li>atomic_list_concat(Subdirs2, /, Dir2),</li>
<li>append(Subdirs1, Subdirs2, Subdirs3),

<h2>&ndash;  atomic_list_concat(Subdirs3, /, Dir3).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! clean_meta is det.</h2>

<p>-clean_meta:&ndash;</p></li>
<li>retractall(author/2),</li>
<li>retractall(download/1),</li>
<li>retractall(home/1),</li>
<li>retractall(maintainer/2),</li>
<li>retractall(name/1),</li>
<li>retractall(packager/2),</li>
<li>retractall(requires/1),</li>
<li>retractall(title/1),

<h2>&ndash;  retractall(version/1).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! show_help(+OptionSpecification:list(compound)) is det.</h2>

<p>-show_help(OptSpec):&ndash;</p></li>
<li>opt_help(OptSpec, Help),</li>
<li>format(user_output, &lsquo;~a\n&rsquo;, [Help]),

<h2>&ndash;  halt.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! load_meta(+File:atom) is det.</h2>

<p>-load_meta(File):&ndash;</p></li>
<li>clean_meta,

<h2>&ndash;  ensure_loaded(File).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! msg_success(+Message:atom) is det.</h2>

-msg_success(X):&ndash;

<h2>&ndash;    ansi_format([bold,fg(green)], &lsquo;~a~n&rsquo;, [X]).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! msg_warning(+Message:atom) is det.</h2>

<p>-msg_warning(X):&ndash;</p></li>
<li> ansi_format([bold,fg(red)], &lsquo;~a~n&rsquo;, [X]).</li>
</ul>


<p>```</p>

<h2 id="128"> 128: 正在比较变动前 63a5cd7 和变动后 ce95c3c </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 99d6059..1fd4a18 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -9,17 +9,18 @@
 /** <module> GraphViz attributes</p>

<p> @author Wouter Beek
&ndash;@version 2015/07-2015/08
+@version 2015/07-2015/08, 2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(deb_ext)).
+:&ndash; use_module(library(debug_ext)).
 :&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(dcg/dcg_call)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
 :&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(lists)).
+:&ndash; use_module(library(msg_ext)).
 :&ndash; use_module(library(os/file_ext)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).
@@ -35,15 +36,15 @@
 %! ) is nondet.</p>

<p> :&ndash; persistent(
&ndash;  gv_attr(
&ndash;    name:atom,
&ndash;    used_by:list(oneof([cluster,edge,graph,node,subgraph])),
&ndash;    types:list(atom),
&ndash;    default,
&ndash;    minimum,
&ndash;    notes:atom
&ndash;  )
&ndash;).
+     gv_attr(
+       name:atom,
+       used_by:list(oneof([cluster,edge,graph,node,subgraph])),
+       types:list(atom),
+       default,
+       minimum,
+       notes:atom
+     )
+   ).</p>

<p> :&ndash; initialization(gv_attrs_init).</p>

<p>@@ -122,8 +123,8 @@ assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;</p>

<p> gv_attrs_download:&ndash;
   verbose(
&ndash;    gv_attrs_download0
&ndash;    &ldquo;updating GraphViz attributes table&rdquo;,
+    gv_attrs_download0,
+    &ldquo;updating GraphViz attributes table&rdquo;
   ).</p>

<p> gv_attrs_download0:&ndash;
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 2c56713..fa79bea 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -13,16 +13,17 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2015/08
+@version 2015/08, 2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(deb_ext)).
+:&ndash; use_module(library(debug_ext)).
 :&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(lists)).
+:&ndash; use_module(library(msg_ext)).
 :&ndash; use_module(library(os/file_ext)).
 :&ndash; use_module(library(persistency)).
 :&ndash; use_module(library(xpath)).</p>

<p>```</p>

<h2 id="129"> 129: 正在比较变动前 ce95c3c 和变动后 44cd5a6 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index b0dbd69..5ab08a6 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -202,11 +202,14 @@ doubleList(L) &mdash;></p>

<p>&ndash;%! escString(+String:atom)// .
+%! escString(+String:or([atom,string]))// .
 % @tbd Support for context-dependent replacements.</p>

<p> escString(S1) &mdash;>
&ndash;  {atom_phrase(escape_double_quotes, S1, S2)},
+  {(  string(S1)
+  &ndash;>  string_phrase(escape_double_quotes, S1, S2)
+  ;   atom_phrase(escape_double_quotes, S1, S2)
+  )},
   quoted(atom(S2)).</p>

<p> escape_double_quotes, [92,34] &mdash;>
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 033d0b9..3aec4e6 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -26,7 +26,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07-2015/08
+@version 2015/07-2015/08, 2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -38,6 +38,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 :&ndash; use_module(library(dcg/dcg_quoted)).
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_html)).
+:&ndash; use_module(library(error)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(ordsets)).</p>

<p>@@ -82,8 +83,9 @@ gv_edge_statement(I, Dir, edge(From,To,Attrs)) &mdash;>
 % @arg Directed Whether an edge is directed (operator <code>-&gt;</code>) or
 %      undirected (operator <code>--</code>).</p>

<p>-gv_edge_operator(false) &mdash;> !, &ldquo;&mdash;&rdquo;.
-gv_edge_operator(true) &mdash;> &ldquo;&ndash;>&rdquo;.
+gv_edge_operator(Dir) &mdash;>
+  {must_be(boolean, Dir)},
+  ({Dir == false} &ndash;> &ldquo;&mdash;&rdquo; ; {Dir == true} &ndash;> &ldquo;&ndash;>&rdquo;).</p>

<p>@@ -113,9 +115,9 @@ gv_generic_attributes_statement(Kind, I, Attrs) &mdash;></p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(edge) &mdash;> &ldquo;edge&rdquo;.
-gv_kind(graph) &mdash;> &ldquo;graph&rdquo;.
-gv_kind(node) &mdash;> &ldquo;node&rdquo;.
+gv_kind(Kind) &mdash;>
+  {must_be(oneof([edge,graph,node]), Kind)},
+  atom(Kind).</p>

<p>@@ -142,8 +144,8 @@ gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
   % The rank attribute.
   {NewI is I + 1},
   indent(NewI),
&ndash;  gv_attr(subgraph, rank=same),
&ndash;  &ldquo;;\n&rdquo;,
+  gv_attr(subgraph, rank(same)),
+  &ldquo;\n&rdquo;,</p>

<p>   % Vertice statements.
   <em>(
@@ -170,10 +172,8 @@ gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
 gv_attrs(Kind, L) &mdash;>
   bracketed(square, </em>(gv_attr(Kind), L, [])).</p>

<p>&ndash;%! gv_attr(
&ndash;%!   +Context:oneof([edge,graph,node]),
&ndash;%!   +Attribute:nvpair
&ndash;%! )// is det.
+
+%! gv_attr(+Context:oneof([edge,graph,node]), +Attribute:compound)// is det.
 % A single GraphViz attribute.
 % We assume that the attribute has already been validated.</p>

<p>@@ -276,10 +276,12 @@ gv_keyword &mdash;> &ldquo;subgraph&rdquo;.
 %      inside GraphViz node identifiers.</p>

<p> gv_node_id(Id) &mdash;>
&ndash;  gv_id(Id).
+  gv_id(Id), !.
 %gv_node_id(<em>) &mdash;>
 %  gv_id(</em>),
 %  gv_port.
+gv_node_id(Id) &mdash;>
+  {type_error(gv_node_id, Id)}.</p>

<p>```</p>

<h2 id="130"> 130: 正在比较变动前 44cd5a6 和变动后 c0c5e18 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 507e8ad..b6d367b 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -1,9 +1,9 @@
 :&ndash; module(
   build_export_graph,
   [
&ndash;    build_export_graph/2, % +Graph:compound
+    build_export_graph/2, % +Graph</p>

<pre><code>                       % -ExportGraph:compound
</code></pre>

<ul>
<li> build_export_graph/3 % +Graph:compound</li>
<li> build_export_graph/3 % +Graph
                      % -ExportGraph:compound
                      % +Options:list(compound)
]
@@ -18,13 +18,13 @@ Support for building GIF representations.

<h2>Graph</h2></li>
</ul>


<p> <code>prolog
-graph(Vs:ordset(compound),Ranks,Es:compound,Attributes:list(nvpair))
+graph(Vs:ordset(compound),Ranks,Es:compound,Attributes:list(compound))
</code></p>

<p> ### Edge</p>

<p> <code>prolog
-edge(FromVertexId,ToVertexId,Attributes:list(nvpair))
+edge(FromVertexId,ToVertexId,Attributes:list(compound))
</code></p>

<p> ### Rank
@@ -36,7 +36,7 @@ rank(RankVertex:compound,ContentVertices:ordset(compound))
 ### Vertex</p>

<p> <code>prolog
-vertex(Id,Attributes:list(nvpair))
+vertex(Id,Attributes:list(compound))
</code></p>

<p> # Property functions
@@ -51,10 +51,12 @@ Vertex coordinates:</p>

<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/09
+@version 2015/07, 2015/09-2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(graph/s/s_graph)).
+:&ndash; use_module(library(lambda)).
 :&ndash; use_module(library(list_ext)).
 :&ndash; use_module(library(option_ext)).
 :&ndash; use_module(library(ordsets)).
@@ -112,34 +114,32 @@ is_meta(vertex_uri).</p>

<p>&ndash;%! build_export_graph(+Graph:compound, -ExportGraph:compound) is det.
+%! build_export_graph(+Graph, -ExportGraph:compound) is det.
+% Wrapper around build_export_graph/3.</p>

<p> build_export_graph(G, ExportG):&ndash;
   build_export_graph(G, ExportG, []).</p>

<p>+
 %! build_export_graph(
&ndash;%!   +Graph:compound,
+%!   +Graph,
 %!   -ExportGraph:compound,
 %!   +Options:list(compound)
 %! ) is det.
+% Graph is either:
+%   * a coumpound term <code>graph(Vs,Es)</code>, or
+%   * an unlabeled graph as defined by <code>library(ugraph)</code>.</p>

<p>-build_export_graph(graph(Vs,Es), graph(VTerms,ETerms,GAttrs), Opts1):&ndash;
+build_export_graph(G, graph(VTerms,ETerms,GAttrs), Opts1):&ndash;
+  graph_components(G, Vs, Es),</p>

<h2>   meta_options(is_meta, Opts1, Opts2),</h2>

<ul>
<li>% V terms.

<h2>&ndash;  maplist(vertex_term0(Vs, Opts2), Vs, VTerms),</h2></li>
<li>% Edge terms.

<h2>&ndash;  maplist(edge_term0(Vs, Opts2), Es, ETerms),</h2></li>
<li>% Graph attributes.</li>
<li>maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Opts2), Vs, VTerms),</li>
<li>maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Opts2), Es, ETerms),
graph_attributes(GAttrs, Opts2).</li>
</ul>


<p>-vertex_term0(Vs, Opts, V, VTerm):&ndash;</p>

<h2>&ndash;  vertex_term(Vs, V, VTerm, Opts).</h2>

<p>-edge_term0(Vs, Opts, E, ETerm):&ndash;
&ndash;  edge_term(Vs, E, ETerm, Opts).
+graph_components(graph(Vs,Es), Vs, Es):&ndash; !.
+graph_components(G, Vs, Es):&ndash;
+  s_graph_components(G, Vs, Es).</p>

<p>@@ -178,12 +178,9 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;
   % Id.
   (   option(edge_id(IdFunction), Opts)
   &ndash;>  call(IdFunction, E, FromId, ToId)
&ndash;  ;     (   E = edge(FromV,_,ToV)
&ndash;        &ndash;>  true
&ndash;        ;   E = edge(FromV,ToV)
&ndash;        ),
&ndash;        nth0chk(FromId, Vs, FromV),
&ndash;        nth0chk(ToId, Vs, ToV)
+  ;   edge_components(E, FromV, ToV),
+      nth0chk(FromId, Vs, FromV),
+      nth0chk(ToId, Vs, ToV)
   ),</p>

<p>   % Label.
@@ -215,7 +212,7 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;</p>

<p> %! graph_attributes(
&ndash;%!   -GraphAttributes:list(nvpair),
+%!   -GraphAttributes:list(compound),
 %!   +Options:list(compound)
 %! ) is det.
 % The following options are supported:
@@ -358,7 +355,15 @@ vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;</p>

<p> % HELPERS %</p>

<p>&ndash;%! merge_options(+FromOptions:list(nvpair), -ToOptions:list(nvpair)) is det.
+%! edge_components(+Edge:compound, -FromV, -ToV) is det.
+
+edge_components(edge(FromV,_,ToV), FromV, ToV):&ndash; !.
+edge_components(edge(FromV,ToV), FromV, ToV):&ndash; !.
+edge_components(FromV-ToV, FromV, ToV):&ndash; !.
+
+
+
+%! merge_options(+FromOptions:list(compound), -ToOptions:list(compound)) is det.</p>

<p> merge_options([], []).
 % Skip uninstantiated values.</p>

<p>```</p>

<h2 id="131"> 131: 正在比较变动前 c0c5e18 和变动后 603344f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
new file mode 100644
index 0000000..190b988
&mdash;&ndash; /dev/null
+++ b/data/gv_attrs_scrape.pl
@@ -0,0 +1,124 @@
+:&ndash; module(
+  gv_attrs_scrape,
+  [
+    gv_attrs_scrape/1 % +File:atom
+  ]
+).
+
+/<strong> <module> GraphViz: Scrape attributes
+
+Writes compound terms of the following form to file:
+
+<code>prolog
+gv_attr(
+  ?Name:atom,
+  ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
+  ?Types:list(atom),
+  ?Default,
+  ?Minimum,
+  ?Notes:atom
+) is nondet.
+</code>
+
+@author Wouter Beek
+@version 2015/10
+*/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/basics), except([string//1])).
+:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(gv/gv_attr_type)).
+:&ndash; use_module(library(http/http_download)).
+:&ndash; use_module(library(iostream)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(msg_ext)).
+:&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(xpath)).
+:&ndash; use_module(library(xpath/xpath_table)).
+
+
+
+
+
+%! gv_attrs_scrape(+File:atom) is det.
+
+gv_attrs_scrape(File):&ndash;
+  setup_call_cleanup(
+    open_any(File, write, Write, Close, []),
+    verbose(
+      gv_attrs_download(Write),
+      &ldquo;Updating the GraphViz attributes table.&rdquo;
+    ),
+    close_any(Close)
+  ).
+
+
+gv_attrs_download(Write):&ndash;
+  gv_attrs_iri(Iri),
+  html_download(Iri, Dom),
+  xpath_chk(Dom, //table(@align=lower_case(center)), TableDom),
+  xpath_table(TableDom, <em>, Rows),
+  maplist(write_attr_row(Write), Rows).
+
+
+write_attr_row(Write, [Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
+  atom_phrase(translate_usedby(UsedBy2), UsedBy1),
+  once(atom_phrase(translate_type(Types2), Types1)),
+  sort(UsedBy2, UsedBy3),
+  translate_default(Default1, Default2),
+  with_output_to(
+    Write,
+    write_fact(gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes))
+  ).
+
+gv_attrs_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).
+
+
+
+
+
+% HELPERS %
+
+%! translate_default(+Default1:atom, -Default2:atom) is det.
+
+% The empty string is represented by the empty atom.
+translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
+% The absence of a default value is represented by an uninstantiated variable.
+translate_default(&lsquo;<none>&rsquo;, </em>):&ndash; !.
+translate_default(Default, Default).
+
+
+
+%! translate_type(-Types:list(atom))// is det.
+
+translate_type([H|T]) &mdash;>
+  gv_attr_type(H),
+  whites,
+  translate_type(T).
+translate_type([H]) &mdash;>
+  gv_attr_type(H).
+translate_type([]) &mdash;> &ldquo;&rdquo;.
+
+
+
+%! translated_usedby(
+%!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))
+%! )// is det.
+
+translate_usedby([cluster|T]) &mdash;>
+  &ldquo;C&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([edge|T]) &mdash;>
+  &ldquo;E&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([graph|T]) &mdash;>
+  &ldquo;G&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([node|T]) &mdash;>
+  &ldquo;N&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([subgraph|T]) &mdash;>
+  &ldquo;S&rdquo;, !,
+  translate_usedby(T).
+translate_usedby([]) &mdash;>
+  &ldquo;&rdquo;.
diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
new file mode 100644
index 0000000..3ac5d44
&mdash;&ndash; /dev/null
+++ b/data/gv_color_scrape.pl
@@ -0,0 +1,56 @@
+:&ndash; module(
+  gv_color_scrape,
+  [
+    gv_color_scrape/1 % +File:atom
+  ]
+).
+
+/</strong> <module> GraphViz: Scrape colors
+
+@author Wouter Beek
+@version 2015/10
+<em>/
+
+:&ndash; use_module(library(apply)).
+:&ndash; use_module(library(http/http_download)).
+:&ndash; use_module(library(iostream)).
+:&ndash; use_module(library(lists)).
+:&ndash; use_module(library(msg_ext)).
+:&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(xpath)).
+:&ndash; use_module(library(xpath/xpath_table)).
+
+
+
+
+
+%! gv_color_scrape(+File:atom) is det.
+
+gv_color_scrape(File):&ndash;
+  setup_call_cleanup(
+    open_any(File, write, Write, Close, []),
+    verbose(
+      gv_color_download(Write),
+      &ldquo;Updating the GraphViz color table.&rdquo;
+    ),
+    close_any(Close)
+  ).
+
+
+gv_color_download(Write):&ndash;
+  gv_color_iri(Iri),
+  html_download(Iri, Dom),
+  xpath_chk(Dom, //table(1), TableDom1),
+  xpath_chk(Dom, //table(2), TableDom2),
+  maplist(write_color_table(Write), [x11,svg], [TableDom1,TableDom2]).
+
+
+write_color_table(Write, Colorscheme, TableDom):&ndash;
+  xpath_table(TableDom, <em>, Rows),
+  append(Rows, Cells),
+  forall(
+    member(Cell, Cells),
+    with_output_to(Write, write_fact(gv_color(Colorscheme, Cell)))
+  ).
+
+gv_color_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).
diff &mdash;git a/gv_attrs.log b/gv_attrs.log
deleted file mode 100644
index a9c6010..0000000
&mdash;&ndash; a/gv_attrs.log
+++ /dev/null
@@ -1,169 +0,0 @@
-assert(gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;)).
-assert(gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(&lsquo;<em>background&rsquo;,[graph],[string],</em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;)).
-assert(gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(bgcolor,[cluster,graph],[color,colorList],_,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)</em>sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;)).
-assert(gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
-assert(gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
-assert(gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
-assert(gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgetarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
-assert(gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headtarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(inputscale,[graph],[double],<em>,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labeltarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;)).
-assert(gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(&lsquo;nslimit nslimit1&rsquo;,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;)).
-assert(gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;)).
-assert(gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;)).
-assert(gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
-assert(gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;)).
-assert(gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
-assert(gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailtarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;)).
-assert(gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;)).
-assert(gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;)).
diff &mdash;git a/gv_color.log b/gv_color.log
deleted file mode 100644
index 23d6cdf..0000000
&mdash;&ndash; a/gv_color.log
+++ /dev/null
@@ -1,802 +0,0 @@
-assert(gv_color(x11,aliceblue)).
-assert(gv_color(x11,antiquewhite)).
-assert(gv_color(x11,antiquewhite1)).
-assert(gv_color(x11,antiquewhite2)).
-assert(gv_color(x11,antiquewhite3)).
-assert(gv_color(x11,antiquewhite4)).
-assert(gv_color(x11,aquamarine)).
-assert(gv_color(x11,aquamarine1)).
-assert(gv_color(x11,aquamarine2)).
-assert(gv_color(x11,aquamarine3)).
-assert(gv_color(x11,aquamarine4)).
-assert(gv_color(x11,azure)).
-assert(gv_color(x11,azure1)).
-assert(gv_color(x11,azure2)).
-assert(gv_color(x11,azure3)).
-assert(gv_color(x11,azure4)).
-assert(gv_color(x11,beige)).
-assert(gv_color(x11,bisque)).
-assert(gv_color(x11,bisque1)).
-assert(gv_color(x11,bisque2)).
-assert(gv_color(x11,bisque3)).
-assert(gv_color(x11,bisque4)).
-assert(gv_color(x11,black)).
-assert(gv_color(x11,blanchedalmond)).
-assert(gv_color(x11,blue)).
-assert(gv_color(x11,blue1)).
-assert(gv_color(x11,blue2)).
-assert(gv_color(x11,blue3)).
-assert(gv_color(x11,blue4)).
-assert(gv_color(x11,blueviolet)).
-assert(gv_color(x11,brown)).
-assert(gv_color(x11,brown1)).
-assert(gv_color(x11,brown2)).
-assert(gv_color(x11,brown3)).
-assert(gv_color(x11,brown4)).
-assert(gv_color(x11,burlywood)).
-assert(gv_color(x11,burlywood1)).
-assert(gv_color(x11,burlywood2)).
-assert(gv_color(x11,burlywood3)).
-assert(gv_color(x11,burlywood4)).
-assert(gv_color(x11,cadetblue)).
-assert(gv_color(x11,cadetblue1)).
-assert(gv_color(x11,cadetblue2)).
-assert(gv_color(x11,cadetblue3)).
-assert(gv_color(x11,cadetblue4)).
-assert(gv_color(x11,chartreuse)).
-assert(gv_color(x11,chartreuse1)).
-assert(gv_color(x11,chartreuse2)).
-assert(gv_color(x11,chartreuse3)).
-assert(gv_color(x11,chartreuse4)).
-assert(gv_color(x11,chocolate)).
-assert(gv_color(x11,chocolate1)).
-assert(gv_color(x11,chocolate2)).
-assert(gv_color(x11,chocolate3)).
-assert(gv_color(x11,chocolate4)).
-assert(gv_color(x11,coral)).
-assert(gv_color(x11,coral1)).
-assert(gv_color(x11,coral2)).
-assert(gv_color(x11,coral3)).
-assert(gv_color(x11,coral4)).
-assert(gv_color(x11,cornflowerblue)).
-assert(gv_color(x11,cornsilk)).
-assert(gv_color(x11,cornsilk1)).
-assert(gv_color(x11,cornsilk2)).
-assert(gv_color(x11,cornsilk3)).
-assert(gv_color(x11,cornsilk4)).
-assert(gv_color(x11,crimson)).
-assert(gv_color(x11,cyan)).
-assert(gv_color(x11,cyan1)).
-assert(gv_color(x11,cyan2)).
-assert(gv_color(x11,cyan3)).
-assert(gv_color(x11,cyan4)).
-assert(gv_color(x11,darkgoldenrod)).
-assert(gv_color(x11,darkgoldenrod1)).
-assert(gv_color(x11,darkgoldenrod2)).
-assert(gv_color(x11,darkgoldenrod3)).
-assert(gv_color(x11,darkgoldenrod4)).
-assert(gv_color(x11,darkgreen)).
-assert(gv_color(x11,darkkhaki)).
-assert(gv_color(x11,darkolivegreen)).
-assert(gv_color(x11,darkolivegreen1)).
-assert(gv_color(x11,darkolivegreen2)).
-assert(gv_color(x11,darkolivegreen3)).
-assert(gv_color(x11,darkolivegreen4)).
-assert(gv_color(x11,darkorange)).
-assert(gv_color(x11,darkorange1)).
-assert(gv_color(x11,darkorange2)).
-assert(gv_color(x11,darkorange3)).
-assert(gv_color(x11,darkorange4)).
-assert(gv_color(x11,darkorchid)).
-assert(gv_color(x11,darkorchid1)).
-assert(gv_color(x11,darkorchid2)).
-assert(gv_color(x11,darkorchid3)).
-assert(gv_color(x11,darkorchid4)).
-assert(gv_color(x11,darksalmon)).
-assert(gv_color(x11,darkseagreen)).
-assert(gv_color(x11,darkseagreen1)).
-assert(gv_color(x11,darkseagreen2)).
-assert(gv_color(x11,darkseagreen3)).
-assert(gv_color(x11,darkseagreen4)).
-assert(gv_color(x11,darkslateblue)).
-assert(gv_color(x11,darkslategray)).
-assert(gv_color(x11,darkslategray1)).
-assert(gv_color(x11,darkslategray2)).
-assert(gv_color(x11,darkslategray3)).
-assert(gv_color(x11,darkslategray4)).
-assert(gv_color(x11,darkslategrey)).
-assert(gv_color(x11,darkturquoise)).
-assert(gv_color(x11,darkviolet)).
-assert(gv_color(x11,deeppink)).
-assert(gv_color(x11,deeppink1)).
-assert(gv_color(x11,deeppink2)).
-assert(gv_color(x11,deeppink3)).
-assert(gv_color(x11,deeppink4)).
-assert(gv_color(x11,deepskyblue)).
-assert(gv_color(x11,deepskyblue1)).
-assert(gv_color(x11,deepskyblue2)).
-assert(gv_color(x11,deepskyblue3)).
-assert(gv_color(x11,deepskyblue4)).
-assert(gv_color(x11,dimgray)).
-assert(gv_color(x11,dimgrey)).
-assert(gv_color(x11,dodgerblue)).
-assert(gv_color(x11,dodgerblue1)).
-assert(gv_color(x11,dodgerblue2)).
-assert(gv_color(x11,dodgerblue3)).
-assert(gv_color(x11,dodgerblue4)).
-assert(gv_color(x11,firebrick)).
-assert(gv_color(x11,firebrick1)).
-assert(gv_color(x11,firebrick2)).
-assert(gv_color(x11,firebrick3)).
-assert(gv_color(x11,firebrick4)).
-assert(gv_color(x11,floralwhite)).
-assert(gv_color(x11,forestgreen)).
-assert(gv_color(x11,gainsboro)).
-assert(gv_color(x11,ghostwhite)).
-assert(gv_color(x11,gold)).
-assert(gv_color(x11,gold1)).
-assert(gv_color(x11,gold2)).
-assert(gv_color(x11,gold3)).
-assert(gv_color(x11,gold4)).
-assert(gv_color(x11,goldenrod)).
-assert(gv_color(x11,goldenrod1)).
-assert(gv_color(x11,goldenrod2)).
-assert(gv_color(x11,goldenrod3)).
-assert(gv_color(x11,goldenrod4)).
-assert(gv_color(x11,gray)).
-assert(gv_color(x11,gray0)).
-assert(gv_color(x11,gray1)).
-assert(gv_color(x11,gray10)).
-assert(gv_color(x11,gray100)).
-assert(gv_color(x11,gray11)).
-assert(gv_color(x11,gray12)).
-assert(gv_color(x11,gray13)).
-assert(gv_color(x11,gray14)).
-assert(gv_color(x11,gray15)).
-assert(gv_color(x11,gray16)).
-assert(gv_color(x11,gray17)).
-assert(gv_color(x11,gray18)).
-assert(gv_color(x11,gray19)).
-assert(gv_color(x11,gray2)).
-assert(gv_color(x11,gray20)).
-assert(gv_color(x11,gray21)).
-assert(gv_color(x11,gray22)).
-assert(gv_color(x11,gray23)).
-assert(gv_color(x11,gray24)).
-assert(gv_color(x11,gray25)).
-assert(gv_color(x11,gray26)).
-assert(gv_color(x11,gray27)).
-assert(gv_color(x11,gray28)).
-assert(gv_color(x11,gray29)).
-assert(gv_color(x11,gray3)).
-assert(gv_color(x11,gray30)).
-assert(gv_color(x11,gray31)).
-assert(gv_color(x11,gray32)).
-assert(gv_color(x11,gray33)).
-assert(gv_color(x11,gray34)).
-assert(gv_color(x11,gray35)).
-assert(gv_color(x11,gray36)).
-assert(gv_color(x11,gray37)).
-assert(gv_color(x11,gray38)).
-assert(gv_color(x11,gray39)).
-assert(gv_color(x11,gray4)).
-assert(gv_color(x11,gray40)).
-assert(gv_color(x11,gray41)).
-assert(gv_color(x11,gray42)).
-assert(gv_color(x11,gray43)).
-assert(gv_color(x11,gray44)).
-assert(gv_color(x11,gray45)).
-assert(gv_color(x11,gray46)).
-assert(gv_color(x11,gray47)).
-assert(gv_color(x11,gray48)).
-assert(gv_color(x11,gray49)).
-assert(gv_color(x11,gray5)).
-assert(gv_color(x11,gray50)).
-assert(gv_color(x11,gray51)).
-assert(gv_color(x11,gray52)).
-assert(gv_color(x11,gray53)).
-assert(gv_color(x11,gray54)).
-assert(gv_color(x11,gray55)).
-assert(gv_color(x11,gray56)).
-assert(gv_color(x11,gray57)).
-assert(gv_color(x11,gray58)).
-assert(gv_color(x11,gray59)).
-assert(gv_color(x11,gray6)).
-assert(gv_color(x11,gray60)).
-assert(gv_color(x11,gray61)).
-assert(gv_color(x11,gray62)).
-assert(gv_color(x11,gray63)).
-assert(gv_color(x11,gray64)).
-assert(gv_color(x11,gray65)).
-assert(gv_color(x11,gray66)).
-assert(gv_color(x11,gray67)).
-assert(gv_color(x11,gray68)).
-assert(gv_color(x11,gray69)).
-assert(gv_color(x11,gray7)).
-assert(gv_color(x11,gray70)).
-assert(gv_color(x11,gray71)).
-assert(gv_color(x11,gray72)).
-assert(gv_color(x11,gray73)).
-assert(gv_color(x11,gray74)).
-assert(gv_color(x11,gray75)).
-assert(gv_color(x11,gray76)).
-assert(gv_color(x11,gray77)).
-assert(gv_color(x11,gray78)).
-assert(gv_color(x11,gray79)).
-assert(gv_color(x11,gray8)).
-assert(gv_color(x11,gray80)).
-assert(gv_color(x11,gray81)).
-assert(gv_color(x11,gray82)).
-assert(gv_color(x11,gray83)).
-assert(gv_color(x11,gray84)).
-assert(gv_color(x11,gray85)).
-assert(gv_color(x11,gray86)).
-assert(gv_color(x11,gray87)).
-assert(gv_color(x11,gray88)).
-assert(gv_color(x11,gray89)).
-assert(gv_color(x11,gray9)).
-assert(gv_color(x11,gray90)).
-assert(gv_color(x11,gray91)).
-assert(gv_color(x11,gray92)).
-assert(gv_color(x11,gray93)).
-assert(gv_color(x11,gray94)).
-assert(gv_color(x11,gray95)).
-assert(gv_color(x11,gray96)).
-assert(gv_color(x11,gray97)).
-assert(gv_color(x11,gray98)).
-assert(gv_color(x11,gray99)).
-assert(gv_color(x11,green)).
-assert(gv_color(x11,green1)).
-assert(gv_color(x11,green2)).
-assert(gv_color(x11,green3)).
-assert(gv_color(x11,green4)).
-assert(gv_color(x11,greenyellow)).
-assert(gv_color(x11,grey)).
-assert(gv_color(x11,grey0)).
-assert(gv_color(x11,grey1)).
-assert(gv_color(x11,grey10)).
-assert(gv_color(x11,grey100)).
-assert(gv_color(x11,grey11)).
-assert(gv_color(x11,grey12)).
-assert(gv_color(x11,grey13)).
-assert(gv_color(x11,grey14)).
-assert(gv_color(x11,grey15)).
-assert(gv_color(x11,grey16)).
-assert(gv_color(x11,grey17)).
-assert(gv_color(x11,grey18)).
-assert(gv_color(x11,grey19)).
-assert(gv_color(x11,grey2)).
-assert(gv_color(x11,grey20)).
-assert(gv_color(x11,grey21)).
-assert(gv_color(x11,grey22)).
-assert(gv_color(x11,grey23)).
-assert(gv_color(x11,grey24)).
-assert(gv_color(x11,grey25)).
-assert(gv_color(x11,grey26)).
-assert(gv_color(x11,grey27)).
-assert(gv_color(x11,grey28)).
-assert(gv_color(x11,grey29)).
-assert(gv_color(x11,grey3)).
-assert(gv_color(x11,grey30)).
-assert(gv_color(x11,grey31)).
-assert(gv_color(x11,grey32)).
-assert(gv_color(x11,grey33)).
-assert(gv_color(x11,grey34)).
-assert(gv_color(x11,grey35)).
-assert(gv_color(x11,grey36)).
-assert(gv_color(x11,grey37)).
-assert(gv_color(x11,grey38)).
-assert(gv_color(x11,grey39)).
-assert(gv_color(x11,grey4)).
-assert(gv_color(x11,grey40)).
-assert(gv_color(x11,grey41)).
-assert(gv_color(x11,grey42)).
-assert(gv_color(x11,grey43)).
-assert(gv_color(x11,grey44)).
-assert(gv_color(x11,grey45)).
-assert(gv_color(x11,grey46)).
-assert(gv_color(x11,grey47)).
-assert(gv_color(x11,grey48)).
-assert(gv_color(x11,grey49)).
-assert(gv_color(x11,grey5)).
-assert(gv_color(x11,grey50)).
-assert(gv_color(x11,grey51)).
-assert(gv_color(x11,grey52)).
-assert(gv_color(x11,grey53)).
-assert(gv_color(x11,grey54)).
-assert(gv_color(x11,grey55)).
-assert(gv_color(x11,grey56)).
-assert(gv_color(x11,grey57)).
-assert(gv_color(x11,grey58)).
-assert(gv_color(x11,grey59)).
-assert(gv_color(x11,grey6)).
-assert(gv_color(x11,grey60)).
-assert(gv_color(x11,grey61)).
-assert(gv_color(x11,grey62)).
-assert(gv_color(x11,grey63)).
-assert(gv_color(x11,grey64)).
-assert(gv_color(x11,grey65)).
-assert(gv_color(x11,grey66)).
-assert(gv_color(x11,grey67)).
-assert(gv_color(x11,grey68)).
-assert(gv_color(x11,grey69)).
-assert(gv_color(x11,grey7)).
-assert(gv_color(x11,grey70)).
-assert(gv_color(x11,grey71)).
-assert(gv_color(x11,grey72)).
-assert(gv_color(x11,grey73)).
-assert(gv_color(x11,grey74)).
-assert(gv_color(x11,grey75)).
-assert(gv_color(x11,grey76)).
-assert(gv_color(x11,grey77)).
-assert(gv_color(x11,grey78)).
-assert(gv_color(x11,grey79)).
-assert(gv_color(x11,grey8)).
-assert(gv_color(x11,grey80)).
-assert(gv_color(x11,grey81)).
-assert(gv_color(x11,grey82)).
-assert(gv_color(x11,grey83)).
-assert(gv_color(x11,grey84)).
-assert(gv_color(x11,grey85)).
-assert(gv_color(x11,grey86)).
-assert(gv_color(x11,grey87)).
-assert(gv_color(x11,grey88)).
-assert(gv_color(x11,grey89)).
-assert(gv_color(x11,grey9)).
-assert(gv_color(x11,grey90)).
-assert(gv_color(x11,grey91)).
-assert(gv_color(x11,grey92)).
-assert(gv_color(x11,grey93)).
-assert(gv_color(x11,grey94)).
-assert(gv_color(x11,grey95)).
-assert(gv_color(x11,grey96)).
-assert(gv_color(x11,grey97)).
-assert(gv_color(x11,grey98)).
-assert(gv_color(x11,grey99)).
-assert(gv_color(x11,honeydew)).
-assert(gv_color(x11,honeydew1)).
-assert(gv_color(x11,honeydew2)).
-assert(gv_color(x11,honeydew3)).
-assert(gv_color(x11,honeydew4)).
-assert(gv_color(x11,hotpink)).
-assert(gv_color(x11,hotpink1)).
-assert(gv_color(x11,hotpink2)).
-assert(gv_color(x11,hotpink3)).
-assert(gv_color(x11,hotpink4)).
-assert(gv_color(x11,indianred)).
-assert(gv_color(x11,indianred1)).
-assert(gv_color(x11,indianred2)).
-assert(gv_color(x11,indianred3)).
-assert(gv_color(x11,indianred4)).
-assert(gv_color(x11,indigo)).
-assert(gv_color(x11,invis)).
-assert(gv_color(x11,ivory)).
-assert(gv_color(x11,ivory1)).
-assert(gv_color(x11,ivory2)).
-assert(gv_color(x11,ivory3)).
-assert(gv_color(x11,ivory4)).
-assert(gv_color(x11,khaki)).
-assert(gv_color(x11,khaki1)).
-assert(gv_color(x11,khaki2)).
-assert(gv_color(x11,khaki3)).
-assert(gv_color(x11,khaki4)).
-assert(gv_color(x11,lavender)).
-assert(gv_color(x11,lavenderblush)).
-assert(gv_color(x11,lavenderblush1)).
-assert(gv_color(x11,lavenderblush2)).
-assert(gv_color(x11,lavenderblush3)).
-assert(gv_color(x11,lavenderblush4)).
-assert(gv_color(x11,lawngreen)).
-assert(gv_color(x11,lemonchiffon)).
-assert(gv_color(x11,lemonchiffon1)).
-assert(gv_color(x11,lemonchiffon2)).
-assert(gv_color(x11,lemonchiffon3)).
-assert(gv_color(x11,lemonchiffon4)).
-assert(gv_color(x11,lightblue)).
-assert(gv_color(x11,lightblue1)).
-assert(gv_color(x11,lightblue2)).
-assert(gv_color(x11,lightblue3)).
-assert(gv_color(x11,lightblue4)).
-assert(gv_color(x11,lightcoral)).
-assert(gv_color(x11,lightcyan)).
-assert(gv_color(x11,lightcyan1)).
-assert(gv_color(x11,lightcyan2)).
-assert(gv_color(x11,lightcyan3)).
-assert(gv_color(x11,lightcyan4)).
-assert(gv_color(x11,lightgoldenrod)).
-assert(gv_color(x11,lightgoldenrod1)).
-assert(gv_color(x11,lightgoldenrod2)).
-assert(gv_color(x11,lightgoldenrod3)).
-assert(gv_color(x11,lightgoldenrod4)).
-assert(gv_color(x11,lightgoldenrodyellow)).
-assert(gv_color(x11,lightgray)).
-assert(gv_color(x11,lightgrey)).
-assert(gv_color(x11,lightpink)).
-assert(gv_color(x11,lightpink1)).
-assert(gv_color(x11,lightpink2)).
-assert(gv_color(x11,lightpink3)).
-assert(gv_color(x11,lightpink4)).
-assert(gv_color(x11,lightsalmon)).
-assert(gv_color(x11,lightsalmon1)).
-assert(gv_color(x11,lightsalmon2)).
-assert(gv_color(x11,lightsalmon3)).
-assert(gv_color(x11,lightsalmon4)).
-assert(gv_color(x11,lightseagreen)).
-assert(gv_color(x11,lightskyblue)).
-assert(gv_color(x11,lightskyblue1)).
-assert(gv_color(x11,lightskyblue2)).
-assert(gv_color(x11,lightskyblue3)).
-assert(gv_color(x11,lightskyblue4)).
-assert(gv_color(x11,lightslateblue)).
-assert(gv_color(x11,lightslategray)).
-assert(gv_color(x11,lightslategrey)).
-assert(gv_color(x11,lightsteelblue)).
-assert(gv_color(x11,lightsteelblue1)).
-assert(gv_color(x11,lightsteelblue2)).
-assert(gv_color(x11,lightsteelblue3)).
-assert(gv_color(x11,lightsteelblue4)).
-assert(gv_color(x11,lightyellow)).
-assert(gv_color(x11,lightyellow1)).
-assert(gv_color(x11,lightyellow2)).
-assert(gv_color(x11,lightyellow3)).
-assert(gv_color(x11,lightyellow4)).
-assert(gv_color(x11,limegreen)).
-assert(gv_color(x11,linen)).
-assert(gv_color(x11,magenta)).
-assert(gv_color(x11,magenta1)).
-assert(gv_color(x11,magenta2)).
-assert(gv_color(x11,magenta3)).
-assert(gv_color(x11,magenta4)).
-assert(gv_color(x11,maroon)).
-assert(gv_color(x11,maroon1)).
-assert(gv_color(x11,maroon2)).
-assert(gv_color(x11,maroon3)).
-assert(gv_color(x11,maroon4)).
-assert(gv_color(x11,mediumaquamarine)).
-assert(gv_color(x11,mediumblue)).
-assert(gv_color(x11,mediumorchid)).
-assert(gv_color(x11,mediumorchid1)).
-assert(gv_color(x11,mediumorchid2)).
-assert(gv_color(x11,mediumorchid3)).
-assert(gv_color(x11,mediumorchid4)).
-assert(gv_color(x11,mediumpurple)).
-assert(gv_color(x11,mediumpurple1)).
-assert(gv_color(x11,mediumpurple2)).
-assert(gv_color(x11,mediumpurple3)).
-assert(gv_color(x11,mediumpurple4)).
-assert(gv_color(x11,mediumseagreen)).
-assert(gv_color(x11,mediumslateblue)).
-assert(gv_color(x11,mediumspringgreen)).
-assert(gv_color(x11,mediumturquoise)).
-assert(gv_color(x11,mediumvioletred)).
-assert(gv_color(x11,midnightblue)).
-assert(gv_color(x11,mintcream)).
-assert(gv_color(x11,mistyrose)).
-assert(gv_color(x11,mistyrose1)).
-assert(gv_color(x11,mistyrose2)).
-assert(gv_color(x11,mistyrose3)).
-assert(gv_color(x11,mistyrose4)).
-assert(gv_color(x11,moccasin)).
-assert(gv_color(x11,navajowhite)).
-assert(gv_color(x11,navajowhite1)).
-assert(gv_color(x11,navajowhite2)).
-assert(gv_color(x11,navajowhite3)).
-assert(gv_color(x11,navajowhite4)).
-assert(gv_color(x11,navy)).
-assert(gv_color(x11,navyblue)).
-assert(gv_color(x11,none)).
-assert(gv_color(x11,oldlace)).
-assert(gv_color(x11,olivedrab)).
-assert(gv_color(x11,olivedrab1)).
-assert(gv_color(x11,olivedrab2)).
-assert(gv_color(x11,olivedrab3)).
-assert(gv_color(x11,olivedrab4)).
-assert(gv_color(x11,orange)).
-assert(gv_color(x11,orange1)).
-assert(gv_color(x11,orange2)).
-assert(gv_color(x11,orange3)).
-assert(gv_color(x11,orange4)).
-assert(gv_color(x11,orangered)).
-assert(gv_color(x11,orangered1)).
-assert(gv_color(x11,orangered2)).
-assert(gv_color(x11,orangered3)).
-assert(gv_color(x11,orangered4)).
-assert(gv_color(x11,orchid)).
-assert(gv_color(x11,orchid1)).
-assert(gv_color(x11,orchid2)).
-assert(gv_color(x11,orchid3)).
-assert(gv_color(x11,orchid4)).
-assert(gv_color(x11,palegoldenrod)).
-assert(gv_color(x11,palegreen)).
-assert(gv_color(x11,palegreen1)).
-assert(gv_color(x11,palegreen2)).
-assert(gv_color(x11,palegreen3)).
-assert(gv_color(x11,palegreen4)).
-assert(gv_color(x11,paleturquoise)).
-assert(gv_color(x11,paleturquoise1)).
-assert(gv_color(x11,paleturquoise2)).
-assert(gv_color(x11,paleturquoise3)).
-assert(gv_color(x11,paleturquoise4)).
-assert(gv_color(x11,palevioletred)).
-assert(gv_color(x11,palevioletred1)).
-assert(gv_color(x11,palevioletred2)).
-assert(gv_color(x11,palevioletred3)).
-assert(gv_color(x11,palevioletred4)).
-assert(gv_color(x11,papayawhip)).
-assert(gv_color(x11,peachpuff)).
-assert(gv_color(x11,peachpuff1)).
-assert(gv_color(x11,peachpuff2)).
-assert(gv_color(x11,peachpuff3)).
-assert(gv_color(x11,peachpuff4)).
-assert(gv_color(x11,peru)).
-assert(gv_color(x11,pink)).
-assert(gv_color(x11,pink1)).
-assert(gv_color(x11,pink2)).
-assert(gv_color(x11,pink3)).
-assert(gv_color(x11,pink4)).
-assert(gv_color(x11,plum)).
-assert(gv_color(x11,plum1)).
-assert(gv_color(x11,plum2)).
-assert(gv_color(x11,plum3)).
-assert(gv_color(x11,plum4)).
-assert(gv_color(x11,powderblue)).
-assert(gv_color(x11,purple)).
-assert(gv_color(x11,purple1)).
-assert(gv_color(x11,purple2)).
-assert(gv_color(x11,purple3)).
-assert(gv_color(x11,purple4)).
-assert(gv_color(x11,red)).
-assert(gv_color(x11,red1)).
-assert(gv_color(x11,red2)).
-assert(gv_color(x11,red3)).
-assert(gv_color(x11,red4)).
-assert(gv_color(x11,rosybrown)).
-assert(gv_color(x11,rosybrown1)).
-assert(gv_color(x11,rosybrown2)).
-assert(gv_color(x11,rosybrown3)).
-assert(gv_color(x11,rosybrown4)).
-assert(gv_color(x11,royalblue)).
-assert(gv_color(x11,royalblue1)).
-assert(gv_color(x11,royalblue2)).
-assert(gv_color(x11,royalblue3)).
-assert(gv_color(x11,royalblue4)).
-assert(gv_color(x11,saddlebrown)).
-assert(gv_color(x11,salmon)).
-assert(gv_color(x11,salmon1)).
-assert(gv_color(x11,salmon2)).
-assert(gv_color(x11,salmon3)).
-assert(gv_color(x11,salmon4)).
-assert(gv_color(x11,sandybrown)).
-assert(gv_color(x11,seagreen)).
-assert(gv_color(x11,seagreen1)).
-assert(gv_color(x11,seagreen2)).
-assert(gv_color(x11,seagreen3)).
-assert(gv_color(x11,seagreen4)).
-assert(gv_color(x11,seashell)).
-assert(gv_color(x11,seashell1)).
-assert(gv_color(x11,seashell2)).
-assert(gv_color(x11,seashell3)).
-assert(gv_color(x11,seashell4)).
-assert(gv_color(x11,sienna)).
-assert(gv_color(x11,sienna1)).
-assert(gv_color(x11,sienna2)).
-assert(gv_color(x11,sienna3)).
-assert(gv_color(x11,sienna4)).
-assert(gv_color(x11,skyblue)).
-assert(gv_color(x11,skyblue1)).
-assert(gv_color(x11,skyblue2)).
-assert(gv_color(x11,skyblue3)).
-assert(gv_color(x11,skyblue4)).
-assert(gv_color(x11,slateblue)).
-assert(gv_color(x11,slateblue1)).
-assert(gv_color(x11,slateblue2)).
-assert(gv_color(x11,slateblue3)).
-assert(gv_color(x11,slateblue4)).
-assert(gv_color(x11,slategray)).
-assert(gv_color(x11,slategray1)).
-assert(gv_color(x11,slategray2)).
-assert(gv_color(x11,slategray3)).
-assert(gv_color(x11,slategray4)).
-assert(gv_color(x11,slategrey)).
-assert(gv_color(x11,snow)).
-assert(gv_color(x11,snow1)).
-assert(gv_color(x11,snow2)).
-assert(gv_color(x11,snow3)).
-assert(gv_color(x11,snow4)).
-assert(gv_color(x11,springgreen)).
-assert(gv_color(x11,springgreen1)).
-assert(gv_color(x11,springgreen2)).
-assert(gv_color(x11,springgreen3)).
-assert(gv_color(x11,springgreen4)).
-assert(gv_color(x11,steelblue)).
-assert(gv_color(x11,steelblue1)).
-assert(gv_color(x11,steelblue2)).
-assert(gv_color(x11,steelblue3)).
-assert(gv_color(x11,steelblue4)).
-assert(gv_color(x11,tan)).
-assert(gv_color(x11,tan1)).
-assert(gv_color(x11,tan2)).
-assert(gv_color(x11,tan3)).
-assert(gv_color(x11,tan4)).
-assert(gv_color(x11,thistle)).
-assert(gv_color(x11,thistle1)).
-assert(gv_color(x11,thistle2)).
-assert(gv_color(x11,thistle3)).
-assert(gv_color(x11,thistle4)).
-assert(gv_color(x11,tomato)).
-assert(gv_color(x11,tomato1)).
-assert(gv_color(x11,tomato2)).
-assert(gv_color(x11,tomato3)).
-assert(gv_color(x11,tomato4)).
-assert(gv_color(x11,transparent)).
-assert(gv_color(x11,turquoise)).
-assert(gv_color(x11,turquoise1)).
-assert(gv_color(x11,turquoise2)).
-assert(gv_color(x11,turquoise3)).
-assert(gv_color(x11,turquoise4)).
-assert(gv_color(x11,violet)).
-assert(gv_color(x11,violetred)).
-assert(gv_color(x11,violetred1)).
-assert(gv_color(x11,violetred2)).
-assert(gv_color(x11,violetred3)).
-assert(gv_color(x11,violetred4)).
-assert(gv_color(x11,wheat)).
-assert(gv_color(x11,wheat1)).
-assert(gv_color(x11,wheat2)).
-assert(gv_color(x11,wheat3)).
-assert(gv_color(x11,wheat4)).
-assert(gv_color(x11,white)).
-assert(gv_color(x11,whitesmoke)).
-assert(gv_color(x11,yellow)).
-assert(gv_color(x11,yellow1)).
-assert(gv_color(x11,yellow2)).
-assert(gv_color(x11,yellow3)).
-assert(gv_color(x11,yellow4)).
-assert(gv_color(x11,yellowgreen)).
-assert(gv_color(svg,aliceblue)).
-assert(gv_color(svg,antiquewhite)).
-assert(gv_color(svg,aqua)).
-assert(gv_color(svg,aquamarine)).
-assert(gv_color(svg,azure)).
-assert(gv_color(svg,beige)).
-assert(gv_color(svg,bisque)).
-assert(gv_color(svg,black)).
-assert(gv_color(svg,blanchedalmond)).
-assert(gv_color(svg,blue)).
-assert(gv_color(svg,blueviolet)).
-assert(gv_color(svg,brown)).
-assert(gv_color(svg,burlywood)).
-assert(gv_color(svg,cadetblue)).
-assert(gv_color(svg,chartreuse)).
-assert(gv_color(svg,chocolate)).
-assert(gv_color(svg,coral)).
-assert(gv_color(svg,cornflowerblue)).
-assert(gv_color(svg,cornsilk)).
-assert(gv_color(svg,crimson)).
-assert(gv_color(svg,cyan)).
-assert(gv_color(svg,darkblue)).
-assert(gv_color(svg,darkcyan)).
-assert(gv_color(svg,darkgoldenrod)).
-assert(gv_color(svg,darkgray)).
-assert(gv_color(svg,darkgreen)).
-assert(gv_color(svg,darkgrey)).
-assert(gv_color(svg,darkkhaki)).
-assert(gv_color(svg,darkmagenta)).
-assert(gv_color(svg,darkolivegreen)).
-assert(gv_color(svg,darkorange)).
-assert(gv_color(svg,darkorchid)).
-assert(gv_color(svg,darkred)).
-assert(gv_color(svg,darksalmon)).
-assert(gv_color(svg,darkseagreen)).
-assert(gv_color(svg,darkslateblue)).
-assert(gv_color(svg,darkslategray)).
-assert(gv_color(svg,darkslategrey)).
-assert(gv_color(svg,darkturquoise)).
-assert(gv_color(svg,darkviolet)).
-assert(gv_color(svg,deeppink)).
-assert(gv_color(svg,deepskyblue)).
-assert(gv_color(svg,dimgray)).
-assert(gv_color(svg,dimgrey)).
-assert(gv_color(svg,dodgerblue)).
-assert(gv_color(svg,firebrick)).
-assert(gv_color(svg,floralwhite)).
-assert(gv_color(svg,forestgreen)).
-assert(gv_color(svg,fuchsia)).
-assert(gv_color(svg,gainsboro)).
-assert(gv_color(svg,ghostwhite)).
-assert(gv_color(svg,gold)).
-assert(gv_color(svg,goldenrod)).
-assert(gv_color(svg,gray)).
-assert(gv_color(svg,grey)).
-assert(gv_color(svg,green)).
-assert(gv_color(svg,greenyellow)).
-assert(gv_color(svg,honeydew)).
-assert(gv_color(svg,hotpink)).
-assert(gv_color(svg,indianred)).
-assert(gv_color(svg,indigo)).
-assert(gv_color(svg,ivory)).
-assert(gv_color(svg,khaki)).
-assert(gv_color(svg,lavender)).
-assert(gv_color(svg,lavenderblush)).
-assert(gv_color(svg,lawngreen)).
-assert(gv_color(svg,lemonchiffon)).
-assert(gv_color(svg,lightblue)).
-assert(gv_color(svg,lightcoral)).
-assert(gv_color(svg,lightcyan)).
-assert(gv_color(svg,lightgoldenrodyellow)).
-assert(gv_color(svg,lightgray)).
-assert(gv_color(svg,lightgreen)).
-assert(gv_color(svg,lightgrey)).
-assert(gv_color(svg,lightpink)).
-assert(gv_color(svg,lightsalmon)).
-assert(gv_color(svg,lightseagreen)).
-assert(gv_color(svg,lightskyblue)).
-assert(gv_color(svg,lightslategray)).
-assert(gv_color(svg,lightslategrey)).
-assert(gv_color(svg,lightsteelblue)).
-assert(gv_color(svg,lightyellow)).
-assert(gv_color(svg,lime)).
-assert(gv_color(svg,limegreen)).
-assert(gv_color(svg,linen)).
-assert(gv_color(svg,magenta)).
-assert(gv_color(svg,maroon)).
-assert(gv_color(svg,mediumaquamarine)).
-assert(gv_color(svg,mediumblue)).
-assert(gv_color(svg,mediumorchid)).
-assert(gv_color(svg,mediumpurple)).
-assert(gv_color(svg,mediumseagreen)).
-assert(gv_color(svg,mediumslateblue)).
-assert(gv_color(svg,mediumspringgreen)).
-assert(gv_color(svg,mediumturquoise)).
-assert(gv_color(svg,mediumvioletred)).
-assert(gv_color(svg,midnightblue)).
-assert(gv_color(svg,mintcream)).
-assert(gv_color(svg,mistyrose)).
-assert(gv_color(svg,moccasin)).
-assert(gv_color(svg,navajowhite)).
-assert(gv_color(svg,navy)).
-assert(gv_color(svg,oldlace)).
-assert(gv_color(svg,olive)).
-assert(gv_color(svg,olivedrab)).
-assert(gv_color(svg,orange)).
-assert(gv_color(svg,orangered)).
-assert(gv_color(svg,orchid)).
-assert(gv_color(svg,palegoldenrod)).
-assert(gv_color(svg,palegreen)).
-assert(gv_color(svg,paleturquoise)).
-assert(gv_color(svg,palevioletred)).
-assert(gv_color(svg,papayawhip)).
-assert(gv_color(svg,peachpuff)).
-assert(gv_color(svg,peru)).
-assert(gv_color(svg,pink)).
-assert(gv_color(svg,plum)).
-assert(gv_color(svg,powderblue)).
-assert(gv_color(svg,purple)).
-assert(gv_color(svg,red)).
-assert(gv_color(svg,rosybrown)).
-assert(gv_color(svg,royalblue)).
-assert(gv_color(svg,saddlebrown)).
-assert(gv_color(svg,salmon)).
-assert(gv_color(svg,sandybrown)).
-assert(gv_color(svg,seagreen)).
-assert(gv_color(svg,seashell)).
-assert(gv_color(svg,sienna)).
-assert(gv_color(svg,silver)).
-assert(gv_color(svg,skyblue)).
-assert(gv_color(svg,slateblue)).
-assert(gv_color(svg,slategray)).
-assert(gv_color(svg,slategrey)).
-assert(gv_color(svg,snow)).
-assert(gv_color(svg,springgreen)).
-assert(gv_color(svg,steelblue)).
-assert(gv_color(svg,tan)).
-assert(gv_color(svg,teal)).
-assert(gv_color(svg,thistle)).
-assert(gv_color(svg,tomato)).
-assert(gv_color(svg,turquoise)).
-assert(gv_color(svg,violet)).
-assert(gv_color(svg,wheat)).
-assert(gv_color(svg,white)).
-assert(gv_color(svg,whitesmoke)).
-assert(gv_color(svg,yellow)).
-assert(gv_color(svg,yellowgreen)).
diff &mdash;git a/prolog/gv/gv_attrs.data b/prolog/gv/gv_attrs.data
new file mode 100644
index 0000000..95fc680
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_attrs.data
@@ -0,0 +1,169 @@
+gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;).
+gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>G59448,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
+gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>G59644,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;).
+gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>G60571,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)<em>sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;).
+gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;).
+gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;).
+gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;).
+gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(edgetarget,[edge],[escString],<em>G63711,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;).
+gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(headtarget,[edge],[escString],</em>G4892,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;).
+gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
+gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;).
+gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(inputscale,[graph],[double],<em>G6250,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(labeltarget,[edge],[escString],</em>G8276,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;).
+gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;).
+gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;).
+gv_attr(nslimitnslimit1,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;).
+gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;).
+gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
+gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;).
+gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;).
+gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;).
+gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;).
+gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
+gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;).
+gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;).
+gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;).
+gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;).
+gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;).
+gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(tailtarget,[edge],[escString],<em>G21528,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>G21878,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;).
+gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;).
+gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;).
+gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;).
+gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;).
+gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;).
+gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;).
+gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;).
+gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;).
+gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;).
diff &mdash;git a/prolog/gv/gv_attrs.log b/prolog/gv/gv_attrs.log
deleted file mode 100644
index a9c6010..0000000
&mdash;&ndash; a/prolog/gv/gv_attrs.log
+++ /dev/null
@@ -1,169 +0,0 @@
-assert(gv_attr(&lsquo;Damping&rsquo;,[graph],[double],&lsquo;0.99&rsquo;,&lsquo;0.0&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(&lsquo;K&rsquo;,[cluster,graph],[double],&lsquo;0.3&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp, fdp only&rsquo;)).
-assert(gv_attr(&lsquo;URL&rsquo;,[cluster,edge,graph,node],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(&lsquo;</em>background&rsquo;,[graph],[string],<em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(area,[cluster,node],[double],&lsquo;1.0&rsquo;,&lsquo;>0&rsquo;,&lsquo;patchwork only&rsquo;)).
-assert(gv_attr(arrowhead,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(arrowsize,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(arrowtail,[edge],[arrowType],normal,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(bb,[graph],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(bgcolor,[cluster,graph],[color,colorList],</em>,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(center,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(charset,[graph],[string],&lsquo;&ldquo;UTF-8&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(clusterrank,[graph],[clusterMode],local,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(color,[cluster,edge,node],[color,colorList],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(colorscheme,[cluster,edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(comment,[edge,graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(compound,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(concentrate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(constraint,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(decorate,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(defaultdist,[graph],[double],&lsquo;1+(avg. len)</em>sqrt(|V|)&rsquo;,epsilon,&lsquo;neato only&rsquo;)).
-assert(gv_attr(dim,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
-assert(gv_attr(dimen,[graph],[int],&lsquo;2&rsquo;,&lsquo;2&rsquo;,&lsquo;sfdp, fdp, neato only&rsquo;)).
-assert(gv_attr(dir,[edge],[dirType],&lsquo;forward(directed)none(undirected)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(diredgeconstraints,[graph],[string,bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(distortion,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(dpi,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
-assert(gv_attr(edgeURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgehref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgetarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(edgetooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(epsilon,[graph],[double],&lsquo;.0001 * # nodes(mode == KK).0001(mode == major)&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(esep,[graph],[addDouble,addPoint],&lsquo;+3&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(fillcolor,[cluster,edge,node],[color,colorList],&lsquo;lightgrey(nodes)black(clusters)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fixedsize,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontcolor,[cluster,edge,graph,node],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontname,[cluster,edge,graph,node],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontnames,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
-assert(gv_attr(fontpath,[graph],[string],&lsquo;system-dependent&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(fontsize,[cluster,edge,graph,node],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(forcelabels,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(gradientangle,[cluster,graph,node],[int],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(group,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(headURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(head_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(headclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(headlabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(headtarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(headtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(height,[node],[double],&lsquo;0.5&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(href,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(id,[cluster,edge,graph,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, postscript, map only&rsquo;)).
-assert(gv_attr(image,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(imagepath,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(imagescale,[node],[bool,string],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(inputscale,[graph],[double],<em>,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(label,[cluster,edge,graph,node],[lblString],&lsquo;&ldquo;\N&rdquo; (nodes)&ldquo;&rdquo; (otherwise)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(label_scheme,[graph],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(labelangle,[edge],[double],&lsquo;-25.0&rsquo;,&lsquo;-180.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labeldistance,[edge],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfloat,[edge],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontcolor,[edge],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontname,[edge],[string],&lsquo;&ldquo;Times-Roman&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelfontsize,[edge],[double],&lsquo;14.0&rsquo;,&lsquo;1.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(labeljust,[cluster,graph],[string],&lsquo;&ldquo;c&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labelloc,[cluster,graph,node],[string],&lsquo;&ldquo;t&rdquo;(clusters)&ldquo;b&rdquo;(root graphs)&ldquo;c&rdquo;(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(labeltarget,[edge],[escString],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(labeltooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(landscape,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layer,[cluster,edge,node],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layerlistsep,[graph],[string],&lsquo;&ldquo;,&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layers,[graph],[layerList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layerselect,[graph],[layerRange],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layersep,[graph],[string],&lsquo;&ldquo; :\t&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(layout,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(len,[edge],[double],&lsquo;1.0(neato)0.3(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(levels,[graph],[int],&lsquo;MAXINT&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(levelsgap,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(lhead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(lheight,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(lp,[cluster,edge,graph],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(ltail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(lwidth,[cluster,graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(margin,[cluster,graph,node],[double,point],&lsquo;&lt;device-dependent>&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(maxiter,[graph],[int],&lsquo;100 * # nodes(mode == KK)200(mode == major)600(fdp)&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(mclimit,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(mindist,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;circo only&rsquo;)).
-assert(gv_attr(minlen,[edge],[int],&lsquo;1&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(mode,[graph],[string],major,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(model,[graph],[string],shortpath,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(mosek,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(nodesep,[graph],[double],&lsquo;0.25&rsquo;,&lsquo;0.02&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(nojustify,[cluster,edge,graph,node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(normalize,[graph],[double,bool],false,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(notranslate,[graph],[bool],false,&lsquo;&rsquo;,&lsquo;neato only&rsquo;)).
-assert(gv_attr(&lsquo;nslimit nslimit1&rsquo;,[graph],[double],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(ordering,[graph,node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(orientation,[node],[double],&lsquo;0.0&rsquo;,&lsquo;360.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(orientation,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(outputorder,[graph],[outputMode],breadthfirst,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(overlap,[graph],[string,bool],true,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(overlap_scaling,[graph],[double],&lsquo;-4&rsquo;,&lsquo;-1.0e10&rsquo;,&lsquo;prism only&rsquo;)).
-assert(gv_attr(overlap_shrink,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;prism only&rsquo;)).
-assert(gv_attr(pack,[graph],[bool,int],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(packmode,[graph],[packMode],node,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pad,[graph],[double,point],&lsquo;0.0555 (4 points)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(page,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pagedir,[graph],[pagedir],&lsquo;BL&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pencolor,[cluster],[color],black,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(penwidth,[cluster,edge,node],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(peripheries,[cluster,node],[int],&lsquo;shape default(nodes)1(clusters)&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(pin,[node],[bool],false,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(pos,[edge,node],[point,splineType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(quadtree,[graph],[quadType,bool],normal,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(quantum,[graph],[double],&lsquo;0.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rank,[subgraph],[rankType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(rankdir,[graph],[rankdir],&lsquo;TB&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(ranksep,[graph],[double,doubleList],&lsquo;0.5(dot)1.0(twopi)&rsquo;,&lsquo;0.02&rsquo;,&lsquo;twopi, dot only&rsquo;)).
-assert(gv_attr(ratio,[graph],[double,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rects,[node],[rect],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(regular,[node],[bool],false,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(remincross,[graph],[bool],true,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(repulsiveforce,[graph],[double],&lsquo;1.0&rsquo;,&lsquo;0.0&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(resolution,[graph],[double],&lsquo;96.00.0&rsquo;,&lsquo;&rsquo;,&lsquo;svg, bitmap output only&rsquo;)).
-assert(gv_attr(root,[graph,node],[string,bool],&lsquo;<none>(graphs)false(nodes)&rsquo;,&lsquo;&rsquo;,&lsquo;circo, twopi only&rsquo;)).
-assert(gv_attr(rotate,[graph],[int],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(rotation,[graph],[double],&lsquo;0&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(samehead,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sametail,[edge],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(samplepoints,[node],[int],&lsquo;8(output)20(overlap and image maps)&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(scale,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(searchsize,[graph],[int],&lsquo;30&rsquo;,&lsquo;&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sep,[graph],[addDouble,addPoint],&lsquo;+4&rsquo;,&lsquo;&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(shape,[node],[shape],ellipse,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(shapefile,[node],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(showboxes,[edge,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;dot only&rsquo;)).
-assert(gv_attr(sides,[node],[int],&lsquo;4&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(size,[graph],[double,point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(skew,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-100.0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(smoothing,[graph],[smoothType],&lsquo;&ldquo;none&rdquo;&rsquo;,&lsquo;&rsquo;,&lsquo;sfdp only&rsquo;)).
-assert(gv_attr(sortv,[cluster,graph,node],[int],&lsquo;0&rsquo;,&lsquo;0&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(splines,[graph],[bool,string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(start,[graph],[startType],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;fdp, neato only&rsquo;)).
-assert(gv_attr(style,[cluster,edge,graph,node],[style],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(stylesheet,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg only&rsquo;)).
-assert(gv_attr(tailURL,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tail_lp,[edge],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(tailclip,[edge],[bool],true,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailhref,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(taillabel,[edge],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailport,[edge],[portPos],center,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(tailtarget,[edge],[escString],<em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tailtooltip,[edge],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(target,[cluster,edge,graph,node],[escString,string],</em>,&lsquo;&rsquo;,&lsquo;svg, map only&rsquo;)).
-assert(gv_attr(tooltip,[cluster,edge,node],[escString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;svg, cmap only&rsquo;)).
-assert(gv_attr(truecolor,[graph],[bool],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;bitmap output only&rsquo;)).
-assert(gv_attr(vertices,[node],[pointList],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(viewport,[graph],[viewPort],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(voro_margin,[graph],[double],&lsquo;0.05&rsquo;,&lsquo;0.0&rsquo;,&lsquo;not dot&rsquo;)).
-assert(gv_attr(weight,[edge],[int,double],&lsquo;1&rsquo;,&lsquo;0(dot,twopi)1(neato,fdp)&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(width,[node],[double],&lsquo;0.75&rsquo;,&lsquo;0.01&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(xdotversion,[graph],[string],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;xdot only&rsquo;)).
-assert(gv_attr(xlabel,[edge,node],[lblString],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;&rsquo;)).
-assert(gv_attr(xlp,[edge,node],[point],&lsquo;&rsquo;,&lsquo;&rsquo;,&lsquo;write only&rsquo;)).
-assert(gv_attr(z,[node],[double],&lsquo;0.0&rsquo;,&lsquo;-MAXFLOAT-1000&rsquo;,&lsquo;&rsquo;)).
diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 1fd4a18..b26af73 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -5,6 +5,7 @@</p>

<pre><code>                  % +Attribute:nvpair
</code></pre>

<p>   ]
 ).
+:&ndash; ensure_loaded(library(&lsquo;gv/gv_attrs.data&rsquo;)).</p>

<p> /** <module> GraphViz attributes</p>

<p>@@ -13,40 +14,10 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(debug_ext)).
&ndash;:&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(dcg/dcg_call)).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
&ndash;:&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(msg_ext)).
 :&ndash; use_module(library(os/file_ext)).
&ndash;:&ndash; use_module(library(persistency)).
&ndash;:&ndash; use_module(library(xpath)).</p>

<h2>&ndash;:&ndash; use_module(library(xpath/xpath_table)).</h2>

<p>&ndash;%! gv_attr(
&ndash;%!   ?Name:atom,
&ndash;%!   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
&ndash;%!   ?Types:list(atom),
&ndash;%!   ?Default,
&ndash;%!   ?Minimum,
&ndash;%!   ?Notes:atom</p>

<h2>&ndash;%! ) is nondet.</h2>

<p>&ndash;:&ndash; persistent(
&ndash;     gv_attr(
&ndash;       name:atom,
&ndash;       used_by:list(oneof([cluster,edge,graph,node,subgraph])),
&ndash;       types:list(atom),
&ndash;       default,
&ndash;       minimum,
&ndash;       notes:atom
&ndash;     )</p>

<h2>&ndash;   ).</h2>

<p>&ndash;:&ndash; initialization(gv_attrs_init).</p>

<p>@@ -54,7 +25,7 @@</p>

<p> %! gv_attr_value(
 %!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +Attribute:nvpair
+%!   +Attribute:compound
 %! )// is det.
 % Uses the default value in case Value is uninstantiated.
 % Otherwise, performs a typecheck and converts the given value.
@@ -101,118 +72,3 @@ check_minimum(_, &lsquo;&rsquo;):&ndash; !.
 check_minimum(V, Min1):&ndash;
   atom_number(Min1, Min2),</p>

<h2>   Min2 =&lt; V.</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% INITIALIZATION %</h2>

<h2>&ndash;%! assert_gv_attr_row(+Row:list(atom)) is det.</h2>

<p>-assert_gv_attr_row([Name,UsedBy1,Types1,Default1,Minimum,Notes]):&ndash;
&ndash;  atom_phrase(translate_usedby(UsedBy2), UsedBy1),
&ndash;  once(atom_phrase(translate_type(Types2), Types1)),
&ndash;  sort(UsedBy2, UsedBy3),
&ndash;  translate_default(Default1, Default2),</p>

<h2>&ndash;  assert_gv_attr(Name, UsedBy3, Types2, Default2, Minimum, Notes).</h2>

<p>&ndash;
&ndash;%! gv_attrs_downloads is det.</p>

<h2>&ndash;% Downloads the table describing GraphViz attributes from <code>graphviz.org</code>.</h2>

<p>-gv_attrs_download:&ndash;
&ndash;  verbose(
&ndash;    gv_attrs_download0,
&ndash;    &ldquo;updating GraphViz attributes table&rdquo;</p>

<h2>&ndash;  ).</h2>

<p>-gv_attrs_download0:&ndash;
&ndash;  gv_attrs_uri(Uri),
&ndash;  html_download(Uri, Dom),
&ndash;  xpath_chk(Dom, //table(@align=lower_case(center)), TableDom),
&ndash;  xpath_table(TableDom, _, Rows),</p>

<h2>&ndash;  maplist(assert_gv_attr_row, Rows).</h2>

<p>&ndash;</p>

<h2>&ndash;%! gv_attrs_file(-File:atom) is det.</h2>

<p>-gv_attrs_file(File):&ndash;</p>

<h2>&ndash;  absolute_file_name(&lsquo;gv_attrs.log&rsquo;, File, [access(write)]).</h2>

<p>&ndash;</p>

<h2>&ndash;%! gv_attrs_init is det.</h2>

<p>-gv_attrs_init:&ndash;
&ndash;  gv_attrs_file(File),
&ndash;  (   exists_file(File)
&ndash;  &ndash;>  true
&ndash;  ;   touch(File)
&ndash;  ),
&ndash;  db_attach(File, []),
&ndash;  file_age(File, Age),</p>

<h2>&ndash;  gv_attrs_update(Age).</h2>

<p>&ndash;</p>

<h2>&ndash;%! gv_attrs_update(+Age:float) is det.</h2>

<p>&ndash;% The persistent store is still fresh.
-gv_attrs_update(Age):&ndash;
&ndash;  once(gv_attr(<em>, </em>, <em>, </em>, <em>, </em>)),
&ndash;  Age &lt; 8640000, !.
&ndash;% The persistent store has become stale, so refresh it.
-gv_attrs_update(<em>):&ndash;
&ndash;  retractall_gv_attr(</em>, <em>, </em>, <em>, </em>, _),</p>

<h2>&ndash;  gv_attrs_download.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! gv_attrs_uri(-Url:url) is det.</h2>

<h2>-gv_attrs_uri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! translate_default(+Default1:atom, -Default2:atom) is det.</h2>

<p>&ndash;% The empty string is represented by the empty atom.
-translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
&ndash;% The absence of a default value is represented by an uninstantiated variable.
-translate_default(&lsquo;<none>&rsquo;, _):&ndash; !.</p>

<h2>-translate_default(Default, Default).</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! translate_type(-Types:list(atom))// is det.</h2>

<p>-translate_type([H|T]) &mdash;>
&ndash;  gv_attr_type(H),
&ndash;  whites,
&ndash;  translate_type(T).
-translate_type([H]) &mdash;>
&ndash;  gv_attr_type(H).</p>

<h2>-translate_type([]) &mdash;> &ldquo;&rdquo;.</h2>

<h2>&ndash;</h2>

<p>&ndash;%! translated_usedby(
&ndash;%!   -UsedBy:list(oneof([cluster,edge,graph,node,subgraph]))</p>

<h2>&ndash;%! )// is det.</h2>

<p>-translate_usedby([cluster|T]) &mdash;>
&ndash;  &ldquo;C&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([edge|T]) &mdash;>
&ndash;  &ldquo;E&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([graph|T]) &mdash;>
&ndash;  &ldquo;G&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([node|T]) &mdash;>
&ndash;  &ldquo;N&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([subgraph|T]) &mdash;>
&ndash;  &ldquo;S&rdquo;, !,
&ndash;  translate_usedby(T).
-translate_usedby([]) &mdash;>
&ndash;  &ldquo;&rdquo;.
diff &mdash;git a/prolog/gv/gv_color.data b/prolog/gv/gv_color.data
new file mode 100644
index 0000000..166b13c
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_color.data
@@ -0,0 +1,802 @@
+gv_color(x11,aliceblue).
+gv_color(x11,antiquewhite).
+gv_color(x11,antiquewhite1).
+gv_color(x11,antiquewhite2).
+gv_color(x11,antiquewhite3).
+gv_color(x11,antiquewhite4).
+gv_color(x11,aquamarine).
+gv_color(x11,aquamarine1).
+gv_color(x11,aquamarine2).
+gv_color(x11,aquamarine3).
+gv_color(x11,aquamarine4).
+gv_color(x11,azure).
+gv_color(x11,azure1).
+gv_color(x11,azure2).
+gv_color(x11,azure3).
+gv_color(x11,azure4).
+gv_color(x11,beige).
+gv_color(x11,bisque).
+gv_color(x11,bisque1).
+gv_color(x11,bisque2).
+gv_color(x11,bisque3).
+gv_color(x11,bisque4).
+gv_color(x11,black).
+gv_color(x11,blanchedalmond).
+gv_color(x11,blue).
+gv_color(x11,blue1).
+gv_color(x11,blue2).
+gv_color(x11,blue3).
+gv_color(x11,blue4).
+gv_color(x11,blueviolet).
+gv_color(x11,brown).
+gv_color(x11,brown1).
+gv_color(x11,brown2).
+gv_color(x11,brown3).
+gv_color(x11,brown4).
+gv_color(x11,burlywood).
+gv_color(x11,burlywood1).
+gv_color(x11,burlywood2).
+gv_color(x11,burlywood3).
+gv_color(x11,burlywood4).
+gv_color(x11,cadetblue).
+gv_color(x11,cadetblue1).
+gv_color(x11,cadetblue2).
+gv_color(x11,cadetblue3).
+gv_color(x11,cadetblue4).
+gv_color(x11,chartreuse).
+gv_color(x11,chartreuse1).
+gv_color(x11,chartreuse2).
+gv_color(x11,chartreuse3).
+gv_color(x11,chartreuse4).
+gv_color(x11,chocolate).
+gv_color(x11,chocolate1).
+gv_color(x11,chocolate2).
+gv_color(x11,chocolate3).
+gv_color(x11,chocolate4).
+gv_color(x11,coral).
+gv_color(x11,coral1).
+gv_color(x11,coral2).
+gv_color(x11,coral3).
+gv_color(x11,coral4).
+gv_color(x11,cornflowerblue).
+gv_color(x11,cornsilk).
+gv_color(x11,cornsilk1).
+gv_color(x11,cornsilk2).
+gv_color(x11,cornsilk3).
+gv_color(x11,cornsilk4).
+gv_color(x11,crimson).
+gv_color(x11,cyan).
+gv_color(x11,cyan1).
+gv_color(x11,cyan2).
+gv_color(x11,cyan3).
+gv_color(x11,cyan4).
+gv_color(x11,darkgoldenrod).
+gv_color(x11,darkgoldenrod1).
+gv_color(x11,darkgoldenrod2).
+gv_color(x11,darkgoldenrod3).
+gv_color(x11,darkgoldenrod4).
+gv_color(x11,darkgreen).
+gv_color(x11,darkkhaki).
+gv_color(x11,darkolivegreen).
+gv_color(x11,darkolivegreen1).
+gv_color(x11,darkolivegreen2).
+gv_color(x11,darkolivegreen3).
+gv_color(x11,darkolivegreen4).
+gv_color(x11,darkorange).
+gv_color(x11,darkorange1).
+gv_color(x11,darkorange2).
+gv_color(x11,darkorange3).
+gv_color(x11,darkorange4).
+gv_color(x11,darkorchid).
+gv_color(x11,darkorchid1).
+gv_color(x11,darkorchid2).
+gv_color(x11,darkorchid3).
+gv_color(x11,darkorchid4).
+gv_color(x11,darksalmon).
+gv_color(x11,darkseagreen).
+gv_color(x11,darkseagreen1).
+gv_color(x11,darkseagreen2).
+gv_color(x11,darkseagreen3).
+gv_color(x11,darkseagreen4).
+gv_color(x11,darkslateblue).
+gv_color(x11,darkslategray).
+gv_color(x11,darkslategray1).
+gv_color(x11,darkslategray2).
+gv_color(x11,darkslategray3).
+gv_color(x11,darkslategray4).
+gv_color(x11,darkslategrey).
+gv_color(x11,darkturquoise).
+gv_color(x11,darkviolet).
+gv_color(x11,deeppink).
+gv_color(x11,deeppink1).
+gv_color(x11,deeppink2).
+gv_color(x11,deeppink3).
+gv_color(x11,deeppink4).
+gv_color(x11,deepskyblue).
+gv_color(x11,deepskyblue1).
+gv_color(x11,deepskyblue2).
+gv_color(x11,deepskyblue3).
+gv_color(x11,deepskyblue4).
+gv_color(x11,dimgray).
+gv_color(x11,dimgrey).
+gv_color(x11,dodgerblue).
+gv_color(x11,dodgerblue1).
+gv_color(x11,dodgerblue2).
+gv_color(x11,dodgerblue3).
+gv_color(x11,dodgerblue4).
+gv_color(x11,firebrick).
+gv_color(x11,firebrick1).
+gv_color(x11,firebrick2).
+gv_color(x11,firebrick3).
+gv_color(x11,firebrick4).
+gv_color(x11,floralwhite).
+gv_color(x11,forestgreen).
+gv_color(x11,gainsboro).
+gv_color(x11,ghostwhite).
+gv_color(x11,gold).
+gv_color(x11,gold1).
+gv_color(x11,gold2).
+gv_color(x11,gold3).
+gv_color(x11,gold4).
+gv_color(x11,goldenrod).
+gv_color(x11,goldenrod1).
+gv_color(x11,goldenrod2).
+gv_color(x11,goldenrod3).
+gv_color(x11,goldenrod4).
+gv_color(x11,gray).
+gv_color(x11,gray0).
+gv_color(x11,gray1).
+gv_color(x11,gray10).
+gv_color(x11,gray100).
+gv_color(x11,gray11).
+gv_color(x11,gray12).
+gv_color(x11,gray13).
+gv_color(x11,gray14).
+gv_color(x11,gray15).
+gv_color(x11,gray16).
+gv_color(x11,gray17).
+gv_color(x11,gray18).
+gv_color(x11,gray19).
+gv_color(x11,gray2).
+gv_color(x11,gray20).
+gv_color(x11,gray21).
+gv_color(x11,gray22).
+gv_color(x11,gray23).
+gv_color(x11,gray24).
+gv_color(x11,gray25).
+gv_color(x11,gray26).
+gv_color(x11,gray27).
+gv_color(x11,gray28).
+gv_color(x11,gray29).
+gv_color(x11,gray3).
+gv_color(x11,gray30).
+gv_color(x11,gray31).
+gv_color(x11,gray32).
+gv_color(x11,gray33).
+gv_color(x11,gray34).
+gv_color(x11,gray35).
+gv_color(x11,gray36).
+gv_color(x11,gray37).
+gv_color(x11,gray38).
+gv_color(x11,gray39).
+gv_color(x11,gray4).
+gv_color(x11,gray40).
+gv_color(x11,gray41).
+gv_color(x11,gray42).
+gv_color(x11,gray43).
+gv_color(x11,gray44).
+gv_color(x11,gray45).
+gv_color(x11,gray46).
+gv_color(x11,gray47).
+gv_color(x11,gray48).
+gv_color(x11,gray49).
+gv_color(x11,gray5).
+gv_color(x11,gray50).
+gv_color(x11,gray51).
+gv_color(x11,gray52).
+gv_color(x11,gray53).
+gv_color(x11,gray54).
+gv_color(x11,gray55).
+gv_color(x11,gray56).
+gv_color(x11,gray57).
+gv_color(x11,gray58).
+gv_color(x11,gray59).
+gv_color(x11,gray6).
+gv_color(x11,gray60).
+gv_color(x11,gray61).
+gv_color(x11,gray62).
+gv_color(x11,gray63).
+gv_color(x11,gray64).
+gv_color(x11,gray65).
+gv_color(x11,gray66).
+gv_color(x11,gray67).
+gv_color(x11,gray68).
+gv_color(x11,gray69).
+gv_color(x11,gray7).
+gv_color(x11,gray70).
+gv_color(x11,gray71).
+gv_color(x11,gray72).
+gv_color(x11,gray73).
+gv_color(x11,gray74).
+gv_color(x11,gray75).
+gv_color(x11,gray76).
+gv_color(x11,gray77).
+gv_color(x11,gray78).
+gv_color(x11,gray79).
+gv_color(x11,gray8).
+gv_color(x11,gray80).
+gv_color(x11,gray81).
+gv_color(x11,gray82).
+gv_color(x11,gray83).
+gv_color(x11,gray84).
+gv_color(x11,gray85).
+gv_color(x11,gray86).
+gv_color(x11,gray87).
+gv_color(x11,gray88).
+gv_color(x11,gray89).
+gv_color(x11,gray9).
+gv_color(x11,gray90).
+gv_color(x11,gray91).
+gv_color(x11,gray92).
+gv_color(x11,gray93).
+gv_color(x11,gray94).
+gv_color(x11,gray95).
+gv_color(x11,gray96).
+gv_color(x11,gray97).
+gv_color(x11,gray98).
+gv_color(x11,gray99).
+gv_color(x11,green).
+gv_color(x11,green1).
+gv_color(x11,green2).
+gv_color(x11,green3).
+gv_color(x11,green4).
+gv_color(x11,greenyellow).
+gv_color(x11,grey).
+gv_color(x11,grey0).
+gv_color(x11,grey1).
+gv_color(x11,grey10).
+gv_color(x11,grey100).
+gv_color(x11,grey11).
+gv_color(x11,grey12).
+gv_color(x11,grey13).
+gv_color(x11,grey14).
+gv_color(x11,grey15).
+gv_color(x11,grey16).
+gv_color(x11,grey17).
+gv_color(x11,grey18).
+gv_color(x11,grey19).
+gv_color(x11,grey2).
+gv_color(x11,grey20).
+gv_color(x11,grey21).
+gv_color(x11,grey22).
+gv_color(x11,grey23).
+gv_color(x11,grey24).
+gv_color(x11,grey25).
+gv_color(x11,grey26).
+gv_color(x11,grey27).
+gv_color(x11,grey28).
+gv_color(x11,grey29).
+gv_color(x11,grey3).
+gv_color(x11,grey30).
+gv_color(x11,grey31).
+gv_color(x11,grey32).
+gv_color(x11,grey33).
+gv_color(x11,grey34).
+gv_color(x11,grey35).
+gv_color(x11,grey36).
+gv_color(x11,grey37).
+gv_color(x11,grey38).
+gv_color(x11,grey39).
+gv_color(x11,grey4).
+gv_color(x11,grey40).
+gv_color(x11,grey41).
+gv_color(x11,grey42).
+gv_color(x11,grey43).
+gv_color(x11,grey44).
+gv_color(x11,grey45).
+gv_color(x11,grey46).
+gv_color(x11,grey47).
+gv_color(x11,grey48).
+gv_color(x11,grey49).
+gv_color(x11,grey5).
+gv_color(x11,grey50).
+gv_color(x11,grey51).
+gv_color(x11,grey52).
+gv_color(x11,grey53).
+gv_color(x11,grey54).
+gv_color(x11,grey55).
+gv_color(x11,grey56).
+gv_color(x11,grey57).
+gv_color(x11,grey58).
+gv_color(x11,grey59).
+gv_color(x11,grey6).
+gv_color(x11,grey60).
+gv_color(x11,grey61).
+gv_color(x11,grey62).
+gv_color(x11,grey63).
+gv_color(x11,grey64).
+gv_color(x11,grey65).
+gv_color(x11,grey66).
+gv_color(x11,grey67).
+gv_color(x11,grey68).
+gv_color(x11,grey69).
+gv_color(x11,grey7).
+gv_color(x11,grey70).
+gv_color(x11,grey71).
+gv_color(x11,grey72).
+gv_color(x11,grey73).
+gv_color(x11,grey74).
+gv_color(x11,grey75).
+gv_color(x11,grey76).
+gv_color(x11,grey77).
+gv_color(x11,grey78).
+gv_color(x11,grey79).
+gv_color(x11,grey8).
+gv_color(x11,grey80).
+gv_color(x11,grey81).
+gv_color(x11,grey82).
+gv_color(x11,grey83).
+gv_color(x11,grey84).
+gv_color(x11,grey85).
+gv_color(x11,grey86).
+gv_color(x11,grey87).
+gv_color(x11,grey88).
+gv_color(x11,grey89).
+gv_color(x11,grey9).
+gv_color(x11,grey90).
+gv_color(x11,grey91).
+gv_color(x11,grey92).
+gv_color(x11,grey93).
+gv_color(x11,grey94).
+gv_color(x11,grey95).
+gv_color(x11,grey96).
+gv_color(x11,grey97).
+gv_color(x11,grey98).
+gv_color(x11,grey99).
+gv_color(x11,honeydew).
+gv_color(x11,honeydew1).
+gv_color(x11,honeydew2).
+gv_color(x11,honeydew3).
+gv_color(x11,honeydew4).
+gv_color(x11,hotpink).
+gv_color(x11,hotpink1).
+gv_color(x11,hotpink2).
+gv_color(x11,hotpink3).
+gv_color(x11,hotpink4).
+gv_color(x11,indianred).
+gv_color(x11,indianred1).
+gv_color(x11,indianred2).
+gv_color(x11,indianred3).
+gv_color(x11,indianred4).
+gv_color(x11,indigo).
+gv_color(x11,invis).
+gv_color(x11,ivory).
+gv_color(x11,ivory1).
+gv_color(x11,ivory2).
+gv_color(x11,ivory3).
+gv_color(x11,ivory4).
+gv_color(x11,khaki).
+gv_color(x11,khaki1).
+gv_color(x11,khaki2).
+gv_color(x11,khaki3).
+gv_color(x11,khaki4).
+gv_color(x11,lavender).
+gv_color(x11,lavenderblush).
+gv_color(x11,lavenderblush1).
+gv_color(x11,lavenderblush2).
+gv_color(x11,lavenderblush3).
+gv_color(x11,lavenderblush4).
+gv_color(x11,lawngreen).
+gv_color(x11,lemonchiffon).
+gv_color(x11,lemonchiffon1).
+gv_color(x11,lemonchiffon2).
+gv_color(x11,lemonchiffon3).
+gv_color(x11,lemonchiffon4).
+gv_color(x11,lightblue).
+gv_color(x11,lightblue1).
+gv_color(x11,lightblue2).
+gv_color(x11,lightblue3).
+gv_color(x11,lightblue4).
+gv_color(x11,lightcoral).
+gv_color(x11,lightcyan).
+gv_color(x11,lightcyan1).
+gv_color(x11,lightcyan2).
+gv_color(x11,lightcyan3).
+gv_color(x11,lightcyan4).
+gv_color(x11,lightgoldenrod).
+gv_color(x11,lightgoldenrod1).
+gv_color(x11,lightgoldenrod2).
+gv_color(x11,lightgoldenrod3).
+gv_color(x11,lightgoldenrod4).
+gv_color(x11,lightgoldenrodyellow).
+gv_color(x11,lightgray).
+gv_color(x11,lightgrey).
+gv_color(x11,lightpink).
+gv_color(x11,lightpink1).
+gv_color(x11,lightpink2).
+gv_color(x11,lightpink3).
+gv_color(x11,lightpink4).
+gv_color(x11,lightsalmon).
+gv_color(x11,lightsalmon1).
+gv_color(x11,lightsalmon2).
+gv_color(x11,lightsalmon3).
+gv_color(x11,lightsalmon4).
+gv_color(x11,lightseagreen).
+gv_color(x11,lightskyblue).
+gv_color(x11,lightskyblue1).
+gv_color(x11,lightskyblue2).
+gv_color(x11,lightskyblue3).
+gv_color(x11,lightskyblue4).
+gv_color(x11,lightslateblue).
+gv_color(x11,lightslategray).
+gv_color(x11,lightslategrey).
+gv_color(x11,lightsteelblue).
+gv_color(x11,lightsteelblue1).
+gv_color(x11,lightsteelblue2).
+gv_color(x11,lightsteelblue3).
+gv_color(x11,lightsteelblue4).
+gv_color(x11,lightyellow).
+gv_color(x11,lightyellow1).
+gv_color(x11,lightyellow2).
+gv_color(x11,lightyellow3).
+gv_color(x11,lightyellow4).
+gv_color(x11,limegreen).
+gv_color(x11,linen).
+gv_color(x11,magenta).
+gv_color(x11,magenta1).
+gv_color(x11,magenta2).
+gv_color(x11,magenta3).
+gv_color(x11,magenta4).
+gv_color(x11,maroon).
+gv_color(x11,maroon1).
+gv_color(x11,maroon2).
+gv_color(x11,maroon3).
+gv_color(x11,maroon4).
+gv_color(x11,mediumaquamarine).
+gv_color(x11,mediumblue).
+gv_color(x11,mediumorchid).
+gv_color(x11,mediumorchid1).
+gv_color(x11,mediumorchid2).
+gv_color(x11,mediumorchid3).
+gv_color(x11,mediumorchid4).
+gv_color(x11,mediumpurple).
+gv_color(x11,mediumpurple1).
+gv_color(x11,mediumpurple2).
+gv_color(x11,mediumpurple3).
+gv_color(x11,mediumpurple4).
+gv_color(x11,mediumseagreen).
+gv_color(x11,mediumslateblue).
+gv_color(x11,mediumspringgreen).
+gv_color(x11,mediumturquoise).
+gv_color(x11,mediumvioletred).
+gv_color(x11,midnightblue).
+gv_color(x11,mintcream).
+gv_color(x11,mistyrose).
+gv_color(x11,mistyrose1).
+gv_color(x11,mistyrose2).
+gv_color(x11,mistyrose3).
+gv_color(x11,mistyrose4).
+gv_color(x11,moccasin).
+gv_color(x11,navajowhite).
+gv_color(x11,navajowhite1).
+gv_color(x11,navajowhite2).
+gv_color(x11,navajowhite3).
+gv_color(x11,navajowhite4).
+gv_color(x11,navy).
+gv_color(x11,navyblue).
+gv_color(x11,none).
+gv_color(x11,oldlace).
+gv_color(x11,olivedrab).
+gv_color(x11,olivedrab1).
+gv_color(x11,olivedrab2).
+gv_color(x11,olivedrab3).
+gv_color(x11,olivedrab4).
+gv_color(x11,orange).
+gv_color(x11,orange1).
+gv_color(x11,orange2).
+gv_color(x11,orange3).
+gv_color(x11,orange4).
+gv_color(x11,orangered).
+gv_color(x11,orangered1).
+gv_color(x11,orangered2).
+gv_color(x11,orangered3).
+gv_color(x11,orangered4).
+gv_color(x11,orchid).
+gv_color(x11,orchid1).
+gv_color(x11,orchid2).
+gv_color(x11,orchid3).
+gv_color(x11,orchid4).
+gv_color(x11,palegoldenrod).
+gv_color(x11,palegreen).
+gv_color(x11,palegreen1).
+gv_color(x11,palegreen2).
+gv_color(x11,palegreen3).
+gv_color(x11,palegreen4).
+gv_color(x11,paleturquoise).
+gv_color(x11,paleturquoise1).
+gv_color(x11,paleturquoise2).
+gv_color(x11,paleturquoise3).
+gv_color(x11,paleturquoise4).
+gv_color(x11,palevioletred).
+gv_color(x11,palevioletred1).
+gv_color(x11,palevioletred2).
+gv_color(x11,palevioletred3).
+gv_color(x11,palevioletred4).
+gv_color(x11,papayawhip).
+gv_color(x11,peachpuff).
+gv_color(x11,peachpuff1).
+gv_color(x11,peachpuff2).
+gv_color(x11,peachpuff3).
+gv_color(x11,peachpuff4).
+gv_color(x11,peru).
+gv_color(x11,pink).
+gv_color(x11,pink1).
+gv_color(x11,pink2).
+gv_color(x11,pink3).
+gv_color(x11,pink4).
+gv_color(x11,plum).
+gv_color(x11,plum1).
+gv_color(x11,plum2).
+gv_color(x11,plum3).
+gv_color(x11,plum4).
+gv_color(x11,powderblue).
+gv_color(x11,purple).
+gv_color(x11,purple1).
+gv_color(x11,purple2).
+gv_color(x11,purple3).
+gv_color(x11,purple4).
+gv_color(x11,red).
+gv_color(x11,red1).
+gv_color(x11,red2).
+gv_color(x11,red3).
+gv_color(x11,red4).
+gv_color(x11,rosybrown).
+gv_color(x11,rosybrown1).
+gv_color(x11,rosybrown2).
+gv_color(x11,rosybrown3).
+gv_color(x11,rosybrown4).
+gv_color(x11,royalblue).
+gv_color(x11,royalblue1).
+gv_color(x11,royalblue2).
+gv_color(x11,royalblue3).
+gv_color(x11,royalblue4).
+gv_color(x11,saddlebrown).
+gv_color(x11,salmon).
+gv_color(x11,salmon1).
+gv_color(x11,salmon2).
+gv_color(x11,salmon3).
+gv_color(x11,salmon4).
+gv_color(x11,sandybrown).
+gv_color(x11,seagreen).
+gv_color(x11,seagreen1).
+gv_color(x11,seagreen2).
+gv_color(x11,seagreen3).
+gv_color(x11,seagreen4).
+gv_color(x11,seashell).
+gv_color(x11,seashell1).
+gv_color(x11,seashell2).
+gv_color(x11,seashell3).
+gv_color(x11,seashell4).
+gv_color(x11,sienna).
+gv_color(x11,sienna1).
+gv_color(x11,sienna2).
+gv_color(x11,sienna3).
+gv_color(x11,sienna4).
+gv_color(x11,skyblue).
+gv_color(x11,skyblue1).
+gv_color(x11,skyblue2).
+gv_color(x11,skyblue3).
+gv_color(x11,skyblue4).
+gv_color(x11,slateblue).
+gv_color(x11,slateblue1).
+gv_color(x11,slateblue2).
+gv_color(x11,slateblue3).
+gv_color(x11,slateblue4).
+gv_color(x11,slategray).
+gv_color(x11,slategray1).
+gv_color(x11,slategray2).
+gv_color(x11,slategray3).
+gv_color(x11,slategray4).
+gv_color(x11,slategrey).
+gv_color(x11,snow).
+gv_color(x11,snow1).
+gv_color(x11,snow2).
+gv_color(x11,snow3).
+gv_color(x11,snow4).
+gv_color(x11,springgreen).
+gv_color(x11,springgreen1).
+gv_color(x11,springgreen2).
+gv_color(x11,springgreen3).
+gv_color(x11,springgreen4).
+gv_color(x11,steelblue).
+gv_color(x11,steelblue1).
+gv_color(x11,steelblue2).
+gv_color(x11,steelblue3).
+gv_color(x11,steelblue4).
+gv_color(x11,tan).
+gv_color(x11,tan1).
+gv_color(x11,tan2).
+gv_color(x11,tan3).
+gv_color(x11,tan4).
+gv_color(x11,thistle).
+gv_color(x11,thistle1).
+gv_color(x11,thistle2).
+gv_color(x11,thistle3).
+gv_color(x11,thistle4).
+gv_color(x11,tomato).
+gv_color(x11,tomato1).
+gv_color(x11,tomato2).
+gv_color(x11,tomato3).
+gv_color(x11,tomato4).
+gv_color(x11,transparent).
+gv_color(x11,turquoise).
+gv_color(x11,turquoise1).
+gv_color(x11,turquoise2).
+gv_color(x11,turquoise3).
+gv_color(x11,turquoise4).
+gv_color(x11,violet).
+gv_color(x11,violetred).
+gv_color(x11,violetred1).
+gv_color(x11,violetred2).
+gv_color(x11,violetred3).
+gv_color(x11,violetred4).
+gv_color(x11,wheat).
+gv_color(x11,wheat1).
+gv_color(x11,wheat2).
+gv_color(x11,wheat3).
+gv_color(x11,wheat4).
+gv_color(x11,white).
+gv_color(x11,whitesmoke).
+gv_color(x11,yellow).
+gv_color(x11,yellow1).
+gv_color(x11,yellow2).
+gv_color(x11,yellow3).
+gv_color(x11,yellow4).
+gv_color(x11,yellowgreen).
+gv_color(svg,aliceblue).
+gv_color(svg,antiquewhite).
+gv_color(svg,aqua).
+gv_color(svg,aquamarine).
+gv_color(svg,azure).
+gv_color(svg,beige).
+gv_color(svg,bisque).
+gv_color(svg,black).
+gv_color(svg,blanchedalmond).
+gv_color(svg,blue).
+gv_color(svg,blueviolet).
+gv_color(svg,brown).
+gv_color(svg,burlywood).
+gv_color(svg,cadetblue).
+gv_color(svg,chartreuse).
+gv_color(svg,chocolate).
+gv_color(svg,coral).
+gv_color(svg,cornflowerblue).
+gv_color(svg,cornsilk).
+gv_color(svg,crimson).
+gv_color(svg,cyan).
+gv_color(svg,darkblue).
+gv_color(svg,darkcyan).
+gv_color(svg,darkgoldenrod).
+gv_color(svg,darkgray).
+gv_color(svg,darkgreen).
+gv_color(svg,darkgrey).
+gv_color(svg,darkkhaki).
+gv_color(svg,darkmagenta).
+gv_color(svg,darkolivegreen).
+gv_color(svg,darkorange).
+gv_color(svg,darkorchid).
+gv_color(svg,darkred).
+gv_color(svg,darksalmon).
+gv_color(svg,darkseagreen).
+gv_color(svg,darkslateblue).
+gv_color(svg,darkslategray).
+gv_color(svg,darkslategrey).
+gv_color(svg,darkturquoise).
+gv_color(svg,darkviolet).
+gv_color(svg,deeppink).
+gv_color(svg,deepskyblue).
+gv_color(svg,dimgray).
+gv_color(svg,dimgrey).
+gv_color(svg,dodgerblue).
+gv_color(svg,firebrick).
+gv_color(svg,floralwhite).
+gv_color(svg,forestgreen).
+gv_color(svg,fuchsia).
+gv_color(svg,gainsboro).
+gv_color(svg,ghostwhite).
+gv_color(svg,gold).
+gv_color(svg,goldenrod).
+gv_color(svg,gray).
+gv_color(svg,grey).
+gv_color(svg,green).
+gv_color(svg,greenyellow).
+gv_color(svg,honeydew).
+gv_color(svg,hotpink).
+gv_color(svg,indianred).
+gv_color(svg,indigo).
+gv_color(svg,ivory).
+gv_color(svg,khaki).
+gv_color(svg,lavender).
+gv_color(svg,lavenderblush).
+gv_color(svg,lawngreen).
+gv_color(svg,lemonchiffon).
+gv_color(svg,lightblue).
+gv_color(svg,lightcoral).
+gv_color(svg,lightcyan).
+gv_color(svg,lightgoldenrodyellow).
+gv_color(svg,lightgray).
+gv_color(svg,lightgreen).
+gv_color(svg,lightgrey).
+gv_color(svg,lightpink).
+gv_color(svg,lightsalmon).
+gv_color(svg,lightseagreen).
+gv_color(svg,lightskyblue).
+gv_color(svg,lightslategray).
+gv_color(svg,lightslategrey).
+gv_color(svg,lightsteelblue).
+gv_color(svg,lightyellow).
+gv_color(svg,lime).
+gv_color(svg,limegreen).
+gv_color(svg,linen).
+gv_color(svg,magenta).
+gv_color(svg,maroon).
+gv_color(svg,mediumaquamarine).
+gv_color(svg,mediumblue).
+gv_color(svg,mediumorchid).
+gv_color(svg,mediumpurple).
+gv_color(svg,mediumseagreen).
+gv_color(svg,mediumslateblue).
+gv_color(svg,mediumspringgreen).
+gv_color(svg,mediumturquoise).
+gv_color(svg,mediumvioletred).
+gv_color(svg,midnightblue).
+gv_color(svg,mintcream).
+gv_color(svg,mistyrose).
+gv_color(svg,moccasin).
+gv_color(svg,navajowhite).
+gv_color(svg,navy).
+gv_color(svg,oldlace).
+gv_color(svg,olive).
+gv_color(svg,olivedrab).
+gv_color(svg,orange).
+gv_color(svg,orangered).
+gv_color(svg,orchid).
+gv_color(svg,palegoldenrod).
+gv_color(svg,palegreen).
+gv_color(svg,paleturquoise).
+gv_color(svg,palevioletred).
+gv_color(svg,papayawhip).
+gv_color(svg,peachpuff).
+gv_color(svg,peru).
+gv_color(svg,pink).
+gv_color(svg,plum).
+gv_color(svg,powderblue).
+gv_color(svg,purple).
+gv_color(svg,red).
+gv_color(svg,rosybrown).
+gv_color(svg,royalblue).
+gv_color(svg,saddlebrown).
+gv_color(svg,salmon).
+gv_color(svg,sandybrown).
+gv_color(svg,seagreen).
+gv_color(svg,seashell).
+gv_color(svg,sienna).
+gv_color(svg,silver).
+gv_color(svg,skyblue).
+gv_color(svg,slateblue).
+gv_color(svg,slategray).
+gv_color(svg,slategrey).
+gv_color(svg,snow).
+gv_color(svg,springgreen).
+gv_color(svg,steelblue).
+gv_color(svg,tan).
+gv_color(svg,teal).
+gv_color(svg,thistle).
+gv_color(svg,tomato).
+gv_color(svg,turquoise).
+gv_color(svg,violet).
+gv_color(svg,wheat).
+gv_color(svg,white).
+gv_color(svg,whitesmoke).
+gv_color(svg,yellow).
+gv_color(svg,yellowgreen).
diff &mdash;git a/prolog/gv/gv_color.log b/prolog/gv/gv_color.log
deleted file mode 100644
index 23d6cdf..0000000
&mdash;&ndash; a/prolog/gv/gv_color.log
+++ /dev/null
@@ -1,802 +0,0 @@
-assert(gv_color(x11,aliceblue)).
-assert(gv_color(x11,antiquewhite)).
-assert(gv_color(x11,antiquewhite1)).
-assert(gv_color(x11,antiquewhite2)).
-assert(gv_color(x11,antiquewhite3)).
-assert(gv_color(x11,antiquewhite4)).
-assert(gv_color(x11,aquamarine)).
-assert(gv_color(x11,aquamarine1)).
-assert(gv_color(x11,aquamarine2)).
-assert(gv_color(x11,aquamarine3)).
-assert(gv_color(x11,aquamarine4)).
-assert(gv_color(x11,azure)).
-assert(gv_color(x11,azure1)).
-assert(gv_color(x11,azure2)).
-assert(gv_color(x11,azure3)).
-assert(gv_color(x11,azure4)).
-assert(gv_color(x11,beige)).
-assert(gv_color(x11,bisque)).
-assert(gv_color(x11,bisque1)).
-assert(gv_color(x11,bisque2)).
-assert(gv_color(x11,bisque3)).
-assert(gv_color(x11,bisque4)).
-assert(gv_color(x11,black)).
-assert(gv_color(x11,blanchedalmond)).
-assert(gv_color(x11,blue)).
-assert(gv_color(x11,blue1)).
-assert(gv_color(x11,blue2)).
-assert(gv_color(x11,blue3)).
-assert(gv_color(x11,blue4)).
-assert(gv_color(x11,blueviolet)).
-assert(gv_color(x11,brown)).
-assert(gv_color(x11,brown1)).
-assert(gv_color(x11,brown2)).
-assert(gv_color(x11,brown3)).
-assert(gv_color(x11,brown4)).
-assert(gv_color(x11,burlywood)).
-assert(gv_color(x11,burlywood1)).
-assert(gv_color(x11,burlywood2)).
-assert(gv_color(x11,burlywood3)).
-assert(gv_color(x11,burlywood4)).
-assert(gv_color(x11,cadetblue)).
-assert(gv_color(x11,cadetblue1)).
-assert(gv_color(x11,cadetblue2)).
-assert(gv_color(x11,cadetblue3)).
-assert(gv_color(x11,cadetblue4)).
-assert(gv_color(x11,chartreuse)).
-assert(gv_color(x11,chartreuse1)).
-assert(gv_color(x11,chartreuse2)).
-assert(gv_color(x11,chartreuse3)).
-assert(gv_color(x11,chartreuse4)).
-assert(gv_color(x11,chocolate)).
-assert(gv_color(x11,chocolate1)).
-assert(gv_color(x11,chocolate2)).
-assert(gv_color(x11,chocolate3)).
-assert(gv_color(x11,chocolate4)).
-assert(gv_color(x11,coral)).
-assert(gv_color(x11,coral1)).
-assert(gv_color(x11,coral2)).
-assert(gv_color(x11,coral3)).
-assert(gv_color(x11,coral4)).
-assert(gv_color(x11,cornflowerblue)).
-assert(gv_color(x11,cornsilk)).
-assert(gv_color(x11,cornsilk1)).
-assert(gv_color(x11,cornsilk2)).
-assert(gv_color(x11,cornsilk3)).
-assert(gv_color(x11,cornsilk4)).
-assert(gv_color(x11,crimson)).
-assert(gv_color(x11,cyan)).
-assert(gv_color(x11,cyan1)).
-assert(gv_color(x11,cyan2)).
-assert(gv_color(x11,cyan3)).
-assert(gv_color(x11,cyan4)).
-assert(gv_color(x11,darkgoldenrod)).
-assert(gv_color(x11,darkgoldenrod1)).
-assert(gv_color(x11,darkgoldenrod2)).
-assert(gv_color(x11,darkgoldenrod3)).
-assert(gv_color(x11,darkgoldenrod4)).
-assert(gv_color(x11,darkgreen)).
-assert(gv_color(x11,darkkhaki)).
-assert(gv_color(x11,darkolivegreen)).
-assert(gv_color(x11,darkolivegreen1)).
-assert(gv_color(x11,darkolivegreen2)).
-assert(gv_color(x11,darkolivegreen3)).
-assert(gv_color(x11,darkolivegreen4)).
-assert(gv_color(x11,darkorange)).
-assert(gv_color(x11,darkorange1)).
-assert(gv_color(x11,darkorange2)).
-assert(gv_color(x11,darkorange3)).
-assert(gv_color(x11,darkorange4)).
-assert(gv_color(x11,darkorchid)).
-assert(gv_color(x11,darkorchid1)).
-assert(gv_color(x11,darkorchid2)).
-assert(gv_color(x11,darkorchid3)).
-assert(gv_color(x11,darkorchid4)).
-assert(gv_color(x11,darksalmon)).
-assert(gv_color(x11,darkseagreen)).
-assert(gv_color(x11,darkseagreen1)).
-assert(gv_color(x11,darkseagreen2)).
-assert(gv_color(x11,darkseagreen3)).
-assert(gv_color(x11,darkseagreen4)).
-assert(gv_color(x11,darkslateblue)).
-assert(gv_color(x11,darkslategray)).
-assert(gv_color(x11,darkslategray1)).
-assert(gv_color(x11,darkslategray2)).
-assert(gv_color(x11,darkslategray3)).
-assert(gv_color(x11,darkslategray4)).
-assert(gv_color(x11,darkslategrey)).
-assert(gv_color(x11,darkturquoise)).
-assert(gv_color(x11,darkviolet)).
-assert(gv_color(x11,deeppink)).
-assert(gv_color(x11,deeppink1)).
-assert(gv_color(x11,deeppink2)).
-assert(gv_color(x11,deeppink3)).
-assert(gv_color(x11,deeppink4)).
-assert(gv_color(x11,deepskyblue)).
-assert(gv_color(x11,deepskyblue1)).
-assert(gv_color(x11,deepskyblue2)).
-assert(gv_color(x11,deepskyblue3)).
-assert(gv_color(x11,deepskyblue4)).
-assert(gv_color(x11,dimgray)).
-assert(gv_color(x11,dimgrey)).
-assert(gv_color(x11,dodgerblue)).
-assert(gv_color(x11,dodgerblue1)).
-assert(gv_color(x11,dodgerblue2)).
-assert(gv_color(x11,dodgerblue3)).
-assert(gv_color(x11,dodgerblue4)).
-assert(gv_color(x11,firebrick)).
-assert(gv_color(x11,firebrick1)).
-assert(gv_color(x11,firebrick2)).
-assert(gv_color(x11,firebrick3)).
-assert(gv_color(x11,firebrick4)).
-assert(gv_color(x11,floralwhite)).
-assert(gv_color(x11,forestgreen)).
-assert(gv_color(x11,gainsboro)).
-assert(gv_color(x11,ghostwhite)).
-assert(gv_color(x11,gold)).
-assert(gv_color(x11,gold1)).
-assert(gv_color(x11,gold2)).
-assert(gv_color(x11,gold3)).
-assert(gv_color(x11,gold4)).
-assert(gv_color(x11,goldenrod)).
-assert(gv_color(x11,goldenrod1)).
-assert(gv_color(x11,goldenrod2)).
-assert(gv_color(x11,goldenrod3)).
-assert(gv_color(x11,goldenrod4)).
-assert(gv_color(x11,gray)).
-assert(gv_color(x11,gray0)).
-assert(gv_color(x11,gray1)).
-assert(gv_color(x11,gray10)).
-assert(gv_color(x11,gray100)).
-assert(gv_color(x11,gray11)).
-assert(gv_color(x11,gray12)).
-assert(gv_color(x11,gray13)).
-assert(gv_color(x11,gray14)).
-assert(gv_color(x11,gray15)).
-assert(gv_color(x11,gray16)).
-assert(gv_color(x11,gray17)).
-assert(gv_color(x11,gray18)).
-assert(gv_color(x11,gray19)).
-assert(gv_color(x11,gray2)).
-assert(gv_color(x11,gray20)).
-assert(gv_color(x11,gray21)).
-assert(gv_color(x11,gray22)).
-assert(gv_color(x11,gray23)).
-assert(gv_color(x11,gray24)).
-assert(gv_color(x11,gray25)).
-assert(gv_color(x11,gray26)).
-assert(gv_color(x11,gray27)).
-assert(gv_color(x11,gray28)).
-assert(gv_color(x11,gray29)).
-assert(gv_color(x11,gray3)).
-assert(gv_color(x11,gray30)).
-assert(gv_color(x11,gray31)).
-assert(gv_color(x11,gray32)).
-assert(gv_color(x11,gray33)).
-assert(gv_color(x11,gray34)).
-assert(gv_color(x11,gray35)).
-assert(gv_color(x11,gray36)).
-assert(gv_color(x11,gray37)).
-assert(gv_color(x11,gray38)).
-assert(gv_color(x11,gray39)).
-assert(gv_color(x11,gray4)).
-assert(gv_color(x11,gray40)).
-assert(gv_color(x11,gray41)).
-assert(gv_color(x11,gray42)).
-assert(gv_color(x11,gray43)).
-assert(gv_color(x11,gray44)).
-assert(gv_color(x11,gray45)).
-assert(gv_color(x11,gray46)).
-assert(gv_color(x11,gray47)).
-assert(gv_color(x11,gray48)).
-assert(gv_color(x11,gray49)).
-assert(gv_color(x11,gray5)).
-assert(gv_color(x11,gray50)).
-assert(gv_color(x11,gray51)).
-assert(gv_color(x11,gray52)).
-assert(gv_color(x11,gray53)).
-assert(gv_color(x11,gray54)).
-assert(gv_color(x11,gray55)).
-assert(gv_color(x11,gray56)).
-assert(gv_color(x11,gray57)).
-assert(gv_color(x11,gray58)).
-assert(gv_color(x11,gray59)).
-assert(gv_color(x11,gray6)).
-assert(gv_color(x11,gray60)).
-assert(gv_color(x11,gray61)).
-assert(gv_color(x11,gray62)).
-assert(gv_color(x11,gray63)).
-assert(gv_color(x11,gray64)).
-assert(gv_color(x11,gray65)).
-assert(gv_color(x11,gray66)).
-assert(gv_color(x11,gray67)).
-assert(gv_color(x11,gray68)).
-assert(gv_color(x11,gray69)).
-assert(gv_color(x11,gray7)).
-assert(gv_color(x11,gray70)).
-assert(gv_color(x11,gray71)).
-assert(gv_color(x11,gray72)).
-assert(gv_color(x11,gray73)).
-assert(gv_color(x11,gray74)).
-assert(gv_color(x11,gray75)).
-assert(gv_color(x11,gray76)).
-assert(gv_color(x11,gray77)).
-assert(gv_color(x11,gray78)).
-assert(gv_color(x11,gray79)).
-assert(gv_color(x11,gray8)).
-assert(gv_color(x11,gray80)).
-assert(gv_color(x11,gray81)).
-assert(gv_color(x11,gray82)).
-assert(gv_color(x11,gray83)).
-assert(gv_color(x11,gray84)).
-assert(gv_color(x11,gray85)).
-assert(gv_color(x11,gray86)).
-assert(gv_color(x11,gray87)).
-assert(gv_color(x11,gray88)).
-assert(gv_color(x11,gray89)).
-assert(gv_color(x11,gray9)).
-assert(gv_color(x11,gray90)).
-assert(gv_color(x11,gray91)).
-assert(gv_color(x11,gray92)).
-assert(gv_color(x11,gray93)).
-assert(gv_color(x11,gray94)).
-assert(gv_color(x11,gray95)).
-assert(gv_color(x11,gray96)).
-assert(gv_color(x11,gray97)).
-assert(gv_color(x11,gray98)).
-assert(gv_color(x11,gray99)).
-assert(gv_color(x11,green)).
-assert(gv_color(x11,green1)).
-assert(gv_color(x11,green2)).
-assert(gv_color(x11,green3)).
-assert(gv_color(x11,green4)).
-assert(gv_color(x11,greenyellow)).
-assert(gv_color(x11,grey)).
-assert(gv_color(x11,grey0)).
-assert(gv_color(x11,grey1)).
-assert(gv_color(x11,grey10)).
-assert(gv_color(x11,grey100)).
-assert(gv_color(x11,grey11)).
-assert(gv_color(x11,grey12)).
-assert(gv_color(x11,grey13)).
-assert(gv_color(x11,grey14)).
-assert(gv_color(x11,grey15)).
-assert(gv_color(x11,grey16)).
-assert(gv_color(x11,grey17)).
-assert(gv_color(x11,grey18)).
-assert(gv_color(x11,grey19)).
-assert(gv_color(x11,grey2)).
-assert(gv_color(x11,grey20)).
-assert(gv_color(x11,grey21)).
-assert(gv_color(x11,grey22)).
-assert(gv_color(x11,grey23)).
-assert(gv_color(x11,grey24)).
-assert(gv_color(x11,grey25)).
-assert(gv_color(x11,grey26)).
-assert(gv_color(x11,grey27)).
-assert(gv_color(x11,grey28)).
-assert(gv_color(x11,grey29)).
-assert(gv_color(x11,grey3)).
-assert(gv_color(x11,grey30)).
-assert(gv_color(x11,grey31)).
-assert(gv_color(x11,grey32)).
-assert(gv_color(x11,grey33)).
-assert(gv_color(x11,grey34)).
-assert(gv_color(x11,grey35)).
-assert(gv_color(x11,grey36)).
-assert(gv_color(x11,grey37)).
-assert(gv_color(x11,grey38)).
-assert(gv_color(x11,grey39)).
-assert(gv_color(x11,grey4)).
-assert(gv_color(x11,grey40)).
-assert(gv_color(x11,grey41)).
-assert(gv_color(x11,grey42)).
-assert(gv_color(x11,grey43)).
-assert(gv_color(x11,grey44)).
-assert(gv_color(x11,grey45)).
-assert(gv_color(x11,grey46)).
-assert(gv_color(x11,grey47)).
-assert(gv_color(x11,grey48)).
-assert(gv_color(x11,grey49)).
-assert(gv_color(x11,grey5)).
-assert(gv_color(x11,grey50)).
-assert(gv_color(x11,grey51)).
-assert(gv_color(x11,grey52)).
-assert(gv_color(x11,grey53)).
-assert(gv_color(x11,grey54)).
-assert(gv_color(x11,grey55)).
-assert(gv_color(x11,grey56)).
-assert(gv_color(x11,grey57)).
-assert(gv_color(x11,grey58)).
-assert(gv_color(x11,grey59)).
-assert(gv_color(x11,grey6)).
-assert(gv_color(x11,grey60)).
-assert(gv_color(x11,grey61)).
-assert(gv_color(x11,grey62)).
-assert(gv_color(x11,grey63)).
-assert(gv_color(x11,grey64)).
-assert(gv_color(x11,grey65)).
-assert(gv_color(x11,grey66)).
-assert(gv_color(x11,grey67)).
-assert(gv_color(x11,grey68)).
-assert(gv_color(x11,grey69)).
-assert(gv_color(x11,grey7)).
-assert(gv_color(x11,grey70)).
-assert(gv_color(x11,grey71)).
-assert(gv_color(x11,grey72)).
-assert(gv_color(x11,grey73)).
-assert(gv_color(x11,grey74)).
-assert(gv_color(x11,grey75)).
-assert(gv_color(x11,grey76)).
-assert(gv_color(x11,grey77)).
-assert(gv_color(x11,grey78)).
-assert(gv_color(x11,grey79)).
-assert(gv_color(x11,grey8)).
-assert(gv_color(x11,grey80)).
-assert(gv_color(x11,grey81)).
-assert(gv_color(x11,grey82)).
-assert(gv_color(x11,grey83)).
-assert(gv_color(x11,grey84)).
-assert(gv_color(x11,grey85)).
-assert(gv_color(x11,grey86)).
-assert(gv_color(x11,grey87)).
-assert(gv_color(x11,grey88)).
-assert(gv_color(x11,grey89)).
-assert(gv_color(x11,grey9)).
-assert(gv_color(x11,grey90)).
-assert(gv_color(x11,grey91)).
-assert(gv_color(x11,grey92)).
-assert(gv_color(x11,grey93)).
-assert(gv_color(x11,grey94)).
-assert(gv_color(x11,grey95)).
-assert(gv_color(x11,grey96)).
-assert(gv_color(x11,grey97)).
-assert(gv_color(x11,grey98)).
-assert(gv_color(x11,grey99)).
-assert(gv_color(x11,honeydew)).
-assert(gv_color(x11,honeydew1)).
-assert(gv_color(x11,honeydew2)).
-assert(gv_color(x11,honeydew3)).
-assert(gv_color(x11,honeydew4)).
-assert(gv_color(x11,hotpink)).
-assert(gv_color(x11,hotpink1)).
-assert(gv_color(x11,hotpink2)).
-assert(gv_color(x11,hotpink3)).
-assert(gv_color(x11,hotpink4)).
-assert(gv_color(x11,indianred)).
-assert(gv_color(x11,indianred1)).
-assert(gv_color(x11,indianred2)).
-assert(gv_color(x11,indianred3)).
-assert(gv_color(x11,indianred4)).
-assert(gv_color(x11,indigo)).
-assert(gv_color(x11,invis)).
-assert(gv_color(x11,ivory)).
-assert(gv_color(x11,ivory1)).
-assert(gv_color(x11,ivory2)).
-assert(gv_color(x11,ivory3)).
-assert(gv_color(x11,ivory4)).
-assert(gv_color(x11,khaki)).
-assert(gv_color(x11,khaki1)).
-assert(gv_color(x11,khaki2)).
-assert(gv_color(x11,khaki3)).
-assert(gv_color(x11,khaki4)).
-assert(gv_color(x11,lavender)).
-assert(gv_color(x11,lavenderblush)).
-assert(gv_color(x11,lavenderblush1)).
-assert(gv_color(x11,lavenderblush2)).
-assert(gv_color(x11,lavenderblush3)).
-assert(gv_color(x11,lavenderblush4)).
-assert(gv_color(x11,lawngreen)).
-assert(gv_color(x11,lemonchiffon)).
-assert(gv_color(x11,lemonchiffon1)).
-assert(gv_color(x11,lemonchiffon2)).
-assert(gv_color(x11,lemonchiffon3)).
-assert(gv_color(x11,lemonchiffon4)).
-assert(gv_color(x11,lightblue)).
-assert(gv_color(x11,lightblue1)).
-assert(gv_color(x11,lightblue2)).
-assert(gv_color(x11,lightblue3)).
-assert(gv_color(x11,lightblue4)).
-assert(gv_color(x11,lightcoral)).
-assert(gv_color(x11,lightcyan)).
-assert(gv_color(x11,lightcyan1)).
-assert(gv_color(x11,lightcyan2)).
-assert(gv_color(x11,lightcyan3)).
-assert(gv_color(x11,lightcyan4)).
-assert(gv_color(x11,lightgoldenrod)).
-assert(gv_color(x11,lightgoldenrod1)).
-assert(gv_color(x11,lightgoldenrod2)).
-assert(gv_color(x11,lightgoldenrod3)).
-assert(gv_color(x11,lightgoldenrod4)).
-assert(gv_color(x11,lightgoldenrodyellow)).
-assert(gv_color(x11,lightgray)).
-assert(gv_color(x11,lightgrey)).
-assert(gv_color(x11,lightpink)).
-assert(gv_color(x11,lightpink1)).
-assert(gv_color(x11,lightpink2)).
-assert(gv_color(x11,lightpink3)).
-assert(gv_color(x11,lightpink4)).
-assert(gv_color(x11,lightsalmon)).
-assert(gv_color(x11,lightsalmon1)).
-assert(gv_color(x11,lightsalmon2)).
-assert(gv_color(x11,lightsalmon3)).
-assert(gv_color(x11,lightsalmon4)).
-assert(gv_color(x11,lightseagreen)).
-assert(gv_color(x11,lightskyblue)).
-assert(gv_color(x11,lightskyblue1)).
-assert(gv_color(x11,lightskyblue2)).
-assert(gv_color(x11,lightskyblue3)).
-assert(gv_color(x11,lightskyblue4)).
-assert(gv_color(x11,lightslateblue)).
-assert(gv_color(x11,lightslategray)).
-assert(gv_color(x11,lightslategrey)).
-assert(gv_color(x11,lightsteelblue)).
-assert(gv_color(x11,lightsteelblue1)).
-assert(gv_color(x11,lightsteelblue2)).
-assert(gv_color(x11,lightsteelblue3)).
-assert(gv_color(x11,lightsteelblue4)).
-assert(gv_color(x11,lightyellow)).
-assert(gv_color(x11,lightyellow1)).
-assert(gv_color(x11,lightyellow2)).
-assert(gv_color(x11,lightyellow3)).
-assert(gv_color(x11,lightyellow4)).
-assert(gv_color(x11,limegreen)).
-assert(gv_color(x11,linen)).
-assert(gv_color(x11,magenta)).
-assert(gv_color(x11,magenta1)).
-assert(gv_color(x11,magenta2)).
-assert(gv_color(x11,magenta3)).
-assert(gv_color(x11,magenta4)).
-assert(gv_color(x11,maroon)).
-assert(gv_color(x11,maroon1)).
-assert(gv_color(x11,maroon2)).
-assert(gv_color(x11,maroon3)).
-assert(gv_color(x11,maroon4)).
-assert(gv_color(x11,mediumaquamarine)).
-assert(gv_color(x11,mediumblue)).
-assert(gv_color(x11,mediumorchid)).
-assert(gv_color(x11,mediumorchid1)).
-assert(gv_color(x11,mediumorchid2)).
-assert(gv_color(x11,mediumorchid3)).
-assert(gv_color(x11,mediumorchid4)).
-assert(gv_color(x11,mediumpurple)).
-assert(gv_color(x11,mediumpurple1)).
-assert(gv_color(x11,mediumpurple2)).
-assert(gv_color(x11,mediumpurple3)).
-assert(gv_color(x11,mediumpurple4)).
-assert(gv_color(x11,mediumseagreen)).
-assert(gv_color(x11,mediumslateblue)).
-assert(gv_color(x11,mediumspringgreen)).
-assert(gv_color(x11,mediumturquoise)).
-assert(gv_color(x11,mediumvioletred)).
-assert(gv_color(x11,midnightblue)).
-assert(gv_color(x11,mintcream)).
-assert(gv_color(x11,mistyrose)).
-assert(gv_color(x11,mistyrose1)).
-assert(gv_color(x11,mistyrose2)).
-assert(gv_color(x11,mistyrose3)).
-assert(gv_color(x11,mistyrose4)).
-assert(gv_color(x11,moccasin)).
-assert(gv_color(x11,navajowhite)).
-assert(gv_color(x11,navajowhite1)).
-assert(gv_color(x11,navajowhite2)).
-assert(gv_color(x11,navajowhite3)).
-assert(gv_color(x11,navajowhite4)).
-assert(gv_color(x11,navy)).
-assert(gv_color(x11,navyblue)).
-assert(gv_color(x11,none)).
-assert(gv_color(x11,oldlace)).
-assert(gv_color(x11,olivedrab)).
-assert(gv_color(x11,olivedrab1)).
-assert(gv_color(x11,olivedrab2)).
-assert(gv_color(x11,olivedrab3)).
-assert(gv_color(x11,olivedrab4)).
-assert(gv_color(x11,orange)).
-assert(gv_color(x11,orange1)).
-assert(gv_color(x11,orange2)).
-assert(gv_color(x11,orange3)).
-assert(gv_color(x11,orange4)).
-assert(gv_color(x11,orangered)).
-assert(gv_color(x11,orangered1)).
-assert(gv_color(x11,orangered2)).
-assert(gv_color(x11,orangered3)).
-assert(gv_color(x11,orangered4)).
-assert(gv_color(x11,orchid)).
-assert(gv_color(x11,orchid1)).
-assert(gv_color(x11,orchid2)).
-assert(gv_color(x11,orchid3)).
-assert(gv_color(x11,orchid4)).
-assert(gv_color(x11,palegoldenrod)).
-assert(gv_color(x11,palegreen)).
-assert(gv_color(x11,palegreen1)).
-assert(gv_color(x11,palegreen2)).
-assert(gv_color(x11,palegreen3)).
-assert(gv_color(x11,palegreen4)).
-assert(gv_color(x11,paleturquoise)).
-assert(gv_color(x11,paleturquoise1)).
-assert(gv_color(x11,paleturquoise2)).
-assert(gv_color(x11,paleturquoise3)).
-assert(gv_color(x11,paleturquoise4)).
-assert(gv_color(x11,palevioletred)).
-assert(gv_color(x11,palevioletred1)).
-assert(gv_color(x11,palevioletred2)).
-assert(gv_color(x11,palevioletred3)).
-assert(gv_color(x11,palevioletred4)).
-assert(gv_color(x11,papayawhip)).
-assert(gv_color(x11,peachpuff)).
-assert(gv_color(x11,peachpuff1)).
-assert(gv_color(x11,peachpuff2)).
-assert(gv_color(x11,peachpuff3)).
-assert(gv_color(x11,peachpuff4)).
-assert(gv_color(x11,peru)).
-assert(gv_color(x11,pink)).
-assert(gv_color(x11,pink1)).
-assert(gv_color(x11,pink2)).
-assert(gv_color(x11,pink3)).
-assert(gv_color(x11,pink4)).
-assert(gv_color(x11,plum)).
-assert(gv_color(x11,plum1)).
-assert(gv_color(x11,plum2)).
-assert(gv_color(x11,plum3)).
-assert(gv_color(x11,plum4)).
-assert(gv_color(x11,powderblue)).
-assert(gv_color(x11,purple)).
-assert(gv_color(x11,purple1)).
-assert(gv_color(x11,purple2)).
-assert(gv_color(x11,purple3)).
-assert(gv_color(x11,purple4)).
-assert(gv_color(x11,red)).
-assert(gv_color(x11,red1)).
-assert(gv_color(x11,red2)).
-assert(gv_color(x11,red3)).
-assert(gv_color(x11,red4)).
-assert(gv_color(x11,rosybrown)).
-assert(gv_color(x11,rosybrown1)).
-assert(gv_color(x11,rosybrown2)).
-assert(gv_color(x11,rosybrown3)).
-assert(gv_color(x11,rosybrown4)).
-assert(gv_color(x11,royalblue)).
-assert(gv_color(x11,royalblue1)).
-assert(gv_color(x11,royalblue2)).
-assert(gv_color(x11,royalblue3)).
-assert(gv_color(x11,royalblue4)).
-assert(gv_color(x11,saddlebrown)).
-assert(gv_color(x11,salmon)).
-assert(gv_color(x11,salmon1)).
-assert(gv_color(x11,salmon2)).
-assert(gv_color(x11,salmon3)).
-assert(gv_color(x11,salmon4)).
-assert(gv_color(x11,sandybrown)).
-assert(gv_color(x11,seagreen)).
-assert(gv_color(x11,seagreen1)).
-assert(gv_color(x11,seagreen2)).
-assert(gv_color(x11,seagreen3)).
-assert(gv_color(x11,seagreen4)).
-assert(gv_color(x11,seashell)).
-assert(gv_color(x11,seashell1)).
-assert(gv_color(x11,seashell2)).
-assert(gv_color(x11,seashell3)).
-assert(gv_color(x11,seashell4)).
-assert(gv_color(x11,sienna)).
-assert(gv_color(x11,sienna1)).
-assert(gv_color(x11,sienna2)).
-assert(gv_color(x11,sienna3)).
-assert(gv_color(x11,sienna4)).
-assert(gv_color(x11,skyblue)).
-assert(gv_color(x11,skyblue1)).
-assert(gv_color(x11,skyblue2)).
-assert(gv_color(x11,skyblue3)).
-assert(gv_color(x11,skyblue4)).
-assert(gv_color(x11,slateblue)).
-assert(gv_color(x11,slateblue1)).
-assert(gv_color(x11,slateblue2)).
-assert(gv_color(x11,slateblue3)).
-assert(gv_color(x11,slateblue4)).
-assert(gv_color(x11,slategray)).
-assert(gv_color(x11,slategray1)).
-assert(gv_color(x11,slategray2)).
-assert(gv_color(x11,slategray3)).
-assert(gv_color(x11,slategray4)).
-assert(gv_color(x11,slategrey)).
-assert(gv_color(x11,snow)).
-assert(gv_color(x11,snow1)).
-assert(gv_color(x11,snow2)).
-assert(gv_color(x11,snow3)).
-assert(gv_color(x11,snow4)).
-assert(gv_color(x11,springgreen)).
-assert(gv_color(x11,springgreen1)).
-assert(gv_color(x11,springgreen2)).
-assert(gv_color(x11,springgreen3)).
-assert(gv_color(x11,springgreen4)).
-assert(gv_color(x11,steelblue)).
-assert(gv_color(x11,steelblue1)).
-assert(gv_color(x11,steelblue2)).
-assert(gv_color(x11,steelblue3)).
-assert(gv_color(x11,steelblue4)).
-assert(gv_color(x11,tan)).
-assert(gv_color(x11,tan1)).
-assert(gv_color(x11,tan2)).
-assert(gv_color(x11,tan3)).
-assert(gv_color(x11,tan4)).
-assert(gv_color(x11,thistle)).
-assert(gv_color(x11,thistle1)).
-assert(gv_color(x11,thistle2)).
-assert(gv_color(x11,thistle3)).
-assert(gv_color(x11,thistle4)).
-assert(gv_color(x11,tomato)).
-assert(gv_color(x11,tomato1)).
-assert(gv_color(x11,tomato2)).
-assert(gv_color(x11,tomato3)).
-assert(gv_color(x11,tomato4)).
-assert(gv_color(x11,transparent)).
-assert(gv_color(x11,turquoise)).
-assert(gv_color(x11,turquoise1)).
-assert(gv_color(x11,turquoise2)).
-assert(gv_color(x11,turquoise3)).
-assert(gv_color(x11,turquoise4)).
-assert(gv_color(x11,violet)).
-assert(gv_color(x11,violetred)).
-assert(gv_color(x11,violetred1)).
-assert(gv_color(x11,violetred2)).
-assert(gv_color(x11,violetred3)).
-assert(gv_color(x11,violetred4)).
-assert(gv_color(x11,wheat)).
-assert(gv_color(x11,wheat1)).
-assert(gv_color(x11,wheat2)).
-assert(gv_color(x11,wheat3)).
-assert(gv_color(x11,wheat4)).
-assert(gv_color(x11,white)).
-assert(gv_color(x11,whitesmoke)).
-assert(gv_color(x11,yellow)).
-assert(gv_color(x11,yellow1)).
-assert(gv_color(x11,yellow2)).
-assert(gv_color(x11,yellow3)).
-assert(gv_color(x11,yellow4)).
-assert(gv_color(x11,yellowgreen)).
-assert(gv_color(svg,aliceblue)).
-assert(gv_color(svg,antiquewhite)).
-assert(gv_color(svg,aqua)).
-assert(gv_color(svg,aquamarine)).
-assert(gv_color(svg,azure)).
-assert(gv_color(svg,beige)).
-assert(gv_color(svg,bisque)).
-assert(gv_color(svg,black)).
-assert(gv_color(svg,blanchedalmond)).
-assert(gv_color(svg,blue)).
-assert(gv_color(svg,blueviolet)).
-assert(gv_color(svg,brown)).
-assert(gv_color(svg,burlywood)).
-assert(gv_color(svg,cadetblue)).
-assert(gv_color(svg,chartreuse)).
-assert(gv_color(svg,chocolate)).
-assert(gv_color(svg,coral)).
-assert(gv_color(svg,cornflowerblue)).
-assert(gv_color(svg,cornsilk)).
-assert(gv_color(svg,crimson)).
-assert(gv_color(svg,cyan)).
-assert(gv_color(svg,darkblue)).
-assert(gv_color(svg,darkcyan)).
-assert(gv_color(svg,darkgoldenrod)).
-assert(gv_color(svg,darkgray)).
-assert(gv_color(svg,darkgreen)).
-assert(gv_color(svg,darkgrey)).
-assert(gv_color(svg,darkkhaki)).
-assert(gv_color(svg,darkmagenta)).
-assert(gv_color(svg,darkolivegreen)).
-assert(gv_color(svg,darkorange)).
-assert(gv_color(svg,darkorchid)).
-assert(gv_color(svg,darkred)).
-assert(gv_color(svg,darksalmon)).
-assert(gv_color(svg,darkseagreen)).
-assert(gv_color(svg,darkslateblue)).
-assert(gv_color(svg,darkslategray)).
-assert(gv_color(svg,darkslategrey)).
-assert(gv_color(svg,darkturquoise)).
-assert(gv_color(svg,darkviolet)).
-assert(gv_color(svg,deeppink)).
-assert(gv_color(svg,deepskyblue)).
-assert(gv_color(svg,dimgray)).
-assert(gv_color(svg,dimgrey)).
-assert(gv_color(svg,dodgerblue)).
-assert(gv_color(svg,firebrick)).
-assert(gv_color(svg,floralwhite)).
-assert(gv_color(svg,forestgreen)).
-assert(gv_color(svg,fuchsia)).
-assert(gv_color(svg,gainsboro)).
-assert(gv_color(svg,ghostwhite)).
-assert(gv_color(svg,gold)).
-assert(gv_color(svg,goldenrod)).
-assert(gv_color(svg,gray)).
-assert(gv_color(svg,grey)).
-assert(gv_color(svg,green)).
-assert(gv_color(svg,greenyellow)).
-assert(gv_color(svg,honeydew)).
-assert(gv_color(svg,hotpink)).
-assert(gv_color(svg,indianred)).
-assert(gv_color(svg,indigo)).
-assert(gv_color(svg,ivory)).
-assert(gv_color(svg,khaki)).
-assert(gv_color(svg,lavender)).
-assert(gv_color(svg,lavenderblush)).
-assert(gv_color(svg,lawngreen)).
-assert(gv_color(svg,lemonchiffon)).
-assert(gv_color(svg,lightblue)).
-assert(gv_color(svg,lightcoral)).
-assert(gv_color(svg,lightcyan)).
-assert(gv_color(svg,lightgoldenrodyellow)).
-assert(gv_color(svg,lightgray)).
-assert(gv_color(svg,lightgreen)).
-assert(gv_color(svg,lightgrey)).
-assert(gv_color(svg,lightpink)).
-assert(gv_color(svg,lightsalmon)).
-assert(gv_color(svg,lightseagreen)).
-assert(gv_color(svg,lightskyblue)).
-assert(gv_color(svg,lightslategray)).
-assert(gv_color(svg,lightslategrey)).
-assert(gv_color(svg,lightsteelblue)).
-assert(gv_color(svg,lightyellow)).
-assert(gv_color(svg,lime)).
-assert(gv_color(svg,limegreen)).
-assert(gv_color(svg,linen)).
-assert(gv_color(svg,magenta)).
-assert(gv_color(svg,maroon)).
-assert(gv_color(svg,mediumaquamarine)).
-assert(gv_color(svg,mediumblue)).
-assert(gv_color(svg,mediumorchid)).
-assert(gv_color(svg,mediumpurple)).
-assert(gv_color(svg,mediumseagreen)).
-assert(gv_color(svg,mediumslateblue)).
-assert(gv_color(svg,mediumspringgreen)).
-assert(gv_color(svg,mediumturquoise)).
-assert(gv_color(svg,mediumvioletred)).
-assert(gv_color(svg,midnightblue)).
-assert(gv_color(svg,mintcream)).
-assert(gv_color(svg,mistyrose)).
-assert(gv_color(svg,moccasin)).
-assert(gv_color(svg,navajowhite)).
-assert(gv_color(svg,navy)).
-assert(gv_color(svg,oldlace)).
-assert(gv_color(svg,olive)).
-assert(gv_color(svg,olivedrab)).
-assert(gv_color(svg,orange)).
-assert(gv_color(svg,orangered)).
-assert(gv_color(svg,orchid)).
-assert(gv_color(svg,palegoldenrod)).
-assert(gv_color(svg,palegreen)).
-assert(gv_color(svg,paleturquoise)).
-assert(gv_color(svg,palevioletred)).
-assert(gv_color(svg,papayawhip)).
-assert(gv_color(svg,peachpuff)).
-assert(gv_color(svg,peru)).
-assert(gv_color(svg,pink)).
-assert(gv_color(svg,plum)).
-assert(gv_color(svg,powderblue)).
-assert(gv_color(svg,purple)).
-assert(gv_color(svg,red)).
-assert(gv_color(svg,rosybrown)).
-assert(gv_color(svg,royalblue)).
-assert(gv_color(svg,saddlebrown)).
-assert(gv_color(svg,salmon)).
-assert(gv_color(svg,sandybrown)).
-assert(gv_color(svg,seagreen)).
-assert(gv_color(svg,seashell)).
-assert(gv_color(svg,sienna)).
-assert(gv_color(svg,silver)).
-assert(gv_color(svg,skyblue)).
-assert(gv_color(svg,slateblue)).
-assert(gv_color(svg,slategray)).
-assert(gv_color(svg,slategrey)).
-assert(gv_color(svg,snow)).
-assert(gv_color(svg,springgreen)).
-assert(gv_color(svg,steelblue)).
-assert(gv_color(svg,tan)).
-assert(gv_color(svg,teal)).
-assert(gv_color(svg,thistle)).
-assert(gv_color(svg,tomato)).
-assert(gv_color(svg,turquoise)).
-assert(gv_color(svg,violet)).
-assert(gv_color(svg,wheat)).
-assert(gv_color(svg,white)).
-assert(gv_color(svg,whitesmoke)).
-assert(gv_color(svg,yellow)).
-assert(gv_color(svg,yellowgreen)).
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index fa79bea..0c3755c 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -7,6 +7,7 @@</p>

<pre><code> colorList//1 % +Pairs:list(pair(compound,float))
</code></pre>

<p>   ]
 ).
+:&ndash; ensure_loaded(library(&lsquo;gv/gv_color.data&rsquo;)).</p>

<p> /** <module> GraphViz color</p>

<p>@@ -17,23 +18,11 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(debug_ext)).
 :&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_content)).
&ndash;:&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(msg_ext)).
 :&ndash; use_module(library(os/file_ext)).
&ndash;:&ndash; use_module(library(persistency)).
&ndash;:&ndash; use_module(library(xpath)).</p>

<h2>&ndash;:&ndash; use_module(library(xpath/xpath_table)).</h2>

<h2>&ndash;%! gv_color(?Colorscheme:oneof([svg,x11]), ?Color:atom) is nondet.</h2>

<h2>&ndash;:&ndash; persistent(gv_color(colorscheme:oneof([svg,x11]),color:atom)).</h2>

<p>&ndash;:&ndash; initialization(gv_color_init).</p>

<p>@@ -79,69 +68,3 @@ wc(Color-Float) &mdash;>
 wc_weight(Float) &mdash;>
   &ldquo;;&rdquo;,</p>

<h2>   float(Float).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<h2>&ndash;% INITIALIZATION %</h2>

<h2>&ndash;%! gv_color_download is det.</h2>

<p>-gv_color_download:&ndash;
&ndash;  verbose(
&ndash;    gv_color_download0,
&ndash;    &lsquo;updating the GraphViz color table&rsquo;</p>

<h2>&ndash;  ).</h2>

<p>-gv_color_download0:&ndash;
&ndash;  gv_color_uri(Uri),
&ndash;  html_download(Uri, Dom),
&ndash;  xpath_chk(Dom, //table(1), TableDom1),
&ndash;  xpath_chk(Dom, //table(2), TableDom2),</p>

<h2>&ndash;  maplist(assert_color_table, [x11,svg], [TableDom1,TableDom2]).</h2>

<p>&ndash;
-assert_color_table(Colorscheme, TableDom):&ndash;
&ndash;  xpath_table(TableDom, _, Rows),
&ndash;  append(Rows, Cells),
&ndash;  forall(
&ndash;    member(Cell, Cells),
&ndash;    assert_gv_color(Colorscheme, Cell)</p>

<h2>&ndash;  ).</h2>

<p>&ndash;</p>

<h2>&ndash;%! gv_color_file(-File:atom) is det.</h2>

<p>-gv_color_file(File):&ndash;</p>

<h2>&ndash;  absolute_file_name(&lsquo;gv_color.log&rsquo;, File, [access(write)]).</h2>

<p>&ndash;</p>

<h2>&ndash;%! gv_color_init is det.</h2>

<p>-gv_color_init:&ndash;
&ndash;  gv_color_file(File),
&ndash;  (   exists_file(File)
&ndash;  &ndash;>  true
&ndash;  ;   touch(File)
&ndash;  ),
&ndash;  db_attach(File, []),
&ndash;  file_age(File, Age),</p>

<h2>&ndash;  gv_color_update(Age).</h2>

<p>&ndash;</p>

<h2>&ndash;%! gv_color_update(+Age:float) is det.</h2>

<p>&ndash;% The persistent store is still fresh.
-gv_color_update(Age):&ndash;
&ndash;  once(gv_color(<em>, </em>)),
&ndash;  Age &lt; 8640000, !.
&ndash;% The persistent store has become stale, so refresh it.
-gv_color_update(<em>):&ndash;
&ndash;  retractall_gv_color(</em>, _),</p>

<h2>&ndash;  gv_color_download.</h2>

<p>&ndash;</p>

<h2>&ndash;%! gv_color_uri(-Url:url) is det.</h2>

<p>-gv_color_uri(&lsquo;<a href="http://www.graphviz.org/doc/info/colors.html">http://www.graphviz.org/doc/info/colors.html</a>&rsquo;).</p>

<p>```</p>

<h2 id="132"> 132: 正在比较变动前 603344f 和变动后 2679253 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index 7fd5a58..43ff053 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -17,7 +17,8 @@
 :&ndash; use_module(library(error)).
 :&ndash; use_module(library(gv/gv_graph)).
 :&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(process)).
+:&ndash; use_module(library(os/external_program)).
+:&ndash; use_module(library(os/process_ext)).
 :&ndash; use_module(library(string_ext)).</p>

<p> :&ndash; predicate_options(gv_export/3, 3, [
@@ -28,6 +29,11 @@</p>

<pre><code>  output(+atom)
]).
</code></pre>

<p>+:&ndash; dynamic(user:module_uses/2).
+:&ndash; multifile(user:module_uses/2).
+
+user:module_uses(gv_file, program(dot)).
+</p>

<p>@@ -94,10 +100,9 @@ file_to_gv(InputFile, OutputFile, Opts):&ndash;
   % Run the GraphViz conversion command in the shell.
   format(atom(OutputTypeFlag), &ldquo;-T~a&rdquo;, [OutputType]),
   format(atom(OutputFileFlag), &ldquo;-o~a&rdquo;, [OutputFile]),
&ndash;  process_create(
+  run_process(</p>

<pre><code> path(Method),
</code></pre>

<ul>
<li> [OutputTypeFlag,file(InputFile),OutputFileFlag],</li>
<li> []</li>
<li> [OutputTypeFlag,file(InputFile),OutputFileFlag]
).</li>
</ul>


<p>```</p>

<h2 id="133"> 133: 正在比较变动前 2679253 和变动后 a5e20f8 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_export.pl b/prolog/fca/fca_export.pl
new file mode 100644
index 0000000..562a035
&mdash;&ndash; /dev/null
+++ b/prolog/fca/fca_export.pl
@@ -0,0 +1,87 @@
+:&ndash; module(
+  fca_export,
+  [
+    fca_export/2, % +Context:compound
+                  % ?File:atom
+    fca_export/3, % +Context:compound
+                  % ?File:atom
+                  % +Options:list(compound)
+    fca_label_attributes/2, % +Concept:compound
+                            % -Label:atom
+    fca_label_concept/2, % +Concept:compound
+                         % -Label:atom
+    fca_label_objects/2 % +Concept:compound
+                        % -Label:atom
+  ]
+).
+
+/<em>* <module> FCA export
+
+@author Wouter Beek
+@version 2015/11
+</em>/
+
+:&ndash; use_module(library(dcg/dcg_collection)).
+:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(fca/fca)).
+:&ndash; use_module(library(graph/build_export_graph)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(option)).
+
+:&ndash; predicate_options(fca_export/3, 3, [
+     pass_to(build_export_graph/3, 3),
+     pass_to(gv_export/3, 3)
+   ]).
+
+
+
+
+
+%! fca_export(+Context:compound, ?File:atom) is det.
+% Wrapper around fca_export/3 with default options.
+
+fca_export(Context, File):&ndash;
+  fca_export(Context, File, []).
+
+
+%! fca_export(+Context:compound, ?File:atom, +Options:list(compound)) is det.
+
+fca_export(Context, File, Opts1):&ndash;
+  fca_lattice(Context, Lattice),
+  option(concept_label(VLabel_2), Opts1, fca_export:fca_label_concept),
+  merge_options([vertex_label(VLabel_2)], Opts1, Opts2),
+  build_export_graph(Lattice, ExportG, Opts2),
+  gv_export(ExportG, File, Opts1).
+
+
+
+%! fca_label_attributes(+Concept:compound, -Label:atom) is det.
+% Writes a concept label displaying its attributes.
+
+fca_label_attributes(Concept, Lbl):&ndash;
+  string_phrase(dcg_attributes(Concept), Lbl).
+
+dcg_attributes(concept(<em>,As)) &mdash;>
+  set(As).
+
+
+
+%! fca_label_attributes(+Concept:compound, -Label:atom) is det.
+% Writes a concept label display both its attributes and objects.
+
+fca_label_concept(Concept, Lbl):&ndash;
+  string_phrase(dcg_concept(Concept), Lbl).
+
+dcg_concept(Concept) &mdash;>
+  pair(dcg_objects(Concept), dcg_attributes(Concept)).
+
+
+
+%! fca_label_objects(+Concept:compound, -Label:atom) is det.
+% Writes a concept label displaying its object.
+
+fca_label_objects(Concept, Lbl):&ndash;
+  string_phrase(dcg_objects(Concept), Lbl).
+
+dcg_objects(concept(Os,</em>)) &mdash;>
+  set(Os).
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index 43ff053..4cf12a8 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -1,8 +1,10 @@
 :&ndash; module(
   gv_file,
   [
+    gv_export/2, % +ExportGraph:compound
+                 % ?File:atom</p>

<pre><code> gv_export/3 % +ExportGraph:compound
</code></pre>

<ul>
<li><pre><code>         % +OutputFile:atom
</code></pre></li>
<li><pre><code>         % ?File:atom
         % +Options:list(nvpair)
</code></pre>

<p>]
).
@@ -10,7 +12,7 @@
/** <module> GraphViz file</p></li>
</ul>


<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/10
+@version 2015/07, 2015/10-2015/11
 */</p>

<p> :&ndash; use_module(library(code_ext)).
@@ -38,7 +40,14 @@ user:module_uses(gv_file, program(dot)).</p>

<p>&ndash;%! gv_export(+ExportGraph:compound, +File:atom, +Options:list(compound)) is det.
+%! gv_export(+ExportGraph:compound, ?File:atom) is det.
+% Wrapper around gv_export/3 with default options.
+
+gv_export(ExportG, File):&ndash;
+  gv_export(ExportG, File, []).
+
+
+%! gv_export(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
@@ -68,7 +77,7 @@ gv_export(ExportG, File, Opts):&ndash;</p>

<p> %! file_to_gv(
 %!   +InputFile:atom,
&ndash;%!   +OutputFile:atom,
+%!   ?OutputFile:atom,
 %!   +Options:list(compound)
 %! ) is det.
 % Converts a GraphViz DOT file to an image file, using a specific
@@ -101,7 +110,7 @@ file_to_gv(InputFile, OutputFile, Opts):&ndash;
   format(atom(OutputTypeFlag), &ldquo;-T~a&rdquo;, [OutputType]),
   format(atom(OutputFileFlag), &ldquo;-o~a&rdquo;, [OutputFile]),
   run_process(
&ndash;    path(Method),
+    Method,</p>

<pre><code> [OutputTypeFlag,file(InputFile),OutputFileFlag]
</code></pre>

<p>   ).</p>

<p>diff &mdash;git a/test/test.pl b/test/test.pl
index ee92ae6..5ce2db0 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -1,3 +1,5 @@
+%/fca
+  :&ndash; use_module(library(fca/fca_export)).
 %/graph
   :&ndash; use_module(library(graph/build_export_graph)).
 %/gv</p>

<p>```</p>

<h2 id="134"> 134: 正在比较变动前 a5e20f8 和变动后 bc3c502 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_export.pl b/prolog/fca/fca_export.pl
index 562a035..249d104 100644
&mdash;&ndash; a/prolog/fca/fca_export.pl
+++ b/prolog/fca/fca_export.pl
@@ -27,6 +27,7 @@
 :&ndash; use_module(library(graph/build_export_graph)).
 :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(option)).
+:&ndash; use_module(library(ordsets)).</p>

<p> :&ndash; predicate_options(fca_export/3, 3, [</p>

<pre><code>  pass_to(build_export_graph/3, 3),
</code></pre>

<p>@@ -47,12 +48,16 @@ fca_export(Context, File):&ndash;
 %! fca_export(+Context:compound, ?File:atom, +Options:list(compound)) is det.</p>

<p> fca_export(Context, File, Opts1):&ndash;
&ndash;  fca_lattice(Context, Lattice),
+  fca_lattice(Context, Lattice1),
+  maplist(remove_reflexive_edge, Lattice1, Lattice2),
   option(concept_label(VLabel_2), Opts1, fca_export:fca_label_concept),
   merge_options([vertex_label(VLabel_2)], Opts1, Opts2),
&ndash;  build_export_graph(Lattice, ExportG, Opts2),
+  build_export_graph(Lattice2, ExportG, Opts2),
   gv_export(ExportG, File, Opts1).</p>

<p>+remove_reflexive_edge(M-Ns1, M-Ns2):&ndash;
+  ord_del_element(Ns1, M, Ns2).
+</p>

<p> %! fca_label_attributes(+Concept:compound, -Label:atom) is det.</p>

<p>```</p>

<h2 id="135"> 135: 正在比较变动前 bc3c502 和变动后 7ec98aa </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_export.pl b/prolog/fca/fca_export.pl
index 249d104..0368834 100644
&mdash;&ndash; a/prolog/fca/fca_export.pl
+++ b/prolog/fca/fca_export.pl
@@ -25,6 +25,7 @@
 :&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(fca/fca)).
 :&ndash; use_module(library(graph/build_export_graph)).
+:&ndash; use_module(library(graph/s/s_graph)).
 :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(ordsets)).
@@ -49,14 +50,29 @@ fca_export(Context, File):&ndash;</p>

<p> fca_export(Context, File, Opts1):&ndash;
   fca_lattice(Context, Lattice1),
&ndash;  maplist(remove_reflexive_edge, Lattice1, Lattice2),
+  %minimize(Lattice1, Lattice2),
+  Lattice2 = Lattice1,
   option(concept_label(VLabel_2), Opts1, fca_export:fca_label_concept),
&ndash;  merge_options([vertex_label(VLabel_2)], Opts1, Opts2),
+  merge_options(
+    [vertex_label(VLabel_2),vertex_rank(fca:concept_cardinality)],
+    Opts1,
+    Opts2
+  ),
   build_export_graph(Lattice2, ExportG, Opts2),
   gv_export(ExportG, File, Opts1).</p>

<p>-remove_reflexive_edge(M-Ns1, M-Ns2):&ndash;
&ndash;  ord_del_element(Ns1, M, Ns2).
+minimize(G1, G2):&ndash;
+  s_vertices(G1, Vs),
+  aggregate_all(
+    set(X-Y),
+    (
+      s_edge(G1, X-Y),
+      maplist(concept_cardinality, [X,Y], [CX,CY]),
+      CX &lt; CY
+    ),
+    Es
+  ),
+  s_graph_components(G2, Vs, Es).</p>

<p>diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index b6d367b..f5dc122 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -30,7 +30,7 @@ edge(FromVertexId,ToVertexId,Attributes:list(compound))
 ### Rank</p>

<p> <code>prolog
-rank(RankVertex:compound,ContentVertices:ordset(compound))
+RankVertex:compound-ContentVertices:ordset(compound)
</code></p>

<p> ### Vertex
@@ -51,7 +51,7 @@ Vertex coordinates:</p>

<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/09-2015/10
+@version 2015/07, 2015/09-2015/11
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -60,6 +60,7 @@ Vertex coordinates:
 :&ndash; use_module(library(list_ext)).
 :&ndash; use_module(library(option_ext)).
 :&ndash; use_module(library(ordsets)).
+:&ndash; use_module(library(pairs)).</p>

<p> :&ndash; predicate_options(build_export_graph/4, 4, [</p>

<pre><code>  pass_to(edge_term/3, 3),
</code></pre>

<p>@@ -89,6 +90,7 @@ Vertex coordinates:</p>

<pre><code>  vertex_label(+callable),
  vertex_peripheries(+callable),
  vertex_position(+callable),
</code></pre>

<ul>
<li>  vertex_rank(+callable),
  vertex_shape(+callable),
  vertex_uri(+callable)
]).
@@ -107,6 +109,7 @@ is_meta(vertex_image).
is_meta(vertex_label).
is_meta(vertex_peripheries).
is_meta(vertex_position).
+is_meta(vertex_rank).
is_meta(vertex_shape).
is_meta(vertex_uri).</li>
</ul>


<p>@@ -129,11 +132,17 @@ build_export_graph(G, ExportG):&ndash;
 % Graph is either:
 %   * a coumpound term <code>graph(Vs,Es)</code>, or
 %   * an unlabeled graph as defined by <code>library(ugraph)</code>.
+%
+% The following options are supported:
+%   * <code>vertex_rank(:RankFunction)</code>
+%     Assigns a non-negative integer to each vertex.
+%     No default.</p>

<p>-build_export_graph(G, graph(VTerms,ETerms,GAttrs), Opts1):&ndash;
+build_export_graph(G, graph(VTerms2,VRanks,ETerms,GAttrs), Opts1):&ndash;
   graph_components(G, Vs, Es),
   meta_options(is_meta, Opts1, Opts2),
&ndash;  maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Opts2), Vs, VTerms),
+  maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Opts2), Vs, VTerms1),
+  build_export_ranks(Vs, VTerms1, VRanks, VTerms2, Opts2),
   maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Opts2), Es, ETerms),
   graph_attributes(GAttrs, Opts2).</p>

<p>@@ -141,6 +150,20 @@ graph_components(graph(Vs,Es), Vs, Es):&ndash; !.
 graph_components(G, Vs, Es):&ndash;
   s_graph_components(G, Vs, Es).</p>

<p>+build_export_ranks(Vs, VTerms, VRanks, [], Opts):&ndash;
+  option(vertex_rank(VRank_2), Opts), !,
+  maplist(VRank_2, Vs, Ranks),
+  pairs_keys_values(Pairs, Ranks, VTerms),
+  group_pairs_by_key(Pairs, GroupedPairs),
+  build_export_rank_terms(GroupedPairs, VRanks).
+build_export_ranks(<em>, VTerms, [], VTerms, </em>).
+
+build_export_rank_terms([N-VTerms|T1], [vertex(Id,[label(Lbl)])-VTerms|T2]):&ndash; !,
+  format(atom(Id), &lsquo;r~d&rsquo;, [N]),
+  atom_number(Lbl, N),
+  build_export_rank_terms(T1, T2).
+build_export_rank_terms([], []).
+</p>

<p> %! edge_term(
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index 5de2ff1..79c1be0 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -52,7 +52,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 %
 % <code>RankedVertexTerms</code> is a list of compound terms of the following form:
 % <code>prolog
-% rank(RankNode,ContentNodes)
+% RankVertex-ContentVertices
 %</code>
 %
 % @tbd Add support for subgraphs (arbitrary nesting).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 3aec4e6..8644e1c 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -22,18 +22,15 @@ attr_list = &ldquo;[&rdquo; [a_list] &ldquo;]&rdquo; [attr_list]
 a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 ```</p>

<hr />

<p>&ndash;
 @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07-2015/08, 2015/10
+@version 2015/07-2015/08, 2015/10-2015/11
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/basics)).
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(library(dcg/dcg_bracketed)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(dcg/dcg_quoted)).
 :&ndash; use_module(library(gv/gv_attrs)).
@@ -113,6 +110,8 @@ gv_generic_attributes_statement(Kind, I, Attrs) &mdash;>
   gv_attrs(Kind, Attrs),
   &ldquo;\n&rdquo;, !.</p>

<p>+
+
 %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p> gv_kind(Kind) &mdash;>
@@ -132,14 +131,11 @@ gv_node_statement(I, vertex(Id,Attrs)) &mdash;></p>

<p>&ndash;%! gv_ranked_node_collection(+Indent:nonneg, Rank)// is det.
+%! gv_ranked_node_collection(+Indent:nonneg, Rank:pair)// is det.</p>

<p>-gv_ranked_node_collection(I, Rank) &mdash;>
+gv_ranked_node_collection(I, RankVTerm-VTerms) &mdash;>
   indent(I),</p>

<h2>&ndash;  bracketed(curly, gv_ranked_node_collection0(I, Rank)).</h2>

<p>-gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
&ndash;  &ldquo;\n&rdquo;,
+  &ldquo;{\n&rdquo;,</p>

<p>   % The rank attribute.
   {NewI is I + 1},
@@ -148,15 +144,11 @@ gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
   &ldquo;\n&rdquo;,</p>

<p>   % Vertice statements.
&ndash;  <em>(
&ndash;    gv_node_statement(NewI),
&ndash;    [Rank_V_Term|Content_V_Terms],
&ndash;    []
&ndash;  ),
+  </em>(gv_node_statement(NewI), [RankVTerm|VTerms], []),</p>

<p>   % We want to indent the closing curly brace.
   indent(I),
&ndash;  &ldquo;\n&rdquo;.
+  &ldquo;\n}&rdquo;.</p>

<p>@@ -170,7 +162,7 @@ gv_ranked_node_collection0(I, rank(Rank_V_Term,Content_V_Terms)) &mdash;>
 %! )// is det.</p>

<p> gv_attrs(Kind, L) &mdash;>
&ndash;  bracketed(square, <em>(gv_attr(Kind), L, [])).
+  &ldquo;[&rdquo;, </em>(gv_attr(Kind), L, []), &ldquo;]&rdquo;.</p>

<p> %! gv_attr(+Context:oneof([edge,graph,node]), +Attribute:compound)// is det.
@@ -179,10 +171,7 @@ gv_attrs(Kind, L) &mdash;></p>

<p> gv_attr(Context, Attr) &mdash;>
   {Attr =.. [N,V]},
&ndash;  gv_id(N),
&ndash;  &ldquo;=&rdquo;,
&ndash;  gv_attr_value(Context, N=V),
&ndash;  &ldquo;;&rdquo;.
+  gv_id(N), &ldquo;=&rdquo;, gv_attr_value(Context, N=V), &ldquo;;&rdquo;.</p>

<p>@@ -213,7 +202,7 @@ gv_id(html_like_label(Content)) &mdash;> !,
 % Double-quoted strings.
 % The quotes are already part of the given atom.
 gv_id(double_quoted_string(Atom)) &mdash;> !,
&ndash;  quoted(atom(Atom)).
+  &ldquo;\&rdquo;&ldquo;, atom(Atom), &rdquo;\&ldquo;&rdquo;.
 % Numerals.
 gv_id(N) &mdash;>
   {number(N)}, !,
@@ -228,6 +217,7 @@ gv_id(Atom) &mdash;>
   % GraphViz keyword.
   {+ gv_keyword([H|T])}.</p>

<p>+
 %! gv_id_first(+First:code)// is det.
 % Generates the first character of a GraphViz identifier.</p>

<p>@@ -236,16 +226,17 @@ gv_id_first(X) &mdash;>
 gv_id_first(X) &mdash;>
   underscore(X).</p>

<p>+
 %! gv_id_rest(+NonFirst:code)// is det.
 % Generates a non-first character of a GraphViz identifier.</p>

<p> gv_id_rest([]) &mdash;> !, &ldquo;&rdquo;.
 gv_id_rest([H|T]) &mdash;>
&ndash;  (   ascii_alpha_numeric(H)
&ndash;  ;   underscore(H)
&ndash;  ),
+  (ascii_alpha_numeric(H) ; underscore(H)),
   gv_id_rest(T).</p>

<p>+
+
 %! gv_keyword(+Codes:list(code)) is semidet.
 % Succeeds if the given codes for a GraphViz reserved keyword.</p>

<p>@@ -254,6 +245,7 @@ gv_keyword(Cs):&ndash;
   % So we must use phrase/[2,3].
   phrase(gv_keyword, Cs).</p>

<p>+
 %! gv_keyword// .
 % GraphViz has reserved keywords that cannot be used as identifiers.
 % GraphViz keywords are case-insensitive.
@@ -289,32 +281,22 @@ gv_node_id(Id) &mdash;></p>

<p> gv_port &mdash;>
   gv_port_location,
&ndash;  (   gv_port_angle
&ndash;  ;   &ldquo;&rdquo;
&ndash;  ).
+  (gv_port_angle ; &ldquo;&rdquo;).
 gv_port &mdash;>
   gv_port_angle,
&ndash;  (   gv_port_location
&ndash;  ;   &ldquo;&rdquo;
&ndash;  ).
+  (gv_port_location ; &ldquo;&rdquo;).
 gv_port &mdash;>
&ndash;  &ldquo;:&rdquo;,
&ndash;  gv_compass_pt(<em>).
+  &ldquo;:&rdquo;, gv_compass_pt(</em>).</p>

<p> gv_port_angle &mdash;>
&ndash;  &ldquo;@&rdquo;,
&ndash;  gv_id(<em>).
+  &ldquo;@&rdquo;, gv_id(</em>).</p>

<p> gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
&ndash;  gv_id(<em>).
+  &ldquo;:&rdquo;, gv_id(</em>).
 gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;,
&ndash;  bracketed((
&ndash;    gv_id(<em>),
&ndash;    &ldquo;,&rdquo;,
&ndash;    gv_id(</em>)
&ndash;  )).
+  &ldquo;:[&rdquo;, gv_id(<em>), &ldquo;,&rdquo;, gv_id(</em>), &ldquo;]&rdquo;.
+
+</p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
 % ```</p>

<p>```</p>

<h2 id="136"> 136: 正在比较变动前 7ec98aa 和变动后 984d3b9 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_export.pl b/prolog/fca/fca_export.pl
index 0368834..d14d24b 100644
&mdash;&ndash; a/prolog/fca/fca_export.pl
+++ b/prolog/fca/fca_export.pl
@@ -49,31 +49,16 @@ fca_export(Context, File):&ndash;
 %! fca_export(+Context:compound, ?File:atom, +Options:list(compound)) is det.</p>

<p> fca_export(Context, File, Opts1):&ndash;
&ndash;  fca_lattice(Context, Lattice1),
&ndash;  %minimize(Lattice1, Lattice2),
&ndash;  Lattice2 = Lattice1,
+  fca_hasse(Context, Hasse),
   option(concept_label(VLabel_2), Opts1, fca_export:fca_label_concept),
   merge_options(</p>

<pre><code> [vertex_label(VLabel_2),vertex_rank(fca:concept_cardinality)],
 Opts1,
 Opts2
</code></pre>

<p>   ),
&ndash;  build_export_graph(Lattice2, ExportG, Opts2),
+  build_export_graph(Hasse, ExportG, Opts2),
   gv_export(ExportG, File, Opts1).</p>

<p>-minimize(G1, G2):&ndash;
&ndash;  s_vertices(G1, Vs),
&ndash;  aggregate_all(
&ndash;    set(X-Y),
&ndash;    (
&ndash;      s_edge(G1, X-Y),
&ndash;      maplist(concept_cardinality, [X,Y], [CX,CY]),
&ndash;      CX &lt; CY
&ndash;    ),
&ndash;    Es
&ndash;  ),</p>

<h2>&ndash;  s_graph_components(G2, Vs, Es).</h2>

<p> %! fca_label_attributes(+Concept:compound, -Label:atom) is det.</p>

<p>```</p>

<h2 id="137"> 137: 正在比较变动前 984d3b9 和变动后 4401e20 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_export.pl b/prolog/fca/fca_export.pl
index d14d24b..c48fe40 100644
&mdash;&ndash; a/prolog/fca/fca_export.pl
+++ b/prolog/fca/fca_export.pl
@@ -3,15 +3,9 @@
   [</p>

<pre><code> fca_export/2, % +Context:compound
               % ?File:atom
</code></pre>

<ul>
<li> fca_export/3, % +Context:compound</li>
<li><pre><code>           % ?File:atom
</code></pre></li>
<li><pre><code>           % +Options:list(compound)
</code></pre></li>
<li> fca_label_attributes/2, % +Concept:compound</li>
<li><pre><code>                     % -Label:atom
</code></pre></li>
<li> fca_label_concept/2, % +Concept:compound</li>
<li><pre><code>                  % -Label:atom
</code></pre></li>
<li> fca_label_objects/2 % +Concept:compound</li>
<li><pre><code>                 % -Label:atom
</code></pre></li>
<li> fca_export/3 % +Context:compound</li>
<li><pre><code>          % ?File:atom
</code></pre></li>
<li><pre><code>          % :Options:list(compound)
</code></pre>

<p>]
).</p></li>
</ul>


<p>@@ -30,11 +24,18 @@
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(ordsets)).</p>

<p>+:&ndash; meta_predicate(concept_label(+,1,+,&ndash;)).
+:&ndash; meta_predicate(concept_label(+,1,+,?,?)).
+:&ndash; meta_predicate(fca_export(+,?,:)).
+
 :&ndash; predicate_options(fca_export/3, 3, [
&ndash;     pass_to(build_export_graph/3, 3),
+     concept_label(+oneof([attributes,both,objects])),
+     object_label(+callable),</p>

<pre><code>  pass_to(gv_export/3, 3)
]).
</code></pre>

<p>+is_meta(object_label).
+</p>

<p>@@ -46,48 +47,46 @@ fca_export(Context, File):&ndash;
   fca_export(Context, File, []).</p>

<p>&ndash;%! fca_export(+Context:compound, ?File:atom, +Options:list(compound)) is det.
+%! fca_export(+Context:compound, ?File:atom, :Options:list(compound)) is det.
+% The following optios are supported:
+%   * concept_label(+oneof([attributes,both,objects]))</p>

<p> fca_export(Context, File, Opts1):&ndash;
   fca_hasse(Context, Hasse),
&ndash;  option(concept_label(VLabel_2), Opts1, fca_export:fca_label_concept),
+<br/>
+  meta_options(is_meta, Opts1, Opts2),
+  option(concept_label(Mode), Opts2, both),
+  option(object_label(Object_1), Opts2, =),
   merge_options(
&ndash;    [vertex_label(VLabel_2),vertex_rank(fca:concept_cardinality)],
&ndash;    Opts1,
&ndash;    Opts2
+    [
+      vertex_label(fca_export:concept_label(Mode, Object_1)),
+      vertex_rank(fca:concept_cardinality)
+    ],
+    Opts2,
+    Opts3
   ),
&ndash;  build_export_graph(Hasse, ExportG, Opts2),</p>

<h2>&ndash;  gv_export(ExportG, File, Opts1).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! fca_label_attributes(+Concept:compound, -Label:atom) is det.</p>

<h2>&ndash;% Writes a concept label displaying its attributes.</h2>

<p>-fca_label_attributes(Concept, Lbl):&ndash;
&ndash;  string_phrase(dcg_attributes(Concept), Lbl).
+  build_export_graph(Hasse, ExportG, Opts3),</p>

<p>-dcg_attributes(concept(_,As)) &mdash;></p>

<h2>&ndash;  set(As).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! fca_label_attributes(+Concept:compound, -Label:atom) is det.
&ndash;% Writes a concept label display both its attributes and objects.
+  gv_export(ExportG, File, Opts2).</p>

<p>-fca_label_concept(Concept, Lbl):&ndash;
&ndash;  string_phrase(dcg_concept(Concept), Lbl).</p>

<p>-dcg_concept(Concept) &mdash;>
&ndash;  pair(dcg_objects(Concept), dcg_attributes(Concept)).</p>

<p>+%! concept_label(
+%!   +Mode:oneof([attributes,both,objects]),
+%!   :Object_1,
+%!   +Concept:compound,
+%!   -Label:atom
+%! ) is det.</p>

<p>+concept_label(Mode, Object_1, Concept, Lbl):&ndash;
+  string_phrase(concept_label(Mode, Object_1, Concept), Lbl).</p>

<p>&ndash;%! fca_label_objects(+Concept:compound, -Label:atom) is det.</p>

<h2>&ndash;% Writes a concept label displaying its object.</h2>

<p>-fca_label_objects(Concept, Lbl):&ndash;</p>

<h2>&ndash;  string_phrase(dcg_objects(Concept), Lbl).</h2>

<p>-dcg_objects(concept(Os,<em>)) &mdash;>
&ndash;  set(Os).
+concept_label(attributes, </em>, concept(<em>,As)) &mdash;>
+  set(As).
+concept_label(both, Object_1, Concept) &mdash;>
+  pair(
+    concept_label(objects, Object_1, Concept),
+    concept_label(attributes, Object_1, Concept)
+  ).
+concept_label(objects, Object_1, concept(Os,</em>)) &mdash;>
+  set(Object_1, Os).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index f5dc122..71f9dd4 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -158,12 +158,14 @@ build_export_ranks(Vs, VTerms, VRanks, [], Opts):&ndash;
   build_export_rank_terms(GroupedPairs, VRanks).
 build_export_ranks(<em>, VTerms, [], VTerms, </em>).</p>

<p>-build_export_rank_terms([N-VTerms|T1], [vertex(Id,[label(Lbl)])-VTerms|T2]):&ndash; !,
&ndash;  format(atom(Id), &lsquo;r~d&rsquo;, [N]),
&ndash;  atom_number(Lbl, N),
+build_export_rank_terms([N-VTerms|T1], [RankTerm-VTerms|T2]):&ndash; !,
+  build_export_rank_term(N, RankTerm),
   build_export_rank_terms(T1, T2).
 build_export_rank_terms([], []).</p>

<p>+build_export_rank_term(N, vertex(Id,[label(&ldquo;&rdquo;),shape(none)])):&ndash;
+  format(atom(Id), &ldquo;r~d&rdquo;, [N]).
+</p>

<p> %! edge_term(</p>

<p>```</p>

<h2 id="138"> 138: 正在比较变动前 4401e20 和变动后 2247466 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_export.pl b/prolog/fca/fca_export.pl
index c48fe40..03353e3 100644
&mdash;&ndash; a/prolog/fca/fca_export.pl
+++ b/prolog/fca/fca_export.pl
@@ -17,6 +17,7 @@</p>

<p> :&ndash; use_module(library(dcg/dcg_collection)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(dcg/dcg_pl)).
 :&ndash; use_module(library(fca/fca)).
 :&ndash; use_module(library(graph/build_export_graph)).
 :&ndash; use_module(library(graph/s/s_graph)).
@@ -24,8 +25,8 @@
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; meta_predicate(concept_label(+,1,+,&ndash;)).
&ndash;:&ndash; meta_predicate(concept_label(+,1,+,?,?)).
+:&ndash; meta_predicate(concept_label(+,1,1,+,&ndash;)).
+:&ndash; meta_predicate(concept_label(+,1,1,+,?,?)).
 :&ndash; meta_predicate(fca_export(+,?,:)).</p>

<p> :&ndash; predicate_options(fca_export/3, 3, [
@@ -34,6 +35,7 @@</p>

<pre><code>  pass_to(gv_export/3, 3)
]).
</code></pre>

<p>+is_meta(attribute_label).
 is_meta(object_label).</p>

<p>@@ -49,17 +51,27 @@ fca_export(Context, File):&ndash;</p>

<p> %! fca_export(+Context:compound, ?File:atom, :Options:list(compound)) is det.
 % The following optios are supported:
+%   * attribute_label(+callable)
+%     DCG writing the labels for individual attributes.
+%     Default is pl_term//1.
 %   * concept_label(+oneof([attributes,both,objects]))
+%     Determines which components of the concepts are displayed
+%     in the export graph.
+%     Default is <code>both</code>.
+%   * object_label(+callable)
+%     DCG writing the labels for individual objects.
+%     Default is pl_term//1.</p>

<p> fca_export(Context, File, Opts1):&ndash;
   fca_hasse(Context, Hasse),</p>

<p>   meta_options(is_meta, Opts1, Opts2),
+  option(attribute_label(ALbl_1), Opts2, pl_term),
   option(concept_label(Mode), Opts2, both),
&ndash;  option(object_label(Object_1), Opts2, =),
+  option(object_label(OLbl_1), Opts2, pl_term),
   merge_options(</p>

<pre><code> [
</code></pre>

<ul>
<li>   vertex_label(fca_export:concept_label(Mode, Object_1)),</li>
<li>   vertex_label(fca_export:concept_label(Mode, OLbl_1, ALbl_1)),
   vertex_rank(fca:concept_cardinality)
 ],
 Opts2,
@@ -73,20 +85,29 @@ fca_export(Context, File, Opts1):&ndash;</li>
</ul>


<p> %! concept_label(
 %!   +Mode:oneof([attributes,both,objects]),
&ndash;%!   :Object_1,
+%!   :ObjectLabel_1,
+%!   :AttributeLabel_1,
 %!   +Concept:compound,
 %!   -Label:atom
 %! ) is det.</p>

<p>-concept_label(Mode, Object_1, Concept, Lbl):&ndash;
&ndash;  string_phrase(concept_label(Mode, Object_1, Concept), Lbl).
+concept_label(Mode, OLbl_1, ALbl_1, Concept, Lbl):&ndash;
+  string_phrase(concept_label(Mode, OLbl_1, ALbl_1, Concept), Lbl).</p>

<p>-concept_label(attributes, <em>, concept(</em>,As)) &mdash;>
&ndash;  set(As).
-concept_label(both, Object_1, Concept) &mdash;>
+
+%! concept_label(
+%!   +Mode:oneof([attributes,both,objects]),
+%!   :ObjectLabel_1,
+%!   :AttributeLabel_1,
+%!   +Concept:compound
+%! )// is det.
+
+concept_label(attributes, <em>, ALbl_1, concept(</em>,As)) &mdash;>
+  set(ALbl_1, As).
+concept_label(both, OLbl_1, ALbl_1, Concept) &mdash;>
   pair(
&ndash;    concept_label(objects, Object_1, Concept),
&ndash;    concept_label(attributes, Object_1, Concept)
+    concept_label(objects, OLbl_1, ALbl_1, Concept),
+    concept_label(attributes, OLbl_1, ALbl_1, Concept)
   ).
-concept_label(objects, Object_1, concept(Os,<em>)) &mdash;>
&ndash;  set(Object_1, Os).
+concept_label(objects, OLbl_1, </em>, concept(Os,_)) &mdash;>
+  set(OLbl_1, Os).</p>

<p>```</p>

<h2 id="139"> 139: 正在比较变动前 2247466 和变动后 f4a9322 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index 79c1be0..a9e1a42 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -76,7 +76,7 @@ gv_graph(G1, I) &mdash;></p>

<p>   % The first statement in the GraphViz output.
   % States that this file represents a graph according to the GraphViz format.
&ndash;  indent(I),
+  tab(I),</p>

<p>   % Strictness.
   {select_option(strict(Strict), GAttrs2, GAttrs3, false)},
@@ -156,7 +156,7 @@ gv_graph(G1, I) &mdash;>
   % Note that we do not include a line_feed here.</p>

<p>   % We want to indent the closing curly brace.
&ndash;  indent(I),
+  tab(I),
   &ldquo;}\n&rdquo;.</p>

<p> gv_edge_statements(I, Dir, L) &mdash;>
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 8644e1c..d86c1b4 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -61,7 +61,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 % @tbd Add support for multiple, consecutive occurrences of gv_edge_rhs//2.</p>

<p> gv_edge_statement(I, Dir, edge(From,To,Attrs)) &mdash;>
&ndash;  indent(I),
+  tab(I),</p>

<p>   gv_node_id(From), &ldquo; &rdquo;,
   gv_edge_operator(Dir), &ldquo; &rdquo;,
@@ -105,7 +105,7 @@ gv_edge_operator(Dir) &mdash;></p>

<p> gv_generic_attributes_statement(<em>, </em>, []) &mdash;> !, &ldquo;&rdquo;.
 gv_generic_attributes_statement(Kind, I, Attrs) &mdash;>
&ndash;  indent(I),
+  tab(I),
   gv_kind(Kind), &ldquo; &rdquo;,
   gv_attrs(Kind, Attrs),
   &ldquo;\n&rdquo;, !.
@@ -124,7 +124,7 @@ gv_kind(Kind) &mdash;>
 % A GraphViz statement describing a vertex (GraphViz calls vertices &lsquo;nodes&rsquo;).</p>

<p> gv_node_statement(I, vertex(Id,Attrs)) &mdash;>
&ndash;  indent(I),
+  tab(I),
   gv_node_id(Id),
   gv_attrs(node, Attrs),
   &ldquo;\n&rdquo;.
@@ -134,12 +134,12 @@ gv_node_statement(I, vertex(Id,Attrs)) &mdash;>
 %! gv_ranked_node_collection(+Indent:nonneg, Rank:pair)// is det.</p>

<p> gv_ranked_node_collection(I, RankVTerm-VTerms) &mdash;>
&ndash;  indent(I),
+  tab(I),
   &ldquo;{\n&rdquo;,</p>

<p>   % The rank attribute.
   {NewI is I + 1},
&ndash;  indent(NewI),
+  tab(NewI),
   gv_attr(subgraph, rank(same)),
   &ldquo;\n&rdquo;,</p>

<p>@@ -147,7 +147,7 @@ gv_ranked_node_collection(I, RankVTerm-VTerms) &mdash;>
   *(gv_node_statement(NewI), [RankVTerm|VTerms], []),</p>

<p>   % We want to indent the closing curly brace.
&ndash;  indent(I),
+  tab(I),
   &ldquo;\n}&rdquo;.</p>

<p>```</p>

<h2 id="140"> 140: 正在比较变动前 f4a9322 和变动后 0d2712a </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index 5ab08a6..8fa78af 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -46,14 +46,11 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2015/07
+@version 2015/07, 2015/11
 */</p>

<p> :&ndash; use_module(library(dcg/basics), except([string//1])).
&ndash;:&ndash; use_module(library(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(library(dcg/dcg_ascii)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
&ndash;:&ndash; use_module(library(dcg/dcg_quoted)).
 :&ndash; use_module(library(gv/gv_html)).</p>

<p>@@ -62,47 +59,45 @@</p>

<p> %! gv_attr_type(?Type:atom) is nondet.</p>

<p>-gv_attr_type(addDouble) &mdash;> &ldquo;addDouble&rdquo;.
-gv_attr_type(addPoint) &mdash;> &ldquo;addPoint&rdquo;.
-gv_attr_type(arrowType) &mdash;> &ldquo;arrowType&rdquo;.
-gv_attr_type(bool) &mdash;> &ldquo;bool&rdquo;.
-gv_attr_type(color) &mdash;> &ldquo;color&rdquo;.
-gv_attr_type(colorList) &mdash;> &ldquo;colorList&rdquo;.
+gv_attr_type(addDouble)   &mdash;> &ldquo;addDouble&rdquo;.
+gv_attr_type(addPoint)    &mdash;> &ldquo;addPoint&rdquo;.
+gv_attr_type(arrowType)   &mdash;> &ldquo;arrowType&rdquo;.
+gv_attr_type(bool)        &mdash;> &ldquo;bool&rdquo;.
+gv_attr_type(color)       &mdash;> &ldquo;color&rdquo;.
+gv_attr_type(colorList)   &mdash;> &ldquo;colorList&rdquo;.
 gv_attr_type(clusterMode) &mdash;> &ldquo;clusterMode&rdquo;.
-gv_attr_type(dirType) &mdash;> &ldquo;dirType&rdquo;.
-gv_attr_type(double) &mdash;> &ldquo;double&rdquo;.
-gv_attr_type(doubleList) &mdash;> &ldquo;doubleList&rdquo;.
-gv_attr_type(escString) &mdash;> &ldquo;escString&rdquo;.
-gv_attr_type(layerList) &mdash;> &ldquo;layerList&rdquo;.
-gv_attr_type(layerRange) &mdash;> &ldquo;layerRange&rdquo;.
-gv_attr_type(lblString) &mdash;> &ldquo;lblString&rdquo;.
-gv_attr_type(int) &mdash;> &ldquo;int&rdquo;.
-gv_attr_type(outputMode) &mdash;> &ldquo;outputMode&rdquo;.
-gv_attr_type(packMode) &mdash;> &ldquo;packMode&rdquo;.
-gv_attr_type(pagedir) &mdash;> &ldquo;pagedir&rdquo;.
-gv_attr_type(point) &mdash;> &ldquo;point&rdquo;.
-gv_attr_type(pointList) &mdash;> &ldquo;pointList&rdquo;.
-gv_attr_type(portPos) &mdash;> &ldquo;portPos&rdquo;.
-gv_attr_type(quadType) &mdash;> &ldquo;quadType&rdquo;.
-gv_attr_type(rankType) &mdash;> &ldquo;rankType&rdquo;.
-gv_attr_type(rankdir) &mdash;> &ldquo;rankdir&rdquo;.
-gv_attr_type(rect) &mdash;> &ldquo;rect&rdquo;.
-gv_attr_type(shape) &mdash;> &ldquo;shape&rdquo;.
-gv_attr_type(smoothType) &mdash;> &ldquo;smoothType&rdquo;.
-gv_attr_type(splineType) &mdash;> &ldquo;splineType&rdquo;.
-gv_attr_type(startType) &mdash;> &ldquo;startType&rdquo;.
-gv_attr_type(string) &mdash;> &ldquo;string&rdquo;.
-gv_attr_type(style) &mdash;> &ldquo;style&rdquo;.
-gv_attr_type(viewPort) &mdash;> &ldquo;viewPort&rdquo;.
+gv_attr_type(dirType)     &mdash;> &ldquo;dirType&rdquo;.
+gv_attr_type(double)      &mdash;> &ldquo;double&rdquo;.
+gv_attr_type(doubleList)  &mdash;> &ldquo;doubleList&rdquo;.
+gv_attr_type(escString)   &mdash;> &ldquo;escString&rdquo;.
+gv_attr_type(layerList)   &mdash;> &ldquo;layerList&rdquo;.
+gv_attr_type(layerRange)  &mdash;> &ldquo;layerRange&rdquo;.
+gv_attr_type(lblString)   &mdash;> &ldquo;lblString&rdquo;.
+gv_attr_type(int)         &mdash;> &ldquo;int&rdquo;.
+gv_attr_type(outputMode)  &mdash;> &ldquo;outputMode&rdquo;.
+gv_attr_type(packMode)    &mdash;> &ldquo;packMode&rdquo;.
+gv_attr_type(pagedir)     &mdash;> &ldquo;pagedir&rdquo;.
+gv_attr_type(point)       &mdash;> &ldquo;point&rdquo;.
+gv_attr_type(pointList)   &mdash;> &ldquo;pointList&rdquo;.
+gv_attr_type(portPos)     &mdash;> &ldquo;portPos&rdquo;.
+gv_attr_type(quadType)    &mdash;> &ldquo;quadType&rdquo;.
+gv_attr_type(rankType)    &mdash;> &ldquo;rankType&rdquo;.
+gv_attr_type(rankdir)     &mdash;> &ldquo;rankdir&rdquo;.
+gv_attr_type(rect)        &mdash;> &ldquo;rect&rdquo;.
+gv_attr_type(shape)       &mdash;> &ldquo;shape&rdquo;.
+gv_attr_type(smoothType)  &mdash;> &ldquo;smoothType&rdquo;.
+gv_attr_type(splineType)  &mdash;> &ldquo;splineType&rdquo;.
+gv_attr_type(startType)   &mdash;> &ldquo;startType&rdquo;.
+gv_attr_type(string)      &mdash;> &ldquo;string&rdquo;.
+gv_attr_type(style)       &mdash;> &ldquo;style&rdquo;.
+gv_attr_type(viewPort)    &mdash;> &ldquo;viewPort&rdquo;.</p>

<p> %! addDouble(+Float:float)// .
 % An <em>addDouble</em> is represented by a Prolog float.</p>

<p>-addDouble(N) &mdash;>
&ndash;  (&ldquo;+&rdquo; ; &ldquo;&rdquo;),
&ndash;  float(N).
+addDouble(N) &mdash;> (&ldquo;+&rdquo;, ! ; &ldquo;&rdquo;), float(N).</p>

<p>@@ -110,47 +105,38 @@ addDouble(N) &mdash;>
 % An <em>addPoint</em> is represented by a compound of the following form:
 % <code>point(X:float,Y:float,InputOnly:boolean)</code>.</p>

<p>-addPoint(Point) &mdash;>
&ndash;  (&ldquo;+&rdquo; ; &ldquo;&rdquo;),
&ndash;  point(Point).
+addPoint(Point) &mdash;> (&ldquo;+&rdquo;, ! ; &ldquo;&rdquo;), point(Point).</p>

<p> %! arrowType(+ArrowType:atom)// .</p>

<p>-arrowType(V) &mdash;>
&ndash;  {arrowType(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-arrowType(V):&ndash;
&ndash;  primitive_shape(V).
-arrowType(V):&ndash;
&ndash;  derived(V).
-arrowType(V):&ndash;</p>

<h2>&ndash;  backwards_compatible(V).</h2>

<p>-primitive_shape(box).
-primitive_shape(crow).
-primitive_shape(circle).
-primitive_shape(diamond).
-primitive_shape(dot).
-primitive_shape(inv).
-primitive_shape(none).
-primitive_shape(normal).
-primitive_shape(tee).</p>

<h2>-primitive_shape(vee).</h2>

<p>-derived(odot).
-derived(invdot).
-derived(invodot).
-derived(obox).</p>

<h2>-derived(odiamond).</h2>

<p>-backwards_compatible(ediamond).
-backwards_compatible(empty).
-backwards_compatible(halfopen).
-backwards_compatible(invempty).
-backwards_compatible(open).
+arrowType(V) &mdash;> primitive_shape(V).
+arrowType(V) &mdash;> derived(V).
+arrowType(V) &mdash;> backwards_compatible(V).
+
+primitive_shape(box)     &mdash;> &ldquo;box&rdquo;.
+primitive_shape(crow)    &mdash;> &ldquo;crow&rdquo;.
+primitive_shape(circle)  &mdash;> &ldquo;circle&rdquo;.
+primitive_shape(diamond) &mdash;> &ldquo;diamond&rdquo;.
+primitive_shape(dot)     &mdash;> &ldquo;dot&rdquo;.
+primitive_shape(inv)     &mdash;> &ldquo;inv&rdquo;.
+primitive_shape(none)    &mdash;> &ldquo;none&rdquo;.
+primitive_shape(normal)  &mdash;> &ldquo;normal&rdquo;.
+primitive_shape(tee)     &mdash;> &ldquo;tee&rdquo;.
+primitive_shape(vee)     &mdash;> &ldquo;vee&rdquo;.
+
+derived(odot)     &mdash;> &ldquo;odot&rdquo;.
+derived(invdot)   &mdash;> &ldquo;invdot&rdquo;.
+derived(invodot)  &mdash;> &ldquo;invodot&rdquo;.
+derived(obox)     &mdash;> &ldquo;obox&rdquo;.
+derived(odiamond) &mdash;> &ldquo;odiamond&rdquo;.
+
+backwards_compatible(ediamond) &mdash;> &ldquo;ediamond&rdquo;.
+backwards_compatible(empty)    &mdash;> &ldquo;empty&rdquo;.
+backwards_compatible(halfopen) &mdash;> &ldquo;halfopen&rdquo;.
+backwards_compatible(invempty) &mdash;> &ldquo;invempty&rdquo;.
+backwards_compatible(open)     &mdash;> &ldquo;open&rdquo;.</p>

<p>@@ -158,47 +144,37 @@ backwards_compatible(open).</p>

<p> bool(false) &mdash;> &ldquo;false&rdquo;.
 bool(false) &mdash;> &ldquo;no&rdquo;.
-bool(true) &mdash;> &ldquo;true&rdquo;.
-bool(true) &mdash;> &ldquo;yes&rdquo;.
+bool(true)  &mdash;> &ldquo;true&rdquo;.
+bool(true)  &mdash;> &ldquo;yes&rdquo;.</p>

<p> %! clusterMode(+ClusterMode:atom)// .</p>

<p>-clusterMode(V) &mdash;>
&ndash;  {clusterMode(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-clusterMode(global).
-clusterMode(local).
-clusterMode(none).
+clusterMode(global) &mdash;> &ldquo;global&rdquo;.
+clusterMode(local) &mdash;> &ldquo;local&rdquo;.
+clusterMode(none) &mdash;> &ldquo;none&rdquo;.</p>

<p> %! dirType(+DirectionType:oneof([back,both,forward,none]))// .</p>

<p>-dirType(DirType) &mdash;>
&ndash;  {dirType(DirType)},</p>

<h2>&ndash;  atom(DirType).</h2>

<p>-dirType(back).
-dirType(both).
-dirType(forward).
-dirType(none).
+dirType(back) &mdash;> &ldquo;back&rdquo;.
+dirType(both) &mdash;> &ldquo;both&rdquo;.
+dirType(forward) &mdash;> &ldquo;forward&rdquo;.
+dirType(none) &mdash;> &ldquo;none&rdquo;.</p>

<p> %! double(+Double:float)// .</p>

<p>-double(N) &mdash;>
&ndash;  float(N).
+double(N) &mdash;> float(N).</p>

<p> %! doubleList(+Doubles:list(float))// .</p>

<p>-doubleList(L) &mdash;>
&ndash;  *(double, L, [separator(colon)]).
+doubleList([H|T]) &mdash;> double(H), (&ldquo;:&rdquo;, !, doubleList(T) ; {T = []}).</p>

<p>@@ -210,15 +186,11 @@ escString(S1) &mdash;>
   &ndash;>  string_phrase(escape_double_quotes, S1, S2)
   ;   atom_phrase(escape_double_quotes, S1, S2)
   )},
&ndash;  quoted(atom(S2)).
+  &ldquo;\&rdquo;&ldquo;, atom(S2), &rdquo;\&ldquo;&rdquo;.</p>

<p>-escape_double_quotes, [92,34] &mdash;>
&ndash;  [34], !,
&ndash;  escape_double_quotes.
-escape_double_quotes, [X] &mdash;>
&ndash;  [X], !,
&ndash;  escape_double_quotes.
-escape_double_quotes &mdash;> [].
+escape_double_quotes, [0'\,0'&ldquo;] &mdash;> [0'&rdquo;], !, escape_double_quotes.
+escape_double_quotes, [X]        &mdash;> [X],   !, escape_double_quotes.
+escape_double_quotes             &mdash;> &ldquo;&rdquo;.</p>

<p>@@ -232,29 +204,22 @@ escape_double_quotes &mdash;> [].</p>

<p> %! lblString(+String:compound)// .</p>

<p>-lblString(html_like_label(V)) &mdash;>
&ndash;  gv_html_like_label(V).
-lblString(V) &mdash;>
&ndash;  escString(V).
+lblString(html_like_label(V)) &mdash;> gv_html_like_label(V).
+lblString(V) &mdash;> escString(V).</p>

<p> %! int(+Integer:integer)// .</p>

<p>-int(V) &mdash;>
&ndash;  integer(V).
+int(V) &mdash;> integer(V).</p>

<p> %! outputMode(+OutputMode:atom)// .</p>

<p>-outputMode(V) &mdash;>
&ndash;  {outputMode(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-outputMode(breadthfirst).
-outputMode(edgesfirst).
-outputMode(nodesfirst).
+outputMode(breadthfirst) &mdash;> &ldquo;breadthfirst&rdquo;.
+outputMode(edgesfirst)   &mdash;> &ldquo;edgesfirst&rdquo;.
+outputMode(nodesfirst)   &mdash;> &ldquo;nodesfirst&rdquo;.</p>

<p>@@ -264,18 +229,14 @@ outputMode(nodesfirst).</p>

<p> %! pagedir(+PageDirection:atom)// .</p>

<p>-pagedir(V) &mdash;>
&ndash;  {pagedir(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-pagedir(&lsquo;BL&rsquo;).
-pagedir(&lsquo;BR&rsquo;).
-pagedir(&lsquo;LB&rsquo;).
-pagedir(&lsquo;LT&rsquo;).
-pagedir(&lsquo;RB&rsquo;).
-pagedir(&lsquo;RT&rsquo;).
-pagedir(&lsquo;TL&rsquo;).
-pagedir(&lsquo;TR&rsquo;).
+pagedir(&lsquo;BL&rsquo;) &mdash;> &ldquo;BL&rdquo;.
+pagedir(&lsquo;BR&rsquo;) &mdash;> &ldquo;BR&rdquo;.
+pagedir(&lsquo;LB&rsquo;) &mdash;> &ldquo;LB&rdquo;.
+pagedir(&lsquo;LT&rsquo;) &mdash;> &ldquo;LT&rdquo;.
+pagedir(&lsquo;RB&rsquo;) &mdash;> &ldquo;RB&rdquo;.
+pagedir(&lsquo;RT&rsquo;) &mdash;> &ldquo;RT&rdquo;.
+pagedir(&lsquo;TL&rsquo;) &mdash;> &ldquo;TL&rdquo;.
+pagedir(&lsquo;TR&rsquo;) &mdash;> &ldquo;TR&rdquo;.</p>

<p>@@ -284,7 +245,7 @@ pagedir(&lsquo;TR&rsquo;).
 % <code>point(X:float,Y:float,Changeable:boolean)</code>.</p>

<p> point(point(X,Y,Changeable)) &mdash;>
&ndash;  &lsquo;#&rsquo;(2, float, [X,Y], [separator(comma)]),
+  float(X), &ldquo;,&rdquo;, float(Y),
   input_changeable(Changeable).</p>

<p> input_changeable(false) &mdash;> &ldquo;&rdquo;.
@@ -305,60 +266,44 @@ pointList(Points) &mdash;></p>

<p> %! quadType(+QuadType:atom)// .</p>

<p>-quadType(V) &mdash;>
&ndash;  {quadType(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-quadType(fast).
-quadType(none).
-quadType(normal).
+quadType(fast) &mdash;> &ldquo;fast&rdquo;.
+quadType(none) &mdash;> &ldquo;none&rdquo;.
+quadType(normal) &mdash;> &ldquo;normal&rdquo;.</p>

<p> %! rankType(+RankType:atom)// .</p>

<p>-rankType(V) &mdash;>
&ndash;  {rankType(V)},</p>

<h2>&ndash;  atom(V).</h2>

<p>-rankType(max).
-rankType(min).
-rankType(same).
-rankType(sink).</p>

<h2>-rankType(source).</h2>

<p>+rankType(max) &mdash;> &ldquo;max&rdquo;.
+rankType(min) &mdash;> &ldquo;min&rdquo;.
+rankType(same) &mdash;> &ldquo;same&rdquo;.
+rankType(sink) &mdash;> &ldquo;sink&rdquo;.
+rankType(source) &mdash;> &ldquo;source&rdquo;.</p>

<p>&ndash;%! rankdir(+RankDirection:atom)// .</p>

<p>-rankdir(V) &mdash;>
&ndash;  {rankdir(V)},
&ndash;  atom(V).
+%! rankdir(+RankDirection:oneof([&lsquo;BT&rsquo;,&lsquo;LR&rsquo;,&lsquo;RL&rsquo;,&lsquo;TB&rsquo;]))// .</p>

<p>-rankdir(&lsquo;BT&rsquo;).
-rankdir(&lsquo;LR&rsquo;).
-rankdir(&lsquo;RL&rsquo;).
-rankdir(&lsquo;TB&rsquo;).
+rankdir(&lsquo;BT&rsquo;) &mdash;> &ldquo;BT&rdquo;.
+rankdir(&lsquo;LR&rsquo;) &mdash;> &ldquo;LR&rdquo;.
+rankdir(&lsquo;RL&rsquo;) &mdash;> &ldquo;RL&rdquo;.
+rankdir(&lsquo;TB&rsquo;) &mdash;> &ldquo;TB&rdquo;.</p>

<p> %! rect(+Rectangle:compound)// .</p>

<p> rect(rect(LowerLeftX,LowerLeftY,UpperRightX,UpperRightY)) &mdash;>
&ndash;  &lsquo;#&rsquo;(
&ndash;    4,
&ndash;    float,
&ndash;    [LowerLeftX,LowerLeftY,UpperRightX,UpperRightY],
&ndash;    [separator(comma)]
&ndash;  ).
+  float(LowerLeftX), &ldquo;,&rdquo;,
+  float(LowerLeftY), &ldquo;,&rdquo;,
+  float(UpperRightX), &ldquo;,&rdquo;,
+  float(UpperRightY).</p>

<p> %! shape(+Shape:atom)// .</p>

<p>-shape(V) &mdash;>
&ndash;  {polygon_based_shape(V)},
&ndash;  atom(V).
+shape(V) &mdash;> {polygon_based_shape(V)}, atom(V).</p>

<p> polygon_based_shape(assembly).
 polygon_based_shape(box).
@@ -420,9 +365,7 @@ polygon_based_shape(utr).</p>

<p> %! smoothType(+SmoothType:atom)// .</p>

<p>-smoothType(V) &mdash;>
&ndash;  {smoothType(V)},
&ndash;  atom(V).
+smoothType(V) &mdash;> {smoothType(V)}, atom(V).</p>

<p> smoothType(avg_dist).
 smoothType(graph_dist).
@@ -445,16 +388,13 @@ smoothType(triangle).
 %! string(?String:atom)// .
 % A GraphViz string.</p>

<p>-string(Content) &mdash;>
&ndash;  quoted(atom(Content)).
+string(Content) &mdash;> &ldquo;\&rdquo;&ldquo;, atom(Content), &rdquo;\&ldquo;&rdquo;.</p>

<p> %! style(?Context:oneof([cluster,edge,node]), ?Style:atom) is nondet.</p>

<p>-style(Context, Style) &mdash;>
&ndash;  {style(Context, Style)},
&ndash;  atom(Style).
+style(Context, Style) &mdash;> {style(Context, Style)}, atom(Style).</p>

<p> style(cluster, bold).
 style(cluster, dashed).
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 0c3755c..3232c97 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -19,7 +19,6 @@</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/basics)).
&ndash;:&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).
@@ -36,7 +35,7 @@</p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
   &ldquo;#&rdquo;,
&ndash;  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue], []).
+  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   color(rgb(Red,Green,Blue)),
   hex_color(Alpha).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index d86c1b4..6877107 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -32,7 +32,6 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]
 :&ndash; use_module(library(dcg/dcg_abnf)).
 :&ndash; use_module(library(dcg/dcg_ascii)).
 :&ndash; use_module(library(dcg/dcg_content)).
&ndash;:&ndash; use_module(library(dcg/dcg_quoted)).
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_html)).
 :&ndash; use_module(library(error)).
@@ -114,9 +113,7 @@ gv_generic_attributes_statement(Kind, I, Attrs) &mdash;></p>

<p> %! gv_kind(+Kind:oneof([edge,graph,node]))// .</p>

<p>-gv_kind(Kind) &mdash;>
&ndash;  {must_be(oneof([edge,graph,node]), Kind)},
&ndash;  atom(Kind).
+gv_kind(Kind) &mdash;> {must_be(oneof([edge,graph,node]), Kind)}, atom(Kind).</p>

<p>@@ -144,7 +141,7 @@ gv_ranked_node_collection(I, RankVTerm-VTerms) &mdash;>
   &ldquo;\n&rdquo;,</p>

<p>   % Vertice statements.
&ndash;  <em>(gv_node_statement(NewI), [RankVTerm|VTerms], []),
+  </em>(gv_node_statement(NewI), [RankVTerm|VTerms]),</p>

<p>   % We want to indent the closing curly brace.
   tab(I),
@@ -161,8 +158,7 @@ gv_ranked_node_collection(I, RankVTerm-VTerms) &mdash;>
 %!   +Attributes:list(compound)
 %! )// is det.</p>

<p>-gv_attrs(Kind, L) &mdash;>
&ndash;  &ldquo;[&rdquo;, <em>(gv_attr(Kind), L, []), &ldquo;]&rdquo;.
+gv_attrs(Kind, L) &mdash;> &ldquo;[&rdquo;, </em>(gv_attr(Kind), L), &ldquo;]&rdquo;.</p>

<p> %! gv_attr(+Context:oneof([edge,graph,node]), +Attribute:compound)// is det.
@@ -221,19 +217,16 @@ gv_id(Atom) &mdash;>
 %! gv_id_first(+First:code)// is det.
 % Generates the first character of a GraphViz identifier.</p>

<p>-gv_id_first(X) &mdash;>
&ndash;  ascii_letter(X).
-gv_id_first(X) &mdash;>
&ndash;  underscore(X).
+gv_id_first&copy;   &mdash;> ascii_alpha&copy;, !.
+gv_id_first(0'<em>) &mdash;> &ldquo;</em>&rdquo;.</p>

<p> %! gv_id_rest(+NonFirst:code)// is det.
 % Generates a non-first character of a GraphViz identifier.</p>

<p>-gv_id_rest([]) &mdash;> !, &ldquo;&rdquo;.
-gv_id_rest([H|T]) &mdash;>
&ndash;  (ascii_alpha_numeric(H) ; underscore(H)),
&ndash;  gv_id_rest(T).
+gv_id_rest([H|T])   &mdash;> ascii_alpha_num&copy;, !, gv_id_rest(T).
+gv_id_rest([0'<em>|T]) &mdash;> &ldquo;</em>&rdquo;,                !, gv_id_rest(T).
+gv_id_rest([])      &mdash;> &ldquo;&rdquo;.</p>

<p>@@ -267,34 +260,22 @@ gv_keyword &mdash;> &ldquo;subgraph&rdquo;.
 % @tbd Add support for GraphViz port indicators
 %      inside GraphViz node identifiers.</p>

<p>-gv_node_id(Id) &mdash;>
&ndash;  gv_id(Id), !.
&ndash;%gv_node_id(<em>) &mdash;>
&ndash;%  gv_id(</em>),
&ndash;%  gv_port.
-gv_node_id(Id) &mdash;>
&ndash;  {type_error(gv_node_id, Id)}.
+gv_node_id(Id) &mdash;> gv_id(Id), !.
+%gv_node_id(<em>) &mdash;> gv_id(</em>), gv_port.
+gv_node_id(Id) &mdash;> {type_error(gv_node_id, Id)}.</p>

<p> %! gv_port// is det.</p>

<p>-gv_port &mdash;>
&ndash;  gv_port_location,
&ndash;  (gv_port_angle ; &ldquo;&rdquo;).
-gv_port &mdash;>
&ndash;  gv_port_angle,
&ndash;  (gv_port_location ; &ldquo;&rdquo;).
-gv_port &mdash;>
&ndash;  &ldquo;:&rdquo;, gv_compass_pt(<em>).
+gv_port &mdash;> gv_port_location, (gv_port_angle ; &ldquo;&rdquo;).
+gv_port &mdash;> gv_port_angle, (gv_port_location ; &ldquo;&rdquo;).
+gv_port &mdash;> &ldquo;:&rdquo;, gv_compass_pt(</em>).</p>

<p>-gv_port_angle &mdash;>
&ndash;  &ldquo;@&rdquo;, gv_id(<em>).
+gv_port_angle &mdash;> &ldquo;@&rdquo;, gv_id(</em>).</p>

<p>-gv_port_location &mdash;>
&ndash;  &ldquo;:&rdquo;, gv_id(<em>).
-gv_port_location &mdash;>
&ndash;  &ldquo;:[&rdquo;, gv_id(</em>), &ldquo;,&rdquo;, gv_id(<em>), &ldquo;]&rdquo;.
+gv_port_location &mdash;> &ldquo;:&rdquo;, gv_id(</em>).
+gv_port_location &mdash;> &ldquo;:[&rdquo;, gv_id(<em>), &ldquo;,&rdquo;, gv_id(</em>), &ldquo;]&rdquo;.</p>

<p>@@ -304,12 +285,12 @@ gv_port_location &mdash;>
 % ```</p>

<p> gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
-gv_compass_pt&copy; &mdash;> &ldquo;c&rdquo;.
-gv_compass_pt(e) &mdash;> &ldquo;e&rdquo;.
-gv_compass_pt(n) &mdash;> &ldquo;n&rdquo;.
-gv_compass_pt(ne) &mdash;> &ldquo;ne&rdquo;.
-gv_compass_pt(nw) &mdash;> &ldquo;nw&rdquo;.
-gv_compass_pt(s) &mdash;> &ldquo;s&rdquo;.
-gv_compass_pt(se) &mdash;> &ldquo;se&rdquo;.
-gv_compass_pt(sw) &mdash;> &ldquo;sw&rdquo;.
-gv_compass_pt(w) &mdash;> &ldquo;w&rdquo;.
+gv_compass_pt&copy;   &mdash;> &ldquo;c&rdquo;.
+gv_compass_pt(e)   &mdash;> &ldquo;e&rdquo;.
+gv_compass_pt(n)   &mdash;> &ldquo;n&rdquo;.
+gv_compass_pt(ne)  &mdash;> &ldquo;ne&rdquo;.
+gv_compass_pt(nw)  &mdash;> &ldquo;nw&rdquo;.
+gv_compass_pt(s)   &mdash;> &ldquo;s&rdquo;.
+gv_compass_pt(se)  &mdash;> &ldquo;se&rdquo;.
+gv_compass_pt(sw)  &mdash;> &ldquo;sw&rdquo;.
+gv_compass_pt(w)   &mdash;> &ldquo;w&rdquo;.</p>

<p>```</p>

<h2 id="141"> 141: 正在比较变动前 0d2712a 和变动后 3518985 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 71f9dd4..2428483 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -51,7 +51,7 @@ Vertex coordinates:</p>

<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/09-2015/11
+@version 2015/07, 2015/09-2015/12
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -222,8 +222,9 @@ edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;
   if_option(edge_style(StyleFunction), Opts,</p>

<pre><code> call(StyleFunction, E, EStyle)
</code></pre>

<h2>   ),</h2>

<ul>
<li>merge_options(</li>
<li></li>
<li>exclude(</li>
<li><p> option_has_var_value,
 [
   arrowhead(EArrowhead),
   color(EColor),
@@ -275,7 +276,8 @@ graph_attributes(GAttrs, Opts):&ndash;
% Overlap.
option(graph_overlap(Overlap), Opts, false),</p></li>
<li><p>merge_options(</p></li>
<li>exclude(</li>
<li><p> option_has_var_value,
 [
   charset(Charset),
   colorscheme(Colorscheme),
@@ -361,7 +363,8 @@ vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;
 call(UriFunction, V, VUri)
),</p></li>
<li><p>merge_options(</p></li>
<li>exclude(</li>
<li> option_has_var_value,
 [
   color(VColor),
   image(VImage),
@@ -385,17 +388,3 @@ vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;
edge_components(edge(FromV,_,ToV), FromV, ToV):&ndash; !.
edge_components(edge(FromV,ToV), FromV, ToV):&ndash; !.

<h2>edge_components(FromV-ToV, FromV, ToV):&ndash; !.</h2>

<h2>&ndash;</h2>

<h2>&ndash;%! merge_options(+FromOptions:list(compound), -ToOptions:list(compound)) is det.</h2>

<p>-merge_options([], []).
&ndash;% Skip uninstantiated values.
-merge_options([H|T1], T2):&ndash;</p></li>
<li>merge_options(T1, T2),</li>
<li>H =.. [_,V],</li>
<li>var(V), !.
&ndash;% Include instantiated values.
-merge_options([H|T1], [H|T2]):&ndash;</li>
<li>merge_options(T1, T2).
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index a9e1a42..5c937ce 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -15,11 +15,11 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.</li>
</ul>


<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07
+@version 2015/07, 2015/12
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_abnf)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(lists)).
@@ -29,7 +29,13 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.</p>

<p>&ndash;%! gv_graph(+Graph:compound)//
+%! gv_graph(+Graph:compound)// is det.
+% Wrapper around gv_graph//2 with no indentation.
+
+gv_graph(G) &mdash;> gv_graph(G, 0).
+
+
+%! gv_graph(+Graph:compound, +Indent:nonneg)// is det.
 % The follow graph attributes are supported,
 % beyond the GraphViz attributes for graphs:
 %   * <code>directed(+boolean)</code>
@@ -61,9 +67,6 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.
 % @tbd Assert attributes that are generic with respect to a subgraph.
 % @tbd Not all vertex and edge properties can be shared it seems (e.g., label).</p>

<p>-gv_graph(G) &mdash;></p>

<h2>&ndash;  gv_graph(G, 0).</h2>

<p> gv_graph(G1, I) &mdash;>
   {</p>

<pre><code> include_ranks(G1, G2),
</code></pre>

<p>@@ -122,26 +125,20 @@ gv_graph(G1, I) &mdash;></p>

<p>   % The list of GraphViz nodes.
   gv_node_statements(NewI, NewVTerms),
&ndash;  (   {NewVTerms == []}
&ndash;  &ndash;>  &ldquo;&rdquo;
&ndash;  ;   &ldquo;\n&rdquo;
&ndash;  ),
+  ({NewVTerms == []} &ndash;> &ldquo;&rdquo; ; &ldquo;\n&rdquo;),</p>

<p>   % The ranked GraphViz nodes (displayed at the same height).
   gv_ranked_node_collections(NewI, RankedVTerms),
&ndash;  (   {RankedVTerms == []}
&ndash;  &ndash;>  &ldquo;&rdquo;
&ndash;  ;   &ldquo;\n&rdquo;
&ndash;  ),
+  ({RankedVTerms == []} &ndash;> &ldquo;&rdquo; ; &ldquo;\n&rdquo;),</p>

<p>   {</p>

<pre><code> findall(
   edge(FromId,ToId,[]),
   (
</code></pre>

<ul>
<li><pre><code> nth0(Index1, RankedVTerms, rank(vertex(FromId,_),_)),
</code></pre></li>
<li><pre><code> nth0(Index2, RankedVTerms, rank(vertex(ToId,_),_)),
</code></pre></li>
<li><pre><code> nth0(J1, RankedVTerms, rank(vertex(FromId,_),_)),
</code></pre></li>
<li><pre><code> nth0(J2, RankedVTerms, rank(vertex(ToId,_),_)),
 % We assume that the rank vertices are nicely ordered.
</code></pre></li>
<li><pre><code> succ(Index1, Index2)
</code></pre></li>
<li><pre><code> succ(J1, J2)
</code></pre>

<p>   ),
   RankEdges
 )
@@ -159,14 +156,27 @@ gv_graph(G1, I) &mdash;>
tab(I),
&ldquo;}\n&rdquo;.</p></li>
</ul>


<p>-gv_edge_statements(I, Dir, L) &mdash;>
&ndash;  *(gv_edge_statement(I, Dir), L, []), !.</p>

<p>-gv_node_statements(I, L) &mdash;>
&ndash;  *(gv_node_statement(I), L, []), !.</p>

<p>-gv_ranked_node_collections(I, L) &mdash;>
&ndash;  <em>(gv_ranked_node_collection(I), L, []), !.
+%! gv_edge_statements(
+%!   +Indent:nonneg,
+%!   +Directed:boolean,
+%!   +Statements:list(compound)
+%! )// is det.
+
+gv_edge_statements(I, Dir, L) &mdash;> </em>(gv_edge_statement(I, Dir), L).
+
+
+
+%! gv_edge_statements(+Indent:nonneg, +Statements:list(compound))// is det.
+
+gv_node_statements(I, L) &mdash;> <em>(gv_node_statement(I), L).
+
+
+
+%! gv_ranked_node_collections(+Indent:nonneg, +Collections:list)// is det.
+
+gv_ranked_node_collections(I, L) &mdash;> </em>(gv_ranked_node_collection(I), L).</p>

<p>@@ -189,11 +199,13 @@ add_default(L1, Opt, L2):&ndash;
   ).</p>

<p>+
 %! gv_graph_type(+Directed:boolean)// is det.
 % The type of graph that is represented.</p>

<p>-gv_graph_type(false) &mdash;> &ldquo;graph&rdquo;.
-gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
+gv_graph_type(false) &mdash;> !, &ldquo;graph&rdquo;.
+gv_graph_type(true)  &mdash;>    &ldquo;digraph&rdquo;.
+</p>

<p> %! gv_strict(+Strict:boolean)// is det.
@@ -201,18 +213,20 @@ gv_graph_type(true) &mdash;> &ldquo;digraph&rdquo;.
 % no multi-edges.
 % This only applies to directed graphs.</p>

<p>-gv_strict(false) &mdash;> &ldquo;&rdquo;.
-gv_strict(true) &mdash;> &ldquo;strict &rdquo;.
+gv_strict(false) &mdash;> !, &ldquo;&rdquo;.
+gv_strict(true)  &mdash;>    &ldquo;strict &rdquo;.
+</p>

<p> %! invlude_ranges(+Graph:compound, -GraphWithRanks:compound) is det.
 % Ensures that there is a ranks components in
 % the graph-denoting compound term.</p>

<p>-include_ranks(graph(Vs,Rs,Es,L), graph(Vs,Rs,Es,L)).
+include_ranks(graph(Vs,Rs,Es,L), graph(Vs,Rs,Es,L)):&ndash; !.
 include_ranks(graph(Vs,Es,L), graph(Vs,[],Es,L)).</p>

<p>+
 %! shared_attributes(
 %!   +Terms:list(compound),
 %!   -SharedAttributes:list(compound),
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 6877107..8bfc9a2 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -24,13 +24,11 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07-2015/08, 2015/10-2015/11
+@version 2015/07-2015/08, 2015/10-2015/12
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/basics)).
&ndash;:&ndash; use_module(library(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(library(dcg/dcg_ascii)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_html)).
@@ -166,7 +164,7 @@ gv_attrs(Kind, L) &mdash;> &ldquo;[&rdquo;, *(gv_attr(Kind), L), &ldquo;]&rdquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attr(Context, Attr) &mdash;>
&ndash;  {Attr =.. [N,V]},
+  {Attr =.. [N,V], (N == peripheries &ndash;> gtrace ; true)},
   gv_id(N), &ldquo;=&rdquo;, gv_attr_value(Context, N=V), &ldquo;;&rdquo;.</p>

<p>@@ -217,15 +215,15 @@ gv_id(Atom) &mdash;>
 %! gv_id_first(+First:code)// is det.
 % Generates the first character of a GraphViz identifier.</p>

<p>-gv_id_first&copy;   &mdash;> ascii_alpha&copy;, !.
+gv_id_first&copy;   &mdash;> alpha&copy;, !.
 gv_id_first(0'<em>) &mdash;> &ldquo;</em>&rdquo;.</p>

<p> %! gv_id_rest(+NonFirst:code)// is det.
 % Generates a non-first character of a GraphViz identifier.</p>

<p>-gv_id_rest([H|T])   &mdash;> ascii_alpha_num&copy;, !, gv_id_rest(T).
-gv_id_rest([0'<em>|T]) &mdash;> &ldquo;</em>&rdquo;,                !, gv_id_rest(T).
+gv_id_rest([H|T])   &mdash;> alphadigit(H), !, gv_id_rest(T).
+gv_id_rest([0'<em>|T]) &mdash;> &ldquo;</em>&rdquo;,           !, gv_id_rest(T).
 gv_id_rest([])      &mdash;> &ldquo;&rdquo;.</p>

<p>diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
index 5f2db03..3ee7de6 100644
&mdash;&ndash; a/prolog/gv/gv_html.pl
+++ b/prolog/gv/gv_html.pl
@@ -40,11 +40,10 @@ cell:   <TD> label </TD></p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/node-shapes#html">http://www.graphviz.org/content/node-shapes#html</a>
&ndash;@version 2015/07
+@version 2015/07, 2015/12
 */</p>

<p>&ndash;:&ndash; use_module(library(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(library(dcg/dcg_bracketed)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(html/html_dcg)).</p>

<p>@@ -52,14 +51,13 @@ cell:   <TD> label </TD></p>

<p>&ndash;%! gv_html_like_label(?Content:compound)// .
+%! gv_html_like_label(+Content:compound)// is det.</p>

<p>-gv_html_like_label(Content) &mdash;>
&ndash;  bracketed(angular, label(Content)).
+gv_html_like_label(Content) &mdash;> &ldquo;&lt;&rdquo;, label(Content), &ldquo;>&rdquo;.</p>

<p>&ndash;%! cell(?Contents:compound)// .
+%! cell(+Contents:compound)// is det.
 % Supported attributes for <code>TD</code>:
 %   &ndash; <code>ALIGN="CENTER|LEFT|RIGHT|TEXT"</code>
 %   &ndash; <code>BALIGN="CENTER|LEFT|RIGHT"</code>
@@ -88,65 +86,47 @@ gv_html_like_label(Content) &mdash;>
 %   &ndash; <code>SCALE="FALSE|TRUE|WIDTH|HEIGHT|BOTH"</code>
 %   &ndash; <code>SRC="value"</code></p>

<p>-cell(td(Contents)) &mdash;>
+cell(td(Contents)) &mdash;> !,
   cell(td([],Contents)).
 cell(td(Attrs1,Image)) &mdash;>
&ndash;  {(  Image =.. [img,Attrs2]
&ndash;  &ndash;>  true
&ndash;  ;   Image == img
&ndash;  &ndash;>  Attrs2 = []
&ndash;  )},
+  {(Image =.. [img,Attrs2] &ndash;> true ; Image == img &ndash;> Attrs2 = [])}, !,
   html_element(td, Attrs1, html_element(img,Attrs2)).
 cell(td(Attrs,Contents)) &mdash;>
   html_element(td, Attrs, label(Contents)).</p>

<p>&ndash;%! cells(?Contents:list(compound))// .
+%! cells(+Contents:list(compound))// is det.</p>

<p>-cells([H|T]) &mdash;>
&ndash;  cell(H),
&ndash;  cells(T).
-cells([H,vr|T]) &mdash;>
&ndash;  cell(H),
&ndash;  html_element(vr),
&ndash;  cells(T).
-cells([H]) &mdash;>
&ndash;  cell(H).
+cells([H,vr|T]) &mdash;> !, cell(H), html_element(vr), cells(T).
+cells([H|T])    &mdash;> !, cell(H), cells(T).
+cells([])       &mdash;> &ldquo;&rdquo;.</p>

<p>&ndash;%! label(?Content:compound)// .
+%! label(+Content:compound)// is det.
 % GraphViz HTML-like label.</p>

<p>-label(Content) &mdash;>
&ndash;  table(Content).
-label(Content) &mdash;>
&ndash;  text(Content).
+label(Content) &mdash;> table(Content), !.
+label(Content) &mdash;> text(Content).</p>

<p>&ndash;%! row(?Contents:compound)// .
+%! row(+Contents:compound)// is det.</p>

<p>-row(tr(Contents)) &mdash;>
&ndash;  html_element(tr, [], cells(Contents)).
+row(tr(Contents)) &mdash;> html_element(tr, [], cells(Contents)).</p>

<p>&ndash;%! rows(?Contents:list)// .
+%! rows(+Contents:list)// is det.</p>

<p>-rows([H|T]) &mdash;>
&ndash;  row(H),
&ndash;  rows(T).
-rows([hr|T]) &mdash;>
&ndash;  html_element(hr),
&ndash;  rows(T).
-rows([H]) &mdash;>
&ndash;  row(H).
+rows([hr|T]) &mdash;> !, html_element(hr), rows(T).
+rows([H|T]) &mdash;> row(H), !, rows(T).
+rows([]) &mdash;> &ldquo;&rdquo;.</p>

<p>&ndash;%! table(?Contents:compound)// .
+%! table(+Contents:compound)// is det.
 % <code>
 % table : [ &lt;FONT&gt; ] &lt;TABLE&gt; rows &lt;/TABLE&gt; [ &lt;/FONT&gt; ]
 %</code>
@@ -188,11 +168,11 @@ rows([H]) &mdash;>
 %   &ndash; <code>FACE="fontname"</code>
 %   &ndash; <code>POINT-SIZE="value"</code></p>

<p>-table(table(Contents)) &mdash;>
+table(table(Contents)) &mdash;> !,
   table(table([],Contents)).
-table(table(Attrs,Contents)) &mdash;>
+table(table(Attrs,Contents)) &mdash;> !,
   html_element(table, Attrs, rows(Contents)).
-table(font(Table)) &mdash;>
+table(font(Table)) &mdash;> !,
   table(font([],Table)).
 table(font(Attrs1,Table)) &mdash;>
   {(  Table =.. [table,Attrs2,Contents]
@@ -204,21 +184,18 @@ table(font(Attrs1,Table)) &mdash;></p>

<p>&ndash;%! text(?Contents:list)// .
+%! text(+Contents:list)// .
 % <code>
 % text :   textitem
 %        | text textitem
 %</code></p>

<p>-text(Contents) &mdash;>
&ndash;  {is_list(Contents)}, !,
&ndash;  &lsquo;+&rsquo;(textitem, Contents, []).
-text(Content) &mdash;>
&ndash;  text([Content]).
+text(Contents) &mdash;> {is_list(Contents)}, !, &lsquo;+&rsquo;(textitem, Contents).
+text(Content)  &mdash;> text([Content]).</p>

<p>&ndash;%! textitem(?Content:compound)// .
+%! textitem(+Content:compound)// .
 % <code>``
 % textitem :   string
 %            | &lt;BR/&gt;
@@ -235,7 +212,7 @@ text(Content) --&gt;
 % Supported attributes for BR:
 %   -</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;`</p>

<p>-textitem(br(Attrs)) &mdash;>
+textitem(br(Attrs)) &mdash;> !,
   html_element(br, Attrs).
 % Compound term: parser.
 textitem(Compound) &mdash;>
@@ -248,7 +225,7 @@ textitem(Compound) &mdash;>
 % Compound term: generator.
 textitem(Compound) &mdash;>
   {
&ndash;    Compound =.. [Name,Content],
+    Compound =.. [Name,Content], !,</p>

<pre><code> supported_html_element(Name)
</code></pre>

<p>   },
   html_element(Name, _, text(Content)).</p>

<p>```</p>

<h2 id="142"> 142: 正在比较变动前 3518985 和变动后 322ca62 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_export.pl b/prolog/fca/fca_viz.pl
similarity index 59%
rename from prolog/fca/fca_export.pl
rename to prolog/fca/fca_viz.pl
index 03353e3..36393de 100644
&mdash;&ndash; a/prolog/fca/fca_export.pl
+++ b/prolog/fca/fca_viz.pl
@@ -1,18 +1,21 @@
 :&ndash; module(
&ndash;  fca_export,
+  fca_viz,
   [
&ndash;    fca_export/2, % +Context:compound
&ndash;                  % ?File:atom
&ndash;    fca_export/3 % +Context:compound
&ndash;                 % ?File:atom
&ndash;                 % :Options:list(compound)
+    fca_export_graph/2, % +Context, -ExportGraph
+    fca_export_graph/3, % +Context:compound
+                        % -ExportGraph:compound
+                        % :Options:list(compound)
+    fca_viz/2, % +Context, ?File
+    fca_viz/3 % +Context:compound
+              % ?File:atom
+              % :Options:list(compound)
   ]
 ).</p>

<p>&ndash;/<strong> <module> FCA export
+/</strong> <module> FCA visualization</p>

<p> @author Wouter Beek
&ndash;@version 2015/11
+@version 2015/11-2015/12
 */</p>

<p> :&ndash; use_module(library(dcg/dcg_collection)).
@@ -27,11 +30,16 @@</p>

<p> :&ndash; meta_predicate(concept_label(+,1,1,+,&ndash;)).
 :&ndash; meta_predicate(concept_label(+,1,1,+,?,?)).
&ndash;:&ndash; meta_predicate(fca_export(+,?,:)).
+:&ndash; meta_predicate(fca_export_graph(+,?,:)).
+:&ndash; meta_predicate(fca_viz(+,?,:)).</p>

<p>&ndash;:&ndash; predicate_options(fca_export/3, 3, [
+:&ndash; predicate_options(fca_export_graph/3, 3, [
+     attribute_label(+callable),</p>

<pre><code>  concept_label(+oneof([attributes,both,objects])),
</code></pre>

<ul>
<li>  object_label(+callable),</li>
<li>  object_label(+callable)</li>
<li>]).
+:&ndash; predicate_options(fca_viz/3, 3, [</li>
<li>  pass_to(fca_export_graph/3, 3),
  pass_to(gv_export/3, 3)
]).</li>
</ul>


<p>@@ -42,14 +50,18 @@ is_meta(object_label).</p>

<p>&ndash;%! fca_export(+Context:compound, ?File:atom) is det.
&ndash;% Wrapper around fca_export/3 with default options.
+%! fca_export_graph(+Context:compound, -ExportGraph:compound) is det.
+% Wrapper around fca_export_graph/3 with default options.</p>

<p>-fca_export(Context, File):&ndash;
&ndash;  fca_export(Context, File, []).
+fca_export_graph(Context, ExportG):&ndash;
+  fca_export_graph(Context, ExportG, []).</p>

<p>&ndash;%! fca_export(+Context:compound, ?File:atom, :Options:list(compound)) is det.
+%! fca_export_graph(
+%!   +Context:compound,
+%!   -ExportGraph:compound,
+%!   :Options:list(compound)
+%! ) is det.
 % The following optios are supported:
 %   * attribute_label(+callable)
 %     DCG writing the labels for individual attributes.
@@ -62,24 +74,36 @@ fca_export(Context, File):&ndash;
 %     DCG writing the labels for individual objects.
 %     Default is pl_term//1.</p>

<p>-fca_export(Context, File, Opts1):&ndash;
+fca_export_graph(Context, ExportG, Opts1):&ndash;</p>

<h2>   fca_hasse(Context, Hasse),</h2>

<p>   meta_options(is_meta, Opts1, Opts2),
   option(attribute_label(ALbl_1), Opts2, pl_term),
   option(concept_label(Mode), Opts2, both),
   option(object_label(OLbl_1), Opts2, pl_term),
   merge_options(</p>

<pre><code> [
</code></pre>

<ul>
<li>   vertex_label(fca_export:concept_label(Mode, OLbl_1, ALbl_1)),</li>
<li>   vertex_label(fca_viz:concept_label(Mode, OLbl_1, ALbl_1)),
   vertex_rank(fca:concept_cardinality)
 ],
 Opts2,
 Opts3
),</li>
<li>build_export_graph(Hasse, ExportG, Opts3),</li>
<li>build_export_graph(Hasse, ExportG, Opts3).
+
+
+
+%! fca_viz(+Context:compound, ?File:atom) is det.
+% Wrapper around fca_viz/3 with default options.
+
+fca_viz(Context, File):&ndash;</li>
<li><p>fca_viz(Context, File, []).
+
+
+%! fca_viz(+Context:compound, ?File:atom, :Options:list(compound)) is det.</p></li>
<li><p>gv_export(ExportG, File, Opts2).
+fca_viz(Context, File, Opts):&ndash;</p></li>
<li>fca_export_graph(Context, ExportG, Opts),</li>
<li>gv_export(ExportG, File, Opts).</li>
</ul>


<p>diff &mdash;git a/test/test.pl b/test/test.pl
index 5ce2db0..470acce 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -1,5 +1,5 @@
 %/fca
&ndash;  :&ndash; use_module(library(fca/fca_export)).
+  :&ndash; use_module(library(fca/fca_viz)).
 %/graph
   :&ndash; use_module(library(graph/build_export_graph)).
 %/gv</p>

<p>```</p>

<h2 id="143"> 143: 正在比较变动前 322ca62 和变动后 c4bf9ea </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index 36393de..5ff8cf5 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -12,7 +12,7 @@
   ]
 ).</p>

<p>&ndash;/<strong> <module> FCA visualization
+/</strong> <module> FCA export</p>

<p> @author Wouter Beek
 @version 2015/11-2015/12
@@ -30,7 +30,7 @@</p>

<p> :&ndash; meta_predicate(concept_label(+,1,1,+,&ndash;)).
 :&ndash; meta_predicate(concept_label(+,1,1,+,?,?)).
&ndash;:&ndash; meta_predicate(fca_export_graph(+,?,:)).
+:&ndash; meta_predicate(fca_export_graph(+,&ndash;,:)).
 :&ndash; meta_predicate(fca_viz(+,?,:)).</p>

<p> :&ndash; predicate_options(fca_export_graph/3, 3, [
@@ -49,7 +49,6 @@ is_meta(object_label).</p>

<p>&ndash;
 %! fca_export_graph(+Context:compound, -ExportGraph:compound) is det.
 % Wrapper around fca_export_graph/3 with default options.</p>

<p>@@ -60,7 +59,7 @@ fca_export_graph(Context, ExportG):&ndash;
 %! fca_export_graph(
 %!   +Context:compound,
 %!   -ExportGraph:compound,
&ndash;%!   :Options:list(compound)
+%!   +Options:list(compound)
 %! ) is det.
 % The following optios are supported:
 %   * attribute_label(+callable)
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 2428483..6dbb4f7 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -1,8 +1,7 @@
 :&ndash; module(
   build_export_graph,
   [
&ndash;    build_export_graph/2, % +Graph
&ndash;                          % -ExportGraph:compound
+    build_export_graph/2, % +Graph, -ExportGraph</p>

<pre><code> build_export_graph/3 % +Graph
                      % -ExportGraph:compound
                      % +Options:list(compound)
</code></pre>

<p>@@ -118,7 +117,7 @@ is_meta(vertex_uri).</p>

<p> %! build_export_graph(+Graph, -ExportGraph:compound) is det.
&ndash;% Wrapper around build_export_graph/3.
+% Wrapper around build_export_graph/3 with default options.</p>

<p> build_export_graph(G, ExportG):&ndash;
   build_export_graph(G, ExportG, []).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 8bfc9a2..aecbe07 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -164,7 +164,7 @@ gv_attrs(Kind, L) &mdash;> &ldquo;[&rdquo;, *(gv_attr(Kind), L), &ldquo;]&rdquo;.
 % We assume that the attribute has already been validated.</p>

<p> gv_attr(Context, Attr) &mdash;>
&ndash;  {Attr =.. [N,V], (N == peripheries &ndash;> gtrace ; true)},
+  {Attr =.. [N,V]},
   gv_id(N), &ldquo;=&rdquo;, gv_attr_value(Context, N=V), &ldquo;;&rdquo;.</p>

<p>diff &mdash;git a/test/test.pl b/test/test.pl
index 470acce..c1bdca0 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -1,13 +1,13 @@
 %/fca
&ndash;  :&ndash; use_module(library(fca/fca_viz)).
+:&ndash; use_module(library(fca/fca_viz)).
 %/graph
&ndash;  :&ndash; use_module(library(graph/build_export_graph)).
+:&ndash; use_module(library(graph/build_export_graph)).
 %/gv
&ndash;  :&ndash; use_module(library(gv/gv_attrs)).
&ndash;  :&ndash; use_module(library(gv/gv_attr_type)).
&ndash;  :&ndash; use_module(library(gv/gv_color)).
&ndash;  :&ndash; use_module(library(gv/gv_file)).
&ndash;  :&ndash; use_module(library(gv/gv_graph)).
&ndash;  :&ndash; use_module(library(gv/gv_graph_comp)).
&ndash;  :&ndash; use_module(library(gv/gv_html)).
&ndash;  :&ndash; use_module(library(gv/gv_numeral)).
+:&ndash; use_module(library(gv/gv_attrs)).
+:&ndash; use_module(library(gv/gv_attr_type)).
+:&ndash; use_module(library(gv/gv_color)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(gv/gv_graph)).
+:&ndash; use_module(library(gv/gv_graph_comp)).
+:&ndash; use_module(library(gv/gv_html)).
+:&ndash; use_module(library(gv/gv_numeral)).</p>

<p>```</p>

<h2 id="144"> 144: 正在比较变动前 c4bf9ea 和变动后 2a6dafd </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index 5ff8cf5..ef6a632 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -12,7 +12,7 @@
   ]
 ).</p>

<p>&ndash;/<strong> <module> FCA export
+/</strong> <module> FCA visualization</p>

<p> @author Wouter Beek
 @version 2015/11-2015/12
@@ -30,7 +30,7 @@</p>

<p> :&ndash; meta_predicate(concept_label(+,1,1,+,&ndash;)).
 :&ndash; meta_predicate(concept_label(+,1,1,+,?,?)).
&ndash;:&ndash; meta_predicate(fca_export_graph(+,&ndash;,:)).
+:&ndash; meta_predicate(fca_export_graph(+,?,:)).
 :&ndash; meta_predicate(fca_viz(+,?,:)).</p>

<p> :&ndash; predicate_options(fca_export_graph/3, 3, [
@@ -59,7 +59,7 @@ fca_export_graph(Context, ExportG):&ndash;
 %! fca_export_graph(
 %!   +Context:compound,
 %!   -ExportGraph:compound,
&ndash;%!   +Options:list(compound)
+%!   :Options:list(compound)
 %! ) is det.
 % The following optios are supported:
 %   * attribute_label(+callable)</p>

<p>```</p>

<h2 id="145"> 145: 正在比较变动前 2a6dafd 和变动后 145615e </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index ef6a632..1a15ef5 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -100,9 +100,10 @@ fca_viz(Context, File):&ndash;</p>

<p> %! fca_viz(+Context:compound, ?File:atom, :Options:list(compound)) is det.</p>

<p>-fca_viz(Context, File, Opts):&ndash;
&ndash;  fca_export_graph(Context, ExportG, Opts),
&ndash;  gv_export(ExportG, File, Opts).
+fca_viz(Context, File, Opts1):&ndash;
+  meta_options(is_meta, Opts1, Opts2),
+  fca_export_graph(Context, ExportG, Opts2),
+  gv_export(ExportG, File, Opts2).</p>

<p>```</p>

<h2 id="146"> 146: 正在比较变动前 145615e 和变动后 f16acca </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
index 190b988..bcc7654 100644
&mdash;&ndash; a/data/gv_attrs_scrape.pl
+++ b/data/gv_attrs_scrape.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_attrs_scrape,
   [
&ndash;    gv_attrs_scrape/1 % +File:atom
+    gv_attrs_scrape/1 % +File
   ]
 ).</p>

<p>@@ -11,46 +11,41 @@ Writes compound terms of the following form to file:</p>

<p> <code>prolog
 gv_attr(
-  ?Name:atom,
+  ?Name,
   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
   ?Types:list(atom),
   ?Default,
   ?Minimum,
-  ?Notes:atom
+  ?Notes
 ) is nondet.
</code></p>

<p> @author Wouter Beek
&ndash;@version 2015/10
+@version 2015/10, 2016/07
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/basics), except([string//1])).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(debug)).
 :&ndash; use_module(library(gv/gv_attr_type)).
 :&ndash; use_module(library(http/http_download)).
&ndash;:&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(msg_ext)).
&ndash;:&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(os/io)).
+:&ndash; use_module(library(pl_term)).
+:&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
+:&ndash; use_module(library(yall)).</p>

<p>&ndash;%! gv_attrs_scrape(+File:atom) is det.
+%! gv_attrs_scrape(+File) is det.</p>

<p> gv_attrs_scrape(File):&ndash;
&ndash;  setup_call_cleanup(
&ndash;    open_any(File, write, Write, Close, []),
&ndash;    verbose(
&ndash;      gv_attrs_download(Write),
&ndash;      &ldquo;Updating the GraphViz attributes table.&rdquo;
&ndash;    ),
&ndash;    close_any(Close)
&ndash;  ).
+  debug(gv, &ldquo;Updating the GraphViz attributes table.&rdquo;, []),
+  call_to_stream(File, [In,Meta,Meta]>>gv_attrs_download(In)).</p>

<p> gv_attrs_download(Write):&ndash;
@@ -79,7 +74,7 @@ gv_attrs_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</p>

<p> % HELPERS %</p>

<p>&ndash;%! translate_default(+Default1:atom, -Default2:atom) is det.
+%! translate_default(+Default1, -Default2) is det.</p>

<p> % The empty string is represented by the empty atom.
 translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
index 3ac5d44..102a02a 100644
&mdash;&ndash; a/data/gv_color_scrape.pl
+++ b/data/gv_color_scrape.pl
@@ -1,40 +1,36 @@
 :&ndash; module(
   gv_color_scrape,
   [
&ndash;    gv_color_scrape/1 % +File:atom
+    gv_color_scrape/1 % +File
   ]
 ).</p>

<p> /** <module> GraphViz: Scrape colors</p>

<p> @author Wouter Beek
&ndash;@version 2015/10
+@version 2015/10, 2016/07
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(debug)).
 :&ndash; use_module(library(http/http_download)).
&ndash;:&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(msg_ext)).
&ndash;:&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(os/io)).
+:&ndash; use_module(library(pl_term)).
+:&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
+:&ndash; use_module(library(yall)).</p>

<p>&ndash;%! gv_color_scrape(+File:atom) is det.
+%! gv_color_scrape(+File) is det.</p>

<p> gv_color_scrape(File):&ndash;
&ndash;  setup_call_cleanup(
&ndash;    open_any(File, write, Write, Close, []),
&ndash;    verbose(
&ndash;      gv_color_download(Write),
&ndash;      &ldquo;Updating the GraphViz color table.&rdquo;
&ndash;    ),
&ndash;    close_any(Close)
&ndash;  ).
+  debug(io, &ldquo;Updating the GraphViz color table.&rdquo;, []),
+  call_to_stream(File, [In,Meta,Meta]>>gv_color_download(In)).</p>

<p> gv_color_download(Write):&ndash;
diff &mdash;git a/pack.pl b/pack.pl
index 203cbfc..989108a 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -4,6 +4,6 @@ home(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz">https://github.com/wouterbeek/plGraphViz</a>&rsquo;).
 maintainer(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#109;&#101;&#64;&#119;&#111;&#x75;&#x74;&#x65;&#x72;&#98;&#x65;&#x65;&#107;&#46;&#99;&#111;&#109;">&#109;&#101;&#x40;&#x77;&#x6f;&#117;&#x74;&#x65;&#114;&#x62;&#101;&#x65;&#x6b;&#46;&#99;&#x6f;&#x6d;</a>&rsquo;).
 name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x6d;&#x65;&#64;&#119;&#x6f;&#117;&#116;&#x65;&#114;&#98;&#101;&#x65;&#107;&#x2e;&#x63;&#111;&#109;">&#x6d;&#101;&#x40;&#x77;&#111;&#117;&#116;&#101;&#x72;&#x62;&#101;&#101;&#107;&#x2e;&#x63;&#x6f;&#x6d;</a>&rsquo;).
-requires(&lsquo;Prolog_Library_Collection&rsquo;).
+requires(&lsquo;Prolog-Library-Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.17&rsquo;).
+version(&lsquo;0.0.1&rsquo;).
diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index 1a15ef5..083dbb2 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -2,24 +2,20 @@
   fca_viz,
   [</p>

<pre><code> fca_export_graph/2, % +Context, -ExportGraph
</code></pre>

<ul>
<li> fca_export_graph/3, % +Context:compound</li>
<li><pre><code>                 % -ExportGraph:compound
</code></pre></li>
<li><pre><code>                 % :Options:list(compound)
</code></pre></li>
<li> fca_viz/2, % +Context, ?File</li>
<li> fca_viz/3 % +Context:compound</li>
<li><pre><code>       % ?File:atom
</code></pre></li>
<li><pre><code>       % :Options:list(compound)
</code></pre></li>
<li> fca_export_graph/3, % +Context, -ExportGraph, :Opts</li>
<li> fca_viz/2,          % +Context, ?File</li>
<li> fca_viz/3           % +Context, ?File, :Opts
]
).</li>
</ul>


<p> /** <module> FCA visualization</p>

<p> @author Wouter Beek
&ndash;@version 2015/11-2015/12
+@version 2015/11-2016/01
 */</p>

<p>&ndash;:&ndash; use_module(library(dcg/dcg_collection)).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(aggregate)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(dcg/dcg_pl)).
 :&ndash; use_module(library(fca/fca)).
 :&ndash; use_module(library(graph/build_export_graph)).
@@ -28,23 +24,19 @@
 :&ndash; use_module(library(option)).
 :&ndash; use_module(library(ordsets)).</p>

<p>&ndash;:&ndash; meta_predicate(concept_label(+,1,1,+,&ndash;)).
&ndash;:&ndash; meta_predicate(concept_label(+,1,1,+,?,?)).
 :&ndash; meta_predicate(fca_export_graph(+,?,:)).
 :&ndash; meta_predicate(fca_viz(+,?,:)).</p>

<p> :&ndash; predicate_options(fca_export_graph/3, 3, [
&ndash;     attribute_label(+callable),
&ndash;     concept_label(+oneof([attributes,both,objects])),
&ndash;     object_label(+callable)
+     concept_label(+callable)</p>

<pre><code>]).
</code></pre>

<p> :&ndash; predicate_options(fca_viz/3, 3, [</p>

<pre><code>  pass_to(fca_export_graph/3, 3),
</code></pre>

<ul>
<li>  pass_to(gv_export/3, 3)</li>
<li>  pass_to(graph_viz/3, 3)
]).</li>
</ul>


<p>-is_meta(attribute_label).
-is_meta(object_label).
+is_meta(concept_label).
+</p>

<p>@@ -62,26 +54,16 @@ fca_export_graph(Context, ExportG):&ndash;
 %!   :Options:list(compound)
 %! ) is det.
 % The following optios are supported:
&ndash;%   * attribute_label(+callable)
&ndash;%     DCG writing the labels for individual attributes.
&ndash;%     Default is pl_term//1.
&ndash;%   * concept_label(+oneof([attributes,both,objects]))
&ndash;%     Determines which components of the concepts are displayed
&ndash;%     in the export graph.
&ndash;%     Default is <code>both</code>.
&ndash;%   * object_label(+callable)
&ndash;%     DCG writing the labels for individual objects.
&ndash;%     Default is pl_term//1.
+%   * concept_label(+callable)
+%     DCG writing the labels for individual concepts.</p>

<p> fca_export_graph(Context, ExportG, Opts1):&ndash;
   fca_hasse(Context, Hasse),
   meta_options(is_meta, Opts1, Opts2),
&ndash;  option(attribute_label(ALbl_1), Opts2, pl_term),
&ndash;  option(concept_label(Mode), Opts2, both),
&ndash;  option(object_label(OLbl_1), Opts2, pl_term),
+  option(concept_label(Label_3), Opts2, concept_label),
   merge_options(</p>

<pre><code> [
</code></pre>

<ul>
<li>   vertex_label(fca_viz:concept_label(Mode, OLbl_1, ALbl_1)),</li>
<li>   vertex_label(Label_3),
   vertex_rank(fca:concept_cardinality)
 ],
 Opts2,
@@ -102,36 +84,18 @@ fca_viz(Context, File):&ndash;</li>
</ul>


<p> fca_viz(Context, File, Opts1):&ndash;
   meta_options(is_meta, Opts1, Opts2),
+  statistics(process_cputime, Time1),
   fca_export_graph(Context, ExportG, Opts2),
&ndash;  gv_export(ExportG, File, Opts2).
+  ExportG = graph(<em>,</em>,Es,<em>),
+  aggregate_all(max(N), (member(edge(V1,V2,</em>), Es), (N = V1 ; N = V2)), N),
+  ignore(option(number_of_vertices(N), Opts2)),
+  statistics(process_cputime, Time2),
+  Time is Time2 &ndash; Time1,
+  ignore(option(process_cputime(Time), Opts2)),
+  graph_viz(ExportG, File, Opts2).</p>

<p>&ndash;%! concept_label(
&ndash;%!   +Mode:oneof([attributes,both,objects]),
&ndash;%!   :ObjectLabel_1,
&ndash;%!   :AttributeLabel_1,
&ndash;%!   +Concept:compound,
&ndash;%!   -Label:atom
&ndash;%! ) is det.
+%! concept_label(+Concept:compound)// is det.</p>

<p>-concept_label(Mode, OLbl_1, ALbl_1, Concept, Lbl):&ndash;</p>

<h2>&ndash;  string_phrase(concept_label(Mode, OLbl_1, ALbl_1, Concept), Lbl).</h2>

<p>&ndash;
&ndash;%! concept_label(
&ndash;%!   +Mode:oneof([attributes,both,objects]),
&ndash;%!   :ObjectLabel_1,
&ndash;%!   :AttributeLabel_1,
&ndash;%!   +Concept:compound</p>

<h2>&ndash;%! )// is det.</h2>

<p>-concept_label(attributes, <em>, ALbl_1, concept(</em>,As)) &mdash;>
&ndash;  set(ALbl_1, As).
-concept_label(both, OLbl_1, ALbl_1, Concept) &mdash;>
&ndash;  pair(
&ndash;    concept_label(objects, OLbl_1, ALbl_1, Concept),
&ndash;    concept_label(attributes, OLbl_1, ALbl_1, Concept)
&ndash;  ).
-concept_label(objects, OLbl_1, <em>, concept(Os,</em>)) &mdash;>
&ndash;  set(OLbl_1, Os).
+concept_label(concept(Os,As)) &mdash;> set(Os), &ldquo; / &rdquo;, set(As).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 6dbb4f7..5134069 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -50,12 +50,12 @@ Vertex coordinates:</p>

<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/09-2015/12
+@version 2015/07, 2015/09-2016/01
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(graph/s/s_graph)).
&ndash;:&ndash; use_module(library(lambda)).
 :&ndash; use_module(library(list_ext)).
 :&ndash; use_module(library(option_ext)).
 :&ndash; use_module(library(ordsets)).
@@ -140,11 +140,15 @@ build_export_graph(G, ExportG):&ndash;
 build_export_graph(G, graph(VTerms2,VRanks,ETerms,GAttrs), Opts1):&ndash;
   graph_components(G, Vs, Es),
   meta_options(is_meta, Opts1, Opts2),
&ndash;  maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Opts2), Vs, VTerms1),
+  maplist(vertex_term0(Vs, Opts2), Vs, VTerms1),
   build_export_ranks(Vs, VTerms1, VRanks, VTerms2, Opts2),
&ndash;  maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Opts2), Es, ETerms),
+  maplist(edge_term0(Vs, Opts2), Es, ETerms),
   graph_attributes(GAttrs, Opts2).</p>

<p>+vertex_term0(Vs, Opts, V, VTerm) :&ndash; vertex_term(Vs, V, VTerm, Opts).
+
+edge_term0(Vs, Opts, E, ETerm) :&ndash; edge_term(Vs, E, ETerm, Opts).
+
 graph_components(graph(Vs,Es), Vs, Es):&ndash; !.
 graph_components(G, Vs, Es):&ndash;
   s_graph_components(G, Vs, Es).
@@ -190,37 +194,29 @@ build_export_rank_term(N, vertex(Id,[label(&ldquo;&rdquo;),shape(none)])):&ndash;</p>

<p> edge_term(Vs, E, edge(FromId,ToId,EAttrs), Opts):&ndash;
   % Arrowhead
&ndash;  if_option(edge_arrowhead(ArrowheadFunction), Opts,
&ndash;    call(ArrowheadFunction, E, EArrowhead)
+  if_option(edge_arrowhead(Arrowhead_2), Opts,
+    call(Arrowhead_2, E, EArrowhead)
   ),</p>

<p>   % Color.
&ndash;  if_option(edge_color(ColorFunction), Opts,
&ndash;    call(ColorFunction, E, EColor)
&ndash;  ),
+  if_option(edge_color(ColorFunction), Opts, call(ColorFunction, E, EColor)),</p>

<p>   % Id.
&ndash;  (   option(edge_id(IdFunction), Opts)
&ndash;  &ndash;>  call(IdFunction, E, FromId, ToId)
+  (   option(edge_id(Id_2), Opts)
+  &ndash;>  call(Id_2, E, FromId, ToId)
   ;   edge_components(E, FromV, ToV),</p>

<pre><code>   nth0chk(FromId, Vs, FromV),
   nth0chk(ToId, Vs, ToV)
</code></pre>

<p>   ),</p>

<p>   % Label.
&ndash;  if_option(edge_label(LabelFunction), Opts,
&ndash;    call(LabelFunction, E, ELabel)
&ndash;  ),
+  if_option(edge_label(ELabel_3), Opts, string_phrase(dcg_call(ELabel_3, E), ELabel)),</p>

<p>   % Penwidth.
&ndash;  if_option(edge_penwidth(PenwidthFunction), Opts,
&ndash;    call(PenwidthFunction, E, EPenwidth)
&ndash;  ),
+  if_option(edge_penwidth(Penwidth_2), Opts, call(Penwidth_2, E, EPenwidth)),</p>

<p>   % Style.
&ndash;  if_option(edge_style(StyleFunction), Opts,
&ndash;    call(StyleFunction, E, EStyle)
&ndash;  ),
+  if_option(edge_style(Style_2), Opts, call(Style_2, E, EStyle)),</p>

<p>   exclude(</p>

<pre><code> option_has_var_value,
</code></pre>

<p>@@ -274,7 +270,6 @@ graph_attributes(GAttrs, Opts):&ndash;
   option(graph_label(GLabel), Opts, &lsquo;&ldquo;&rdquo;&rsquo;),
   % Overlap.</p>

<h2>   option(graph_overlap(Overlap), Opts, false),</h2>

<p>   exclude(</p>

<pre><code> option_has_var_value,
 [
</code></pre>

<p>@@ -320,47 +315,32 @@ graph_attributes(GAttrs, Opts):&ndash;</p>

<p> vertex_term(Vs, V, vertex(VId,VAttrs), Opts):&ndash;
   % Color.
&ndash;  if_option(vertex_color(ColorFunction), Opts,
&ndash;    call(ColorFunction, V, VColor)
&ndash;  ),
+  if_option(vertex_color(Color_2), Opts, call(Color_2, V, VColor)),</p>

<p>   % Id.
&ndash;  (   option(vertex_id(IdFunction), Opts)
&ndash;  &ndash;>  call(IdFunction, V, VId)
&ndash;  ;   nth0chk(VId, Vs, V)
&ndash;  ),
+  (option(vertex_id(Id_2), Opts) &ndash;> call(Id_2, V, VId) ; nth0chk(VId, Vs, V)),</p>

<p>   % Image.
&ndash;  ignore(
&ndash;    if_option(vertex_image(ImageFunction), Opts,
&ndash;      call(ImageFunction, V, VImage)
&ndash;    )
&ndash;  ),
+  ignore(if_option(vertex_image(Image_2), Opts, call(Image_2, V, VImage))),</p>

<p>   % Label.
&ndash;  if_option(vertex_label(LabelFunction), Opts,
&ndash;    call(LabelFunction, V, VLabel)
&ndash;  ),
+  if_option(vertex_label(VLabel_2), Opts, string_phrase(dcg_call(VLabel_2, V), VLabel)),</p>

<p>   % Peripheries.
&ndash;  if_option(vertex_peripheries(PeripheriesFunction), Opts,
&ndash;    call(PeripheriesFunction, V, VPeripheries)
+  if_option(vertex_peripheries(Peripheries_2), Opts,
+    call(Peripheries_2, V, VPeripheries)
   ),</p>

<p>   % Position.
&ndash;  if_option(vertex_position(PositionFunction), Opts,
&ndash;    call(PositionFunction, Vs, Opts, V, VPosition)
+  if_option(vertex_position(Position_4), Opts,
+    call(Position_4, Vs, Opts, V, VPosition)
   ),</p>

<p>   % Shape.
&ndash;  if_option(vertex_shape(ShapeFunction), Opts,
&ndash;    call(ShapeFunction, V, VShape)
&ndash;  ),
+  if_option(vertex_shape(Shape_2), Opts, call(Shape_2, V, VShape)),</p>

<p>   % URI
&ndash;  if_option(vertex_uri(UriFunction), Opts,
&ndash;    call(UriFunction, V, VUri)
&ndash;  ),
+  if_option(vertex_uri(Uri_2), Opts, call(Uri_2, V, VUri)),</p>

<p>   exclude(</p>

<pre><code> option_has_var_value,
</code></pre>

<p>diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index 8fa78af..f55fce5 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -46,11 +46,10 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/11
+@version 2015/07, 2015/11, 2016/02
 */</p>

<p>&ndash;:&ndash; use_module(library(dcg/basics), except([string//1])).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(dcg/dcg_ext), except([string//1])).
 :&ndash; use_module(library(gv/gv_html)).</p>

<p>@@ -256,7 +255,7 @@ input_changeable(true) &mdash;> &ldquo;!&rdquo;.
 %! pointList(+Points:list(compound))// .</p>

<p> pointList(Points) &mdash;>
&ndash;  <em>(point, Points, []).
+  </em>(point, Points).</p>

<p>diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index b26af73..4a92d5b 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -2,7 +2,7 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr_value//2 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>              % +Attribute:nvpair
</code></pre></li>
<li><pre><code>              % +Attr
</code></pre>

<p>]
).
:&ndash; ensure_loaded(library(&lsquo;gv/gv_attrs.data&rsquo;)).
@@ -10,11 +10,12 @@
/** <module> GraphViz attributes</p></li>
</ul>


<p> @author Wouter Beek
&ndash;@version 2015/07-2015/08, 2015/10
+@version 2015/07-2015/08, 2015/10, 2016/03
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_call)).
+:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(error)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).
@@ -23,21 +24,20 @@</p>

<p>&ndash;%! gv_attr_value(
&ndash;%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +Attribute:compound
&ndash;%! )// is det.
+%! gv_attr_value(+Context, +Attr)// is det.
 % Uses the default value in case Value is uninstantiated.
 % Otherwise, performs a typecheck and converts the given value.
+%
+% Context can be either <code>cluster</code>, <code>edge</code>, <code>graph</code>, <code>node</code> or <code>subgraph</code>.</p>

<p> % Use the default if no value is given.
 gv_attr_value(Context, Name=Value) &mdash;>
   {
&ndash;    var(Value), !,
+    var(Value),</p>

<pre><code> gv_attr(Name, UsedBy, _, DefaultValue, _, _),
 % Check validity of context.
 memberchk(Context, UsedBy)
</code></pre>

<ul>
<li>},</li>
<li><p>}, !,
gv_attr_value(Context, Name=DefaultValue).
gv_attr_value(Context, Name=Value) &mdash;>
{
@@ -56,8 +56,10 @@ gv_attr_value(Context, Name=Value) &mdash;></p>

<p>   % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(Value, Minimum)</p></li>
<li>},</li>
<li>}, !,
dcg_call(gv_attr_type:Dcg, Value).
+gv_attr_value(<em>, Name=</em>) &mdash;></li>
<li>{existence_error(gv_attr, Name)}.</li>
</ul>


<p>diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 3232c97..ac319dc 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -14,12 +14,11 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2015/08, 2015/10
+@version 2015/08, 2015/10, 2016/02
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/basics)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).</p>

<p>@@ -35,12 +34,12 @@</p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
   &ldquo;#&rdquo;,
&ndash;  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
+  #(3, hex_color, [Red,Green,Blue]).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   color(rgb(Red,Green,Blue)),
   hex_color(Alpha).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
&ndash;  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
+  #(3, hsv_color, [Hue,Saturation,Value]).
 color(Name) &mdash;>
   {gv_color(_, Name)},
   atom(Name).
@@ -56,7 +55,7 @@ hsv_color(D, Head, Tail):&ndash;
 %! colorList(+Pairs:list(pair(compound,float)))// .</p>

<p> colorList(L) &mdash;>
&ndash;  &lsquo;+&rsquo;(wc, L, []).
+  &lsquo;+&rsquo;(wc, L).</p>

<p> wc(Color-Float) &mdash;>
   color(Color),
diff &mdash;git a/prolog/gv/gv_dom.pl b/prolog/gv/gv_dom.pl
index e85849d..30c4263 100644
&mdash;&ndash; a/prolog/gv/gv_dom.pl
+++ b/prolog/gv/gv_dom.pl
@@ -1,35 +1,29 @@
 :&ndash; module(
   gv_dom,
   [
&ndash;    gv_dom/3 % +ExportGraph:compound
&ndash;             % -Dom:list(compound)
&ndash;             % +Options:list(compound)
+    gv_dom/3 % +ExportG, -Dom, +Opts
   ]
 ).</p>

<p> /** <module> GraphViz DOM</p>

<p> @author Wouter Beek
&ndash;@version 2015/07
+@version 2015/07, 2016/01
 */</p>

<p> :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(svg/svg_dom)).
+:&ndash; use_module(library(svg/svg_ext)).</p>

<p>&ndash;%! gv_dom(
&ndash;%!   +ExportGraph:compound,
&ndash;%!   -Dom:list(compound),
&ndash;%!   +Options:list(compound)
&ndash;%! ) is det.
+%! gv_dom(+ExportG, -Dom, +Opts) is det.</p>

<p> gv_dom(ExportG, Dom, Opts1):&ndash;
   % Make sure the file type of the output file is SvgDom.
   merge_options([output(svg)], Opts1, Opts2),
&ndash;  gv_export(ExportG, ToFile, Opts2),
+  graph_viz(ExportG, ToFile, Opts2),
   svg_dom(ToFile, Dom),
   delete_file(ToFile).
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index 4cf12a8..993fcee 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -1,18 +1,15 @@
 :&ndash; module(
   gv_file,
   [
&ndash;    gv_export/2, % +ExportGraph:compound
&ndash;                 % ?File:atom
&ndash;    gv_export/3 % +ExportGraph:compound
&ndash;                % ?File:atom
&ndash;                % +Options:list(nvpair)
+    graph_viz/2, % +ExportG, ?File
+    graph_viz/3  % +ExportG, ?File, +Opts
   ]
 ).</p>

<p> /** <module> GraphViz file</p>

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/10-2015/11
+@version 2015/07, 2015/10-2015/11, 2016/01
 */</p>

<p> :&ndash; use_module(library(code_ext)).
@@ -23,7 +20,7 @@
 :&ndash; use_module(library(os/process_ext)).
 :&ndash; use_module(library(string_ext)).</p>

<p>&ndash;:&ndash; predicate_options(gv_export/3, 3, [
+:&ndash; predicate_options(graph_viz/3, 3, [</p>

<pre><code>  pass_to(file_to_gv/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(file_to_gv/3, 3, [
@@ -40,14 +37,8 @@ user:module_uses(gv_file, program(dot)).</p>

<p>&ndash;%! gv_export(+ExportGraph:compound, ?File:atom) is det.</p>

<h2>&ndash;% Wrapper around gv_export/3 with default options.</h2>

<p>-gv_export(ExportG, File):&ndash;</p>

<h2>&ndash;  gv_export(ExportG, File, []).</h2>

<p>&ndash;
&ndash;%! gv_export(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
+%! graph_viz(+ExportGraph:compound, ?File:atom) is det.
+%! graph_viz(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
@@ -60,7 +51,9 @@ gv_export(ExportG, File):&ndash;
 %     Default is <code>pdf</code>.
 %     For possible values see gv_output_type/1.</p>

<p>-gv_export(ExportG, File, Opts):&ndash;
+graph_viz(ExportG, File):&ndash;
+  graph_viz(ExportG, File, []).
+graph_viz(ExportG, File, Opts):&ndash;
   once(phrase(gv_graph(ExportG), Cs)),</p>

<p>   % Be thread-safe.
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index 5c937ce..c95c9cc 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -20,7 +20,6 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(option)).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index aecbe07..30ea9c5 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -24,12 +24,11 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07-2015/08, 2015/10-2015/12
+@version 2015/07-2015/08, 2015/10-2016/01
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_html)).
 :&ndash; use_module(library(error)).
@@ -86,7 +85,7 @@ gv_edge_operator(Dir) &mdash;>
 %! gv_generic_attributes_statement(
 %!   +Kind:oneof([edge,graph,node]),
 %!   +Indent:nonneg,
&ndash;%!   +CategoryAttributes:list(nvpair)
+%!   +CategoryAttrs
 %! )//
 % A GraphViz statement describing generic attributes for a category of items.
 %
@@ -200,8 +199,8 @@ gv_id(double_quoted_string(Atom)) &mdash;> !,
 % Numerals.
 gv_id(N) &mdash;>
   {number(N)}, !,
&ndash;  % @tbd Use gv_numeral//1.
&ndash;  number(N).
+  {number_codes(N, Cs)},
+  Cs.
 % Alpha-numeric strings.
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -264,6 +263,22 @@ gv_node_id(Id) &mdash;> {type_error(gv_node_id, Id)}.</p>

<p>+%! gv_numeral(-Number)// is det.
+% <code>bnf
+% ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
+%</code>
+
+gv_numeral(N) &mdash;>
+  (&ldquo;&ndash;&rdquo; &ndash;> {Sg = -1} ; {Sg = 1}),
+  (   &ldquo;.&rdquo;
+  &ndash;>  {I = 0}, +(digit, Ds), {pos_frac(Ds, Frac)}
+  ;   +(digit, Ds1), {pos_sum(Ds1, I)},
+      (&ldquo;.&rdquo; &ndash;> *(digit, Ds2), {pos_frac(Ds2, Frac)} ; {Frac = 0.0})
+  ),
+  {N is Sg * (I + Frac)}.
+
+
+
 %! gv_port// is det.</p>

<p> gv_port &mdash;> gv_port_location, (gv_port_angle ; &ldquo;&rdquo;).
@@ -279,7 +294,7 @@ gv_port_location &mdash;> &ldquo;:[&rdquo;, gv_id(<em>), &ldquo;,&rdquo;, gv_id(</em>), &ldquo;]&rdquo;.</p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
 % <code>
-% compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
+% compass_pt : ( n | ne | e | se | s | sw | w | nw | c | _ )
 %</code></p>

<p> gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
index 3ee7de6..b5c1368 100644
&mdash;&ndash; a/prolog/gv/gv_html.pl
+++ b/prolog/gv/gv_html.pl
@@ -44,7 +44,6 @@ cell:   <TD> label </TD>
 */</p>

<p> :&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(html/html_dcg)).</p>

<p>@@ -210,7 +209,12 @@ text(Content)  &mdash;> text([Content]).
 % <code>``
 %
 % Supported attributes for BR:
-%   -</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;<code>
+%   *</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;`
+%
+% Supported attributes for FONT:
+%   * COLOR=&ldquo;color&rdquo;
+%   * FACE=&ldquo;fontname&rdquo;
+%   * POINT-SIZE=&ldquo;value&rdquo;</p>

<p> textitem(br(Attrs)) &mdash;> !,
   html_element(br, Attrs).
diff &mdash;git a/prolog/gv/gv_numeral.pl b/prolog/gv/gv_numeral.pl
deleted file mode 100644
index 4ba0d64..0000000
&mdash;&ndash; a/prolog/gv/gv_numeral.pl
+++ /dev/null
@@ -1,87 +0,0 @@
&ndash;:&ndash; module(
&ndash;  gv_numeral,
&ndash;  [
&ndash;    gv_numeral//1 % ?Value:number
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz numeral</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2014/05-2014/06, 2015/01</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(library(dcg/dcg_abnf_common)).
&ndash;:&ndash; use_module(library(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(library(math/math_ext)).
&ndash;:&ndash; use_module(library(math/positional)).
&ndash;:&ndash; use_module(library(math/radconv)).</p>

<h2>&ndash;:&ndash; use_module(library(math/rational_ext)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gv_numeral(?Value:compound)// .
&ndash;%
&ndash;% # Syntax
&ndash;%
&ndash;% <code>bnf
-% ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
-%</code>
&ndash;%
&ndash;% ## Generation
&ndash;%
&ndash;% In the generative case, three notations are allowed (also see below):
&ndash;%   1. (non-zero integer-part)
&ndash;%   2. (decimal-separator) (non-zero fractional)
&ndash;%   3. (non-zero integer-part) (decimal-separator) (non-zero fractional)
&ndash;%
&ndash;% The following notations are explicitly excluded due to verbosity:
&ndash;%   &ndash; (non-zero integer-part) (decimal-separator)
&ndash;%   &ndash; (non-zero integer-part) (decimal-separator) (zero fractional)
&ndash;%   &ndash; (zero integer-part) (decimal-separator) (non-zero fractional)
&ndash;%
&ndash;% The following notations are also excluded, but since they violate
&ndash;%  well-formedness:
&ndash;%   &ndash; (non-zero integer-part) (non-zero fractional)</p>

<h2>&ndash;%   &ndash; (decimal-separator)</h2>

<p>-gv_numeral(N) &mdash;>
&ndash;  (   {ground(N)}
&ndash;  &ndash;>  &lsquo;[&ndash;]?&rsquo;(N),
&ndash;      {N0 is abs(N)},
&ndash;      {rational_parts(N0, I, F)},
&ndash;      (   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part
&ndash;          %     and do not write the decimal separator.
&ndash;          {F =:= 0}
&ndash;      &ndash;>  {positional(I, IW)},
&ndash;          &lsquo;[0-9]+&rsquo;(IW)
&ndash;      ;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,
&ndash;          %     preceded by the decimal separator.
&ndash;          {I =:= 0}
&ndash;      &ndash;>  &ldquo;.&rdquo;,
&ndash;          {positional_fraction(FW, F)},
&ndash;          &lsquo;[0-9]<em>&rsquo;(FW)
&ndash;      ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
&ndash;          %     so write both of them, with the decimal separator in-between.
&ndash;          {positional(I, IW)},
&ndash;          &lsquo;[0-9]+&rsquo;(IW),
&ndash;          &ldquo;.&rdquo;,
&ndash;          {positional_fraction(FW, F)},
&ndash;          &lsquo;[0-9]</em>&rsquo;(FW)
&ndash;      )
&ndash;  ;   &lsquo;[&ndash;]?&rsquo;(Sg),
&ndash;      (   &ldquo;.&rdquo;,
&ndash;          &lsquo;[0-9]+&rsquo;(FW),
&ndash;          {IW = []}
&ndash;      ;   &lsquo;[0-9]+&rsquo;(IW),
&ndash;          (   &ldquo;.&rdquo;,
&ndash;              &lsquo;[0-9]<em>&rsquo;(FW)
&ndash;          ;   {FW = []}
&ndash;          )
&ndash;      ),
&ndash;      {rational_parts_weights(N0, IW, FW)},
&ndash;      {N is copysign(N0, Sg)}
&ndash;  ).
diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
new file mode 100644
index 0000000..4382aa6
&mdash;&ndash; /dev/null
+++ b/prolog/tree/tree_viz.pl
@@ -0,0 +1,65 @@
+:&ndash; module(
+  tree_viz,
+  [
+    tree_export_graph/2, % +Tree, ExportG
+    tree_export_graph/3, % +Tree, ExportG, +Opts
+    tree_viz/2,          % +Tree, ?File
+    tree_viz/3           % +Tree, ?File, +Opts
+  ]
+).
+
+/** <module> Tree visualization
+
+Export trees to GraphViz.
+
+@author Wouter Beek
+@version 2016/01-2016/02
+</em>/
+
+:&ndash; use_module(library(graph/build_export_graph)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(ordsets)).
+:&ndash; use_module(library(tree/l_tree)).
+:&ndash; use_module(library(tree/s_tree)).
+
+:&ndash; predicate_options(tree_export_graph/3, 3, [
+     pass_to(build_export_graph/4, 4)
+   ]).
+:&ndash; predicate_options(tree_viz/3, 3, [
+     pass_to(graph_viz/3, 3),
+     pass_to(tree_to_graph/3, 3)
+   ]).
+
+
+
+
+
+%! tree_export_graph(+Tree, -ExportG) is det.
+%! tree_export_graph(+Tree, -ExportG, +Opts) is det.
+% Opts are passed to build_export_graph/4.
+
+tree_export_graph(Tree, ExportG) :&ndash;
+  tree_export_graph(Tree, ExportG, []).
+
+tree_export_graph(Tree, ExportG, Opts) :&ndash;
+  (   is_s_tree(Tree)
+  &ndash;>  tree_to_graph(Tree, G)
+  ;   is_l_tree(Tree)
+  &ndash;>  l_tree_to_graph(Tree, G)
+  ),
+  build_export_graph(G, ExportG, Opts).
+
+
+
+%! tree_viz(+Tree, ?File) is det.
+%! tree_viz(+Tree, ?File, +Opts) is det.
+% Stores the given tree term into a GraphViz file.
+%
+% Options are passed to export_graph_to_gv_file/3, tree_to_graph/3.
+
+tree_viz(Tree, File) :&ndash;
+  tree_viz(Tree, File, []).
+
+tree_viz(Tree, File, Opts) :&ndash;
+  tree_export_graph(Tree, ExportG, Opts),
+  graph_viz(ExportG, File, Opts).
diff &mdash;git a/test/test.pl b/test/test.pl
index c1bdca0..83dc023 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -6,8 +6,10 @@
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_attr_type)).
 :&ndash; use_module(library(gv/gv_color)).
+:&ndash; use_module(library(gv/gv_dom)).
 :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(gv/gv_graph)).
 :&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(gv/gv_html)).
&ndash;:&ndash; use_module(library(gv/gv_numeral)).
+%/tree
+:&ndash; use_module(library(tree/tree_viz)).</p>

<p>```</p>

<h2 id="147"> 147: 正在比较变动前 f16acca 和变动后 4e2d9f1 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
index bcc7654..190b988 100644
&mdash;&ndash; a/data/gv_attrs_scrape.pl
+++ b/data/gv_attrs_scrape.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_attrs_scrape,
   [
&ndash;    gv_attrs_scrape/1 % +File
+    gv_attrs_scrape/1 % +File:atom
   ]
 ).</p>

<p>@@ -11,41 +11,46 @@ Writes compound terms of the following form to file:</p>

<p> <code>prolog
 gv_attr(
-  ?Name,
+  ?Name:atom,
   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
   ?Types:list(atom),
   ?Default,
   ?Minimum,
-  ?Notes
+  ?Notes:atom
 ) is nondet.
</code></p>

<p> @author Wouter Beek
&ndash;@version 2015/10, 2016/07
+@version 2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(debug)).
+:&ndash; use_module(library(dcg/basics), except([string//1])).
+:&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(gv/gv_attr_type)).
 :&ndash; use_module(library(http/http_download)).
+:&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(os/io)).
&ndash;:&ndash; use_module(library(pl_term)).
&ndash;:&ndash; use_module(library(print_ext)).
+:&ndash; use_module(library(msg_ext)).
+:&ndash; use_module(library(pl/pl_term)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
&ndash;:&ndash; use_module(library(yall)).</p>

<p>&ndash;%! gv_attrs_scrape(+File) is det.
+%! gv_attrs_scrape(+File:atom) is det.</p>

<p> gv_attrs_scrape(File):&ndash;
&ndash;  debug(gv, &ldquo;Updating the GraphViz attributes table.&rdquo;, []),
&ndash;  call_to_stream(File, [In,Meta,Meta]>>gv_attrs_download(In)).
+  setup_call_cleanup(
+    open_any(File, write, Write, Close, []),
+    verbose(
+      gv_attrs_download(Write),
+      &ldquo;Updating the GraphViz attributes table.&rdquo;
+    ),
+    close_any(Close)
+  ).</p>

<p> gv_attrs_download(Write):&ndash;
@@ -74,7 +79,7 @@ gv_attrs_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</p>

<p> % HELPERS %</p>

<p>&ndash;%! translate_default(+Default1, -Default2) is det.
+%! translate_default(+Default1:atom, -Default2:atom) is det.</p>

<p> % The empty string is represented by the empty atom.
 translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
index 102a02a..3ac5d44 100644
&mdash;&ndash; a/data/gv_color_scrape.pl
+++ b/data/gv_color_scrape.pl
@@ -1,36 +1,40 @@
 :&ndash; module(
   gv_color_scrape,
   [
&ndash;    gv_color_scrape/1 % +File
+    gv_color_scrape/1 % +File:atom
   ]
 ).</p>

<p> /** <module> GraphViz: Scrape colors</p>

<p> @author Wouter Beek
&ndash;@version 2015/10, 2016/07
+@version 2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(debug)).
 :&ndash; use_module(library(http/http_download)).
+:&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(os/io)).
&ndash;:&ndash; use_module(library(pl_term)).
&ndash;:&ndash; use_module(library(print_ext)).
+:&ndash; use_module(library(msg_ext)).
+:&ndash; use_module(library(pl/pl_term)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
&ndash;:&ndash; use_module(library(yall)).</p>

<p>&ndash;%! gv_color_scrape(+File) is det.
+%! gv_color_scrape(+File:atom) is det.</p>

<p> gv_color_scrape(File):&ndash;
&ndash;  debug(io, &ldquo;Updating the GraphViz color table.&rdquo;, []),
&ndash;  call_to_stream(File, [In,Meta,Meta]>>gv_color_download(In)).
+  setup_call_cleanup(
+    open_any(File, write, Write, Close, []),
+    verbose(
+      gv_color_download(Write),
+      &ldquo;Updating the GraphViz color table.&rdquo;
+    ),
+    close_any(Close)
+  ).</p>

<p> gv_color_download(Write):&ndash;
diff &mdash;git a/pack.pl b/pack.pl
index 989108a..203cbfc 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -4,6 +4,6 @@ home(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz">https://github.com/wouterbeek/plGraphViz</a>&rsquo;).
 maintainer(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#x61;&#x69;&#108;&#116;&#111;&#58;&#x6d;&#x65;&#64;&#119;&#111;&#x75;&#x74;&#x65;&#x72;&#98;&#x65;&#x65;&#x6b;&#x2e;&#x63;&#111;&#109;">&#x6d;&#101;&#x40;&#x77;&#111;&#117;&#116;&#x65;&#x72;&#98;&#x65;&#101;&#107;&#x2e;&#x63;&#x6f;&#109;</a>&rsquo;).
 name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#109;&#x65;&#64;&#119;&#111;&#117;&#116;&#101;&#x72;&#x62;&#x65;&#x65;&#107;&#x2e;&#99;&#x6f;&#x6d;">&#109;&#x65;&#x40;&#x77;&#111;&#x75;&#x74;&#101;&#x72;&#98;&#101;&#101;&#107;&#x2e;&#x63;&#x6f;&#x6d;</a>&rsquo;).
-requires(&lsquo;Prolog-Library-Collection&rsquo;).
+requires(&lsquo;Prolog_Library_Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.1&rsquo;).
+version(&lsquo;0.0.17&rsquo;).
diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index 083dbb2..e6fb117 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -2,20 +2,24 @@
   fca_viz,
   [</p>

<pre><code> fca_export_graph/2, % +Context, -ExportGraph
</code></pre>

<ul>
<li> fca_export_graph/3, % +Context, -ExportGraph, :Opts</li>
<li> fca_viz/2,          % +Context, ?File</li>
<li> fca_viz/3           % +Context, ?File, :Opts</li>
<li> fca_export_graph/3, % +Context:compound</li>
<li><pre><code>                 % -ExportGraph:compound
</code></pre></li>
<li><pre><code>                 % :Options:list(compound)
</code></pre></li>
<li> fca_viz/2, % +Context, ?File</li>
<li> fca_viz/3 % +Context:compound</li>
<li><pre><code>       % ?File:atom
</code></pre></li>
<li><pre><code>       % :Options:list(compound)
</code></pre>

<p>]
).</p></li>
</ul>


<p> /** <module> FCA visualization</p>

<p> @author Wouter Beek
&ndash;@version 2015/11-2016/01
+@version 2015/11-2015/12
 */</p>

<p>&ndash;:&ndash; use_module(library(aggregate)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(dcg/dcg_collection)).
+:&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(dcg/dcg_pl)).
 :&ndash; use_module(library(fca/fca)).
 :&ndash; use_module(library(graph/build_export_graph)).
@@ -32,7 +36,7 @@</p>

<pre><code>]).
</code></pre>

<p> :&ndash; predicate_options(fca_viz/3, 3, [</p>

<pre><code>  pass_to(fca_export_graph/3, 3),
</code></pre>

<ul>
<li>  pass_to(graph_viz/3, 3)</li>
<li>  pass_to(gv_export/3, 3)
]).</li>
</ul>


<p> is_meta(concept_label).
@@ -84,15 +88,8 @@ fca_viz(Context, File):&ndash;</p>

<p> fca_viz(Context, File, Opts1):&ndash;
   meta_options(is_meta, Opts1, Opts2),
&ndash;  statistics(process_cputime, Time1),
   fca_export_graph(Context, ExportG, Opts2),
&ndash;  ExportG = graph(<em>,</em>,Es,<em>),
&ndash;  aggregate_all(max(N), (member(edge(V1,V2,</em>), Es), (N = V1 ; N = V2)), N),
&ndash;  ignore(option(number_of_vertices(N), Opts2)),
&ndash;  statistics(process_cputime, Time2),
&ndash;  Time is Time2 &ndash; Time1,
&ndash;  ignore(option(process_cputime(Time), Opts2)),
&ndash;  graph_viz(ExportG, File, Opts2).
+  gv_export(ExportG, File, Opts2).</p>

<p>diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 5134069..caabaa0 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -50,12 +50,14 @@ Vertex coordinates:</p>

<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/09-2016/01
+@version 2015/07, 2015/09-2015/12
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(dcg/dcg_call)).
+:&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(graph/s/s_graph)).
+:&ndash; use_module(library(lambda)).
 :&ndash; use_module(library(list_ext)).
 :&ndash; use_module(library(option_ext)).
 :&ndash; use_module(library(ordsets)).
@@ -140,15 +142,11 @@ build_export_graph(G, ExportG):&ndash;
 build_export_graph(G, graph(VTerms2,VRanks,ETerms,GAttrs), Opts1):&ndash;
   graph_components(G, Vs, Es),
   meta_options(is_meta, Opts1, Opts2),
&ndash;  maplist(vertex_term0(Vs, Opts2), Vs, VTerms1),
+  maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Opts2), Vs, VTerms1),
   build_export_ranks(Vs, VTerms1, VRanks, VTerms2, Opts2),
&ndash;  maplist(edge_term0(Vs, Opts2), Es, ETerms),
+  maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Opts2), Es, ETerms),
   graph_attributes(GAttrs, Opts2).</p>

<h2>-vertex_term0(Vs, Opts, V, VTerm) :&ndash; vertex_term(Vs, V, VTerm, Opts).</h2>

<h2>-edge_term0(Vs, Opts, E, ETerm) :&ndash; edge_term(Vs, E, ETerm, Opts).</h2>

<p> graph_components(graph(Vs,Es), Vs, Es):&ndash; !.
 graph_components(G, Vs, Es):&ndash;
   s_graph_components(G, Vs, Es).
diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index f55fce5..8fa78af 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -46,10 +46,11 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/11, 2016/02
+@version 2015/07, 2015/11
 */</p>

<p>&ndash;:&ndash; use_module(library(dcg/dcg_ext), except([string//1])).
+:&ndash; use_module(library(dcg/basics), except([string//1])).
+:&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(gv/gv_html)).</p>

<p>@@ -255,7 +256,7 @@ input_changeable(true) &mdash;> &ldquo;!&rdquo;.
 %! pointList(+Points:list(compound))// .</p>

<p> pointList(Points) &mdash;>
&ndash;  <em>(point, Points).
+  </em>(point, Points, []).</p>

<p>diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 4a92d5b..b26af73 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -2,7 +2,7 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr_value//2 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>              % +Attr
</code></pre></li>
<li><pre><code>              % +Attribute:nvpair
</code></pre>

<p>]
).
:&ndash; ensure_loaded(library(&lsquo;gv/gv_attrs.data&rsquo;)).
@@ -10,12 +10,11 @@
/** <module> GraphViz attributes</p></li>
</ul>


<p> @author Wouter Beek
&ndash;@version 2015/07-2015/08, 2015/10, 2016/03
+@version 2015/07-2015/08, 2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(error)).
+:&ndash; use_module(library(dcg/dcg_call)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).
@@ -24,20 +23,21 @@</p>

<p>&ndash;%! gv_attr_value(+Context, +Attr)// is det.
+%! gv_attr_value(
+%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
+%!   +Attribute:compound
+%! )// is det.
 % Uses the default value in case Value is uninstantiated.
 % Otherwise, performs a typecheck and converts the given value.
&ndash;%
&ndash;% Context can be either <code>cluster</code>, <code>edge</code>, <code>graph</code>, <code>node</code> or <code>subgraph</code>.</p>

<p> % Use the default if no value is given.
 gv_attr_value(Context, Name=Value) &mdash;>
   {
&ndash;    var(Value),
+    var(Value), !,</p>

<pre><code> gv_attr(Name, UsedBy, _, DefaultValue, _, _),
 % Check validity of context.
 memberchk(Context, UsedBy)
</code></pre>

<ul>
<li>}, !,</li>
<li><p>},
gv_attr_value(Context, Name=DefaultValue).
gv_attr_value(Context, Name=Value) &mdash;>
{
@@ -56,10 +56,8 @@ gv_attr_value(Context, Name=Value) &mdash;></p>

<p>   % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(Value, Minimum)</p></li>
<li>}, !,</li>
<li>},
dcg_call(gv_attr_type:Dcg, Value).
-gv_attr_value(<em>, Name=</em>) &mdash;></li>
<li>{existence_error(gv_attr, Name)}.</li>
</ul>


<p>diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index ac319dc..3232c97 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -14,11 +14,12 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2015/08, 2015/10, 2016/02
+@version 2015/08, 2015/10
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(dcg/basics)).
+:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).</p>

<p>@@ -34,12 +35,12 @@</p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
   &ldquo;#&rdquo;,
&ndash;  #(3, hex_color, [Red,Green,Blue]).
+  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   color(rgb(Red,Green,Blue)),
   hex_color(Alpha).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
&ndash;  #(3, hsv_color, [Hue,Saturation,Value]).
+  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
 color(Name) &mdash;>
   {gv_color(_, Name)},
   atom(Name).
@@ -55,7 +56,7 @@ hsv_color(D, Head, Tail):&ndash;
 %! colorList(+Pairs:list(pair(compound,float)))// .</p>

<p> colorList(L) &mdash;>
&ndash;  &lsquo;+&rsquo;(wc, L).
+  &lsquo;+&rsquo;(wc, L, []).</p>

<p> wc(Color-Float) &mdash;>
   color(Color),
diff &mdash;git a/prolog/gv/gv_dom.pl b/prolog/gv/gv_dom.pl
index 30c4263..e85849d 100644
&mdash;&ndash; a/prolog/gv/gv_dom.pl
+++ b/prolog/gv/gv_dom.pl
@@ -1,29 +1,35 @@
 :&ndash; module(
   gv_dom,
   [
&ndash;    gv_dom/3 % +ExportG, -Dom, +Opts
+    gv_dom/3 % +ExportGraph:compound
+             % -Dom:list(compound)
+             % +Options:list(compound)
   ]
 ).</p>

<p> /** <module> GraphViz DOM</p>

<p> @author Wouter Beek
&ndash;@version 2015/07, 2016/01
+@version 2015/07
 */</p>

<p> :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(svg/svg_ext)).
+:&ndash; use_module(library(svg/svg_dom)).</p>

<p>&ndash;%! gv_dom(+ExportG, -Dom, +Opts) is det.
+%! gv_dom(
+%!   +ExportGraph:compound,
+%!   -Dom:list(compound),
+%!   +Options:list(compound)
+%! ) is det.</p>

<p> gv_dom(ExportG, Dom, Opts1):&ndash;
   % Make sure the file type of the output file is SvgDom.
   merge_options([output(svg)], Opts1, Opts2),
&ndash;  graph_viz(ExportG, ToFile, Opts2),
+  gv_export(ExportG, ToFile, Opts2),
   svg_dom(ToFile, Dom),
   delete_file(ToFile).
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index 993fcee..4cf12a8 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -1,15 +1,18 @@
 :&ndash; module(
   gv_file,
   [
&ndash;    graph_viz/2, % +ExportG, ?File
&ndash;    graph_viz/3  % +ExportG, ?File, +Opts
+    gv_export/2, % +ExportGraph:compound
+                 % ?File:atom
+    gv_export/3 % +ExportGraph:compound
+                % ?File:atom
+                % +Options:list(nvpair)
   ]
 ).</p>

<p> /** <module> GraphViz file</p>

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/10-2015/11, 2016/01
+@version 2015/07, 2015/10-2015/11
 */</p>

<p> :&ndash; use_module(library(code_ext)).
@@ -20,7 +23,7 @@
 :&ndash; use_module(library(os/process_ext)).
 :&ndash; use_module(library(string_ext)).</p>

<p>&ndash;:&ndash; predicate_options(graph_viz/3, 3, [
+:&ndash; predicate_options(gv_export/3, 3, [</p>

<pre><code>  pass_to(file_to_gv/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(file_to_gv/3, 3, [
@@ -37,8 +40,14 @@ user:module_uses(gv_file, program(dot)).</p>

<p>&ndash;%! graph_viz(+ExportGraph:compound, ?File:atom) is det.
&ndash;%! graph_viz(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
+%! gv_export(+ExportGraph:compound, ?File:atom) is det.
+% Wrapper around gv_export/3 with default options.
+
+gv_export(ExportG, File):&ndash;
+  gv_export(ExportG, File, []).
+
+
+%! gv_export(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
@@ -51,9 +60,7 @@ user:module_uses(gv_file, program(dot)).
 %     Default is <code>pdf</code>.
 %     For possible values see gv_output_type/1.</p>

<p>-graph_viz(ExportG, File):&ndash;
&ndash;  graph_viz(ExportG, File, []).
-graph_viz(ExportG, File, Opts):&ndash;
+gv_export(ExportG, File, Opts):&ndash;
   once(phrase(gv_graph(ExportG), Cs)),</p>

<p>   % Be thread-safe.
diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index c95c9cc..5c937ce 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -20,6 +20,7 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(option)).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 30ea9c5..aecbe07 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -24,11 +24,12 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07-2015/08, 2015/10-2016/01
+@version 2015/07-2015/08, 2015/10-2015/12
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_html)).
 :&ndash; use_module(library(error)).
@@ -85,7 +86,7 @@ gv_edge_operator(Dir) &mdash;>
 %! gv_generic_attributes_statement(
 %!   +Kind:oneof([edge,graph,node]),
 %!   +Indent:nonneg,
&ndash;%!   +CategoryAttrs
+%!   +CategoryAttributes:list(nvpair)
 %! )//
 % A GraphViz statement describing generic attributes for a category of items.
 %
@@ -199,8 +200,8 @@ gv_id(double_quoted_string(Atom)) &mdash;> !,
 % Numerals.
 gv_id(N) &mdash;>
   {number(N)}, !,
&ndash;  {number_codes(N, Cs)},
&ndash;  Cs.
+  % @tbd Use gv_numeral//1.
+  number(N).
 % Alpha-numeric strings.
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -263,22 +264,6 @@ gv_node_id(Id) &mdash;> {type_error(gv_node_id, Id)}.</p>

<p>&ndash;%! gv_numeral(-Number)// is det.
&ndash;% ```bnf
&ndash;% (&lsquo;&ndash;&rsquo;)? ( &lsquo;.&rsquo; [0-9]+ | [0-9]+ ( &lsquo;.&rsquo; [0-9]* )? )</p>

<h2>&ndash;% ```</h2>

<p>-gv_numeral(N) &mdash;>
&ndash;  (&ldquo;&ndash;&rdquo; &ndash;> {Sg = -1} ; {Sg = 1}),
&ndash;  (   &ldquo;.&rdquo;
&ndash;  &ndash;>  {I = 0}, +(digit, Ds), {pos_frac(Ds, Frac)}
&ndash;  ;   +(digit, Ds1), {pos_sum(Ds1, I)},
&ndash;      (&ldquo;.&rdquo; &ndash;> *(digit, Ds2), {pos_frac(Ds2, Frac)} ; {Frac = 0.0})
&ndash;  ),</p>

<h2>&ndash;  {N is Sg * (I + Frac)}.</h2>

<h2>&ndash;</h2>

<p> %! gv_port// is det.</p>

<p> gv_port &mdash;> gv_port_location, (gv_port_angle ; &ldquo;&rdquo;).
@@ -294,7 +279,7 @@ gv_port_location &mdash;> &ldquo;:[&rdquo;, gv_id(<em>), &ldquo;,&rdquo;, gv_id(</em>), &ldquo;]&rdquo;.</p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
 % <code>
-% compass_pt : ( n | ne | e | se | s | sw | w | nw | c | _ )
+% compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
 %</code></p>

<p> gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
index b5c1368..3ee7de6 100644
&mdash;&ndash; a/prolog/gv/gv_html.pl
+++ b/prolog/gv/gv_html.pl
@@ -44,6 +44,7 @@ cell:   <TD> label </TD>
 */</p>

<p> :&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(html/html_dcg)).</p>

<p>@@ -209,12 +210,7 @@ text(Content)  &mdash;> text([Content]).
 % <code>``
 %
 % Supported attributes for BR:
-%   *</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;<code>
-%
-% Supported attributes for FONT:
-%   * COLOR="color"
-%   * FACE="fontname"
-%   * POINT-SIZE="value"
+%   -</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;`</p>

<p> textitem(br(Attrs)) &mdash;> !,
   html_element(br, Attrs).
diff &mdash;git a/prolog/gv/gv_numeral.pl b/prolog/gv/gv_numeral.pl
new file mode 100644
index 0000000..4ba0d64
&mdash;&ndash; /dev/null
+++ b/prolog/gv/gv_numeral.pl
@@ -0,0 +1,87 @@
+:&ndash; module(
+  gv_numeral,
+  [
+    gv_numeral//1 % ?Value:number
+  ]
+).
+
+/<em><em> <module> GraphViz numeral
+
+@author Wouter Beek
+@version 2014/05-2014/06, 2015/01
+</em>/
+
+:&ndash; use_module(library(dcg/dcg_abnf)).
+:&ndash; use_module(library(dcg/dcg_abnf_common)).
+:&ndash; use_module(library(dcg/dcg_ascii)).
+:&ndash; use_module(library(math/math_ext)).
+:&ndash; use_module(library(math/positional)).
+:&ndash; use_module(library(math/radconv)).
+:&ndash; use_module(library(math/rational_ext)).
+
+
+
+
+
+%! gv_numeral(?Value:compound)// .
+%
+% # Syntax
+%
+% <code>bnf
+% ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
+%</code>
+%
+% ## Generation
+%
+% In the generative case, three notations are allowed (also see below):
+%   1. (non-zero integer-part)
+%   2. (decimal-separator) (non-zero fractional)
+%   3. (non-zero integer-part) (decimal-separator) (non-zero fractional)
+%
+% The following notations are explicitly excluded due to verbosity:
+%   &ndash; (non-zero integer-part) (decimal-separator)
+%   &ndash; (non-zero integer-part) (decimal-separator) (zero fractional)
+%   &ndash; (zero integer-part) (decimal-separator) (non-zero fractional)
+%
+% The following notations are also excluded, but since they violate
+%  well-formedness:
+%   &ndash; (non-zero integer-part) (non-zero fractional)
+%   &ndash; (decimal-separator)
+
+gv_numeral(N) &mdash;>
+  (   {ground(N)}
+  &ndash;>  &lsquo;[&ndash;]?&rsquo;(N),
+      {N0 is abs(N)},
+      {rational_parts(N0, I, F)},
+      (   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part
+          %     and do not write the decimal separator.
+          {F =:= 0}
+      &ndash;>  {positional(I, IW)},
+          &lsquo;[0-9]+&rsquo;(IW)
+      ;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,
+          %     preceded by the decimal separator.
+          {I =:= 0}
+      &ndash;>  &ldquo;.&rdquo;,
+          {positional_fraction(FW, F)},
+          &lsquo;[0-9]</em>&rsquo;(FW)
+      ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
+          %     so write both of them, with the decimal separator in-between.
+          {positional(I, IW)},
+          &lsquo;[0-9]+&rsquo;(IW),
+          &ldquo;.&rdquo;,
+          {positional_fraction(FW, F)},
+          &lsquo;[0-9]<em>&rsquo;(FW)
+      )
+  ;   &lsquo;[&ndash;]?&rsquo;(Sg),
+      (   &ldquo;.&rdquo;,
+          &lsquo;[0-9]+&rsquo;(FW),
+          {IW = []}
+      ;   &lsquo;[0-9]+&rsquo;(IW),
+          (   &ldquo;.&rdquo;,
+              &lsquo;[0-9]</em>&rsquo;(FW)
+          ;   {FW = []}
+          )
+      ),
+      {rational_parts_weights(N0, IW, FW)},
+      {N is copysign(N0, Sg)}
+  ).
diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
deleted file mode 100644
index 4382aa6..0000000
&mdash;&ndash; a/prolog/tree/tree_viz.pl
+++ /dev/null
@@ -1,65 +0,0 @@
&ndash;:&ndash; module(
&ndash;  tree_viz,
&ndash;  [
&ndash;    tree_export_graph/2, % +Tree, ExportG
&ndash;    tree_export_graph/3, % +Tree, ExportG, +Opts
&ndash;    tree_viz/2,          % +Tree, ?File
&ndash;    tree_viz/3           % +Tree, ?File, +Opts
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> Tree visualization</h2>

<h2>-Export trees to GraphViz.</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2016/01-2016/02</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(graph/build_export_graph)).
&ndash;:&ndash; use_module(library(gv/gv_file)).
&ndash;:&ndash; use_module(library(ordsets)).
&ndash;:&ndash; use_module(library(tree/l_tree)).</p>

<h2>&ndash;:&ndash; use_module(library(tree/s_tree)).</h2>

<p>&ndash;:&ndash; predicate_options(tree_export_graph/3, 3, [
&ndash;     pass_to(build_export_graph/4, 4)
&ndash;   ]).
&ndash;:&ndash; predicate_options(tree_viz/3, 3, [
&ndash;     pass_to(graph_viz/3, 3),
&ndash;     pass_to(tree_to_graph/3, 3)</p>

<h2>&ndash;   ]).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<p>&ndash;%! tree_export_graph(+Tree, -ExportG) is det.
&ndash;%! tree_export_graph(+Tree, -ExportG, +Opts) is det.</p>

<h2>&ndash;% Opts are passed to build_export_graph/4.</h2>

<p>-tree_export_graph(Tree, ExportG) :&ndash;</p>

<h2>&ndash;  tree_export_graph(Tree, ExportG, []).</h2>

<p>-tree_export_graph(Tree, ExportG, Opts) :&ndash;
&ndash;  (   is_s_tree(Tree)
&ndash;  &ndash;>  tree_to_graph(Tree, G)
&ndash;  ;   is_l_tree(Tree)
&ndash;  &ndash;>  l_tree_to_graph(Tree, G)
&ndash;  ),</p>

<h2>&ndash;  build_export_graph(G, ExportG, Opts).</h2>

<h2>&ndash;</h2>

<p>&ndash;%! tree_viz(+Tree, ?File) is det.
&ndash;%! tree_viz(+Tree, ?File, +Opts) is det.
&ndash;% Stores the given tree term into a GraphViz file.
&ndash;%</p>

<h2>&ndash;% Options are passed to export_graph_to_gv_file/3, tree_to_graph/3.</h2>

<p>-tree_viz(Tree, File) :&ndash;</p>

<h2>&ndash;  tree_viz(Tree, File, []).</h2>

<p>-tree_viz(Tree, File, Opts) :&ndash;
&ndash;  tree_export_graph(Tree, ExportG, Opts),
&ndash;  graph_viz(ExportG, File, Opts).
diff &mdash;git a/test/test.pl b/test/test.pl
index 83dc023..c1bdca0 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -6,10 +6,8 @@
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_attr_type)).
 :&ndash; use_module(library(gv/gv_color)).
&ndash;:&ndash; use_module(library(gv/gv_dom)).
 :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(gv/gv_graph)).
 :&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(gv/gv_html)).
&ndash;%/tree
&ndash;:&ndash; use_module(library(tree/tree_viz)).
+:&ndash; use_module(library(gv/gv_numeral)).</p>

<p>```</p>

<h2 id="148"> 148: 正在比较变动前 4e2d9f1 和变动后 6359c9c </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
index 3ee7de6..3e06db0 100644
&mdash;&ndash; a/prolog/gv/gv_html.pl
+++ b/prolog/gv/gv_html.pl
@@ -210,7 +210,12 @@ text(Content)  &mdash;> text([Content]).
 % <code>``
 %
 % Supported attributes for BR:
-%   -</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;<code>
+%   *</code>ALIGN=&ldquo;CENTER|LEFT|RIGHT&rdquo;`
+%
+% Supported attributes for FONT:
+%   * COLOR=&ldquo;color&rdquo;
+%   * FACE=&ldquo;fontname&rdquo;
+%   * POINT-SIZE=&ldquo;value&rdquo;</p>

<p> textitem(br(Attrs)) &mdash;> !,
   html_element(br, Attrs).</p>

<p>```</p>

<h2 id="149"> 149: 正在比较变动前 6359c9c 和变动后 00537d0 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index e6fb117..4d0f7d1 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -2,22 +2,19 @@
   fca_viz,
   [</p>

<pre><code> fca_export_graph/2, % +Context, -ExportGraph
</code></pre>

<ul>
<li> fca_export_graph/3, % +Context:compound</li>
<li><pre><code>                 % -ExportGraph:compound
</code></pre></li>
<li><pre><code>                 % :Options:list(compound)
</code></pre></li>
<li> fca_viz/2, % +Context, ?File</li>
<li> fca_viz/3 % +Context:compound</li>
<li><pre><code>       % ?File:atom
</code></pre></li>
<li><pre><code>       % :Options:list(compound)
</code></pre></li>
<li> fca_export_graph/3, % +Context, -ExportGraph, :Opts</li>
<li> fca_viz/2,          % +Context, ?File</li>
<li> fca_viz/3           % +Context, ?File, :Opts
]
).</li>
</ul>


<p> /** <module> FCA visualization</p>

<p> @author Wouter Beek
&ndash;@version 2015/11-2015/12
+@version 2015/11-2016/01
 */</p>

<p>+:&ndash; use_module(library(aggregate)).
 :&ndash; use_module(library(dcg/dcg_collection)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(dcg/dcg_pl)).
@@ -36,7 +33,7 @@</p>

<pre><code>]).
</code></pre>

<p> :&ndash; predicate_options(fca_viz/3, 3, [</p>

<pre><code>  pass_to(fca_export_graph/3, 3),
</code></pre>

<ul>
<li>  pass_to(gv_export/3, 3)</li>
<li>  pass_to(graph_viz/3, 3)
]).</li>
</ul>


<p> is_meta(concept_label).
@@ -88,8 +85,15 @@ fca_viz(Context, File):&ndash;</p>

<p> fca_viz(Context, File, Opts1):&ndash;
   meta_options(is_meta, Opts1, Opts2),
+  statistics(process_cputime, Time1),
   fca_export_graph(Context, ExportG, Opts2),
&ndash;  gv_export(ExportG, File, Opts2).
+  ExportG = graph(<em>,</em>,Es,<em>),
+  aggregate_all(max(N), (member(edge(V1,V2,</em>), Es), (N = V1 ; N = V2)), N),
+  ignore(option(number_of_vertices(N), Opts2)),
+  statistics(process_cputime, Time2),
+  Time is Time2 &ndash; Time1,
+  ignore(option(process_cputime(Time), Opts2)),
+  graph_viz(ExportG, File, Opts2).</p>

<p>diff &mdash;git a/prolog/gv/gv_dom.pl b/prolog/gv/gv_dom.pl
index e85849d..b0ece01 100644
&mdash;&ndash; a/prolog/gv/gv_dom.pl
+++ b/prolog/gv/gv_dom.pl
@@ -10,7 +10,7 @@
 /** <module> GraphViz DOM</p>

<p> @author Wouter Beek
&ndash;@version 2015/07
+@version 2015/07, 2016/01
 */</p>

<p> :&ndash; use_module(library(gv/gv_file)).
@@ -30,6 +30,6 @@
 gv_dom(ExportG, Dom, Opts1):&ndash;
   % Make sure the file type of the output file is SvgDom.
   merge_options([output(svg)], Opts1, Opts2),
&ndash;  gv_export(ExportG, ToFile, Opts2),
+  graph_viz(ExportG, ToFile, Opts2),
   svg_dom(ToFile, Dom),
   delete_file(ToFile).
diff &mdash;git a/prolog/gv/gv_file.pl b/prolog/gv/gv_file.pl
index 4cf12a8..993fcee 100644
&mdash;&ndash; a/prolog/gv/gv_file.pl
+++ b/prolog/gv/gv_file.pl
@@ -1,18 +1,15 @@
 :&ndash; module(
   gv_file,
   [
&ndash;    gv_export/2, % +ExportGraph:compound
&ndash;                 % ?File:atom
&ndash;    gv_export/3 % +ExportGraph:compound
&ndash;                % ?File:atom
&ndash;                % +Options:list(nvpair)
+    graph_viz/2, % +ExportG, ?File
+    graph_viz/3  % +ExportG, ?File, +Opts
   ]
 ).</p>

<p> /** <module> GraphViz file</p>

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/10-2015/11
+@version 2015/07, 2015/10-2015/11, 2016/01
 */</p>

<p> :&ndash; use_module(library(code_ext)).
@@ -23,7 +20,7 @@
 :&ndash; use_module(library(os/process_ext)).
 :&ndash; use_module(library(string_ext)).</p>

<p>&ndash;:&ndash; predicate_options(gv_export/3, 3, [
+:&ndash; predicate_options(graph_viz/3, 3, [</p>

<pre><code>  pass_to(file_to_gv/3, 3)
]).
</code></pre>

<p> :&ndash; predicate_options(file_to_gv/3, 3, [
@@ -40,14 +37,8 @@ user:module_uses(gv_file, program(dot)).</p>

<p>&ndash;%! gv_export(+ExportGraph:compound, ?File:atom) is det.</p>

<h2>&ndash;% Wrapper around gv_export/3 with default options.</h2>

<p>-gv_export(ExportG, File):&ndash;</p>

<h2>&ndash;  gv_export(ExportG, File, []).</h2>

<p>&ndash;
&ndash;%! gv_export(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
+%! graph_viz(+ExportGraph:compound, ?File:atom) is det.
+%! graph_viz(+ExportGraph:compound, ?File:atom, +Options:list(compound)) is det.
 % Returns a file containing a GraphViz visualization of the given graph.
 %
 % The following options are supported:
@@ -60,7 +51,9 @@ gv_export(ExportG, File):&ndash;
 %     Default is <code>pdf</code>.
 %     For possible values see gv_output_type/1.</p>

<p>-gv_export(ExportG, File, Opts):&ndash;
+graph_viz(ExportG, File):&ndash;
+  graph_viz(ExportG, File, []).
+graph_viz(ExportG, File, Opts):&ndash;
   once(phrase(gv_graph(ExportG), Cs)),</p>

<p>   % Be thread-safe.
diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
new file mode 100644
index 0000000..35430da
&mdash;&ndash; /dev/null
+++ b/prolog/tree/tree_viz.pl
@@ -0,0 +1,62 @@
+:&ndash; module(
+  gv_tree,
+  [
+    tree_export_graph/2, % +Tree, ExportG
+    tree_export_graph/3, % +Tree, ExportG, +Opts
+    tree_viz/2,          % +Tree, ?File
+    tree_viz/3           % +Tree, ?File, +Opts
+  ]
+).
+
+/<em>* <module> Tree visualization
+
+Export trees to GraphViz.
+
+@author Wouter Beek
+@version 2016/01
+</em>/
+
+:&ndash; use_module(library(graph/build_export_graph)).
+:&ndash; use_module(library(gv/gv_file)).
+:&ndash; use_module(library(ordsets)).
+
+:&ndash; predicate_options(tree_export_graph/3, 3, [
+     pass_to(build_export_graph/4, 4)
+   ]).
+:&ndash; predicate_options(tree_viz/3, 3, [
+     pass_to(graph_viz/3, 3),
+     pass_to(tree_to_graph/3, 3)
+   ]).
+
+
+
+
+
+%! tree_export_graph(+Tree, -ExportG) is det.
+%! tree_export_graph(+Tree, -ExportG, +Opts) is det.
+% Opts are passed to build_export_graph/4.
+
+tree_export_graph(Tree, ExportG) :&ndash;
+  tree_export_graph(Tree, ExportG, []).
+tree_export_graph(t(H,Subtrees), ExportG, Opts) :&ndash;
+  maplist(tree_export_graph, Subtrees, ExportGs),
+  maplist(unpack_graph, ExportGs, SubVs, SubEs),
+  ord_union([[H]|SubVs], Vs),
+  ord_union(SubEs, Es),
+  build_export_graph(graph(Vs,Es), ExportG, Opts).
+
+unpack_graph(graph(Vs,Es), Vs, Es).
+
+
+
+%! tree_viz(+Tree, ?File) is det.
+%! tree_viz(+Tree, ?File, +Opts) is det.
+% Stores the given tree term into a GraphViz file.
+%
+% Options are passed to export_graph_to_gv_file/3, tree_to_graph/3.
+
+tree_viz(Tree, File) :&ndash;
+  tree_viz(Tree, File, []).
+tree_viz(Tree, File, Opts) :&ndash;
+  tree_export_graph(Tree, ExportG, Opts),
+  graph_viz(ExportG, File, Opts).</p>

<p>```</p>

<h2 id="150"> 150: 正在比较变动前 00537d0 和变动后 acadc39 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
index 35430da..030dc0a 100644
&mdash;&ndash; a/prolog/tree/tree_viz.pl
+++ b/prolog/tree/tree_viz.pl
@@ -1,5 +1,5 @@
 :&ndash; module(
&ndash;  gv_tree,
+  tree_viz,
   [</p>

<pre><code> tree_export_graph/2, % +Tree, ExportG
 tree_export_graph/3, % +Tree, ExportG, +Opts
</code></pre>

<p>@@ -19,6 +19,7 @@ Export trees to GraphViz.
 :&ndash; use_module(library(graph/build_export_graph)).
 :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(ordsets)).
+:&ndash; use_module(library(tree/tree)).</p>

<p> :&ndash; predicate_options(tree_export_graph/3, 3, [</p>

<pre><code>  pass_to(build_export_graph/4, 4)
</code></pre>

<p>@@ -39,8 +40,8 @@ Export trees to GraphViz.
 tree_export_graph(Tree, ExportG) :&ndash;
   tree_export_graph(Tree, ExportG, []).
 tree_export_graph(t(H,Subtrees), ExportG, Opts) :&ndash;
&ndash;  maplist(tree_export_graph, Subtrees, ExportGs),
&ndash;  maplist(unpack_graph, ExportGs, SubVs, SubEs),
+  maplist(tree_to_graph, Subtrees, Gs),
+  maplist(unpack_graph, Gs, SubVs, SubEs),
   ord_union([[H]|SubVs], Vs),
   ord_union(SubEs, Es),
   build_export_graph(graph(Vs,Es), ExportG, Opts).</p>

<p>```</p>

<h2 id="151"> 151: 正在比较变动前 acadc39 和变动后 51359c6 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index aecbe07..dacfbe9 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -24,7 +24,7 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> @author Wouter Beek
 @see <a href="http://www.graphviz.org/content/dot-language">http://www.graphviz.org/content/dot-language</a>
&ndash;@version 2015/07-2015/08, 2015/10-2015/12
+@version 2015/07-2015/08, 2015/10-2016/01
 */</p>

<p> :&ndash; use_module(library(apply)).
@@ -199,9 +199,7 @@ gv_id(double_quoted_string(Atom)) &mdash;> !,
   &ldquo;\&rdquo;&ldquo;, atom(Atom), &rdquo;\&ldquo;&rdquo;.
 % Numerals.
 gv_id(N) &mdash;>
&ndash;  {number(N)}, !,
&ndash;  % @tbd Use gv_numeral//1.
&ndash;  number(N).
+  gv_numeral(N), !.
 % Alpha-numeric strings.
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},
@@ -264,6 +262,22 @@ gv_node_id(Id) &mdash;> {type_error(gv_node_id, Id)}.</p>

<p>+%! gv_numeral(-Number)// is det.
+% <code>bnf
+% ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
+%</code>
+
+gv_numeral(N) &mdash;>
+  (&ldquo;&ndash;&rdquo; &ndash;> {Sg = -1} ; {Sg = 1}),
+  (   &ldquo;.&rdquo;
+  &ndash;>  {I = 0}, +(digit, Ds), {pos_frac(Ds, Frac)}
+  ;   +(digit, Ds1), {pos_sum(Ds1, I)},
+      (&ldquo;.&rdquo; &ndash;> *(digit, Ds2), {pos_frac(Ds2, Frac)} ; {Frac = 0.0})
+  ),
+  {N is Sg * (I + Frac)}.
+
+
+
 %! gv_port// is det.</p>

<p> gv_port &mdash;> gv_port_location, (gv_port_angle ; &ldquo;&rdquo;).
@@ -279,7 +293,7 @@ gv_port_location &mdash;> &ldquo;:[&rdquo;, gv_id(<em>), &ldquo;,&rdquo;, gv_id(</em>), &ldquo;]&rdquo;.</p>

<p> %! gv_compass_pt(+Direction:oneof([&lsquo;_&rsquo;,c,e,n,ne,nw,s,se,sw,w]))// .
 % <code>
-% compass_pt : (n | ne | e | se | s | sw | w | nw | c | _)
+% compass_pt : ( n | ne | e | se | s | sw | w | nw | c | _ )
 %</code></p>

<p> gv_compass_pt(&lsquo;<em>&rsquo;) &mdash;> &ldquo;</em>&rdquo;.
diff &mdash;git a/prolog/gv/gv_numeral.pl b/prolog/gv/gv_numeral.pl
deleted file mode 100644
index 4ba0d64..0000000
&mdash;&ndash; a/prolog/gv/gv_numeral.pl
+++ /dev/null
@@ -1,87 +0,0 @@
&ndash;:&ndash; module(
&ndash;  gv_numeral,
&ndash;  [
&ndash;    gv_numeral//1 % ?Value:number
&ndash;  ]</p>

<h2>&ndash;).</h2>

<h2>&ndash;/** <module> GraphViz numeral</h2>

<p>&ndash;@author Wouter Beek
&ndash;@version 2014/05-2014/06, 2015/01</p>

<h2>&ndash;*/</h2>

<p>&ndash;:&ndash; use_module(library(dcg/dcg_abnf)).
&ndash;:&ndash; use_module(library(dcg/dcg_abnf_common)).
&ndash;:&ndash; use_module(library(dcg/dcg_ascii)).
&ndash;:&ndash; use_module(library(math/math_ext)).
&ndash;:&ndash; use_module(library(math/positional)).
&ndash;:&ndash; use_module(library(math/radconv)).</p>

<h2>&ndash;:&ndash; use_module(library(math/rational_ext)).</h2>

<h2>&ndash;</h2>

<h2>&ndash;</h2>

<p>&ndash;%! gv_numeral(?Value:compound)// .
&ndash;%
&ndash;% # Syntax
&ndash;%
&ndash;% <code>bnf
-% ('-')? ( '.' [0-9]+ | [0-9]+ ( '.' [0-9]* )? )
-%</code>
&ndash;%
&ndash;% ## Generation
&ndash;%
&ndash;% In the generative case, three notations are allowed (also see below):
&ndash;%   1. (non-zero integer-part)
&ndash;%   2. (decimal-separator) (non-zero fractional)
&ndash;%   3. (non-zero integer-part) (decimal-separator) (non-zero fractional)
&ndash;%
&ndash;% The following notations are explicitly excluded due to verbosity:
&ndash;%   &ndash; (non-zero integer-part) (decimal-separator)
&ndash;%   &ndash; (non-zero integer-part) (decimal-separator) (zero fractional)
&ndash;%   &ndash; (zero integer-part) (decimal-separator) (non-zero fractional)
&ndash;%
&ndash;% The following notations are also excluded, but since they violate
&ndash;%  well-formedness:
&ndash;%   &ndash; (non-zero integer-part) (non-zero fractional)</p>

<h2>&ndash;%   &ndash; (decimal-separator)</h2>

<p>-gv_numeral(N) &mdash;>
&ndash;  (   {ground(N)}
&ndash;  &ndash;>  &lsquo;[&ndash;]?&rsquo;(N),
&ndash;      {N0 is abs(N)},
&ndash;      {rational_parts(N0, I, F)},
&ndash;      (   % <a href="http://github.com/">1</a> The fractional is zero, so only write the integer part
&ndash;          %     and do not write the decimal separator.
&ndash;          {F =:= 0}
&ndash;      &ndash;>  {positional(I, IW)},
&ndash;          &lsquo;[0-9]+&rsquo;(IW)
&ndash;      ;   % <a href="https://www.sourcetreeapp.com/">2</a> The integer part is zero, so only write the fractional part,
&ndash;          %     preceded by the decimal separator.
&ndash;          {I =:= 0}
&ndash;      &ndash;>  &ldquo;.&rdquo;,
&ndash;          {positional_fraction(FW, F)},
&ndash;          &lsquo;[0-9]<em>&rsquo;(FW)
&ndash;      ;   % <a href="http://pygments.org/docs/lexers/">3</a> Both the integer part and the fractional are non-zero,
&ndash;          %     so write both of them, with the decimal separator in-between.
&ndash;          {positional(I, IW)},
&ndash;          &lsquo;[0-9]+&rsquo;(IW),
&ndash;          &ldquo;.&rdquo;,
&ndash;          {positional_fraction(FW, F)},
&ndash;          &lsquo;[0-9]</em>&rsquo;(FW)
&ndash;      )
&ndash;  ;   &lsquo;[&ndash;]?&rsquo;(Sg),
&ndash;      (   &ldquo;.&rdquo;,
&ndash;          &lsquo;[0-9]+&rsquo;(FW),
&ndash;          {IW = []}
&ndash;      ;   &lsquo;[0-9]+&rsquo;(IW),
&ndash;          (   &ldquo;.&rdquo;,
&ndash;              &lsquo;[0-9]*&rsquo;(FW)
&ndash;          ;   {FW = []}
&ndash;          )
&ndash;      ),
&ndash;      {rational_parts_weights(N0, IW, FW)},
&ndash;      {N is copysign(N0, Sg)}
&ndash;  ).</p>

<p>```</p>

<h2 id="152"> 152: 正在比较变动前 51359c6 和变动后 73047b3 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index caabaa0..6231cc3 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -50,18 +50,18 @@ Vertex coordinates:</p>

<hr />

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/09-2015/12
+@version 2015/07, 2015/09-2016/01
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_call)).
 :&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(graph/s/s_graph)).
&ndash;:&ndash; use_module(library(lambda)).
 :&ndash; use_module(library(list_ext)).
 :&ndash; use_module(library(option_ext)).
 :&ndash; use_module(library(ordsets)).
 :&ndash; use_module(library(pairs)).
+:&ndash; use_module(library(yall)).</p>

<p> :&ndash; predicate_options(build_export_graph/4, 4, [</p>

<pre><code>  pass_to(edge_term/3, 3),
</code></pre>

<p>@@ -142,9 +142,9 @@ build_export_graph(G, ExportG):&ndash;
 build_export_graph(G, graph(VTerms2,VRanks,ETerms,GAttrs), Opts1):&ndash;
   graph_components(G, Vs, Es),
   meta_options(is_meta, Opts1, Opts2),
&ndash;  maplist(\V<sup>VTerm</sup><sup>vertex</sup>_term(Vs, V, VTerm, Opts2), Vs, VTerms1),
+  maplist([V,VTerm]>>vertex_term(Vs, V, VTerm, Opts2), Vs, VTerms1),
   build_export_ranks(Vs, VTerms1, VRanks, VTerms2, Opts2),
&ndash;  maplist(\E<sup>ETerm</sup><sup>edge</sup>_term(Vs, E, ETerm, Opts2), Es, ETerms),
+  maplist([E,ETerm]>>edge_term(Vs, E, ETerm, Opts2), Es, ETerms),
   graph_attributes(GAttrs, Opts2).</p>

<p> graph_components(graph(Vs,Es), Vs, Es):&ndash; !.</p>

<p>```</p>

<h2 id="153"> 153: 正在比较变动前 73047b3 和变动后 e4c4586 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
index 030dc0a..071d3c0 100644
&mdash;&ndash; a/prolog/tree/tree_viz.pl
+++ b/prolog/tree/tree_viz.pl
@@ -13,13 +13,14 @@
 Export trees to GraphViz.</p>

<p> @author Wouter Beek
&ndash;@version 2016/01
+@version 2016/01-2016/02
 */</p>

<p> :&ndash; use_module(library(graph/build_export_graph)).
 :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(ordsets)).
&ndash;:&ndash; use_module(library(tree/tree)).
+:&ndash; use_module(library(tree/l_tree)).
+:&ndash; use_module(library(tree/s_tree)).</p>

<p> :&ndash; predicate_options(tree_export_graph/3, 3, [</p>

<pre><code>  pass_to(build_export_graph/4, 4)
</code></pre>

<p>@@ -39,14 +40,14 @@ Export trees to GraphViz.</p>

<p> tree_export_graph(Tree, ExportG) :&ndash;
   tree_export_graph(Tree, ExportG, []).
-tree_export_graph(t(H,Subtrees), ExportG, Opts) :&ndash;
&ndash;  maplist(tree_to_graph, Subtrees, Gs),
&ndash;  maplist(unpack_graph, Gs, SubVs, SubEs),
&ndash;  ord_union([[H]|SubVs], Vs),
&ndash;  ord_union(SubEs, Es),
&ndash;  build_export_graph(graph(Vs,Es), ExportG, Opts).</p>

<p>-unpack_graph(graph(Vs,Es), Vs, Es).
+tree_export_graph(Tree, ExportG, Opts) :&ndash;
+  (   is_s_tree(Tree)
+  &ndash;>  s_tree_to_graph(Tree, G)
+  ;   is_l_tree(Tree)
+  &ndash;>  l_tree_to_graph(Tree, G)
+  ),
+  build_export_graph(G, ExportG, Opts).</p>

<p>@@ -58,6 +59,7 @@ unpack_graph(graph(Vs,Es), Vs, Es).</p>

<p> tree_viz(Tree, File) :&ndash;
   tree_viz(Tree, File, []).
+
 tree_viz(Tree, File, Opts) :&ndash;
   tree_export_graph(Tree, ExportG, Opts),
   graph_viz(ExportG, File, Opts).</p>

<p>```</p>

<h2 id="154"> 154: 正在比较变动前 e4c4586 和变动后 7b991bb </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index 8fa78af..d7f133e 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -46,10 +46,10 @@
 /** <module> GraphViz attribute types</p>

<p> @author Wouter Beek
&ndash;@version 2015/07, 2015/11
+@version 2015/07, 2015/11, 2016/02
 */</p>

<p>&ndash;:&ndash; use_module(library(dcg/basics), except([string//1])).
+:&ndash; use_module(library(dcg/dcg_ext), except([string//1])).
 :&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(gv/gv_html)).</p>

<p>@@ -256,7 +256,7 @@ input_changeable(true) &mdash;> &ldquo;!&rdquo;.
 %! pointList(+Points:list(compound))// .</p>

<p> pointList(Points) &mdash;>
&ndash;  <em>(point, Points, []).
+  </em>(point, Points).</p>

<p>diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index 3232c97..faa3828 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -14,11 +14,11 @@
 @author Wouter Beek
 @tbd Color value <code>transparent</code> is only available in the output formats</p>

<pre><code>  ps, svg, fig, vmrl, and the bitmap formats.
</code></pre>

<p>&ndash;@version 2015/08, 2015/10
+@version 2015/08, 2015/10, 2016/02
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/basics)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).
@@ -40,7 +40,7 @@ color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   color(rgb(Red,Green,Blue)),
   hex_color(Alpha).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
&ndash;  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value], []).
+  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value]).
 color(Name) &mdash;>
   {gv_color(_, Name)},
   atom(Name).
@@ -56,7 +56,7 @@ hsv_color(D, Head, Tail):&ndash;
 %! colorList(+Pairs:list(pair(compound,float)))// .</p>

<p> colorList(L) &mdash;>
&ndash;  &lsquo;+&rsquo;(wc, L, []).
+  &lsquo;+&rsquo;(wc, L).</p>

<p> wc(Color-Float) &mdash;>
   color(Color),
diff &mdash;git a/test/test.pl b/test/test.pl
index c1bdca0..83dc023 100644
&mdash;&ndash; a/test/test.pl
+++ b/test/test.pl
@@ -6,8 +6,10 @@
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_attr_type)).
 :&ndash; use_module(library(gv/gv_color)).
+:&ndash; use_module(library(gv/gv_dom)).
 :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(gv/gv_graph)).
 :&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(gv/gv_html)).
&ndash;:&ndash; use_module(library(gv/gv_numeral)).
+%/tree
+:&ndash; use_module(library(tree/tree_viz)).</p>

<p>```</p>

<h2 id="155"> 155: 正在比较变动前 7b991bb 和变动后 fa1518f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
index 190b988..75a83a0 100644
&mdash;&ndash; a/data/gv_attrs_scrape.pl
+++ b/data/gv_attrs_scrape.pl
@@ -25,8 +25,7 @@ gv_attr(
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/basics), except([string//1])).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(gv/gv_attr_type)).
 :&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(iostream)).
diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index 4d0f7d1..1392db9 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -16,7 +16,7 @@</p>

<p> :&ndash; use_module(library(aggregate)).
 :&ndash; use_module(library(dcg/dcg_collection)).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(dcg/dcg_pl)).
 :&ndash; use_module(library(fca/fca)).
 :&ndash; use_module(library(graph/build_export_graph)).
diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index 6231cc3..ef74aa7 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -54,8 +54,7 @@ Vertex coordinates:
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_call)).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(graph/s/s_graph)).
 :&ndash; use_module(library(list_ext)).
 :&ndash; use_module(library(option_ext)).
diff &mdash;git a/prolog/gv/gv_attr_type.pl b/prolog/gv/gv_attr_type.pl
index d7f133e..f55fce5 100644
&mdash;&ndash; a/prolog/gv/gv_attr_type.pl
+++ b/prolog/gv/gv_attr_type.pl
@@ -50,7 +50,6 @@
 */</p>

<p> :&ndash; use_module(library(dcg/dcg_ext), except([string//1])).
&ndash;:&ndash; use_module(library(dcg/dcg_phrase)).
 :&ndash; use_module(library(gv/gv_html)).</p>

<p>diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index b26af73..11230b9 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -14,7 +14,7 @@
 */</p>

<p> :&ndash; use_module(library(apply)).
&ndash;:&ndash; use_module(library(dcg/dcg_call)).
+:&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index faa3828..a63d9c4 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -19,7 +19,6 @@</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).</p>

<p>diff &mdash;git a/prolog/gv/gv_graph.pl b/prolog/gv/gv_graph.pl
index 5c937ce..c95c9cc 100644
&mdash;&ndash; a/prolog/gv/gv_graph.pl
+++ b/prolog/gv/gv_graph.pl
@@ -20,7 +20,6 @@ In GraphViz vertices are called &lsquo;nodes&rsquo;.</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_graph_comp)).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(option)).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index dacfbe9..367534b 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -29,7 +29,6 @@ a_list = ID &ldquo;=&rdquo; ID [&ldquo;,&rdquo;] [a_list]</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(gv/gv_attrs)).
 :&ndash; use_module(library(gv/gv_html)).
 :&ndash; use_module(library(error)).
diff &mdash;git a/prolog/gv/gv_html.pl b/prolog/gv/gv_html.pl
index 3e06db0..b5c1368 100644
&mdash;&ndash; a/prolog/gv/gv_html.pl
+++ b/prolog/gv/gv_html.pl
@@ -44,7 +44,6 @@ cell:   <TD> label </TD>
 */</p>

<p> :&ndash; use_module(library(dcg/dcg_ext)).
&ndash;:&ndash; use_module(library(dcg/dcg_content)).
 :&ndash; use_module(library(html/html_dcg)).</p>

<p>```</p>

<h2 id="156"> 156: 正在比较变动前 fa1518f 和变动后 8593ed6 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/graph/build_export_graph.pl b/prolog/graph/build_export_graph.pl
index ef74aa7..5134069 100644
&mdash;&ndash; a/prolog/graph/build_export_graph.pl
+++ b/prolog/graph/build_export_graph.pl
@@ -60,7 +60,6 @@ Vertex coordinates:
 :&ndash; use_module(library(option_ext)).
 :&ndash; use_module(library(ordsets)).
 :&ndash; use_module(library(pairs)).
&ndash;:&ndash; use_module(library(yall)).</p>

<p> :&ndash; predicate_options(build_export_graph/4, 4, [</p>

<pre><code>  pass_to(edge_term/3, 3),
</code></pre>

<p>@@ -141,11 +140,15 @@ build_export_graph(G, ExportG):&ndash;
 build_export_graph(G, graph(VTerms2,VRanks,ETerms,GAttrs), Opts1):&ndash;
   graph_components(G, Vs, Es),
   meta_options(is_meta, Opts1, Opts2),
&ndash;  maplist([V,VTerm]>>vertex_term(Vs, V, VTerm, Opts2), Vs, VTerms1),
+  maplist(vertex_term0(Vs, Opts2), Vs, VTerms1),
   build_export_ranks(Vs, VTerms1, VRanks, VTerms2, Opts2),
&ndash;  maplist([E,ETerm]>>edge_term(Vs, E, ETerm, Opts2), Es, ETerms),
+  maplist(edge_term0(Vs, Opts2), Es, ETerms),
   graph_attributes(GAttrs, Opts2).</p>

<p>+vertex_term0(Vs, Opts, V, VTerm) :&ndash; vertex_term(Vs, V, VTerm, Opts).
+
+edge_term0(Vs, Opts, E, ETerm) :&ndash; edge_term(Vs, E, ETerm, Opts).
+
 graph_components(graph(Vs,Es), Vs, Es):&ndash; !.
 graph_components(G, Vs, Es):&ndash;
   s_graph_components(G, Vs, Es).
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index 367534b..f316cb7 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -198,7 +198,9 @@ gv_id(double_quoted_string(Atom)) &mdash;> !,
   &ldquo;\&rdquo;&ldquo;, atom(Atom), &rdquo;\&ldquo;&rdquo;.
 % Numerals.
 gv_id(N) &mdash;>
&ndash;  gv_numeral(N), !.
+  {number(N)}, !,
+  {number_codes(N, Cs)},
+  Cs.
 % Alpha-numeric strings.
 gv_id(Atom) &mdash;>
   {atom_codes(Atom, [H|T])},</p>

<p>```</p>

<h2 id="157"> 157: 正在比较变动前 8593ed6 和变动后 cc53b1e </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 11230b9..1e7c93b 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -10,11 +10,12 @@
 /** <module> GraphViz attributes</p>

<p> @author Wouter Beek
&ndash;@version 2015/07-2015/08, 2015/10
+@version 2015/07-2015/08, 2015/10, 2016/03
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(error)).
 :&ndash; use_module(library(gv/gv_attr_type), [gv_attr_type//1]).
 :&ndash; use_module(library(lists)).
 :&ndash; use_module(library(os/file_ext)).
@@ -33,11 +34,11 @@
 % Use the default if no value is given.
 gv_attr_value(Context, Name=Value) &mdash;>
   {
&ndash;    var(Value), !,
+    var(Value),</p>

<pre><code> gv_attr(Name, UsedBy, _, DefaultValue, _, _),
 % Check validity of context.
 memberchk(Context, UsedBy)
</code></pre>

<ul>
<li>},</li>
<li><p>}, !,
gv_attr_value(Context, Name=DefaultValue).
gv_attr_value(Context, Name=Value) &mdash;>
{
@@ -56,8 +57,10 @@ gv_attr_value(Context, Name=Value) &mdash;></p>

<p>   % Check validity of Value w.r.t. minimum value &mdash; if available.
   check_minimum(Value, Minimum)</p></li>
<li>},</li>
<li>}, !,
dcg_call(gv_attr_type:Dcg, Value).
+gv_attr_value(<em>, Name=</em>) &mdash;></li>
<li>{existence_error(gv_attr, Name)}.</li>
</ul>


<p>```</p>

<h2 id="158"> 158: 正在比较变动前 cc53b1e 和变动后 202a241 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/tree/tree_viz.pl b/prolog/tree/tree_viz.pl
index 071d3c0..4382aa6 100644
&mdash;&ndash; a/prolog/tree/tree_viz.pl
+++ b/prolog/tree/tree_viz.pl
@@ -43,7 +43,7 @@ tree_export_graph(Tree, ExportG) :&ndash;</p>

<p> tree_export_graph(Tree, ExportG, Opts) :&ndash;
   (   is_s_tree(Tree)
&ndash;  &ndash;>  s_tree_to_graph(Tree, G)
+  &ndash;>  tree_to_graph(Tree, G)
   ;   is_l_tree(Tree)
   &ndash;>  l_tree_to_graph(Tree, G)
   ),</p>

<p>```</p>

<h2 id="159"> 159: 正在比较变动前 202a241 和变动后 858b5fb </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
index 75a83a0..d43346f 100644
&mdash;&ndash; a/data/gv_attrs_scrape.pl
+++ b/data/gv_attrs_scrape.pl
@@ -30,8 +30,8 @@ gv_attr(
 :&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(msg_ext)).
 :&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).</p>

<p>diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
index 3ac5d44..5d220d9 100644
&mdash;&ndash; a/data/gv_color_scrape.pl
+++ b/data/gv_color_scrape.pl
@@ -15,8 +15,8 @@
 :&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(msg_ext)).
 :&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).</p>

<p>```</p>

<h2 id="160"> 160: 正在比较变动前 858b5fb 和变动后 260b62d </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_attrs.pl b/prolog/gv/gv_attrs.pl
index 1e7c93b..4a92d5b 100644
&mdash;&ndash; a/prolog/gv/gv_attrs.pl
+++ b/prolog/gv/gv_attrs.pl
@@ -2,7 +2,7 @@
   gv_attrs,
   [</p>

<pre><code> gv_attr_value//2 % +Context:oneof([cluster,edge,graph,node,subgraph])
</code></pre>

<ul>
<li><pre><code>              % +Attribute:nvpair
</code></pre></li>
<li><pre><code>              % +Attr
</code></pre>

<p>]
).
:&ndash; ensure_loaded(library(&lsquo;gv/gv_attrs.data&rsquo;)).
@@ -24,12 +24,11 @@</p></li>
</ul>


<p>&ndash;%! gv_attr_value(
&ndash;%!   +Context:oneof([cluster,edge,graph,node,subgraph]),
&ndash;%!   +Attribute:compound
&ndash;%! )// is det.
+%! gv_attr_value(+Context, +Attr)// is det.
 % Uses the default value in case Value is uninstantiated.
 % Otherwise, performs a typecheck and converts the given value.
+%
+% Context can be either <code>cluster</code>, <code>edge</code>, <code>graph</code>, <code>node</code> or <code>subgraph</code>.</p>

<p> % Use the default if no value is given.
 gv_attr_value(Context, Name=Value) &mdash;>
diff &mdash;git a/prolog/gv/gv_graph_comp.pl b/prolog/gv/gv_graph_comp.pl
index f316cb7..30ea9c5 100644
&mdash;&ndash; a/prolog/gv/gv_graph_comp.pl
+++ b/prolog/gv/gv_graph_comp.pl
@@ -85,7 +85,7 @@ gv_edge_operator(Dir) &mdash;>
 %! gv_generic_attributes_statement(
 %!   +Kind:oneof([edge,graph,node]),
 %!   +Indent:nonneg,
&ndash;%!   +CategoryAttributes:list(nvpair)
+%!   +CategoryAttrs
 %! )//
 % A GraphViz statement describing generic attributes for a category of items.
 %</p>

<p>```</p>

<h2 id="161"> 161: 正在比较变动前 260b62d 和变动后 a6886ca </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/gv/gv_dom.pl b/prolog/gv/gv_dom.pl
index b0ece01..30c4263 100644
&mdash;&ndash; a/prolog/gv/gv_dom.pl
+++ b/prolog/gv/gv_dom.pl
@@ -1,9 +1,7 @@
 :&ndash; module(
   gv_dom,
   [
&ndash;    gv_dom/3 % +ExportGraph:compound
&ndash;             % -Dom:list(compound)
&ndash;             % +Options:list(compound)
+    gv_dom/3 % +ExportG, -Dom, +Opts
   ]
 ).</p>

<p>@@ -15,17 +13,13 @@</p>

<p> :&ndash; use_module(library(gv/gv_file)).
 :&ndash; use_module(library(option)).
&ndash;:&ndash; use_module(library(svg/svg_dom)).
+:&ndash; use_module(library(svg/svg_ext)).</p>

<p>&ndash;%! gv_dom(
&ndash;%!   +ExportGraph:compound,
&ndash;%!   -Dom:list(compound),
&ndash;%!   +Options:list(compound)
&ndash;%! ) is det.
+%! gv_dom(+ExportG, -Dom, +Opts) is det.</p>

<p> gv_dom(ExportG, Dom, Opts1):&ndash;
   % Make sure the file type of the output file is SvgDom.</p>

<p>```</p>

<h2 id="162"> 162: 正在比较变动前 a6886ca 和变动后 41914a2 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/pack.pl b/pack.pl
index 203cbfc..989108a 100644
&mdash;&ndash; a/pack.pl
+++ b/pack.pl
@@ -4,6 +4,6 @@ home(&lsquo;<a href="https://github.com/wouterbeek/plGraphViz">https://github.com/wouterbeek/plGraphViz</a>&rsquo;).
 maintainer(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x6d;&#101;&#x40;&#119;&#111;&#117;&#116;&#101;&#114;&#x62;&#101;&#101;&#107;&#x2e;&#99;&#x6f;&#109;">&#x6d;&#101;&#64;&#119;&#x6f;&#117;&#116;&#101;&#114;&#98;&#x65;&#101;&#x6b;&#46;&#x63;&#x6f;&#x6d;</a>&rsquo;).
 name(plGraphViz).
 packager(&lsquo;Wouter Beek&rsquo;, &lsquo;<a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#111;&#x3a;&#109;&#101;&#x40;&#x77;&#x6f;&#x75;&#x74;&#101;&#x72;&#98;&#101;&#101;&#107;&#46;&#99;&#111;&#109;">&#x6d;&#101;&#x40;&#119;&#x6f;&#117;&#x74;&#101;&#114;&#x62;&#101;&#101;&#x6b;&#x2e;&#99;&#111;&#109;</a>&rsquo;).
-requires(&lsquo;Prolog_Library_Collection&rsquo;).
+requires(&lsquo;Prolog-Library-Collection&rsquo;).
 title(plGraphViz).
-version(&lsquo;0.0.17&rsquo;).
+version(&lsquo;0.0.1&rsquo;).</p>

<p>```</p>

<h2 id="163"> 163: 正在比较变动前 41914a2 和变动后 05a5fd2 </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
index d43346f..8730e13 100644
&mdash;&ndash; a/data/gv_attrs_scrape.pl
+++ b/data/gv_attrs_scrape.pl
@@ -30,7 +30,7 @@ gv_attr(
 :&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(pl_term)).
 :&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
index 5d220d9..7bfc290 100644
&mdash;&ndash; a/data/gv_color_scrape.pl
+++ b/data/gv_color_scrape.pl
@@ -15,7 +15,7 @@
 :&ndash; use_module(library(http/http_download)).
 :&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
&ndash;:&ndash; use_module(library(pl/pl_term)).
+:&ndash; use_module(library(pl_term)).
 :&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
diff &mdash;git a/prolog/gv/gv_color.pl b/prolog/gv/gv_color.pl
index a63d9c4..ac319dc 100644
&mdash;&ndash; a/prolog/gv/gv_color.pl
+++ b/prolog/gv/gv_color.pl
@@ -34,12 +34,12 @@</p>

<p> color(rgb(Red,Green,Blue)) &mdash;> !,
   &ldquo;#&rdquo;,
&ndash;  &lsquo;#&rsquo;(3, hex_color, [Red,Green,Blue]).
+  #(3, hex_color, [Red,Green,Blue]).
 color(rgbs(Red,Green,Blue,Alpha)) &mdash;> !,
   color(rgb(Red,Green,Blue)),
   hex_color(Alpha).
 color(hsv(Hue,Saturation,Value)) &mdash;> !,
&ndash;  &lsquo;#&rsquo;(3, hsv_color, [Hue,Saturation,Value]).
+  #(3, hsv_color, [Hue,Saturation,Value]).
 color(Name) &mdash;>
   {gv_color(_, Name)},
   atom(Name).</p>

<p>```</p>

<h2 id="164"> 164: 正在比较变动前 05a5fd2 和变动后 fd6c59b </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/prolog/fca/fca_viz.pl b/prolog/fca/fca_viz.pl
index 1392db9..083dbb2 100644
&mdash;&ndash; a/prolog/fca/fca_viz.pl
+++ b/prolog/fca/fca_viz.pl
@@ -15,7 +15,6 @@
 */</p>

<p> :&ndash; use_module(library(aggregate)).
&ndash;:&ndash; use_module(library(dcg/dcg_collection)).
 :&ndash; use_module(library(dcg/dcg_ext)).
 :&ndash; use_module(library(dcg/dcg_pl)).
 :&ndash; use_module(library(fca/fca)).</p>

<p>```</p>

<h2 id="165"> 165: 正在比较变动前 fd6c59b 和变动后 121e68f </h2>


<p><a href="#compare">back to content</a></p>

<p>``` diff</p>

<p>diff &mdash;git a/data/gv_attrs_scrape.pl b/data/gv_attrs_scrape.pl
index 8730e13..bcc7654 100644
&mdash;&ndash; a/data/gv_attrs_scrape.pl
+++ b/data/gv_attrs_scrape.pl
@@ -1,7 +1,7 @@
 :&ndash; module(
   gv_attrs_scrape,
   [
&ndash;    gv_attrs_scrape/1 % +File:atom
+    gv_attrs_scrape/1 % +File
   ]
 ).</p>

<p>@@ -11,45 +11,41 @@ Writes compound terms of the following form to file:</p>

<p> <code>prolog
 gv_attr(
-  ?Name:atom,
+  ?Name,
   ?UsedBy:list(oneof([cluster,edge,graph,node,subgraph])),
   ?Types:list(atom),
   ?Default,
   ?Minimum,
-  ?Notes:atom
+  ?Notes
 ) is nondet.
</code></p>

<p> @author Wouter Beek
&ndash;@version 2015/10
+@version 2015/10, 2016/07
 */</p>

<p> :&ndash; use_module(library(apply)).
 :&ndash; use_module(library(dcg/dcg_ext)).
+:&ndash; use_module(library(debug)).
 :&ndash; use_module(library(gv/gv_attr_type)).
 :&ndash; use_module(library(http/http_download)).
&ndash;:&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/io)).
 :&ndash; use_module(library(pl_term)).
 :&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
+:&ndash; use_module(library(yall)).</p>

<p>&ndash;%! gv_attrs_scrape(+File:atom) is det.
+%! gv_attrs_scrape(+File) is det.</p>

<p> gv_attrs_scrape(File):&ndash;
&ndash;  setup_call_cleanup(
&ndash;    open_any(File, write, Write, Close, []),
&ndash;    verbose(
&ndash;      gv_attrs_download(Write),
&ndash;      &ldquo;Updating the GraphViz attributes table.&rdquo;
&ndash;    ),
&ndash;    close_any(Close)
&ndash;  ).
+  debug(gv, &ldquo;Updating the GraphViz attributes table.&rdquo;, []),
+  call_to_stream(File, [In,Meta,Meta]>>gv_attrs_download(In)).</p>

<p> gv_attrs_download(Write):&ndash;
@@ -78,7 +74,7 @@ gv_attrs_iri(&lsquo;<a href="http://www.graphviz.org/doc/info/attrs.html">http://www.graphviz.org/doc/info/attrs.html</a>&rsquo;).</p>

<p> % HELPERS %</p>

<p>&ndash;%! translate_default(+Default1:atom, -Default2:atom) is det.
+%! translate_default(+Default1, -Default2) is det.</p>

<p> % The empty string is represented by the empty atom.
 translate_default(&lsquo;&ldquo;&rdquo;&rsquo;, &lsquo;&rsquo;):&ndash; !.
diff &mdash;git a/data/gv_color_scrape.pl b/data/gv_color_scrape.pl
index 7bfc290..102a02a 100644
&mdash;&ndash; a/data/gv_color_scrape.pl
+++ b/data/gv_color_scrape.pl
@@ -1,40 +1,36 @@
 :&ndash; module(
   gv_color_scrape,
   [
&ndash;    gv_color_scrape/1 % +File:atom
+    gv_color_scrape/1 % +File
   ]
 ).</p>

<p> /** <module> GraphViz: Scrape colors</p>

<p> @author Wouter Beek
&ndash;@version 2015/10
+@version 2015/10, 2016/07
 */</p>

<p> :&ndash; use_module(library(apply)).
+:&ndash; use_module(library(debug)).
 :&ndash; use_module(library(http/http_download)).
&ndash;:&ndash; use_module(library(iostream)).
 :&ndash; use_module(library(lists)).
+:&ndash; use_module(library(os/io)).
 :&ndash; use_module(library(pl_term)).
 :&ndash; use_module(library(print_ext)).
 :&ndash; use_module(library(xpath)).
 :&ndash; use_module(library(xpath/xpath_table)).
+:&ndash; use_module(library(yall)).</p>

<p>&ndash;%! gv_color_scrape(+File:atom) is det.
+%! gv_color_scrape(+File) is det.</p>

<p> gv_color_scrape(File):&ndash;
&ndash;  setup_call_cleanup(
&ndash;    open_any(File, write, Write, Close, []),
&ndash;    verbose(
&ndash;      gv_color_download(Write),
&ndash;      &ldquo;Updating the GraphViz color table.&rdquo;
&ndash;    ),
&ndash;    close_any(Close)
&ndash;  ).
+  debug(io, &ldquo;Updating the GraphViz color table.&rdquo;, []),
+  call_to_stream(File, [In,Meta,Meta]>>gv_color_download(In)).</p>

<p> gv_color_download(Write):&ndash;</p>

<p>```</p>

<p>总共进行了 166 次比较</p>

<h2 id="time">3. 时间变化表</h2>


<p><a href="#1">1. 6ced089      Sun Jun 1 16:12:35 2014 +0200       2 years, 4 months ago3d8b517      Sun Jun 1 16:16:39 2014 +0200       2 years, 4 months ago</a></p>

<p><a href="#2">2. ccd942c      Sun Jun 1 18:20:43 2014 +0200       2 years, 4 months ago</a></p>

<p><a href="#3">3. 0b3607d      Wed Jun 4 08:57:28 2014 +0200       2 years, 4 months ago</a></p>

<p><a href="#4">4. acf4ec3      Thu Jun 5 08:38:17 2014 +0200       2 years, 4 months ago</a></p>

<p><a href="#5">5. c1ad93f      Fri Jun 6 10:15:07 2014 +0200       2 years, 4 months ago</a></p>

<p><a href="#6">6. c7c8226      Sat Jun 14 05:01:29 2014 +0200       2 years, 3 months ago</a></p>

<p><a href="#7">7. 0cd29ea      Sat Jun 14 15:55:52 2014 +0200       2 years, 3 months ago</a></p>

<p><a href="#8">8. 13f7fbf      Mon Jun 16 07:40:22 2014 +0200       2 years, 3 months ago</a></p>

<p><a href="#9">9. 5520d75      Thu Jun 19 12:39:17 2014 +0200       2 years, 3 months ago</a></p>

<p><a href="#10">10. 8656a39      Thu Jun 19 13:08:10 2014 +0200       2 years, 3 months ago</a></p>

<p><a href="#11">11. 7421981      Tue Jul 8 13:55:06 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#12">12. bfcb63b      Tue Jul 22 20:14:34 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#13">13. 84afd69      Sun Jul 27 21:09:43 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#14">14. c2bfd3f      Sun Jul 27 23:12:11 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#15">15. fa364fc      Mon Jul 28 10:20:16 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#16">16. 3c900f4      Mon Jul 28 19:41:10 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#17">17. 65cc1c3      Mon Jul 28 20:45:42 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#18">18. 20e1f21      Mon Jul 28 21:27:58 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#19">19. e2e9fc1      Tue Jul 29 06:03:54 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#20">20. 4b72d15      Thu Jul 31 17:43:40 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#21">21. 54248f7      Thu Jul 31 23:50:20 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#22">22. 3b9a773      Sun Aug 3 13:57:00 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#23">23. 1e9a910      Sun Aug 3 18:45:43 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#24">24. 6dc1cf5      Sun Aug 3 21:37:53 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#25">25. 76ea35d      Wed Aug 6 12:57:55 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#26">26. 2a2728b      Wed Aug 6 12:59:11 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#27">27. 7f9fc82      Wed Aug 6 13:03:10 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#28">28. 5baddb5      Wed Aug 6 15:58:46 2014 +0200       2 years, 2 months ago</a></p>

<p><a href="#29">29. 95bfe7f      Fri Aug 15 19:38:14 2014 +0200       2 years, 1 month ago</a></p>

<p><a href="#30">30. f1322fa      Tue Aug 19 09:37:49 2014 +0200       2 years, 1 month ago</a></p>

<p><a href="#31">31. 474bea8      Tue Aug 19 09:41:38 2014 +0200       2 years, 1 month ago</a></p>

<p><a href="#32">32. 262cb2a      Tue Aug 19 10:29:37 2014 +0200       2 years, 1 month ago</a></p>

<p><a href="#33">33. e7e6033      Fri Aug 22 09:46:08 2014 +0200       2 years, 1 month ago</a></p>

<p><a href="#34">34. e17bf44      Wed Aug 27 16:55:24 2014 +0200       2 years, 1 month ago</a></p>

<p><a href="#35">35. 6596aa1      Fri Sep 12 12:28:26 2014 +0200       2 years ago</a></p>

<p><a href="#36">36. 87e8982      Sat Sep 13 19:35:04 2014 +0200       2 years ago</a></p>

<p><a href="#37">37. cb6aada      Tue Sep 16 13:16:25 2014 +0200       2 years ago</a></p>

<p><a href="#38">38. 7c8125b      Fri Oct 17 01:53:51 2014 +0200       1 year, 11 months ago</a></p>

<p><a href="#39">39. 6a38f95      Sun Oct 19 01:24:45 2014 +0200       1 year, 11 months ago</a></p>

<p><a href="#40">40. ebb86cd      Fri Oct 31 21:02:15 2014 +0100       1 year, 11 months ago</a></p>

<p><a href="#41">41. 1549e44      Sun Nov 2 02:14:33 2014 +0100       1 year, 11 months ago</a></p>

<p><a href="#42">42. 61ddca2      Mon Nov 3 16:24:02 2014 +0100       1 year, 11 months ago</a></p>

<p><a href="#43">43. 26f07e7      Mon Nov 3 16:24:09 2014 +0100       1 year, 11 months ago</a></p>

<p><a href="#44">44. f78b4f8      Tue Nov 4 09:03:10 2014 +0100       1 year, 11 months ago</a></p>

<p><a href="#45">45. 3109362      Tue Nov 11 11:48:43 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#46">46. df0ab09      Tue Nov 11 11:48:51 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#47">47. 73e976b      Tue Nov 11 12:03:09 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#48">48. 090c25d      Tue Nov 11 21:33:59 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#49">49. daed8bf      Thu Nov 13 16:58:28 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#50">50. 528b9af      Thu Nov 13 20:06:16 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#51">51. e594ae6      Fri Nov 14 06:30:50 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#52">52. bbefbf7      Tue Nov 18 21:35:37 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#53">53. 0cc5421      Wed Nov 19 07:34:19 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#54">54. dbc602d      Wed Nov 19 07:36:24 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#55">55. a2456df      Wed Nov 19 07:50:35 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#56">56. 20c6017      Thu Nov 20 13:22:27 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#57">57. f694d77      Fri Nov 21 17:40:21 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#58">58. af5d96d      Tue Nov 25 18:19:59 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#59">59. ab4b616      Tue Nov 25 18:30:40 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#60">60. 74bd19d      Tue Nov 25 19:26:26 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#61">61. 8ffff6f      Tue Nov 25 19:54:56 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#62">62. ac3423a      Tue Nov 25 19:55:05 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#63">63. 57932e4      Tue Nov 25 19:55:29 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#64">64. 315b16e      Wed Nov 26 10:37:08 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#65">65. 898b5d2      Thu Nov 27 19:38:08 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#66">66. 4279a49      Fri Nov 28 08:09:47 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#67">67. c173073      Sat Nov 29 09:16:14 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#68">68. 107c515      Sat Nov 29 14:46:11 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#69">69. 8f574bb      Tue Dec 2 21:15:18 2014 +0100       1 year, 10 months ago</a></p>

<p><a href="#70">70. d7088dd      Thu Dec 11 09:40:51 2014 +0100       1 year, 9 months ago</a></p>

<p><a href="#71">71. 94ed05d      Sun Dec 14 17:06:03 2014 +0100       1 year, 9 months ago</a></p>

<p><a href="#72">72. f481060      Tue Dec 16 13:41:32 2014 +0100       1 year, 9 months ago</a></p>

<p><a href="#73">73. ce492ef      Tue Dec 16 19:44:03 2014 +0100       1 year, 9 months ago</a></p>

<p><a href="#74">74. ddef555      Wed Dec 17 12:02:35 2014 +0100       1 year, 9 months ago</a></p>

<p><a href="#75">75. af27fdd      Thu Dec 18 18:21:38 2014 +0100       1 year, 9 months ago</a></p>

<p><a href="#76">76. f390238      Fri Jan 23 12:55:56 2015 +0100       1 year, 8 months ago</a></p>

<p><a href="#77">77. c5f7d82      Fri Jan 23 13:27:31 2015 +0100       1 year, 8 months ago</a></p>

<p><a href="#78">78. acf6467      Sun Jan 25 16:18:18 2015 +0100       1 year, 8 months ago</a></p>

<p><a href="#79">79. 6656a2d      Sat Jan 31 15:45:06 2015 +0100       1 year, 8 months ago</a></p>

<p><a href="#80">80. 256c9ce      Thu Feb 26 13:08:27 2015 +0100       1 year, 7 months ago</a></p>

<p><a href="#81">81. bf4ebea      Thu Feb 26 13:13:50 2015 +0100       1 year, 7 months ago</a></p>

<p><a href="#82">82. 70aec99      Sat Mar 7 08:53:44 2015 +0100       1 year, 7 months ago</a></p>

<p><a href="#83">83. e06e6ba      Sat Mar 7 08:54:13 2015 +0100       1 year, 7 months ago</a></p>

<p><a href="#84">84. 0fd12ca      Sat Mar 7 08:54:32 2015 +0100       1 year, 7 months ago</a></p>

<p><a href="#85">85. 67c4157      Sat Mar 7 08:59:37 2015 +0100       1 year, 7 months ago</a></p>

<p><a href="#86">86. b972e2b      Sun Mar 8 11:20:27 2015 +0100       1 year, 6 months ago</a></p>

<p><a href="#87">87. 8bbc84c      Sat Mar 21 08:41:10 2015 +0100       1 year, 6 months ago</a></p>

<p><a href="#88">88. 033fa14      Wed Mar 25 07:15:07 2015 +0100       1 year, 6 months ago</a></p>

<p><a href="#89">89. fdb5a9e      Wed Apr 1 12:20:17 2015 +0200       1 year, 6 months ago</a></p>

<p><a href="#90">90. 6ec582e      Thu Apr 2 01:08:43 2015 +0200       1 year, 6 months ago</a></p>

<p><a href="#91">91. 68b53b8      Tue Apr 7 11:12:17 2015 +0200       1 year, 6 months ago</a></p>

<p><a href="#92">92. 46e8f3c      Sat May 9 19:05:41 2015 +0200       1 year, 4 months ago</a></p>

<p><a href="#93">93. 3162d88      Sun May 10 13:39:33 2015 +0200       1 year, 4 months ago</a></p>

<p><a href="#94">94. 714b2e0      Wed May 27 14:23:39 2015 +0200       1 year, 4 months ago</a></p>

<p><a href="#95">95. af7a387      Wed Jun 3 16:54:25 2015 +0200       1 year, 4 months ago</a></p>

<p><a href="#96">96. 7b434e3      Wed Jun 10 10:08:40 2015 +0200       1 year, 3 months ago</a></p>

<p><a href="#97">97. dcbcb4d      Thu Jul 16 16:17:22 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#98">98. 50a3dbc      Fri Jul 17 00:31:37 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#99">99. a97e8e1      Fri Jul 17 16:56:02 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#100">100. 9513a9b      Sat Jul 18 23:46:30 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#101">101. 7163f60      Sat Jul 18 23:55:52 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#102">102. b2f4aef      Sat Jul 18 23:56:17 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#103">103. ba30c25      Sun Jul 19 00:07:47 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#104">104. 0eea41b      Sun Jul 19 00:16:37 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#105">105. c1691bd      Mon Jul 20 17:00:42 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#106">106. 3de9fc2      Mon Jul 20 18:25:07 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#107">107. cb34d89      Mon Jul 20 22:42:07 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#108">108. 7f0e20f      Mon Jul 20 22:59:24 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#109">109. c16a7a7      Mon Jul 20 23:04:42 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#110">110. 8bbb08c      Mon Jul 20 23:17:33 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#111">111. 34c8b1a      Mon Aug 3 15:44:26 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#112">112. d883d06      Mon Aug 3 16:16:42 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#113">113. 66ac0a0      Mon Aug 3 16:33:28 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#114">114. ab5a102      Mon Aug 3 16:40:48 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#115">115. 65f43b8      Mon Aug 3 23:15:08 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#116">116. c6de3d1      Tue Aug 4 22:58:51 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#117">117. cab2231      Tue Aug 4 22:59:42 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#118">118. 008c5e6      Thu Aug 6 10:21:06 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#119">119. dba5c72      Thu Aug 6 10:22:03 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#120">120. eff64ee      Thu Aug 6 10:22:14 2015 +0200       1 year, 2 months ago</a></p>

<p><a href="#121">121. 89eb423      Mon Aug 17 16:44:01 2015 +0200       1 year, 1 month ago</a></p>

<p><a href="#122">122. 2346997      Tue Aug 18 20:51:29 2015 +0200       1 year, 1 month ago</a></p>

<p><a href="#123">123. d22d50e      Tue Sep 8 11:41:49 2015 +0200       1 year ago</a></p>

<p><a href="#124">124. e64cc35      Wed Sep 23 21:43:10 2015 +0200       12 months ago</a></p>

<p><a href="#125">125. 763a529      Tue Oct 13 23:03:01 2015 +0200       11 months ago</a></p>

<p><a href="#126">126. d962f81      Tue Oct 13 23:03:13 2015 +0200       11 months ago</a></p>

<p><a href="#127">127. 63a5cd7      Tue Oct 13 23:03:37 2015 +0200       11 months ago</a></p>

<p><a href="#128">128. ce95c3c      Sat Oct 17 00:38:49 2015 +0200       11 months ago</a></p>

<p><a href="#129">129. 44cd5a6      Fri Oct 23 16:09:04 2015 +0200       11 months ago</a></p>

<p><a href="#130">130. c0c5e18      Fri Oct 30 17:02:09 2015 +0100       11 months ago</a></p>

<p><a href="#131">131. 603344f      Fri Oct 30 21:35:33 2015 +0100       11 months ago</a></p>

<p><a href="#132">132. 2679253      Wed Nov 4 20:52:30 2015 +0100       11 months ago</a></p>

<p><a href="#133">133. a5e20f8      Wed Nov 4 21:59:20 2015 +0100       11 months ago</a></p>

<p><a href="#134">134. bc3c502      Wed Nov 4 22:19:15 2015 +0100       11 months ago</a></p>

<p><a href="#135">135. 7ec98aa      Wed Nov 4 23:36:40 2015 +0100       11 months ago</a></p>

<p><a href="#136">136. 984d3b9      Thu Nov 5 08:27:05 2015 +0100       11 months ago</a></p>

<p><a href="#137">137. 4401e20      Thu Nov 5 11:01:08 2015 +0100       11 months ago</a></p>

<p><a href="#138">138. 2247466      Thu Nov 5 18:03:51 2015 +0100       11 months ago</a></p>

<p><a href="#139">139. f4a9322      Sun Nov 15 23:56:27 2015 +0100       10 months ago</a></p>

<p><a href="#140">140. 0d2712a      Sun Nov 22 09:56:29 2015 +0100       10 months ago</a></p>

<p><a href="#141">141. 3518985      Sun Dec 6 12:45:05 2015 +0100       10 months ago</a></p>

<p><a href="#142">142. 322ca62      Fri Dec 11 10:48:06 2015 +0100       10 months ago</a></p>

<p><a href="#143">143. c4bf9ea      Fri Dec 11 23:00:58 2015 +0100       9 months ago</a></p>

<p><a href="#144">144. 2a6dafd      Fri Dec 11 23:02:28 2015 +0100       9 months ago</a></p>

<p><a href="#145">145. 145615e      Sat Dec 12 13:28:11 2015 +0100       9 months ago</a></p>

<p><a href="#146">146. f16acca      Sun Dec 13 00:31:18 2015 +0100       9 months ago</a></p>

<p><a href="#147">147. 4e2d9f1      Sun Dec 13 11:53:34 2015 +0100       9 months ago</a></p>

<p><a href="#148">148. 6359c9c      Mon Dec 21 00:18:29 2015 +0100       9 months ago</a></p>

<p><a href="#149">149. 00537d0      Mon Jan 4 18:45:14 2016 +0100       9 months ago</a></p>

<p><a href="#150">150. acadc39      Mon Jan 4 19:04:12 2016 +0100       9 months ago</a></p>

<p><a href="#151">151. 51359c6      Tue Jan 5 00:14:06 2016 +0100       9 months ago</a></p>

<p><a href="#152">152. 73047b3      Fri Feb 5 10:25:43 2016 +0100       8 months ago</a></p>

<p><a href="#153">153. e4c4586      Fri Feb 12 00:46:53 2016 +0100       7 months ago</a></p>

<p><a href="#154">154. 7b991bb      Thu Feb 25 19:26:04 2016 +0000       7 months ago</a></p>

<p><a href="#155">155. fa1518f      Tue Mar 1 21:13:23 2016 +0100       7 months ago</a></p>

<p><a href="#156">156. 8593ed6      Wed Mar 2 21:05:20 2016 +0000       7 months ago</a></p>

<p><a href="#157">157. cc53b1e      Wed Mar 2 21:07:13 2016 +0000       7 months ago</a></p>

<p><a href="#158">158. 202a241      Sat Mar 5 21:45:52 2016 +0100       7 months ago</a></p>

<p><a href="#159">159. 858b5fb      Sun Mar 20 09:13:59 2016 +0100       6 months ago</a></p>

<p><a href="#160">160. 260b62d      Sun Mar 20 10:38:39 2016 +0100       6 months ago</a></p>

<p><a href="#161">161. a6886ca      Sat Apr 2 10:22:32 2016 +0200       6 months ago</a></p>

<p><a href="#162">162. 41914a2      Tue May 3 20:54:24 2016 +0200       5 months ago</a></p>

<p><a href="#163">163. 05a5fd2      Tue Jun 21 08:36:10 2016 +0200       3 months ago</a></p>

<p><a href="#164">164. fd6c59b      Wed Jul 13 00:04:57 2016 +0200       2 months ago</a></p>

<p><a href="#165">165. 121e68f      Fri Jul 22 20:39:31 2016 +0200       9 weeks ago</a></p>

<h2 id="short">4. 列出简要信息</h2>


<p>``` vim</p>

<p> 13 files changed, 1618 insertions(+)
 load_project.pl           | 102 ++++++++++
 load.pl                   |  12 ++
 index.pl                  |   2 +
 gv_numeral.pl             |  71 +++++++
 gv_html.pl                |  60 ++++++
 gv_file.pl                | 250 +++++++++++++++++++++++
 gv_dot.pl                 | 496 ++++++++++++++++++++++++++++++++++++++++++++++
 gv_color.pl               |  96 +++++++++
 gv_attrs.pl               | 109 ++++++++++
 gv_attr_type.pl           | 415 ++++++++++++++++++++++++++++++++++++++
 Prolog-Library-Collection |   1 +
 .gitmodules               |   3 +
 .gitignore                |   1 +</p>

<pre><code>Initial commit.
</code></pre>

<p>```</p>

<p><a href="#1">1. commit 6ced089ad776b55034adbd4a806db296bcb1229c</a></p>

<p>``` vim</p>

<p> 3 files changed, 5 insertions(+), 1 deletion(&ndash;)
 plHtml                    | 1 +
 Prolog-Library-Collection | 2 +&ndash;
 .gitmodules               | 3 +++</p>

<pre><code>Upped PLC,plHtml.
</code></pre>

<p>```</p>

<p><a href="#2">2. commit 3d8b517ba04a977e793d64d240cc8169fec42606</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 plHtml                    | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped PLC,plHtml
</code></pre>

<p>```</p>

<p><a href="#3">3. commit ccd942cd22b0bacee488b08a1756227759fa125d</a></p>

<p>``` vim</p>

<p> 3 files changed, 3 insertions(+), 3 deletions(&ndash;)
 gv_color.pl     | 2 +&ndash;
 gv_attrs.pl     | 2 +&ndash;
 gv_attr_type.pl | 2 +&ndash;</p>

<pre><code>* [GV_ATTRS,GV_COLOR,DEB] Summarize messages for downloading HTML.
* [GV_ATTR_TYPE,FIX] Wrong module name.
</code></pre>

<p>```</p>

<p><a href="#4">4. commit 0b3607d3305882967ec58a223d0dffb6a56d1b75</a></p>

<p>``` vim</p>

<p> 2 files changed, 142 insertions(+), 16 deletions(&ndash;)
 gv_color.pl | 61 ++++++++++++++++++++++++++++++++++&mdash;&mdash;
 gv_attrs.pl | 97 ++++++++++++++++++++++++++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>* [GV_ATTRS,GV_COLOR,NEW] Added persistency, so GraphViz settings are (re)download only when the locally stored data dump is not fresh anymore.
</code></pre>

<p>```</p>

<p><a href="#5">5. commit acf4ec31ef12d0de84f0496e621a90dcec5ae55c</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_color.pl | 2 +&ndash;
 gv_attrs.pl | 2 +&ndash;</p>

<pre><code>Freshness lifetime from 1H to 100D :-P
</code></pre>

<p>```</p>

<p><a href="#6">6. commit c1ad93f719fe68580e65e748e8c45a43ad1649a9</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 plHtml                    | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules
</code></pre>

<p>```</p>

<p><a href="#7">7. commit c7c8226840bb23fa5bb0ae2e4f8371364d3f49fa</a></p>

<p>``` vim</p>

<p> 2 files changed, 29 insertions(+), 11 deletions(&ndash;)
 load_project.pl | 34 ++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;
 load.pl         |  6 +++&mdash;&ndash;</p>

<pre><code>* [DEP] Alterations to startup procedure.
</code></pre>

<p>```</p>

<p><a href="#8">8. commit 0cd29ea088b348bcb5c8162352c4ead1b3340568</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 plHtml                    | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules
</code></pre>

<p>```</p>

<p><a href="#9">9. commit 13f7fbf9548fb66541f600b9b728bde73fb9830e</a></p>

<p>``` vim</p>

<p> 6 files changed, 169 insertions(+), 45 deletions(&ndash;)
 gv_tree.pl      |  39 ++++++++++++++++++++
 gv_gif.pl       | 109 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 gv_file.pl      |  40 +++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_color.pl     |  10 ++++&mdash;
 gv_attrs.pl     |   2 +&ndash;
 gv_attr_type.pl |  14 ++++&mdash;&mdash;</p>

<pre><code>* [GV_GIF,NEW] New module supporting the construction of GIF representations.
* [GV_TREE,SC] Separate module for GV export of trees.
* [GV_COLOR,FIX] Add support for GV color names.
* [GV_ATTR_TYPE,NEW] Added string//1.
* [GV_ATTRS,FIX] Parsing can be det here.
</code></pre>

<p>```</p>

<p><a href="#10">10. commit 5520d7540db4ab0936ef3f65ccc36f2305235bf0</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_attr_type.pl | 2 +&ndash;</p>

<pre><code>* [GV_ATTR_TYPE,DOC] Fixed typo.
</code></pre>

<p>```</p>

<p><a href="#11">11. commit 8656a39b30e28c3d00365c88a8e7ab1620bccce5</a></p>

<p>``` vim</p>

<p> 2 files changed, 78 insertions(+), 83 deletions(&ndash;)
 gv_tree.pl |  16 ++++&mdash;&ndash;
 gv_file.pl | 145 +++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>* [GV_FILE,SC] Added predicate options declarations.
* [GV_FILE,EXT] Add file type support for exporting to plain DOT.
* [GV_FILE,SC] Move options argument to the last position.
</code></pre>

<p>```</p>

<p><a href="#12">12. commit 74219816f9f78f463cab91c4caba175ba66d4ff8</a></p>

<p>``` vim</p>

<p> 1 file changed, 6 insertions(+), 6 deletions(&ndash;)
 gv_file.pl | 12 ++++++&mdash;&mdash;&mdash;</p>

<pre><code>* [GV_FILE,SC] Renamed predicate.
</code></pre>

<p>```</p>

<p><a href="#13">13. commit bfcb63b1206edd43cd6bb8d05d2884e2e49a463a</a></p>

<p>``` vim</p>

<p> 1 file changed, 77 insertions(+), 68 deletions(&ndash;)
 gv_file.pl | 145 ++++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>* [GV_FILE,FIX] Fix and cleanup for compiling GraphViz files.
</code></pre>

<p>```</p>

<p><a href="#14">14. commit 84afd69f990121eb49b2a4de4562ef080b846aca</a></p>

<p>``` vim</p>

<p> 1 file changed, 54 insertions(+), 43 deletions(&ndash;)
 gv_gif.pl | 97 +++++++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>* [GV_GIF,SC] Thorough cleanup of this module. We intend to extend its functionality with various optional predicates for assigning vertex, edges, and graph properties.
</code></pre>

<p>```</p>

<p><a href="#15">15. commit c2bfd3fc20c95592d66362ac67aa70fabeb078af</a></p>

<p>``` vim</p>

<p> 2 files changed, 150 insertions(+), 39 deletions(&ndash;)
 gv_gif.pl | 145 ++++++++++++++++++++++++++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;
 gv_dot.pl |  44 +++++++++&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>* [GV_GIF,EXT] Added several options for setting vertex, edges, and graph properties.
</code></pre>

<p>```</p>

<p><a href="#16">16. commit fa364fcd664277967e3fda7cb9db94bf5fc01fed</a></p>

<p>``` vim</p>

<p> 1 file changed, 5 insertions(+), 19 deletions(&ndash;)
 gv_gif.pl | 24 +++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>minor
</code></pre>

<p>```</p>

<p><a href="#17">17. commit 3c900f481412a5425124ee4e9b345b2d0fd51f50</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 insertions(+)
 gv_gif.pl | 4 ++++</p>

<pre><code>* [GV_GIF,FIX] Added missing predication options declarations.
</code></pre>

<p>```</p>

<p><a href="#18">18. commit 65cc1c3c03f790ca21e3b23424f467e258b9080a</a></p>

<p>``` vim</p>

<p> 2 files changed, 16 insertions(+), 23 deletions(&ndash;)
 gv_gif.pl  | 18 +++++++++&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_file.pl | 21 +++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>Various small fixes.
</code></pre>

<p>```</p>

<p><a href="#19">19. commit 20e1f2146881894d53c471f40ba74bf7fb99a21d</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 insertions(+), 5 deletions(&ndash;)
 gv_file.pl | 7 ++&mdash;&mdash;&ndash;</p>

<pre><code>* [GV_FILE,FIX] When not given an output file, create one based on the input file.
</code></pre>

<p>```</p>

<p><a href="#20">20. commit e2e9fc1e79108306bb284a2b7adc5760dfeb2087</a></p>

<p>``` vim</p>

<p> 2 files changed, 1 insertion(+), 5 deletions(&ndash;)
 gv_gif.pl  | 2 +&ndash;
 gv_file.pl | 4 &mdash;&mdash;</p>

<pre><code>* [SC] Minor.
</code></pre>

<p>```</p>

<p><a href="#21">21. commit 4b72d15e5999528c55d08ce04bd65622f328ec67</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_gif.pl | 2 +&ndash;</p>

<pre><code>* [SC] Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#22">22. commit 54248f7423f80e8d756ce659667e218fba14b22c</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_gif.pl | 2 +&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#23">23. commit 3b9a7736d901f1382bbe83b9cb2304c6e6fc698a</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_gif.pl | 4 ++&mdash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#24">24. commit 1e9a91074ca1d64a6b07bb7197f41c88146c3aca</a></p>

<p>``` vim</p>

<p> 1 file changed, 3 insertions(+), 3 deletions(&ndash;)
 gv_gif.pl | 6 +++&mdash;&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#25">25. commit 6dc1cf5ff51ce47e0917042dd8ba9c88750cc8fa</a></p>

<p>``` vim</p>

<p> 1 file changed, 109 deletions(&ndash;)
 gv_gif.pl | 109 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>Moved GV_GIF to plGraph.
</code></pre>

<p>```</p>

<p><a href="#26">26. commit 76ea35d03b83f0221658bb29491c90cf137fd377</a></p>

<p>``` vim</p>

<pre><code>merge
</code></pre>

<p>Merge: 76ea35d 6dc1cf5
```</p>

<p><a href="#27">27. commit 2a2728b1d1699995d677889a6d958f1c4da87403</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 223 deletions(&ndash;)
 gv_tree.pl |   4 +&ndash;
 gv_gif.pl  | 221 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>Removed gv_gif.
</code></pre>

<p>```</p>

<p><a href="#28">28. commit 7f9fc826a469a17a3cb10db847e4e4836aad35b2</a></p>

<p>``` vim</p>

<p> 2 files changed, 16 insertions(+), 17 deletions(&ndash;)
 gv_file.pl |  3 +&mdash;
 gv_dot.pl  | 30 +++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>minor
</code></pre>

<p>```</p>

<p><a href="#29">29. commit 5baddb53811463c2e0b21abf2fd8ff8a85f0206c</a></p>

<p>``` vim</p>

<p> 2 files changed, 22 insertions(+), 10 deletions(&ndash;)
 gv_file.pl | 12 +++++&mdash;&mdash;&mdash;&ndash;
 gv_dot.pl  | 20 +++++++++++++++++&mdash;&ndash;</p>

<pre><code>* [GV_FILE,FIX] Sometimes an output file need not be specified and is created on the fly.
* [GV_DOT,FIX] In DOT files, no newline has to occur after global attribute assertions that are not followed by specific content (i.e., nodes and edges).
</code></pre>

<p>```</p>

<p><a href="#30">30. commit 95bfe7fb78f8b4c24337d13dde25fe6df8197469</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 plHtml                    | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules.
</code></pre>

<p>```</p>

<p><a href="#31">31. commit f1322fad81caf9df086379e668520294ba9d7935</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 deletions(&ndash;)
 index.pl | 2 &mdash;</p>

<pre><code>Removed index.
</code></pre>

<p>```</p>

<p><a href="#32">32. commit 474bea8afd0c1a1837b296832e5ffa988df4551b</a></p>

<p>``` vim</p>

<p> 1 file changed, 43 deletions(&ndash;)
 gv_tree.pl | 43 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>* [SC] Relocated GV_TREE to plTree.
</code></pre>

<p>```</p>

<p><a href="#33">33. commit 262cb2aa4ed4ed2f68100c3727f041a4cf82f8d0</a></p>

<p>``` vim</p>

<p> 6 files changed, 59 insertions(+), 51 deletions(&ndash;)
 gv_numeral.pl   |  7 ++++&mdash;&ndash;
 gv_html.pl      |  2 +&ndash;
 gv_dot.pl       | 61 ++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_color.pl     | 21 +++++++++++&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_attrs.pl     |  5 +++&mdash;
 gv_attr_type.pl | 14 ++++++&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>* [SC] Sync to plDcg,DCG_ABNF.
</code></pre>

<p>```</p>

<p><a href="#34">34. commit e7e6033f6d88356193053d724b37550d441f4642</a></p>

<p>``` vim</p>

<pre><code>Merge branch 'master' of https://github.com/wouterbeek/plGraphViz
</code></pre>

<p>Merge: 2a2728b e7e6033
```</p>

<p><a href="#35">35. commit e17bf44417fb2060c7648d47c24af161a3849199</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 deletion(&ndash;)
 gv_file.pl | 1 &ndash;</p>

<pre><code>* [SC] Module input cleanup.
</code></pre>

<p>```</p>

<p><a href="#36">36. commit 6596aa127934e47c89e39c7ad091be6da5fbefd0</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 plHtml                    | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules.
</code></pre>

<p>```</p>

<p><a href="#37">37. commit 87e8982ea1c86d70490d7eb713f01f024118035e</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_dot.pl   | 2 +&ndash;
 gv_attrs.pl | 2 +&ndash;</p>

<pre><code>Sync to plDcg.
</code></pre>

<p>```</p>

<p><a href="#38">38. commit cb6aada737c0d58746811205cc753a53b7dc2301</a></p>

<p>``` vim</p>

<p> 2 files changed, 9 insertions(+), 13 deletions(&ndash;)
 gv_file.pl  | 18 ++++++++&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_color.pl |  4 +&mdash;&ndash;</p>

<pre><code>WINDOWS-SPECIFIC HACK TO RUN DOT!
</code></pre>

<p>```</p>

<p><a href="#39">39. commit 7c8125b1c80c092487f760dabd464b4a3a366414</a></p>

<p>``` vim</p>

<p> 1 file changed, 3 insertions(+), 2 deletions(&ndash;)
 gv_file.pl | 5 +++&mdash;</p>

<pre><code>FIXED: Reverted Windows-specific hack.
</code></pre>

<p>```</p>

<p><a href="#40">40. commit 6a38f954ddaff61cbda0e191ceb514a84155ab3a</a></p>

<p>``` vim</p>

<p> 10 files changed, 98 insertions(+), 17 deletions(&ndash;)
 run.pl                    |  9 ++++++++
 plHtml                    |  2 +&ndash;
 plDcg                     |  1 +
 load_project.pl           | 22 ++++++++++&mdash;&mdash;&mdash;&mdash;&ndash;
 load.pl                   | 11 +++++&mdash;&mdash;&ndash;
 debug_project.pl          | 55 +++++++++++++++++++++++++++++++++++++++++++++++
 debug.pl                  |  7 ++++++
 Prolog-Library-Collection |  2 +&ndash;
 .gitmodules               |  3 +++
 .gitignore                |  3 +++</p>

<pre><code>DEPLOYMENT: Updated to modern startup architecture.
</code></pre>

<p>```</p>

<p><a href="#41">41. commit ebb86cdfd67c1bc273905eb28be11d152520110e</a></p>

<p>``` vim</p>

<p> 2 files changed, 255 insertions(+), 91 deletions(&ndash;)
 gv_html.pl | 249 ++++++++++++++++++++++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_dot.pl  |  97 ++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>ADDED: Rewrote the HTML-like labels grammar for GraphViz.
</code></pre>

<p>```</p>

<p><a href="#42">42. commit 1549e4403d3f7e1b9896964adcfe0d0ec41dc72f</a></p>

<p>``` vim</p>

<p> 4 files changed, 16 insertions(+), 4 deletions(&ndash;)
 plHtml                    |  2 +&ndash;
 plDcg                     |  2 +&ndash;
 debug_project.pl          | 14 +++++++++++++&ndash;
 Prolog-Library-Collection |  2 +&ndash;</p>

<pre><code>Upped submodules.
</code></pre>

<p>```</p>

<p><a href="#43">43. commit 61ddca2f413b7a5de86faf85cb8e3c2e189c2b42</a></p>

<p>``` vim</p>

<pre><code>Merge branch 'master' of https://github.com/wouterbeek/plGraphViz
</code></pre>

<p>Merge: 61ddca2 1549e44
```</p>

<p><a href="#44">44. commit 26f07e7108914550f16186bbba55a4260eae44ff</a></p>

<p>``` vim</p>

<p> 4 files changed, 49 insertions(+), 31 deletions(&ndash;)
 plDcg                     |  2 +&ndash;
 gv_attrs.pl               | 40 +++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_attr_type.pl           | 36 ++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 Prolog-Library-Collection |  2 +&ndash;</p>

<pre><code>DOCUMENTATION: Added for GraphViz attributes processing.
</code></pre>

<p>```</p>

<p><a href="#45">45. commit f78b4f859295fd561bef8b168034b563e6203300</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_file.pl | 2 +&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#46">46. commit 310936292c5fbbce7260ebe51380f829990dcc97</a></p>

<p>``` vim</p>

<pre><code> Merge branch 'temp'
</code></pre>

<p>Merge: f78b4f8 3109362
```</p>

<p><a href="#47">47. commit df0ab09e882cc7b9ddc1d3fb12ef92612b9826ab</a></p>

<p>``` vim</p>

<p> 11 files changed, 25 insertions(+), 8 deletions(&ndash;)
 plUri                     | 1 +
 plSvg                     | 1 +
 plHttp                    | 1 +
 plHtml                    | 2 +&ndash;
 plDcg                     | 2 +&ndash;
 load.pl                   | 9 ++++++&mdash;&ndash;
 gv_dot.pl                 | 2 +&ndash;
 gv_color.pl               | 3 ++&ndash;
 gv_attrs.pl               | 1 +
 Prolog-Library-Collection | 2 +&ndash;
 .gitmodules               | 9 +++++++++</p>

<pre><code>DEPLOYMENT: Added plHttp, plSvg, plUri.
</code></pre>

<p>```</p>

<p><a href="#48">48. commit 73e976b27beeda081abfa60931b7d85bea79ab96</a></p>

<p>``` vim</p>

<p> 5 files changed, 5 insertions(+), 5 deletions(&ndash;)
 plUri                     | 2 +&ndash;
 plHttp                    | 2 +&ndash;
 plHtml                    | 2 +&ndash;
 plDcg                     | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules.
</code></pre>

<p>```</p>

<p><a href="#49">49. commit 090c25dfb4bdd81e95818c65bc8a3b39bc5566d8</a></p>

<p>``` vim</p>

<p> 8 files changed, 7 insertions(+), 16 deletions(&ndash;)
 plUri                     | 1 &ndash;
 plSvg                     | 1 &ndash;
 plHttp                    | 1 &ndash;
 plHtml                    | 2 +&ndash;
 plDcg                     | 2 +&ndash;
 load_project.pl           | 5 ++++&ndash;
 Prolog-Library-Collection | 2 +&ndash;
 .gitmodules               | 9 &mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>DEPLOYMENT: Removed several submodules.
</code></pre>

<p>```</p>

<p><a href="#50">50. commit daed8bfe18cb686c77eb0c0fd2a1ae7443992204</a></p>

<p>``` vim</p>

<p> 13 files changed, 125 insertions(+), 124 deletions(&ndash;)
 plUri                     |   1 +
 plHtml                    |   2 +&ndash;
 plDcg                     |   2 +&ndash;
 load.pl                   |   2 &ndash;
 gv_numeral.pl             | 100 +++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_html.pl                |  75 +++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_file.pl                |  18 &mdash;&mdash;&mdash;&mdash;&ndash;
 gv_dot.pl                 |  39 ++++++++++&mdash;&mdash;&mdash;&mdash;
 gv_color.pl               |   1 +
 gv_attrs.pl               |   3 +&ndash;
 gv_attr_type.pl           |   1 +
 Prolog-Library-Collection |   2 +&ndash;
 .gitmodules               |   3 ++</p>

<pre><code>6. DEPLOYMENT: Added plUri.
5. Sync to submodules.
4. CLEANUP: Spacing in GraphViz HTML-like label syntax.
3. CLEANUP: Markdown code block markup.
2. CLEANUP: Rewrote part of the GraphViz numeral grammar to be easier to process.
1. DOC: Added documentation for GraphViz numeral grammar.
</code></pre>

<p>```</p>

<p><a href="#51">51. commit 528b9af184c39b53f8f5c6bc383a993f1400a71e</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 insertions(+), 4 deletions(&ndash;)
 gv_color.pl | 8 ++++&mdash;&mdash;</p>

<pre><code>minor
</code></pre>

<p>```</p>

<p><a href="#52">52. commit e594ae6c5b4c633db0fef804161071337af3a78d</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_color.pl | 2 +&ndash;</p>

<pre><code>minor
</code></pre>

<p>```</p>

<p><a href="#53">53. commit bbefbf7ce3c322755ce29a18c4cf1c0dd15ef57e</a></p>

<p>``` vim</p>

<p> 5 files changed, 98 insertions(+), 20 deletions(&ndash;)
 load_project.pl  | 25 ++++++++++++&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_color.pl      | 10 &mdash;&mdash;&mdash;&mdash;&ndash;
 debug_project.pl | 66 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 debug.pl         |  9 ++++++++
 README.md        |  8 +++++++</p>

<pre><code>Updated load procedure.
</code></pre>

<p>```</p>

<p><a href="#54">54. commit 0cc5421aa59c8eac6e8fed89327f2b27bdbf43d2</a></p>

<p>``` vim</p>

<pre><code>        debug_project.pl
        debug.pl
Conflicts:

Merge branch 'master' of https://github.com/wouterbeek/plGraphViz
</code></pre>

<p>Merge: 0cc5421 bbefbf7
```</p>

<p><a href="#55">55. commit dbc602d82db54d2b604b86dde60b835b81021d0b</a></p>

<p>``` vim</p>

<p> 2 files changed, 3 insertions(+), 4 deletions(&ndash;)
 plHtml      | 2 +&ndash;
 gv_color.pl | 5 ++&mdash;&ndash;</p>

<pre><code>CLEANUP: GraphViz color persistent store now reuses PLC support module.
</code></pre>

<p>```</p>

<p><a href="#56">56. commit a2456df77c592e7303311540f9578c5c401a9cda</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_numeral.pl | 2 +&ndash;</p>

<pre><code>FIXED: Do not write the plus sign for positive integer GraphViz numberals.
</code></pre>

<p>```</p>

<p><a href="#57">57. commit 20c60172730ce564528fad1ae6a43b6fdde21dac</a></p>

<p>``` vim</p>

<p> 3 files changed, 3 insertions(+), 3 deletions(&ndash;)
 plUri                     | 2 +&ndash;
 plDcg                     | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules.
</code></pre>

<p>```</p>

<p><a href="#58">58. commit f694d776f9e329832a492602cf5161019d293f89</a></p>

<p>``` vim</p>

<p> 12 files changed, 545 insertions(+), 263 deletions(&ndash;)
 plUri                     |   2 +&ndash;
 plHtml                    |   2 +&ndash;
 plDcg                     |   2 +&ndash;
 gv_html.pl                | 221 ++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_file.pl                | 202 +++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_dot.pl                 | 129 +++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_attrs.pl               |  63 +++++++&mdash;&mdash;&mdash;
 gv_attr_type.pl           |  76 +++++++++++++&mdash;&ndash;
 example2.png              | Bin 0 &ndash;> 8121 bytes
 example1.png              | Bin 0 &ndash;> 4166 bytes
 README.md                 | 109 ++++++++++++++++++++++&ndash;
 Prolog-Library-Collection |   2 +&ndash;</p>

<pre><code>6. FIXED: Various fixes while using HTML-like labels for the first time.
5. CLEANUP: Simplified method and output options.
4. ENHANCED: Added support for many more method and output values.
3. CLEANUP: Simplified attribute value generation: write directly i.o. first typechecking.
2. FIXED: Quote escString. Not clear from GV grammar.
1. DOC: Added documentation on top-level use.
</code></pre>

<p>```</p>

<p><a href="#59">59. commit af5d96dfda6172b8a13f3030d810bd2709031111</a></p>

<p>``` vim</p>

<p> 1 file changed, 38 insertions(+), 4 deletions(&ndash;)
 README.md | 42 ++++++++++++++++++++++++++++++++++++++&mdash;&mdash;</p>

<pre><code>DOC: Added documentation.
</code></pre>

<p>```</p>

<p><a href="#60">60. commit ab4b616bb9e2251a496c37afd0a7e56937b944b9</a></p>

<p>``` vim</p>

<p> 2 files changed, 3 insertions(+), 3 deletions(&ndash;)
 gv_dot.pl       | 4 ++&mdash;
 gv_attr_type.pl | 2 +&ndash;</p>

<pre><code>FIXED: GraphViz strings surrounded must be enclosed by double quotes.
</code></pre>

<p>```</p>

<p><a href="#61">61. commit 74bd19d68c153b8ca75d5926b2a2131f7bb844d0</a></p>

<p>``` vim</p>

<p> 1 file changed, 8 insertions(+)
 README.md | 8 ++++++++</p>

<pre><code>DOC: Added installation.
</code></pre>

<p>```</p>

<p><a href="#62">62. commit 8ffff6f0c98e4207c773ad995563f6a8433e3f73</a></p>

<p>``` vim</p>

<pre><code>Merge branch 'master' of https://github.com/wouterbeek/plGraphViz
</code></pre>

<p>Merge: 8ffff6f 74bd19d
```</p>

<p><a href="#63">63. commit ac3423a3430ed91079209d895191cb911609cdc3</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules.
</code></pre>

<p>```</p>

<p><a href="#64">64. commit 57932e48a824da4670dbaf89d8f8a2e238954b50</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_file.pl | 2 +&ndash;</p>

<pre><code>rename
</code></pre>

<p>```</p>

<p><a href="#65">65. commit 315b16ed91a4138cbfe7c79aad89dad7e48f1870</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 deletions(&ndash;)
 gv_file.pl | 4 &mdash;&mdash;</p>

<pre><code>CLEANUP: Removed redundant declaration and module import.
</code></pre>

<p>```</p>

<p><a href="#66">66. commit 898b5d2ccb3dc13754a1de853bd62e3dda1ef6e9</a></p>

<p>``` vim</p>

<p> 1 file changed, 19 insertions(+), 11 deletions(&ndash;)
 gv_file.pl | 30 +++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>CLEANUP: Renamed gif-&gt;export_graph.
</code></pre>

<p>```</p>

<p><a href="#67">67. commit 4279a49aa9e92a73f702edd0c2b6c90131a50556</a></p>

<p>``` vim</p>

<p> 2 files changed, 10 insertions(+), 10 deletions(&ndash;)
 gv_html.pl | 16 ++++++++&mdash;&mdash;&mdash;&mdash;
 gv_dot.pl  |  4 ++&mdash;</p>

<pre><code>CEANUP: Use Markdown notation.
</code></pre>

<p>```</p>

<p><a href="#68">68. commit c173073758805b29105db834aa14c51fea65156c</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_color.pl | 2 +&ndash;
 gv_attrs.pl | 2 +&ndash;</p>

<pre><code>Syc to plHtml.
</code></pre>

<p>```</p>

<p><a href="#69">69. commit 107c515057dc9ef9d4b2fe7b6ed12923b7826eae</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 insertions(+), 4 deletions(&ndash;)
 gv_attrs.pl | 8 ++++&mdash;&mdash;</p>

<pre><code>minor
</code></pre>

<p>```</p>

<p><a href="#70">70. commit 8f574bb2cbf341b17734a8269a329276148221e7</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_dot.pl | 4 ++&mdash;</p>

<pre><code>Sync to plDcg.
</code></pre>

<p>```</p>

<p><a href="#71">71. commit d7088dd180fdf3295f14e65c614f2e643235cdc2</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 insertions(+), 2 deletions(&ndash;)
 README.md | 4 ++&mdash;</p>

<pre><code>DOC: Sync to self.
</code></pre>

<p>```</p>

<p><a href="#72">72. commit 94ed05d9e4a46ca4b111e0312a31b1423c84495e</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+)
 gv_file.pl | 1 +</p>

<pre><code>deb
</code></pre>

<p>```</p>

<p><a href="#73">73. commit f48106006fc0ea042800de086191c56ea939d324</a></p>

<p>``` vim</p>

<p> 3 files changed, 29 insertions(+), 53 deletions(&ndash;)
 gv_file.pl      |  8 +++&mdash;&mdash;
 gv_dot.pl       | 65 +++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_attr_type.pl |  9 ++++++&mdash;</p>

<pre><code>4. FIXED: Added PDF file type registration.
3. FIXED: Removed the requirement of a given GraphViz output file having a file extension that matches its media type.
2. FIXED: Double quoted string support for GraphViz was broken.
1. FIXED: Dobule quotes are now auto-escaped in GraphViz escStrings.
</code></pre>

<p>```</p>

<p><a href="#74">74. commit ce492efd1bb82bdbb7611d52ae3d1092b9cdcf8b</a></p>

<p>``` vim</p>

<p> 2 files changed, 1 insertion(+), 3 deletions(&ndash;)
 gv_html.pl      | 2 &mdash;
 gv_attr_type.pl | 2 +&ndash;</p>

<pre><code>2. FIXED: Use of HTML-like labels revealed typo.
1. FIXED: Removed ambiguity for linebreak specification in GraphViz HTML-like labels.
</code></pre>

<p>```</p>

<p><a href="#75">75. commit ddef555cdb626a0ab6afc9e3d727cb4149ba6ed0</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_dot.pl   | 2 +&ndash;
 gv_color.pl | 2 +&ndash;</p>

<pre><code>minor
</code></pre>

<p>```</p>

<p><a href="#76">76. commit af27fdd8f2f08169cb445a48002894f088e4fa93</a></p>

<p>``` vim</p>

<p> 2 files changed, 43 insertions(+), 41 deletions(&ndash;)
 gv_numeral.pl   | 67 ++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_attr_type.pl | 17 +++++++&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>ENHANCED: Rewrite of GraphViz numerals.
</code></pre>

<p>```</p>

<p><a href="#77">77. commit f390238d2ec4965ca62f09850307fdc438e43ffb</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 insertions(+), 1 deletion(&ndash;)
 gv_numeral.pl | 5 ++++&ndash;</p>

<pre><code>Sync to plDcg.
</code></pre>

<p>```</p>

<p><a href="#78">78. commit c5f7d822cbc6ba77814581c071fb8f74130979af</a></p>

<p>``` vim</p>

<p> 3 files changed, 5 insertions(+), 2 deletions(&ndash;)
 gv_numeral.pl   | 2 +&ndash;
 gv_color.pl     | 3 ++&ndash;
 gv_attr_type.pl | 2 ++</p>

<pre><code>FIXED: Missing module imports.
</code></pre>

<p>```</p>

<p><a href="#79">79. commit acf64671787994db76761c96da10a3eca42f0d65</a></p>

<p>``` vim</p>

<p> 2 files changed, 4 insertions(+), 3 deletions(&ndash;)
 gv_numeral.pl   | 2 ++
 gv_attr_type.pl | 5 ++&mdash;&ndash;</p>

<pre><code>FIXED: Use float// i.o. detailed double implementation (scientific notation issue).
</code></pre>

<p>```</p>

<p><a href="#80">80. commit 6656a2d769a8e2e7ec1a38a4f58fb6be58bdf735</a></p>

<p>``` vim</p>

<p> 4 files changed, 4 insertions(+), 4 deletions(&ndash;)
 plUri                     | 2 +&ndash;
 plHtml                    | 2 +&ndash;
 plDcg                     | 2 +&ndash;
 Prolog-Library-Collection | 2 +&ndash;</p>

<pre><code>Upped submodules.
</code></pre>

<p>```</p>

<p><a href="#81">81. commit 256c9cec27b53f609ad80ab8f66cb0d0cb6b6530</a></p>

<p>``` vim</p>

<p> 11 files changed, 111 insertions(+), 73 deletions(&ndash;)
 plDcg            |  1 &ndash;
 load.pl          |  1 &ndash;
 gv_numeral.pl    | 15 +++++++&mdash;&mdash;&mdash;&mdash;
 gv_html.pl       |  6 +++&mdash;&ndash;
 gv_file.pl       | 24 ++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_dot.pl        | 18 +++++++++&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_color.pl      | 27 +++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_attrs.pl      | 23 ++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_attr_type.pl  | 16 ++++++++&mdash;&mdash;&mdash;&mdash;
 debug_project.pl | 50 +++++++++++++++++++++++++++++++++++++++++++++&mdash;&mdash;&ndash;
 .gitmodules      |  3 &mdash;&ndash;</p>

<pre><code>Sync to submodules.
</code></pre>

<p>```</p>

<p><a href="#82">82. commit bf4ebead2a5fb2bb5772632676e636c756b256b5</a></p>

<p>``` vim</p>

<p> 6 files changed, 53 insertions(+), 18 deletions(&ndash;)
 plUri                     |  2 +&ndash;
 plHtml                    |  2 +&ndash;
 plDcg                     |  2 +&ndash;
 gv_attrs.pl               | 13 ++++&mdash;&mdash;&mdash;&mdash;
 debug_project.pl          | 50 ++++++++++++++++++++++++++++++++++++++++++&mdash;&mdash;&ndash;
 Prolog-Library-Collection |  2 +&ndash;</p>

<pre><code>merge
</code></pre>

<p>```</p>

<p><a href="#83">83. commit 70aec99207ccbb33e23b3af547346ef1a2923fc1</a></p>

<p>``` vim</p>

<pre><code>merge
</code></pre>

<p>Merge: 70aec99 bf4ebea
```</p>

<p><a href="#84">84. commit e06e6ba9af125b82c1f19b4481e748559f847ba6</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 plUri  | 2 +&ndash;
 plHtml | 2 +&ndash;</p>

<pre><code>Upped submodules
</code></pre>

<p>```</p>

<p><a href="#85">85. commit 0fd12ca246d674d21d912881698711dde72bd0d3</a></p>

<p>``` vim</p>

<p> 1 file changed, 12 insertions(+), 15 deletions(&ndash;)
 README.md | 27 ++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>DOC: spacing
</code></pre>

<p>```</p>

<p><a href="#86">86. commit 67c415721c41e9e05cbdba40bb4735f3951f11bb</a></p>

<p>``` vim</p>

<p> 2 files changed, 28 insertions(+), 16 deletions(&ndash;)
 gv_color.pl | 22 ++++++++++++++&mdash;&mdash;&mdash;&mdash;
 gv_attrs.pl | 22 ++++++++++++++&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>ENHANCED: Print progress/problems of initializing GraphViz colors and attributes to the console.
</code></pre>

<p>```</p>

<p><a href="#87">87. commit b972e2b2e40c6f50b3055873bdec06836d687c91</a></p>

<p>``` vim</p>

<p> 1 file changed, 10 insertions(+), 11 deletions(&ndash;)
 gv_file.pl | 21 ++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>Sync to process update in PLC.
</code></pre>

<p>```</p>

<p><a href="#88">88. commit 8bbc84c721b287890d8fa305e5b700b5ec4fa00b</a></p>

<p>``` vim</p>

<p> 7 files changed, 32 insertions(+), 40 deletions(&ndash;)
 run.pl                    |  2 ++
 plUri                     |  2 +&ndash;
 plHtml                    |  2 +&ndash;
 gv_file.pl                | 62 ++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 README.md                 |  1 &ndash;
 Prolog-Library-Collection |  2 +&ndash;
 .gitignore                |  1 +</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#89">89. commit 033fa1448bea11bd52bbf85e1296b8788b313ede</a></p>

<p>``` vim</p>

<p> 2 files changed, 9 insertions(+), 3 deletions(&ndash;)
 gv_attrs.pl     | 4 ++&mdash;
 gv_attr_type.pl | 8 +++++++&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#90">90. commit fdb5a9e7bd35c963bc12c9cf2da47310576c981a</a></p>

<p>``` vim</p>

<pre><code>merge
</code></pre>

<p>Merge: 8bbc84c fdb5a9e
```</p>

<p><a href="#91">91. commit 6ec582e33df1feff0eca315974a4daf7555e3878</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_color.pl | 2 +&ndash;
 gv_attrs.pl | 2 +&ndash;</p>

<pre><code>Sync to plHtml.
</code></pre>

<p>```</p>

<p><a href="#92">92. commit 68b53b8f39e5500b7bf7f6527e358fcfe755e938</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_color.pl | 2 +&ndash;
 gv_attrs.pl | 2 +&ndash;</p>

<pre><code>Sync to plHtml.
</code></pre>

<p>```</p>

<p><a href="#93">93. commit 46e8f3ce8458bae27a39985b7e2d6ab01c1e70a7</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 insertions(+), 2 deletions(&ndash;)
 gv_file.pl | 4 ++&mdash;</p>

<pre><code>DOC: Small fix to documentation.
</code></pre>

<p>```</p>

<p><a href="#94">94. commit 3162d883a592da6feb510bc183d89e03a88726d4</a></p>

<p>``` vim</p>

<p> 4 files changed, 4 insertions(+), 2 deletions(&ndash;)
 gv_dot.pl       | 1 +
 gv_color.pl     | 2 +&ndash;
 gv_attrs.pl     | 1 +
 gv_attr_type.pl | 2 +&ndash;</p>

<pre><code>FIXED: Module imports.
</code></pre>

<p>```</p>

<p><a href="#95">95. commit 714b2e0424dbe8f892e9f1bbf288a3e76236d4a3</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 gv_attr_type.pl | 2 +&ndash;</p>

<pre><code>FIXED: Module import conflict.
</code></pre>

<p>```</p>

<p><a href="#96">96. commit af7a3871a7525e0c4c27905989ad6c12e1b3dcd9</a></p>

<p>``` vim</p>

<p> 2 files changed, 4 insertions(+), 3 deletions(&ndash;)
 gv_numeral.pl | 5 +++&mdash;
 gv_color.pl   | 2 +&ndash;</p>

<pre><code>FIXED: Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#97">97. commit 7b434e315484e5160f9e0f9201bdb9643f47de08</a></p>

<p>``` vim</p>

<p> 3 files changed, 272 insertions(+), 285 deletions(&ndash;)
 gv_graph.pl | 229 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 gv_file.pl  | 127 ++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_dot.pl   | 201 ++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>Started simplifying stuff.
</code></pre>

<p>```</p>

<p><a href="#98">98. commit dcbcb4d01410d71b4e1cdf8e2ab7a6ce5cff96ca</a></p>

<p>``` vim</p>

<p> 8 files changed, 389 insertions(+), 137 deletions(&ndash;)
 gv_util.pl                | 260 ++++++++++++++++++++++++++++++++++++++++++++++
 gv_html.pl                |   4 +&ndash;
 gv_file.pl                |   9 +&ndash;
 gv_dot.pl                 | 102 +++++++++&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_color.pl               |  29 ++++&mdash;
 gv_attrs.pl               |  78 +++++++&mdash;&mdash;&mdash;&ndash;
 gv_attr_type.pl           |  42 ++++&mdash;&mdash;
 Prolog-Library-Collection |   2 +&ndash;</p>

<pre><code>Many utils from PLC are needed...
</code></pre>

<p>```</p>

<p><a href="#99">99. commit 50a3dbc39532e583ace2d71cfed7eeb0db813c87</a></p>

<p>``` vim</p>

<p> 17 files changed, 98 insertions(+), 630 deletions(&ndash;)
 run.pl                    |  11 &mdash;
 plUri                     |   1 &ndash;
 plHtml                    |   1 &ndash;
 load_project.pl           | 125 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 load.pl                   |  13 &mdash;&ndash;
 gv_util.pl                | 260 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_numeral.pl             |  20 ++&mdash;
 gv_html.pl                |  17 ++&ndash;
 gv_graph.pl               |  26 ++&mdash;&ndash;
 gv_file.pl                |   2 +
 gv_dot.pl                 |  57 +++++&mdash;&mdash;&ndash;
 gv_color.pl               |  24 ++&mdash;&ndash;
 gv_attrs.pl               |  13 ++&ndash;
 gv_attr_type.pl           |  44 ++++&mdash;&mdash;
 debug_project.pl          | 106 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 debug.pl                  |   7 &mdash;
 Prolog-Library-Collection |   1 &ndash;</p>

<pre><code>Sync to updated PLC.
</code></pre>

<p>```</p>

<p><a href="#100">100. commit a97e8e1fec071b7306a9aa6ad43749d08780d96f</a></p>

<p>``` vim</p>

<p> 12 files changed, 272 insertions(+), 216 deletions(&ndash;)
 test/test.pl                                 |  10 +
 test/debug.pl                                |  15 ++
 gv_numeral.pl => prolog/gv/gv_numeral.pl     |   1 &ndash;
 gv_html.pl => prolog/gv/gv_html.pl           |   2 +&ndash;
 gv_dot.pl => prolog/gv/gv_graph_comp.pl      | 264 ++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 gv_graph.pl => prolog/gv/gv_graph.pl         |  19 +&ndash;
 gv_file.pl => prolog/gv/gv_file.pl           |   7 +&ndash;
 gv_color.pl => prolog/gv/gv_color.pl         |  34 +&mdash;&ndash;
 gv_attrs.pl => prolog/gv/gv_attrs.pl         |  40 ++&mdash;
 gv_attr_type.pl => prolog/gv/gv_attr_type.pl |  66 +++&mdash;&mdash;
 pack.pl                                      |   9 +
 LICENSE.txt                                  |  21 +++</p>

<pre><code>ADDED: Created full Prolog Pack.
</code></pre>

<p>```</p>

<p><a href="#101">101. commit 9513a9be8a25ceb2ce966b3d4ed4b63407c42716</a></p>

<p>``` vim</p>

<p> 1 file changed, 9 insertions(+), 7 deletions(&ndash;)
 prolog/gv/gv_color.pl | 16 +++++++++&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>FIXED: Non-determinism in downloading the GraphViz color table.
</code></pre>

<p>```</p>

<p><a href="#102">102. commit 7163f602709cfede798f72fd36980cbbe8816545</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 pack.pl | 2 +&ndash;</p>

<pre><code>Pack version 0.0.2
</code></pre>

<p>```</p>

<p><a href="#103">103. commit b2f4aef718c0cd2f190a4bbea1855af89bae6cbe</a></p>

<p>``` vim</p>

<p> 2 files changed, 3 insertions(+), 2 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl | 3 ++&ndash;
 pack.pl                    | 2 +&ndash;</p>

<pre><code>FIXED: Attributes represented as compound terms.
</code></pre>

<p>```</p>

<p><a href="#104">104. commit ba30c25127b0f70c041a4bf4c7c57a242591fdcf</a></p>

<p>``` vim</p>

<p> 2 files changed, 13 insertions(+), 7 deletions(&ndash;)
 prolog/gv/gv_file.pl | 18 ++++++++++++&mdash;&mdash;&mdash;
 pack.pl              |  2 +&ndash;</p>

<pre><code>ENHANCED: Make up an output file name in case none is given.
</code></pre>

<p>```</p>

<p><a href="#105">105. commit 0eea41b6c6c2e70118b1921d5e531f6e2ed016ee</a></p>

<p>``` vim</p>

<p> 5 files changed, 41 insertions(+), 6 deletions(&ndash;)
 prolog/gv/gv_html.pl  |  2 +&ndash;
 prolog/gv/gv_dom.pl   | 35 +++++++++++++++++++++++++++++++++++
 prolog/gv/gv_color.pl |  4 ++&mdash;
 prolog/gv/gv_attrs.pl |  4 ++&mdash;
 pack.pl               |  2 +&ndash;</p>

<pre><code>ADDED: gv_dom/3.
</code></pre>

<p>```</p>

<p><a href="#106">106. commit c1691bd808d6880f39fc486617c5faa1a3a68674</a></p>

<p>``` vim</p>

<p> 4 files changed, 373 insertions(+), 11 deletions(&ndash;)
 test/test.pl                       |  19 +&ndash;
 prolog/gv/gv_attrs.pl              |   3 +&ndash;
 prolog/graph/build_export_graph.pl | 360 +++++++++++++++++++++++++++++++++++++
 pack.pl                            |   2 +&ndash;</p>

<pre><code>ADDED: build_export_graph/3.
</code></pre>

<p>```</p>

<p><a href="#107">107. commit 3de9fc2a336afab3994d30c3c4a2f98475ab9652</a></p>

<p>``` vim</p>

<p> 3 files changed, 17 insertions(+), 5 deletions(&ndash;)
 prolog/gv/gv_color.pl | 10 ++++++++&mdash;
 prolog/gv/gv_attrs.pl | 10 ++++++++&mdash;
 pack.pl               |  2 +&ndash;</p>

<pre><code>FIXED: No longer use persistency_ext which gave permission errors.
</code></pre>

<p>```</p>

<p><a href="#108">108. commit cb34d89fd0cce9b5a4fbf3bf6434f6771081c67a</a></p>

<p>``` vim</p>

<p> 2 files changed, 4 insertions(+), 3 deletions(&ndash;)
 prolog/gv/gv_graph.pl | 5 +++&mdash;
 pack.pl               | 2 +&ndash;</p>

<pre><code>FIXED: Typo in GraphViz DOT generation.
</code></pre>

<p>```</p>

<p><a href="#109">109. commit 7f0e20fd402f669cb59621a07203f08866cbff04</a></p>

<p>``` vim</p>

<p> 2 files changed, 19 insertions(+), 19 deletions(&ndash;)
 prolog/graph/build_export_graph.pl | 36 ++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 pack.pl                            |  2 +&ndash;</p>

<pre><code>FIXED: Name-value pairs to option compounds.
</code></pre>

<p>```</p>

<p><a href="#110">110. commit c16a7a7cd7bec0fa9f65e9835478c351d396677b</a></p>

<p>``` vim</p>

<p> 3 files changed, 5 insertions(+), 5 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl | 2 +&ndash;
 prolog/gv/gv_graph.pl      | 6 +++&mdash;&ndash;
 pack.pl                    | 2 +&ndash;</p>

<pre><code>FIXED: Added determinism to GraphViz DOT generation.
</code></pre>

<p>```</p>

<p><a href="#111">111. commit 8bbb08c76fac066a3fa22a840a3bd4bd64e7293c</a></p>

<p>``` vim</p>

<p> 4 files changed, 13 insertions(+), 8 deletions(&ndash;)
 prolog/gv/gv_file.pl  | 9 +++++++&mdash;
 prolog/gv/gv_color.pl | 6 +++&mdash;&ndash;
 prolog/gv/gv_attrs.pl | 4 ++&mdash;
 pack.pl               | 2 +&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#112">112. commit 34c8b1a9c74ba8cbf8f5985638b220ad573fe6ce</a></p>

<p>``` vim</p>

<p> 2 files changed, 5 insertions(+), 2 deletions(&ndash;)
 prolog/graph/build_export_graph.pl | 5 ++++&ndash;
 pack.pl                            | 2 +&ndash;</p>

<pre><code>FIXED: Support for edge/2 besides edge/3 compound terms.
</code></pre>

<p>```</p>

<p><a href="#113">113. commit d883d0607e5ba30ce42e845fdc6d4459ea2fab2f</a></p>

<p>``` vim</p>

<p> 2 files changed, 3 insertions(+), 2 deletions(&ndash;)
 prolog/graph/build_export_graph.pl | 3 ++&ndash;
 pack.pl                            | 2 +&ndash;</p>

<pre><code>FIXED: By default the label of a graph is the empty string.
</code></pre>

<p>```</p>

<p><a href="#114">114. commit 66ac0a091089347967dcc64ee8832f30acb91ce2</a></p>

<p>``` vim</p>

<p> 2 files changed, 3 insertions(+), 3 deletions(&ndash;)
 prolog/gv/gv_attr_type.pl | 4 ++&mdash;
 pack.pl                   | 2 +&ndash;</p>

<pre><code>FIXED: escaping of double quotes labels was broken.
</code></pre>

<p>```</p>

<p><a href="#115">115. commit ab5a1028be0707fea663d35fa1e76a9a62b78262</a></p>

<p>``` vim</p>

<p> 3 files changed, 971 insertions(+), 1 deletion(&ndash;)
 gv_color.log | 802 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 gv_attrs.log | 169 +++++++++++++
 .gitignore   |   1 &ndash;</p>

<pre><code>DEPLOYMENT: Include default version of settings files since GraphViz Web site is often offline.
</code></pre>

<p>```</p>

<p><a href="#116">116. commit 65f43b8ebe93dd39c5a75f8506cc957ae817a8fe</a></p>

<p>``` vim</p>

<p> 7 files changed, 984 insertions(+), 15 deletions(&ndash;)
 test/gv_attrs.log          | 169 ++++++++++
 prolog/gv/gv_graph_comp.pl |  14 +&ndash;
 prolog/gv/gv_color.pl      |   4 +&ndash;
 prolog/gv/gv_color.log     | 802 +++++++++++++++++++++++++++++++++++++++++++++
 prolog/gv/gv_attrs.pl      |   6 +&ndash;
 pack.pl                    |   2 +&ndash;
 .gitignore                 |   2 &ndash;</p>

<pre><code>merge
</code></pre>

<p>```</p>

<p><a href="#117">117. commit c6de3d1b6f875da1868a26b81855d96f9799196b</a></p>

<p>``` vim</p>

<pre><code>merge
</code></pre>

<p>Merge: c6de3d1 65f43b8
```</p>

<p><a href="#118">118. commit cab2231f8ca7bc9ce02552cddcb74079ff3cb386</a></p>

<p>``` vim</p>

<p> 1 file changed, 169 insertions(+)
 prolog/gv/gv_attrs.log | 169 +++++++++++++++++++++++++++++++++++++++++++++++++</p>

<pre><code>ADDED: atts log.
</code></pre>

<p>```</p>

<p><a href="#119">119. commit 008c5e632ccdcf0f58199ba24a24b06f7a73a87c</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 pack.pl | 2 +&ndash;</p>

<pre><code>0.0.16
</code></pre>

<p>```</p>

<p><a href="#120">120. commit dba5c72fafb666266f6494de7d8d6542c2e12e75</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 pack.pl | 2 +&ndash;</p>

<pre><code>0.0.17
</code></pre>

<p>```</p>

<p><a href="#121">121. commit eff64ee3c829d1ab86f734d36b6a9ebd0915f9bc</a></p>

<p>``` vim</p>

<p> 1 file changed, 15 deletions(&ndash;)
 test/debug.pl | 15 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>DEBUG: cleanup.
</code></pre>

<p>```</p>

<p><a href="#122">122. commit 89eb423af6cf856a936e8c0cdcaa7ba667f0c9c6</a></p>

<p>``` vim</p>

<p> 4 files changed, 7 insertions(+), 9 deletions(&ndash;)
 test/test.pl               | 2 &mdash;
 prolog/gv/gv_graph_comp.pl | 4 ++&mdash;
 prolog/gv/gv_graph.pl      | 6 +++&mdash;&ndash;
 prolog/gv/gv_attr_type.pl  | 4 ++&mdash;</p>

<pre><code>         Thanks to Markus Triska.
CLEANUP: Use * i.o. '*' for predicate names.
</code></pre>

<p>```</p>

<p><a href="#123">123. commit 2346997feabccf63c0dde7abe7de810fbbf53f6b</a></p>

<p>``` vim</p>

<p> 2 files changed, 8 insertions(+), 10 deletions(&ndash;)
 prolog/graph/build_export_graph.pl | 9 ++++++++&ndash;
 .gitmodules                        | 9 &mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>ADDED: Wrapper build_export_graph/2.
</code></pre>

<p>```</p>

<p><a href="#124">124. commit d22d50e477d8b53eade745f23d64fc5c7177ac79</a></p>

<p>``` vim</p>

<p> 1 file changed, 218 insertions(+)
 install | 218 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p>

<pre><code>ADDED: Install script.
</code></pre>

<p>```</p>

<p><a href="#125">125. commit e64cc3593e4a6d15a00d32b3dda690536d52c414</a></p>

<p>``` vim</p>

<p> 3 files changed, 27 insertions(+), 31 deletions(&ndash;)
 prolog/gv/gv_file.pl  | 48 ++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 prolog/gv/gv_color.pl |  6 +++&mdash;&ndash;
 prolog/gv/gv_attrs.pl |  4 ++&mdash;</p>

<pre><code>CLEAN: various cleanups.
</code></pre>

<p>```</p>

<p><a href="#126">126. commit 763a529e2b01af1a5f8da6a89f19bc7d6d8119a2</a></p>

<p>``` vim</p>

<pre><code>Merge branch 'master' of https://github.com/wouterbeek/plGraphViz
</code></pre>

<p>Merge: 763a529 e64cc35
```</p>

<p><a href="#127">127. commit d962f818fa3094e1f3ccab245a94232147a5e7cf</a></p>

<p>``` vim</p>

<p> 1 file changed, 218 deletions(&ndash;)
 install | 218 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>CLEAN: no install
</code></pre>

<p>```</p>

<p><a href="#128">128. commit 63a5cd72e1751cb08e8a304e0eaefd6ba6454d82</a></p>

<p>``` vim</p>

<p> 2 files changed, 17 insertions(+), 15 deletions(&ndash;)
 prolog/gv/gv_color.pl |  5 +++&mdash;
 prolog/gv/gv_attrs.pl | 27 ++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#129">129. commit ce95c3c892470ce2fe09bb364d428059c99e6ca0</a></p>

<p>``` vim</p>

<p> 2 files changed, 20 insertions(+), 15 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl | 28 +++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 prolog/gv/gv_attr_type.pl  |  7 +++++&mdash;</p>

<pre><code>FIXED: Support for strings/atoms.
DEBUG: Throw exceptions in several spots of the DOT grammar.
</code></pre>

<p>```</p>

<p><a href="#130">130. commit 44cd5a661f0811904e11770a6388dd1495540620</a></p>

<p>``` vim</p>

<p> 1 file changed, 35 insertions(+), 30 deletions(&ndash;)
 prolog/graph/build_export_graph.pl | 65 ++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>EHANCED: `build_export_graph/[2,3]' support S-represented ugraphs.
</code></pre>

<p>```</p>

<p><a href="#131">131. commit c0c5e1890ea65a0f67c37e4e9d4c2d29ccdf8111</a></p>

<p>``` vim</p>

<p> 10 files changed, 1154 insertions(+), 2166 deletions(&ndash;)
 prolog/gv/gv_color.pl   |  79 +&mdash;&mdash;
 prolog/gv/gv_color.log  | 802 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 prolog/gv/gv_color.data | 802 ++++++++++++++++++++++++++++++++++++++++++++++++
 prolog/gv/gv_attrs.pl   | 148 +&mdash;&mdash;&mdash;&mdash;
 prolog/gv/gv_attrs.log  | 169 &mdash;&mdash;&mdash;&mdash;&mdash;
 prolog/gv/gv_attrs.data | 169 ++++++++++
 gv_color.log            | 802 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 gv_attrs.log            | 169 &mdash;&mdash;&mdash;&mdash;&mdash;
 data/gv_color_scrape.pl |  56 ++++
 data/gv_attrs_scrape.pl | 124 ++++++++</p>

<pre><code>Library percistency is too unreliable to do this, as is the GV Web site.
DEPLOYMENT: Distribute scripts for scraping the GraphViz Web site.
</code></pre>

<p>```</p>

<p><a href="#132">132. commit 603344fe57e9747bf1f2f7e90537ee2e4fe20c36</a></p>

<p>``` vim</p>

<p> 1 file changed, 9 insertions(+), 4 deletions(&ndash;)
 prolog/gv/gv_file.pl | 13 +++++++++&mdash;&mdash;</p>

<pre><code>ENHANCED: Specify that module gv_file requires program dot to be installed.
CLEAN: Use PLC supplied abstraction predicate for running an external process.
Allows Prolog to show warnings when running a program that depends on DOT support when it's not currently installed.
</code></pre>

<p>```</p>

<p><a href="#133">133. commit 267925349145c9919435cc83625479c87ceb904c</a></p>

<p>``` vim</p>

<p> 3 files changed, 103 insertions(+), 5 deletions(&ndash;)
 test/test.pl             |  2 ++
 prolog/gv/gv_file.pl     | 19 ++++++++&mdash;&ndash;
 prolog/fca/fca_export.pl | 87 ++++++++++++++++++++++++++++++++++++++++++++++++</p>

<pre><code>ADDED: Module fca_export providing fca_export/[2,3] and three vertex label writers.
DOC: Fixed mode for gv_export/[2,3]'s output file argument.
ADDED: Wrapper gv_export/2.
Added support for exporting FCA lattices.
</code></pre>

<p>```</p>

<p><a href="#134">134. commit a5e20f86f351a3d8ab562fd3e0a76bf6c959ddbc</a></p>

<p>``` vim</p>

<p> 1 file changed, 7 insertions(+), 2 deletions(&ndash;)
 prolog/fca/fca_export.pl | 9 +++++++&mdash;</p>

<pre><code>ENHANCED: Do not display reflexive edges in FCA lattice export.
</code></pre>

<p>```</p>

<p><a href="#135">135. commit bc3c50241b899b7201647cd475d66f74073c4b6f</a></p>

<p>``` vim</p>

<p> 4 files changed, 73 insertions(+), 52 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl         | 68 ++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 prolog/gv/gv_graph.pl              |  2 +&ndash;
 prolog/graph/build_export_graph.pl | 31 ++++++++++++++&mdash;&ndash;
 prolog/fca/fca_export.pl           | 24 +++++++++++&mdash;&ndash;</p>

<pre><code>ADDED: Generate ranks for exported graphs based on rank assignment function for vertices.
</code></pre>

<p>```</p>

<p><a href="#136">136. commit 7ec98aac5f8783118fc4e1443cdd168bd2f854a1</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 insertions(+), 17 deletions(&ndash;)
 prolog/fca/fca_export.pl | 19 ++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>Use the new FCA Hasse construction predicate from PLC for exporting FCA diagrams.
</code></pre>

<p>```</p>

<p><a href="#137">137. commit 984d3b9ad1b22f5221e0d27ceccb6873e46b9ca5</a></p>

<p>``` vim</p>

<p> 2 files changed, 48 insertions(+), 47 deletions(&ndash;)
 prolog/graph/build_export_graph.pl |  8 ++&mdash;
 prolog/fca/fca_export.pl           | 87 +++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>Improved the way in which FCE-specific options are passed to FCA export.
</code></pre>

<p>```</p>

<p><a href="#138">138. commit 4401e203e457575fedd614b8794360f3eb350cd5</a></p>

<p>``` vim</p>

<p> 1 file changed, 35 insertions(+), 14 deletions(&ndash;)
 prolog/fca/fca_export.pl | 49 ++++++++++++++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>ADDED: Support for option `attribute_label/1'.
</code></pre>

<p>```</p>

<p><a href="#139">139. commit 22474664404e3b42da3137dfb33983c82eb40d9a</a></p>

<p>``` vim</p>

<p> 2 files changed, 8 insertions(+), 8 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl | 12 ++++++&mdash;&mdash;&mdash;
 prolog/gv/gv_graph.pl      |  4 ++&mdash;</p>

<pre><code>CLEAN: Sync to indent/tab updates in PLC.
</code></pre>

<p>```</p>

<p><a href="#140">140. commit f4a9322a1ff02370019c53e8c3ae673fe691010b</a></p>

<p>``` vim</p>

<p> 3 files changed, 138 insertions(+), 218 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl |  71 +++++&mdash;&mdash;&mdash;&ndash;
 prolog/gv/gv_color.pl      |   3 +&ndash;
 prolog/gv/gv_attr_type.pl  | 282 ++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>Simplified DOT generating grammar.
</code></pre>

<p>```</p>

<p><a href="#141">141. commit 0d2712a7b0e2b5d4c32fbdccc0829e645b4d1601</a></p>

<p>``` vim</p>

<p> 4 files changed, 86 insertions(+), 108 deletions(&ndash;)
 prolog/gv/gv_html.pl               | 83 ++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 prolog/gv/gv_graph_comp.pl         | 14 +++&mdash;&mdash;
 prolog/gv/gv_graph.pl              | 70 +++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 prolog/graph/build_export_graph.pl | 27 ++++&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>CLEAN: Use dcg_ext to simplify grammars in gv_graph, gv_html and gv_graph_comp.
CLEAN: Reuse option_has_var_value/1 from PLC to simplify code.
Cleanups to sync with improved DCG support in PLC.
</code></pre>

<p>```</p>

<p><a href="#142">142. commit 35189854afd8cfb82985a6a1c40742f18ef0c671</a></p>

<p>``` vim</p>

<p> 2 files changed, 46 insertions(+), 22 deletions(&ndash;)
 test/test.pl                             |  2 +&ndash;
 prolog/fca/{fca_export.pl => fca_viz.pl} | 66 ++++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>ADDED: `fca_export/[2,3]' which can be reused by plRdf.
CLEAN: Renamed `fca_export' -&gt; `fca_viz' for consistency with other modules.
</code></pre>

<p>```</p>

<p><a href="#143">143. commit 322ca62bb5509825b5ccb1688ba9303bdeae9ead</a></p>

<p>``` vim</p>

<p> 4 files changed, 57 insertions(+), 35 deletions(&ndash;)
 test/test.pl                             | 20 +++++&mdash;&mdash;&ndash;
 prolog/gv/gv_graph_comp.pl               |  2 +&ndash;
 prolog/graph/build_export_graph.pl       |  5 +&mdash;
 prolog/fca/{fca_export.pl => fca_viz.pl} | 65 +++++++++++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>various
</code></pre>

<p>```</p>

<p><a href="#144">144. commit c4bf9eacf0960339a5dce8ca0d422f3e1ab829d0</a></p>

<p>``` vim</p>

<pre><code>#       test/test.pl
#       prolog/fca/fca_viz.pl
# Conflicts:

Merge branch 'master' of https://github.com/wouterbeek/plGraphViz
</code></pre>

<p>Merge: c4bf9ea 322ca62
```</p>

<p><a href="#145">145. commit 2a6dafd998ef482cf9ea80003822f3b07ab9251e</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 insertions(+), 3 deletions(&ndash;)
 prolog/fca/fca_viz.pl | 7 ++++&mdash;&ndash;</p>

<pre><code>FIXED: Expand meta-options correctly.
</code></pre>

<p>```</p>

<p><a href="#146">146. commit 145615e02046b65d1fbf061dfa77fea462fb3b4f</a></p>

<p>``` vim</p>

<p> 1 file changed, 15 insertions(+), 48 deletions(&ndash;)
 prolog/fca/fca_viz.pl | 63 ++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>CLEAN: Simplified FCA concept label writing.
</code></pre>

<p>```</p>

<p><a href="#147">147. commit f16acca2418fbb9e0d879e9ef5e90bbf48fdb41e</a></p>

<p>``` vim</p>

<p> 2 files changed, 22 insertions(+), 50 deletions(&ndash;)
 prolog/graph/build_export_graph.pl | 62 ++++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 prolog/fca/fca_viz.pl              | 10 ++&mdash;&mdash;</p>

<pre><code>CLEAN: Simplified vertex label API.
</code></pre>

<p>```</p>

<p><a href="#148">148. commit 4e2d9f122f66784ae362c054118cc39ffa9f7f7c</a></p>

<p>``` vim</p>

<p> 1 file changed, 6 insertions(+), 1 deletion(&ndash;)
 prolog/gv/gv_html.pl | 7 ++++++&ndash;</p>

<pre><code>DOC: Added attributes supported for FONT.
</code></pre>

<p>```</p>

<p><a href="#149">149. commit 6359c9ca232b6fbdeac6b75b6ac36576ce7ab6ac</a></p>

<p>``` vim</p>

<p> 4 files changed, 87 insertions(+), 28 deletions(&ndash;)
 prolog/tree/tree_viz.pl | 62 +++++++++++++++++++++++++++++++++++++++++++++++++
 prolog/gv/gv_file.pl    | 25 +++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
 prolog/gv/gv_dom.pl     |  4 ++&mdash;
 prolog/fca/fca_viz.pl   | 24 +++++++++++&mdash;&mdash;&mdash;&mdash;</p>

<pre><code>CLEAN: Renamed some predicates for consistency.
ADDED: Tree visualization module.
ADDED: Options number_of_vertices/1 and process_cputime/1 for fca_viz/3.
</code></pre>

<p>```</p>

<p><a href="#150">150. commit 00537d0e997b0759cbd2494eaedb0a688a7ba270</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 insertions(+), 3 deletions(&ndash;)
 prolog/tree/tree_viz.pl | 7 ++++&mdash;&ndash;</p>

<pre><code>minor
</code></pre>

<p>```</p>

<p><a href="#151">151. commit acadc3940eb3822bbc1ae02a9dfbab2d0f7a8aab</a></p>

<p>``` vim</p>

<p> 2 files changed, 19 insertions(+), 92 deletions(&ndash;)
 prolog/gv/gv_numeral.pl    | 87 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 prolog/gv/gv_graph_comp.pl | 24 ++++++++++&mdash;&ndash;</p>

<pre><code>ENHANCED: Now using the grammar for GraphViz numberals.
</code></pre>

<p>```</p>

<p><a href="#152">152. commit 51359c6bc9865b90c02fce32e1fcbd3e37406982</a></p>

<p>``` vim</p>

<p> 1 file changed, 4 insertions(+), 4 deletions(&ndash;)
 prolog/graph/build_export_graph.pl | 8 ++++&mdash;&mdash;</p>

<pre><code>CLEAN: lambda -&gt; yall.
</code></pre>

<p>```</p>

<p><a href="#153">153. commit 73047b3b8e12f4a922a3ac73fa515b983b9fc8ee</a></p>

<p>``` vim</p>

<p> 1 file changed, 11 insertions(+), 9 deletions(&ndash;)
 prolog/tree/tree_viz.pl | 20 +++++++++++&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>ENHANCED: Support both labeled and unlabeled trees in tree-2-graphviz conversion.
</code></pre>

<p>```</p>

<p><a href="#154">154. commit e4c4586bf31c358724bc00e6c0805682df0ab249</a></p>

<p>``` vim</p>

<p> 3 files changed, 10 insertions(+), 8 deletions(&ndash;)
 test/test.pl              | 4 +++&ndash;
 prolog/gv/gv_color.pl     | 8 ++++&mdash;&mdash;
 prolog/gv/gv_attr_type.pl | 6 +++&mdash;&ndash;</p>

<pre><code>FIXED: Sync to updated to DCGs in PLC.
</code></pre>

<p>```</p>

<p><a href="#155">155. commit 7b991bb4cc9e47c2651023295ef20cdc268f8c6a</a></p>

<p>``` vim</p>

<p> 9 files changed, 4 insertions(+), 11 deletions(&ndash;)
 prolog/gv/gv_html.pl               | 1 &ndash;
 prolog/gv/gv_graph_comp.pl         | 1 &ndash;
 prolog/gv/gv_graph.pl              | 1 &ndash;
 prolog/gv/gv_color.pl              | 1 &ndash;
 prolog/gv/gv_attrs.pl              | 2 +&ndash;
 prolog/gv/gv_attr_type.pl          | 1 &ndash;
 prolog/graph/build_export_graph.pl | 3 +&mdash;
 prolog/fca/fca_viz.pl              | 2 +&ndash;
 data/gv_attrs_scrape.pl            | 3 +&mdash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#156">156. commit fa1518fbfb15aec820ab5d54b452ec4fce811899</a></p>

<p>``` vim</p>

<p> 2 files changed, 9 insertions(+), 4 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl         | 4 +++&ndash;
 prolog/graph/build_export_graph.pl | 9 ++++++&mdash;&ndash;</p>

<pre><code>FIXED: gv_id should write numbers.
FIXED: Yall does not work.
</code></pre>

<p>```</p>

<p><a href="#157">157. commit 8593ed6499a6b6a58ebf0cce4602aea05ca639de</a></p>

<p>``` vim</p>

<p> 1 file changed, 7 insertions(+), 4 deletions(&ndash;)
 prolog/gv/gv_attrs.pl | 11 +++++++&mdash;&mdash;</p>

<pre><code>DEBUG: Exception when unknown GV attr encountered.
</code></pre>

<p>```</p>

<p><a href="#158">158. commit cc53b1ea7fbf553c17b191ce6b1af3fac33133da</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 insertion(+), 1 deletion(&ndash;)
 prolog/tree/tree_viz.pl | 2 +&ndash;</p>

<pre><code>FIXED: Typo in predicate name.
</code></pre>

<p>```</p>

<p><a href="#159">159. commit 202a241a884c68a46b1dd77e95929bfa31e9e9f8</a></p>

<p>``` vim</p>

<p> 2 files changed, 2 insertions(+), 2 deletions(&ndash;)
 data/gv_color_scrape.pl | 2 +&ndash;
 data/gv_attrs_scrape.pl | 2 +&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#160">160. commit 858b5fb43ded8c4df92935df002bf15586dd9569</a></p>

<p>``` vim</p>

<p> 2 files changed, 5 insertions(+), 6 deletions(&ndash;)
 prolog/gv/gv_graph_comp.pl | 2 +&ndash;
 prolog/gv/gv_attrs.pl      | 9 ++++&mdash;&mdash;&ndash;</p>

<pre><code>Sync to PLC.
</code></pre>

<p>```</p>

<p><a href="#161">161. commit 260b62d34b352c2ccae4c085321497aa30f670ba</a></p>

<p>``` vim</p>

<p> 1 file changed, 3 insertions(+), 9 deletions(&ndash;)
 prolog/gv/gv_dom.pl | 12 +++&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>minor cleanup
</code></pre>

<p>```</p>

<p><a href="#162">162. commit a6886ca8272a99b4d14f866b54fe16993b714011</a></p>

<p>``` vim</p>

<p> 1 file changed, 2 insertions(+), 2 deletions(&ndash;)
 pack.pl | 4 ++&mdash;</p>

<pre><code>pack
</code></pre>

<p>```</p>

<p><a href="#163">163. commit 41914a2d39ceca347ebcc4785cf5615c9c7f8376</a></p>

<p>``` vim</p>

<p> 3 files changed, 4 insertions(+), 4 deletions(&ndash;)
 prolog/gv/gv_color.pl   | 4 ++&mdash;
 data/gv_color_scrape.pl | 2 +&ndash;
 data/gv_attrs_scrape.pl | 2 +&ndash;</p>

<pre><code>sync
</code></pre>

<p>```</p>

<p><a href="#164">164. commit 05a5fd2488c4e28c0eae9db4d9c9df4f550f4c3d</a></p>

<p>``` vim</p>

<p> 1 file changed, 1 deletion(&ndash;)
 prolog/fca/fca_viz.pl | 1 &ndash;</p>

<pre><code>cleanup
</code></pre>

<p>```</p>

<p><a href="#165">165. commit fd6c59b31ebd0ac9927495460dcd4c762ac5681d</a></p>

<p>``` vim</p>

<p> 2 files changed, 19 insertions(+), 27 deletions(&ndash;)
 data/gv_color_scrape.pl | 20 ++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;
 data/gv_attrs_scrape.pl | 26 +++++++++++&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<pre><code>CLEAN: Use module io for simplified stream calling @gv_attrs_scrape,gv_color_scrape
</code></pre>

<p>```</p>

<p><a href="#166">166. commit 121e68f9ab3b47128c9fb365aed6891f9e91a568</a></p>

<h2 id="code"> The shell code for generate navigation for source Tree </h2>


<p>``` sh</p>

<h1>git log &mdash;help  特别有用</h1>

<h1>bash /e/gethead.sh > graph.log</h1>

<h2>first part</h2>

<p>echo &ldquo;+ <a href="#compare">1. 源码比较目录</a>&rdquo;
echo &ldquo;+ <a href="#detail">2. 文件细节</a>&rdquo;
echo &ldquo;+ <a href="#time">3. 时间变化表</a>&rdquo;
echo &ldquo;+ <a href="#short">4. 列出简要信息</a>&rdquo;</p>

<h2>second part</h2>

<p>echo &ldquo;&rdquo;
echo &ldquo;<h2 id=\"compare\">1. 比较目录</h2>&rdquo;
echo &ldquo;&rdquo;
sign=0
count=1
for i in <code>git log --decorate --oneline|awk '{print $1}'|tac</code>;
do if (( sign&lt;1 ))
then</p>

<pre><code>sign=2; 
    before=$i; 
</code></pre>

<p>else</p>

<pre><code>#content[$count]="\[$count: 正在比较变动前 $before 和变动后 $i\]\[$count\]"
echo "+ [$count: 正在比较变动前 $before 和变动后 $i](#$count)"
#content[$count]='[$count: 正在比较变动前 $before 和变动后 $i][$count]'
count=$(($count+1))
before=$i; 
</code></pre>

<p>fi
done;</p>

<h2>third part</h2>

<p>echo &ldquo;&rdquo;
echo &ldquo;<h2 id=\"detail\">2. 文件细节</h2>&rdquo;
echo &ldquo;&rdquo;
sign=0
count=1
for i in <code>git log --decorate --oneline|awk '{print $1}'|tac</code>;
do if (( sign&lt;1 ))
then</p>

<pre><code>sign=2; 
    before=$i; 
</code></pre>

<p>else</p>

<pre><code>echo \&lt;h2 id=\"$count\"\&gt; $count: "正在比较变动前" $before "和变动后" $i \&lt;\/h2\&gt;
echo "[back to content](#compare)"

#content[$count]="\[$count: 正在比较变动前 $before 和变动后 $i\]\[$count\]"
#echo "[$count: 正在比较变动前 $before 和变动后 $i][$count]"
#content[$count]='[$count: 正在比较变动前 $before 和变动后 $i][$count]'
echo " "
echo "\`\`\` diff"
echo " "
git diff $before $i
echo " "
echo "\`\`\`"
echo " "
count=$(($count+1))
before=$i; 
</code></pre>

<p>fi
done;</p>

<p>echo &ldquo;总共进行了&rdquo; $count &ldquo;次比较&rdquo;</p>

<h2>fourth part</h2>

<h1>echo &ldquo;时间变化表:&rdquo;</h1>

<p>echo &ldquo;&rdquo;
echo &ldquo;<h2 id=\"time\">3. 时间变化表</h2>&rdquo;</p>

<p>echo &ldquo;&rdquo;</p>

<h1>git log &mdash;pretty=format:&ldquo;%h      %cd       %cr&rdquo;|awk &lsquo;{print &ldquo;<a href="#" title="NR">&ldquo;NR&rdquo;. &ldquo;$0&rdquo;</a>\n&rdquo;}&rsquo;|tac</h1>

<p>git log &mdash;pretty=format:&ldquo;%h      %cd       %cr&rdquo;|tac|awk &lsquo;{print &ldquo;<a href="#" title="NR">&ldquo;NR&rdquo;. &ldquo;$0&rdquo;</a>\n&rdquo;}&rsquo;</p>

<h2>fifth part</h2>

<p>echo &ldquo;&rdquo;
echo &ldquo;<h2 id=\"short\">4. 列出简要信息</h2>&rdquo;
echo &ldquo;&rdquo;</p>

<p>echo &ldquo;``` vim&rdquo;
echo &ldquo; &rdquo;</p>

<p>git log &mdash;stat|tac|awk -v count=1 &lsquo;{if(/^commit/){gsub(/$/,&ldquo;](#"count&rdquo;)&ldquo;);count=count+1}; print $0} &rsquo; |sed &lsquo;/^Date/d&rsquo;|sed &lsquo;/^Author/d&rsquo;|sed /^commit/&lsquo;i<code>\n'|sed /^commit/'a \\n</code> vim&rsquo; |awk -v count=1 &lsquo;{if(/^commit/){gsub(/commit/,&rdquo;[&ldquo;count&rdquo;. commit");count=count+1};print $0;}&rsquo;</p>

<h2>one bug ,you need to delete the last sentence generate by the code</h2>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[打印的书籍(prolog+scheme+空气动力学方面)]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/07/19/da-yin-de-shu-ji-prolog-plus-scheme-plus-kong-qi-dong-li-xue-fang-mian/"/>
    <updated>2016-07-19T20:52:17+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/07/19/da-yin-de-shu-ji-prolog-plus-scheme-plus-kong-qi-dong-li-xue-fang-mian</id>
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Edsger_W._Dijkstra">Edsgar Dijkstar</a>写过不少程序语言和逻辑编程的好书，比如<a href="https://www.amazon.cn/A-Discipline-of-Programming-Dijkstra-E/dp/013215871X?ie=UTF8&amp;*Version*=1&amp;*entries*=0">A Discipline of programming</a>.</p>

<p>尾随之后的是David Gries写的<a href="http://item.jd.com/1104449344.html">the science of programing. TSOP</a>.</p>

<p><img src="/images/books/logic.jpg" alt="logic" /></p>

<!--more-->


<p>在空气动力学领域，生于1937年的<a href="https://en.wikipedia.org/wiki/John_D._Anderson">John D. Anderson</a>是一位航空领域多产的作家，其中<a href="http://product.dangdang.com/23454699.html">空气动力学基础</a>更是经典的经典。
西门子之前根据Michel Geradim的<a href="http://as.wiley.com/WileyCDA/WileyTitle/productCd-0471489905.html">Flexible Multibody Dynamics: a finite element approach</a>编写有限元多体分析软件系统（具体名字忘记）,与之类似的是绿皮书 Ahmed A. Shabana编写的<a href="https://www.amazon.com/Dynamics-Multibody-Systems-Ahmed-Shabana/dp/1107042658?ie=UTF8&amp;*Version*=1&amp;*entries*=0">Dynamics of Multibody Systems</a>也是多体动力学领域不错的好书。
J.Blazek写了一本计算流体动力学的好书Computational Fluid Dynamics:Principles and Applications]<a href="http://www.sciencedirect.com/science/book/9780080445069">19</a>.当然Pijush K. Kundu写的<a href="https://www.amazon.com/dp/012405935X/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687602&amp;pf_rd_s=lpo-top-stripe-1&amp;pf_rd_t=201&amp;pf_rd_i=0123821002&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_r=CX15VAHTQNHS6GGN3W1M">Fluid Mechanic</a>也是经典之著
<img src="/images/books/pro1.jpg" alt="pro1" /> ,<img src="/images/books/pro2.jpg" alt="pro2" />, <img src="/images/books/pro3.jpg" alt="pro3" /></p>

<hr />

<p>之前，提及了程序语言，在这个领域不得不说是Dan Friedman.这位老顽童曾经写过很多本大象书籍，比如 <a href="http://www.ccs.neu.edu/home/matthias/BTLS/">the little scheme,TLS</a> , <a href="http://www.ccs.neu.edu/home/matthias/BTSS/">the season scheme,TSS</a>, <a href="http://www.ccs.neu.edu/home/matthias/BRS/">the reason scheme,TRS</a>,写完TRS之后最经常说的是"Can it run backward？",
<a href="http://www.ccs.neu.edu/home/matthias/BALJ/">a little java,ALJ</a>, <a href="http://www.ccs.neu.edu/home/matthias/BTML/">the little mler,TLM</a>, <a href="http://www.eopl3.com/">Essential of programing language,EOPL</a>,以及进一步
像逻辑学领域进军的<a href="http://the-little-prover.github.io/">the little prover</a>,立志要建一个类似于<a href="https://coq.inria.fr/">coq</a>的证明式语言系统(法国人写的软件一般是动物，比如<a href="https://ocaml.org/">ocaml</a>，coq),刚刚建了一个很bang的<a href="https://github.com/the-little-prover/j-bob">J-Bob</a>。</p>

<p><img src="/images/books/dan-friedman.jpg" alt="Dan" /></p>

<hr />

<p>关于函数式编程，还有一类是比较纯函数式编程比如Haskell，ML等。Haskell有很多不错的书籍比如Bryan O'Sullivan写的 <a href="http://book.realworldhaskell.org/">Real World Haskell</a>以及来自斯洛文尼亚的 Miran LipoVaca写的<a href="http://learnyouahaskell.com/">Learn You a Haskell for Great Good</a>(中文版为<a href="http://fleurer-lee.com/lyah/introduction.htm#%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E6%95%99%E7%A8%8B">Haskell趣味指南</a>) ,而Ml语言比如Ocaml也又不错的比如<a href="https://realworldocaml.org/">Real World Ocaml</a>, 特别是纯函数语言可以加深你对语言设计方面的理解。</p>

<p><img src="/images/books/haskell.jpg" alt="Haskell" /></p>

<hr />

<p>万物都有其道，有其逻辑。当逻辑被质疑，不能成立，则得推翻，进而重构，关于logic programming，首先得认识的是Prolog。并以三个比较好的入门阶段式书籍</p>

<ol>
<li><a href="http://vuh-la-risprt.herts.ac.uk/portal/en/persons/william-clocksin%2803529872-f654-4e70-a76c-3cc790d188ce%29.html">William F. ClockSin</a>的 <a href="http://www.springer.com/cn/book/9783540006787">Programming in prolog</a>,从1984年开始到2003年.</li>
<li>William F. Clocksin的 <a href="http://www.springer.com/cn/book/9783540629719">clauses and Effect</a></li>
<li><ol type="a">
<li>Deransart 的<a href="http://www.springer.com/cn/book/9783540593041">Prolog: the standard</a></li>
</ol>
</li>
</ol>


<p>另外还有一些比较经典的书籍是 <a href="http://learnprolognow.org/">learn Prolog Now!</a>,<a href="http://www.springer.com/cn/book/9781447154860?token=prtst0416p">Logic Programming with Prolog</a>,<a href="https://mitpress.mit.edu/books/art-prolog">the-art-of-prolog</a> 这本书入门也不错,<a href="http://link.springer.com/book/10.1007/978-1-4471-0401-8">prolog versue you</a>.
以及面向人工智能和图像处理的方面的prolog书籍, 比如<a href="http://www.abebooks.com/PROLOG-Programming-Artificial-Intelligence-4th-Revised/5962501764/bd">PROLOG Programming for Artificial Intelligence (4th Revised edition) </a>,<a href="http://link.springer.com/book/10.1007/3-540-34336-9">An Introduction to Language Processing with Perl and Prolog </a>,<a href="http://link.springer.com/book/10.1007/978-3-642-41464-0">Language Processing with Perl and Prolog </a>,<a href="http://link.springer.com/book/10.1007/978-1-4471-0401-8">Intelligent Image Processing in Prolog</a></p>

<p><img src="/images/books/prolog.jpg" alt="prolog" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prolog小游戏]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/07/19/prologxiao-you-xi/"/>
    <updated>2016-07-19T19:35:37+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/07/19/prologxiao-you-xi</id>
    <content type="html"><![CDATA[<p><img src="/images/prolog/games.png" alt="games" /></p>

<!--more-->


<p>prolog 作为一门logic programming language,逻辑推理是它的强项。游戏也是一个逻辑推理的过程，prolog照样可以，通过该游戏的写作可以让你熟悉</p>

<ol>
<li>事实和规则。</li>
<li>built-in predicates.</li>
<li>IO</li>
<li>cut-fail操作</li>
</ol>


<p>游戏源代码如下，进一步参考<a href="http://tieba.baidu.com/p/128101598">prolog教程</a>.</p>

<p>``` prolog
:-dynamic here/1.</p>

<p>room(kitchen).
room(office).
room(hall).
room(&lsquo;dining room&rsquo;).
room(cellar).
door(office, hall).
door(kitchen, office).
door(hall, &lsquo;dining room&rsquo;).
door(kitchen, cellar).
door(&lsquo;dining room&rsquo;, kitchen).</p>

<p>location(desk, office).
location(apple, kitchen).
location(flashlight, desk).
location(&lsquo;washing machine&rsquo;, cellar).
location(nani, &lsquo;washing machine&rsquo;).
location(broccoli, kitchen).
location(crackers, kitchen).
location(knife, kitchen).
location(computer, office).</p>

<p>location(envelope, desk).
location(stamp, envelope).
location(key, envelope). /<em> more interesting thing</em>/</p>

<p>edible(apple).
edible(crackers).
tastes_yucky(broccoli).</p>

<p>/<em> You are here now in the  game.</em>/
here(kitchen).
where_food(X,Y) :&ndash; location(X,Y),edible(X).
where_food(X,Y) :&ndash; location(X,Y),tastes_yucky(X).</p>

<p>connect(X,Y):-door(X,Y).
connect(X,Y):-door(Y,X).</p>

<p>/<em>list all things in the correspondign room</em>/
list_things(Place) :&ndash; location(X,Place),tab(2),write(X),nl,fail.</p>

<p>list_things(<em>).  /* always correct  AnyPlace&rsquo;s value we don&rsquo;t care, 只能用</em> underscore)*/</p>

<p>list_things_to_eat(Place) :&ndash; where_food(X,Place),tab(2),write(X),nl,fail.
list_things_to_eat(_) .</p>

<p>list_connections(Place) :&ndash; connect(X,Place),tab(2),write(X),nl,fail.
list_connections(_).</p>

<p>look:&ndash; here(Place), write(&lsquo;You are in the &rsquo;),write(Place),write(&lsquo; now!&rsquo;),nl,write(&lsquo;You can see:&rsquo;),nl,
list_things(Place),write(&lsquo;what the things you can eat  are below:&rsquo;),nl,list_things_to_eat(Place),
write(&lsquo;You can also go to &rsquo;),nl,list_connections(Place).</p>

<p>c_to_f(C,F):&ndash; F is C*9/5+32.
freezeing(F):-F=&lt;32.</p>

<p>goto(Place) :&ndash; can_go(Place),move(Place),look.
can_go(Place) :&ndash; here(X),connect(X,Place).
can_go(_) :&ndash; write(&lsquo;You can&rsquo;&rsquo;t get there from here.&lsquo;),nl,fail.
move(Place):&ndash; retract(here(Y)),asserta(here(Place)).</p>

<p>take(X):&ndash; can_take(X),take_object(X).</p>

<p>can_take(Thing) :-here(Place),location(Thing,Place).
can_take(Thing) :&ndash; write(&lsquo;There is no &rsquo;),write(Thing),write(&lsquo; Here&rsquo;),nl,fail.</p>

<p>take_object(X):&ndash; retract(location(X,_)),asserta(hava(X)),write(&lsquo;taken&rsquo;),nl.</p>

<p>backtracking_assert(X):&ndash; asserta(X).
backtracking_assert(X):&ndash; retract(X),fail.</p>

<p>is_contained_in(T1,T2) :&ndash; location(T1,T2).
is_contained_in(T1,T2) :&ndash; location(X,T2),is_contained_in(T1,X).</p>

<p>object(candle,red   ,small,1).
object(apple ,red   ,small,1).
object(apple ,green ,small,1).
object(apple ,blue  ,big,50).
object(desk,brwon,dimension(6,3,3),90).
object(desk,color(brwon),size(dimension(6,3,3)),weight(90)).
object(desk,color(brwon),size(large),weight(90)).</p>

<p>location_s(object(candle,red    ,small,1),kitchen).
location_s(object(apple ,bluired ,small,1),kitchen).
location_s(object(apple ,green   ,small,1),kitchen).
location_s(object(apple ,blue  ,big,50),kitchen).</p>

<p>can_take_s(Thing) :&ndash; here(Room),location_s(object(Thing,<em>,small,</em>),Room).
can_take_s(Thing) :&ndash; here(Room),location_s(object(Thing,<em>,big,</em>),Room),write(&lsquo;The &rsquo;),write(Thing),</p>

<pre><code>            write(' is too big to carry!'),nl,fail.
</code></pre>

<p>can_take_s(Thing) :&ndash; here(Room),not(location_s(object(Thing,<em>,</em>,_),Room)),write(&lsquo;There is no &rsquo;),</p>

<pre><code>            write(Thing),write('Here.'),nl,fail.
</code></pre>

<p>list_things_s(Place) :&ndash; location_s(object(Thing,Color,Size,Weight),Place),</p>

<pre><code>write('A '),write(Size),tab(1),write(Color),tab(1),write(Thing),write(',weighing '),
write_weight(Weight),nl,fail.
</code></pre>

<p>list_things_s(_).</p>

<p>write_weight(1):-write(&lsquo;1 pound&rsquo;).
write_weight(W):-W>1,write(W),write(&lsquo; pounds&rsquo;).</p>

<p>loc_list([apple,broccoil,crackers],kitchen).
loc_list([desk,computer],office).
loc_list([flashlight,envelope],desk).
loc_list([stamp,key],envelope).
loc_list([&lsquo;Washing machine&rsquo;],cellar).
loc_list([nani],&lsquo;Washing machine&rsquo;).
loc_list([],hall). /<em> empty list</em>/</p>

<p>/<em>length1([zha,df,gs],H).</em>/
length1([],0).
length1([H|T],N) :&ndash; length1(T,M),N is M+1.</p>

<p>member(X,[X|List]).
member(X,[Element|List]) :&ndash; member(X,List).</p>

<p>prefix([],List).
prefix([X|Prefix],[X|List]):&ndash; prefix(Prefix,List).</p>

<p>suffix(Suffix,Suffix).
prefix(Suffix,[X|List]) :&ndash; suffix(Suffix,List).</p>

<p>vowel(X) :&ndash; member(X,[a,e,i,o,u]).
digit(D) :&ndash; member(D,[&lsquo;0&rsquo;,&lsquo;1&rsquo;,&lsquo;2&rsquo;,&lsquo;3&rsquo;,&lsquo;4&rsquo;,&lsquo;5&rsquo;,&lsquo;6&rsquo;,&lsquo;7&rsquo;,&lsquo;8&rsquo;,&lsquo;9&rsquo;]).</p>

<p>/<em>reverse([ ],[ ]).
reverse([X|L],Rev) :&ndash; reverse(L,RL), append(RL,[X],Rev).</em>/</p>

<p>/<em>reverse([a,b,v],Rl).</em>/
reverse([ ],[ ]).
reverse(L,RL) :&ndash; reverse(L,[ ],RL).</p>

<p>reverse([ ],RL,RL).
reverse([X|L],PRL,RL) :&ndash; reverse(L,[X|PRL],RL).</p>

<p>/<em> isort([6,3,6,2,4,64,234],Sl) </em>/</p>

<p>isort([ ],[ ]).
isort([X|UnSorted],AllSorted) :&ndash; isort(UnSorted,Sorted),</p>

<pre><code>                             insert(X,Sorted,AllSorted).
</code></pre>

<p>insert(X,[ ],[X]).
insert(X,[Y|L],[X,Y|L]) :&ndash; X =&lt; Y.
insert(X,[Y|L],[Y|IL]) :&ndash;  X > Y, insert(X,L,IL).</p>

<p>facTail(0,1).
facTail(N,F) :&ndash; N > 0, facTail(N,1,F).</p>

<p>facTail(1,F,F).
facTail(N,PP,F) :&ndash; N > 1, NPp is N*PP, M is N-1,</p>

<pre><code>   facTail(M,NPp,F). 
</code></pre>

<p>fibTail(0,1).
fibTail(1,1).
fibTail(N,F) :&ndash; N > 1, fibTail(N,1,1,F).</p>

<p>fibTail(2,F1,F2,F) :&ndash; F is F1 + F2.
fibTail(N,F1,F2,F) :&ndash; N > 2, N1 is N &ndash; 1, NF1 is F1 + F2,</p>

<pre><code>fibTail(N1,NF1,F1,F).
</code></pre>

<p>/*
primes(PL) :&ndash; natlist(2,L2), sieve(L2,PL).</p>

<p>sieve([ ],[ ]).
sieve([P|L],[P|IDL]) :&ndash; sieveP(P,L,PL), sieve(PL,IDL).</p>

<p>sieveP(P,[ ],[ ]).
sieveP(P,[N|L],[N|IDL]) :&ndash; N mod P  >  0, sieveP(P,L,IDL).
sieveP(P,[N|L],   IDL)  :&ndash; N mod P =:= 0, sieveP(P,L,IDL).
<em>/
/</em>
merge( List1, List2, List3 ) :&ndash;
 ( List1 = [], !, List3 = List2 );
 ( List2 = [], !, List3 = List1 );
 ( List1 = [X|L1], List2 = [Y|L2 ),
((X &lt; Y, ! Z = X, merge( L1, List2, L3 ) );
( Z = Y, merge( List1, L2, L3 ) )),
  List3 = [Z|L3].
*/</p>

<p>merge([],List2,List2).
merge(List1,[],List1).</p>

<p>merge([X|List1],[Y|List2],[Z|List3]) :&ndash; X&lt;Y,!,merge(List1,List2,List3).
merge(List1,[Y|List2],[Y|List3]) :&ndash; merge(List1,List,List3).
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prolog小结]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/07/19/prologxiao-jie/"/>
    <updated>2016-07-19T18:41:13+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/07/19/prologxiao-jie</id>
    <content type="html"><![CDATA[<p>prolog编程工具: swi-prolog</p>

<ol>
<li><a href="#1"> 1. cut-fail</a></li>
<li><a href="#2"> 2. prolog 相关链接</a></li>
<li><a href="#3"> 3. prolog 调试</a></li>
<li><a href="#4"> 4. 可以尝试进行的主题阅读方式</a></li>
<li><a href="#5"> 5. prolog基础知识点</a></li>
<li><a href="#6"> 6. if-then-else的写法</a></li>
<li><a href="#7"> 7. DCS写法</a></li>
<li><a href="#8"> 8. p99问题集</a></li>
<li><a href="#9"> 9. 几本不错的逻辑书籍</a></li>
<li><a href="#10">10. 我购买的几本书籍</a></li>
</ol>


<!--more-->




<h2 id="1">1. cut-fail</h2>


<p>结合The Science Of programming 和 Learn prolog now,觉得cut-fail的直觉应该如下：</p>

<p>把proof development的过程和prolog的过程 结合起来！ 也就是cut-fail其实就是只进行内层的循环，而不跳出来，即内层执行完则结束。
参考TSOP P52 some general hints on developping proofs.</p>

<p><img src="/images/prolog/someGeneral.png" alt="TSOP" /></p>

<p> <h2 id="1">2. prolog 相关链接</h2></p>

<ol type="a">
<li><a href="http://www.swi-prolog.org/pldoc/index.html">swi-prolog</a> . 注意SWI-Prolog比较强大的地方是开源，而且提供较多的libraries,提供较多的predicates.</li>
<li><a href="https://sicstus.sics.se/sicstus/docs/latest/html/sicstus.html/">scisTus</a> .   文档介绍得不错，不好的地方就是not free. 所以可以当作学习的地方。</li>
<li><a href="http://www.learnprolognow.org/lpnpage.php?pageid=online">Learn Prolog Now!</a>. 一个很好的入门教程 可以结合Leo Sterling的<a href="https://github.com/konn/TAOP-Exercises">The art of prolog</a>,和William F. ClockSin的Programming in Prolog(2003) 可以进一步查查<a href="https://github.com/search?utf8=%E2%9C%93&amp;q=Programming+in+Prolog">github方向相关资料</a></li>
<li><a href="http://www.inf.ed.ac.uk/teaching/courses/aipp/#Lectures_">Artificial Intelligence Programming in Prolog (AIPP)</a>, EdinBurgh(prolog研究基地）的课程,内有很多pdf和ppt。</li>
<li><a href="https://github.com/samer--/prolog">samer_prolog</a> 提供了很多的库，值得学习。</li>
<li><a href="http://www2.hawaii.edu/~nreed/">learn prolog now课程</a>.  附带一个<a href="http://www.cnblogs.com/seaman-h-zhang/p/4615097.html">中文翻译</a>.</li>
<li><a href="http://www.cse.unsw.edu.au/~billw/cs9414/notes/prolog/intro.html">cs9414</a>. INTRODUCTION TO PROLOG PROGRAMMING. 刚开始入门的就是它。</li>
<li><a href="http://www.cpp.edu/~jrfisher/www/prolog_tutorial/contents.html"> J.R.Fisher 教程</a></li>
<li>个人小介绍<img src="/images/prolog/introduction.png" alt="introduction" /></li>
</ol>


<p> <h2 id="1">3. prolog 调试</h2></p>

<ol type="a">
<li>trace  进行详细的跟踪，会call exit（正常退出） ，如果失败则fail，fail则会执行redo，直到exit或者fail退出。</li>
<li>notrace 使用notrace退出详细的跟踪。 类似的debug,nodebug.</li>
</ol>


<p>初始界面
<img src="/images/prolog/swi-prolog-debug.png" alt="initial" /></p>

<p>添加predicate的trace
<img src="/images/prolog/debug.png" alt="trace" /></p>

<p> <h2 id="1">4. 可以尝试进行的主题阅读方式</h2></p>

<p>``` sh</p>

<p>主题：Lists      Short Description: 一个经典的数据结构，其中的append/3将会用于differentiate lists中，进一步的运用于DCS(define clause statement)</p>

<p>The art of prolog(1986) Sterling and shapiro :  TAOP  <br/>
Learn Prolog Now Patrick Blackburn, Johan Bosand Kristina Striegnitz :  LPN 分两步讲解：1.Lists 2.More Lists(append reverse)
The Craft of Prolog Richard A.O Keefe  :    TCOP  <br/>
Adventure in Prolog(1990) Dennis Merriitt   AIP
An Introduction to prolog programming (1990) Patrick Saint-Dizier   AITPP <br/>
Prolog Verses you(1989) An Intouduction to logic Programming   A. -L. Johansson  A.Ericson-Granskog A.Edman PVY
Programming in prolog(2003) using ISO   Wiliam F. Clocksin ,Chrisopher S. Mellish   PIP
Cases and effects  William F.clockSin(1997) CAE
Prolog the standard  P. DeranSart ,A.Eddbail, L. Cervoni    PTS
Prolog and Natural-Language Analysis  Fernando C. N. Pereira and Stuart M. Shieber(1987)    PANLA</p>

<p>```</p>

<p> <h2 id="5">5. prolog基础知识点</h2></p>

<ol type="a">
<li>cd(&lsquo;路径&rsquo;).
路径是你的文件系统路径。</li>
<li>pwd.      <br/>
可以显示当前所在的路径。</li>
<li>[main]    <br/>
其实相当于会去查询当前目录下的main.pl并把它加载进来(类似于consult(&lsquo;路径/main.pl&rsquo;).)，可以调用main里头的所有的predicates。
当然在文件内也可以写为：
<code>prolog
:- [main].
</code></li>
<li>file_search_path(demo,&lsquo;路径&rsquo;)
demo可以是任何的字符串，路径写对了，以后想要访问路径下的文件只需要</li>
</ol>


<p><code>prolog
:- [demo(文件名)].
</code></p>

<h2 id="6">6. if-then-else的写法：</h2>


<p>  (A &ndash;> B; C).   如果A成立则执行B，忽略C，如果A不成立，则执行C，忽略B.</p>

<p> <h2 id="7">7. DCS写法</h2></p>

<p>``` prolog</p>

<p>s &mdash;> simple_s,conj,simple_s.
s &mdash;> simple_s.
simple_s &mdash;> np(subject), vp.
np(_) &mdash;> det, n;det,adjectives,n.
np(X) &mdash;> pro(X).
vp &mdash;> v, np(object).
vp &mdash;> v.
det &mdash;> [the].
det &mdash;> [a].
n &mdash;> [woman].
n &mdash;> [man].
v &mdash;> [shoots].
adjectives &mdash;> adjective.
adjectives &mdash;> adjective,adjective.
adjective &mdash;> [young].
adjective &mdash;> [beautiful].
adjective &mdash;> [sunshine].
adjective &mdash;> [lovely].
adjective &mdash;> [sweet].
adjective &mdash;> [handsome].
pro(subject) &mdash;> [he].
pro(subject) &mdash;> [she].
pro(subject) &mdash;> [i].
pro(object) &mdash;> [him].
pro(object) &mdash;> [her].
pro(object) &mdash;> [me].</p>

<p>conj &mdash;> [and].
conj &mdash;> [or].
conj &mdash;> [but].
conj &mdash;> [so].</p>

<p>```</p>

<p> <h2 id="8">8. <a href="www.ic.unicamp.br/~meidanis/courses/mc336/2009s2/prolog/problemas/">p99问题集</a>.</h2></p>

<p> 编程界面<img src="/images/prolog/view.png" alt="view" />和编程想法:多文件多库编程，最好还是类似搭积木的过程。</p>

<p> <h2 id="9">9. 几本不错的逻辑书籍</h2></p>

<ol>
<li><p>A Discipline of Programming (Edsgar Dijkstar写的书，较难懂）</p></li>
<li><p>The-Science-Of-Programming（Edsgar Dijkstar 替作者Gries写了书评较基础  是1的简化并加入了很多例子）</p></li>
<li><p>Heijenoort.From Frege to Godel.A Source Book in Mathematical Logic_ 1879-1931. 类似于上面的数学逻辑。</p></li>
</ol>


<h2 id="10">10. 我购买的几本书籍</h2>


<p><a href="http://jueqingsizhe66.github.io/blog/2016/07/19/da-yin-de-shu-ji-prolog-plus-scheme-plus-kong-qi-dong-li-xue-fang-mian/">书籍</a></p>
]]></content>
  </entry>
  
</feed>

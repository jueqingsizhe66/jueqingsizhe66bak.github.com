<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HTML | 网络书屋(Web Reading Room)]]></title>
  <link href="http://jueqingsizhe66.github.io/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://jueqingsizhe66.github.io/"/>
  <updated>2017-05-18T22:56:41+08:00</updated>
  <id>http://jueqingsizhe66.github.io/</id>
  <author>
    <name><![CDATA[Ye Zhaoliang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTML1-17节笔记代码March22nd]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2015/05/11/html1-17jie-bi-ji-dai-ma-march22nd/"/>
    <updated>2015-05-11T14:58:42+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2015/05/11/html1-17jie-bi-ji-dai-ma-march22nd</id>
    <content type="html"><![CDATA[<!--more-->


<p>1：HTML学习大纲：</p>

<!--Html 标签是一个最大的标签，包含底下的所有标签-->


<pre><code> &lt;!--Head标签 主要包含  &lt;Titlt   Meta  Style标签  用来充当网页的修饰部分--&gt;

       &lt;!--网页标题Title: 指定浏览器标题栏显示的内容 --&gt;

     &lt;!--Base  针对连接的全局设置--&gt;
     &lt;!--网页属性Meta的设置 ： 可提供有关页面的原信息--&gt;

     &lt;!--Link提供连接文件的css和js文件的导入--&gt;
     &lt;!--定义样式--&gt;
</code></pre>

<p>   <!--Body标签，作为网页内容的主体部分--></p>

<pre><code>    &lt;!--Div 盒子标签 用来存标签--&gt;
          &lt;!--H1标签 样式标题1--&gt;
          &lt;!--Form  :action 指定的服务器地址处理表单--&gt;
                &lt;!--1：段落标签  P--&gt;
                     &lt;!--Span标签 一个小控件  不断行  P标签会断行--&gt;
                     &lt;!--Input标签，包含多种表单控件，比如radio  checkbox    password  text 等10种--&gt;
         &lt;!--Ul无序列表Unorder list--&gt;
               &lt;!--Li 列表行--&gt;
         &lt;!--Ol有序列表 OrderList--&gt; 
               &lt;!--Li 列表行--&gt;
         &lt;!--Dl定义列表--&gt;
               &lt;!--Dt列表行--&gt;

        &lt;!--3： 图像标签Img alt值不能超过1024个字符--&gt;
        &lt;!--4：表格标签Table--&gt;
                       &lt;!--Caption 表格标题--&gt;
                       &lt;!--Thead表头--&gt;
                                &lt;!--Th--&gt;
                       &lt;!--TBody 表内容--&gt;
                                &lt;!--Tr行数据--&gt;
                                           &lt;!--Td列标签--&gt;
                       &lt;!--TFoot表尾--&gt;
        &lt;!--5:超链接A实验--&gt;
      &lt;!--6:IFrame框架的测试--&gt;
      &lt;!-- 7: Form表单的测试--&gt;
</code></pre>

<p>实验阶段：
&lt;!DOCTYPE html  ></p>

<!--Html 标签是一个最大的标签，包含底下的所有标签-->


<p><Html>
  <!--Head标签 主要包含  <Titlt   Meta  Style标签  用来充当网页的修饰部分-->
  <Head></p>

<pre><code>&lt;!--网页标题: 指定浏览器标题栏显示的内容 --&gt;
</code></pre>

<p><Title> 电子名片自动绑定系统</Title></p>

<pre><code>&lt;!--网页属性的设置 ： 可提供有关页面的原信息--&gt;
&lt;!--
  content属性  定义与http-equiv 或name属相相关的元信息
  http-equiv属性: 把content属性关联到HTTP头部
  name属性：把content属性关联到一个名称

--&gt;
&lt;!--base  针对连接的全局设置--&gt;
&lt;!--
 target 指定连接全局打开方式
 href  指定全局前缀比如  www.baiud.com  但是不可能要求所有连接以 www.baidu.com打开！
--&gt;
</code></pre>

<p><Base target="_blank"></p>

<pre><code>&lt;!-- 通过name content对   对应  key-value 键值对   http-equav 针对不同的类型 类似于Input控件 的type存在10种类型--&gt;
</code></pre>

<p><Meta name="Generator" content="vim"/></p>

<pre><code>&lt;Meta name="Author" content="yezhaoliang"/&gt;
&lt;Meta name="Keywords" content="name picture"/&gt;
&lt;Meta name="Description" content=""/&gt;


&lt;!--做优化的时候可能需要用到keywords 优化搜索--&gt;
</code></pre>

<p><Meta http-equiv="keywords" name="DNS" content="直接数值模拟"/></p>

<pre><code>&lt;!-- content=3 表示3s 之后刷新出  163.com网页--&gt;
&lt;!---  太烦了  3s 刷新  注释掉
</code></pre>

<p><Meta http-equiv="refresh"  content="3;url=http://www.163.com"/></p>

<pre><code>--&gt; 
</code></pre>

<p><Link type="text/css" rel="stylesheet" href=""></p>

<pre><code>&lt;Link type="javascript" rel="stylesheet" href=""&gt;


&lt;!--
 Link 控件
   rel属性  ：目标文档与当前文档的关系
   type属性 ： 文档类型
--&gt;
  &lt;!--设background:url(b.jpg);置背景颜色 和文字字体--&gt;
&lt;!--定义样式--&gt;
</code></pre>



<p>  </Head></p>

<p>  <!--Body标签，作为网页内容的主体部分-->
  <Body></p>

<pre><code>&lt;!--输入区域  start--&gt;
&lt;!--Div 盒子标签 用来存标签--&gt;
&lt;Div class="box"&gt;
  &lt;!--H1标签 样式标题1--&gt;
</code></pre>

<H1>
        电子名片自动绑定系统
      </H1>


<pre><code>  &lt;!--1：段落标签  P--&gt;

  &lt;!--
  Form  :action 指定的服务器地址处理表单
  method Form表单提交方式    默认get
           Post
  --&gt;
  &lt;!--&lt;Form action="www.163.com" method="get"&gt;--&gt;
  &lt;Form action="http://www.163.com" method="get"&gt;
  &lt;P&gt;
    &lt;!--Span标签 一个小控件  不断行  P标签会断行--&gt;
    &lt;!--Input--&gt;
</code></pre>

<p><span>姓名： </span> <input type="text" class="input_box"/></p>

<pre><code>    &lt;span&gt;公司： &lt;/span&gt; &lt;input type="text" class="input_box"/&gt;


  &lt;/P&gt;
  &lt;P&gt;
</code></pre>

<p><span>职务： </span> <input type="text" class="input_box"/></p>

<pre><code>    &lt;span&gt;手机： &lt;/span&gt; &lt;input type="text" class="input_box"/&gt;


  &lt;/P&gt;
  &lt;!--
  Input控件的type值共有10个值
    type="text"    &lt;-----文本按钮
    type="submit"  &lt;-----提交按钮
    type="hidden"    &lt;----隐藏字段  给服务器读取的，客户端不现实的，隐藏照样提交！也有name-value 对
    type="radio"    &lt;-----单选框
    type="password" &lt;-----密码框
    type="checkbox" &lt;-----复选框
    type="reset"    &lt;-----重置按钮
    type="button"   &lt;-----按钮
    type="file"     &lt;-----文件上传
    type="image"    &lt;-----图像
    type="text"
    type="text"
  --&gt;
</code></pre>

<p><Input type="submit" value="生成名片" class="input_btn"/></p>

<pre><code>  &lt;Input type="button" value="按钮" class="input_btn"/&gt;
  &lt;Input type="image" value="图像" class="input_btn"/&gt;
  &lt;Input type="file" value="文件上传" class="input_btn"/&gt;
  &lt;Input type="reset" value="重置按钮" class="input_btn"/&gt;
  &lt;Input type="checkbox" value="复选框" class="input_btn"/&gt;
  &lt;Input type="radio" value="单选框" class="input_btn"/&gt;


  &lt;!--新加入的部分，另外一种使用radio控件--&gt;
  &lt;!--
    注意：
        Input的  name  value  其实就是key=value的组合！！hashmap的过程！
        观察发现所有的表单控件都是基于HashMap的过程
        也就是所有的Input控件都有name value的属性，充当表单信息，这很重要
  --&gt;
</code></pre>

<p><Input type="radio" name="gender" value="男"/>男<Input type="radio" name="gender" value="女">女</br></p>

<pre><code>  &lt;Input type="password" value="密码框" class="input_btn"/&gt;
  &lt;Input type="hidden" value="隐藏字段" class="input_btn"/&gt;


  &lt;/Form&gt;
&lt;/Div&gt;
    &lt;!--2：列表实验--&gt;
&lt;Div&gt;
  &lt;!--无序列表--&gt;
</code></pre>

<Ul>
        <Li>流体</Li>
        <Li>结构</Li>
        <Li>耦合</Li>
      </Ul>


<pre><code>  &lt;!--有序列表--&gt;
</code></pre>

<Ol>
        <Li>Ansys</Li>
        <Li>Fluent</Li>
        <Li>ICEM</Li>
      </Ol>


<p><A name="double1">定位标记</A></p>

<pre><code>  &lt;!--定义列表--&gt;
</code></pre>

<p>  <Dl></p>

<pre><code>    &lt;Dt&gt;网格&lt;/Dt&gt;
      &lt;Dd&gt;ICEM&lt;/Dd&gt;
      &lt;Dd&gt;Gambit&lt;/Dd&gt;
      &lt;Dt&gt;求解器&lt;/Dt&gt;
      &lt;Dd&gt;Fluent&lt;/Dd&gt;
      &lt;Dd&gt;Numeca&lt;/Dd&gt;
      &lt;Dd&gt;Abaqus&lt;/Dd&gt;
  &lt;/Dl&gt;



&lt;/Div&gt;
&lt;!--3： 图像标签 alt值不能超过1024个字符--&gt;
</code></pre>

<Div>
      <img src="b.jpg" border="3px" title="书签" alt="资源找不到时候，我就出现了",width=500px,height=200px/>
    </Div>


<pre><code>&lt;!--4：表格标签--&gt;
&lt;!-- Table属性：cellpadding 单元格内容与边框的距离
                cellspacing 单元格与相邻单元格之间的距离 
      Td常用属性：
                colspan:合并单元格
                rowspan：合并同列单元格
      每个Table可以有一个表头Thead、表尾TFoot和一个或多个标题TBody
      TBody的分行下载是一个网页优化的一个方法
--&gt;
</code></pre>

<Div>
      
      <Table border=2px; width=300px; cellpadding=1px; cellspacing=1px;>
        <Caption>关于表格的实验</Caption>
        <Thead>
          <Th>姓名</Th> <!--对表格的第一行或者第一列进行格式化 c粗体剧中显示-->
          <Th>年龄</Th>
        </Thead>

        <TBody>
          <Tr> <!--行标签-->
            <Td>张三</Td><Td>20</Td>  <!--单元格标签-->
          </Tr>
          <Tr> <!--行标签-->
            <Td>李四</Td><Td>30</Td>  <!--单元格标签-->
          </Tr>
        </TBody>
      </Table>
    </Div>


<pre><code>&lt;!--5:超链接实验--&gt;
&lt;!--
  _blank  在一个新的网页标签打开链接
  _parent 在父级窗口中打开
  _self   在自身页面中打开链接（默认）
  _top    在整个浏览器的最顶端(前端)开始打开链接

  定位标记+超链接
  &lt;A name="标记名字"&gt; 标记在某一个位置&lt;/A&gt;
  找到他
  &lt;A href="#标记名字"&gt;返回标记位置&lt;/A&gt;

  注意： 1 定位标记要和超链接结合使用才有效  标记名字用#找到
         2 在网页过长才有效果 
--&gt;
</code></pre>

<Div>
      <P><A href="http://www.163.com" target="_blank">网易</A></P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <P>..</P>
          <A href="#double1">去寻找标记</A>
    </Div>


<pre><code>&lt;!--6:IFrame框架的测试--&gt;
&lt;!--
  在网页上嵌入一个框，显示另一个html,txt等文件信息
--&gt;
</code></pre>

<p>  <Div></p>

<pre><code>  &lt;IFrame src="student.txt"&gt;
    如果你看到这段文字，说明您的浏览器不支持IFrame标签
    &lt;/IFrame&gt;
&lt;/Div&gt;


&lt;!-- 7: Form表单的测试--&gt;
&lt;!--
  Form是最常用的控件，主要用于采集和提交用户输入的信息
  和服务器进行交互
--&gt;
&lt;Div&gt;
&lt;!--关于Input测试已在前面提及--&gt;
&lt;!--Select 其实就是Combobox--&gt;
</code></pre>

<p><Select name="city"></p>

<pre><code>  &lt;Option value="1"&gt;北京&lt;/Option&gt;
  &lt;Option value="2"&gt;福建&lt;/Option&gt;
  &lt;Option value="3"&gt;广州&lt;/Option&gt;
&lt;/Select&gt;



&lt;!-- 更好的办法是使用CSS的height &amp; width替换掉rows cols--&gt;
</code></pre>

<p><Textarea rows="3" cols="20"></Textarea></p>

<pre><code>&lt;!--Radio type 和 Label配合使用 --&gt;
&lt;!--Label标签做了一个字段的包装，这样用户点击字段 也可以选择！！！新的知识点啊！--&gt;
</code></pre>

<p><Label for="male"> Male</Label></p>

<pre><code>&lt;Input type="radio" name="sex" id="male"/&gt;
&lt;Label for="female"&gt; Female&lt;/Label&gt;
&lt;Input type="radio" name="sex" id="female"/&gt;




&lt;/Div&gt;

&lt;!--这么有趣  HTML也有块级元素的说法--&gt;
&lt;!--
 1: 块级元素 通常以新行开始和结束
 比如   &lt;H1&gt;  &lt;P&gt; &lt;Ul&gt;  &lt;Table&gt;   &lt;Tr&gt;  &lt;Div&gt;
 2：内联元素 通常不以新行开始
 &lt;Td&gt; &lt;B&gt; &lt;A&gt; &lt;Img&gt;  &lt;Span&gt;
  3: Div   and   Span  主要用于文档的样式属性的区域设置
--&gt;
</code></pre>

<p>  </Body></p>

<p></Html></p>

<!--Framset 用于设置框架的大小比例-->




<!--Frame用于加载网页文件-->


<p><Html>
  <!--Framset 用于设置框架的大小比例-->
  &lt;!&mdash;</p>

<pre><code>frameset常用属性：
   cols=20%,*   垂直切割画面，左右两个画面
   Rows="120,*"  横向切割，上下分开
   frameborder    0 and 1. 0 表示不要边框 
   border="0"  边框厚度
   bordercolor='"#99"
   framespace="5" 框架与框架间保留的空白距离
</code></pre>

<p>  &mdash;></p>

<p><Frameset rows="20%,*"></p>

<pre><code>&lt;!--Frame用于加载网页文件--&gt;
&lt;!--
frame常用属性
src="*.html" 每个frame框对应一个网页档案
name="top" 设置这个窗的名称
scrolling=auto|yes|no
noresize="noresize"   表示框框不可以拖拽！！

--&gt;
&lt;!--
Frameset = Noframes+frame--&gt;
</code></pre>

<p><Noframes></p>

<pre><code>  &lt;Div&gt;
    当你的浏览器不支持Frame时候会显示这段文字，一般很少。 
  &lt;/Div&gt;
&lt;/Noframes&gt;
</code></pre>

<p>  <Frame src="rupeng.html"></p>

<p><Frameset cols = "25%,75%"></p>

<pre><code>  &lt;Frame src="plan.html"&gt;
  &lt;Frame src="student.txt"&gt;
&lt;/Frameset&gt;
</code></pre>

<p>  </Frameset>
</Html></p>

<p>Frame Name的使用</p>

<p>```html
<Html>
  <Head></p>

<pre><code>&lt;Meta http-equiv="Content-Type" content="text/html; charset=utf-8"/&gt;
&lt;Title&gt; 我喜欢的样式 &lt;/Title&gt;
</code></pre>

<p>  </Head>
  <Frameset rows="12%,*" frameborder="1" border="1px" bordercolor="#FF0000"></p>

<pre><code>&lt;Frame src="top.html" scrolling="no" noresize="noresize"/&gt;
&lt;FrameSet cols="20%,*"&gt;
  &lt;!-- name的作用是让left.html的A连接的target属性 可以选择以name名字打开！！
        这是一个全新的知识点，妙--&gt;
  &lt;Frame src="left.html" name="left"/&gt;
  &lt;Frame src="right.html" name="right"/&gt;
  &lt;/Frameset&gt;&lt;Noframes&gt;&lt;/Noframes&gt;
</code></pre>

<p></Html>
```</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[网络书屋(Web Reading Room)]]></title>
  <link href="http://jueqingsizhe66.github.io/atom.xml" rel="self"/>
  <link href="http://jueqingsizhe66.github.io/"/>
  <updated>2017-06-15T20:40:47+08:00</updated>
  <id>http://jueqingsizhe66.github.io/</id>
  <author>
    <name><![CDATA[Ye Zhaoliang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Racket Man Wanna Learn Datetype and Cases]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/05/30/racket-man-wanna-learn-datetype-and-cases/"/>
    <updated>2017-05-30T14:14:59+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/05/30/racket-man-wanna-learn-datetype-and-cases</id>
    <content type="html"><![CDATA[<p>无意中，想到了<a href="http://racket-lang.org/"> racket </a>，scheme家族中一员，那么亲切，lovely.</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='racket'><span class='line'><span class="nv">Welcome</span> <span class="nv">to</span> <span class="nv">Racket</span> <span class="nv">v6</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span>
</span><span class='line'><span class="nv">&gt;</span> <span class="p">(</span><span class="nb">/ </span><span class="mi">66</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="mi">33</span>
</span><span class='line'><span class="nv">&gt;</span> <span class="p">(</span><span class="nb">/ </span><span class="mf">52.44</span> <span class="mf">0.834493</span><span class="p">)</span>
</span><span class='line'><span class="mf">62.840551089104395</span>
</span><span class='line'><span class="nv">&gt;</span> <span class="p">(</span><span class="nb">/ </span><span class="mf">52.44</span> <span class="mf">0.834493</span><span class="p">)</span><span class="mi">-62</span>
</span><span class='line'><span class="mf">62.840551089104395</span>
</span><span class='line'><span class="mi">-62</span>
</span><span class='line'><span class="nv">&gt;</span> <span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nb">/ </span><span class="mf">52.44</span> <span class="mf">0.834493</span><span class="p">)</span> <span class="mi">62</span><span class="p">)</span>
</span><span class='line'><span class="mf">0.8405510891043946</span>
</span><span class='line'><span class="nv">&gt;</span> <span class="p">(</span><span class="nb">* </span><span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nb">/ </span><span class="mf">52.44</span> <span class="mf">0.834493</span><span class="p">)</span> <span class="mi">62</span><span class="p">)</span> <span class="mi">360</span><span class="p">)</span>
</span><span class='line'><span class="mf">302.59839207758205</span>
</span><span class='line'><span class="nv">&gt;</span> <span class="nv">exit</span><span class="c1">;</span>
</span><span class='line'><span class="o">#</span><span class="nv">&lt;procedure:exit&gt;</span>
</span><span class='line'><span class="nv">&gt;</span> <span class="p">(</span><span class="nf">exit</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>复习列表:</p>

<ol>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/02/19/the-implementation-of-define-datetype/">datetype</a></li>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/02/23/casesde-zuo-yong/">cases</a></li>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/02/25/first-interpreter-from-eopl/">First Interpreter From EOPL</a></li>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/02/27/the-second-interpreter-from-one/">The Second Interpreter from one</a></li>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/02/27/the-third-interpreter-implementing-proc/">The third Interpreter with proc feature</a></li>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/02/27/the-fourth-interpreter-about-the-traceproc/">the fourth Interpreter with traceproc feature</a></li>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/02/28/the-fifth-interpreter-with-the-implementation-of-letrec-important/">The fifth Interpreter with letrec feature</a></li>
<li>Read the EOPL book</li>
</ol>


<p>Deadline: 2017-06-30</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/05/30/racket-man-wanna-learn-datetype-and-cases/'>http://jueqingsizhe66.github.io/blog/2017/05/30/racket-man-wanna-learn-datetype-and-cases/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu17.04 Install FAST8.16]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/05/19/ubuntu17-dot-04-install-fast8-dot-16/"/>
    <updated>2017-05-19T15:05:44+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/05/19/ubuntu17-dot-04-install-fast8-dot-16</id>
    <content type="html"><![CDATA[<p>Something Noted in the process of installation FAST8.16 in the 32bit ubuntu17.04 system.</p>

<!--more-->


<h3>1. Download <a href="https://nwtc.nrel.gov/FAST8"> Fast8.16</a> and decompress</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir FAST-816
</span><span class='line'>cd FAST-816
</span><span class='line'>mv FAST*.tar.gz FAST-816
</span><span class='line'>tar -xvf FAST*.tar.gz
</span></code></pre></td></tr></table></div></figure>


<h3>2. Download <a href="https://nwtc.nrel.gov/system/files/MAP_v1.20.10.tar.gz"> Map </a> for generating map.so and decompress</h3>

<p>FAST_DIR 告诉MAP FAST项目存在哪里</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd FAST-816
</span><span class='line'>mkdir LIBMAP
</span><span class='line'>cd LIBMAP
</span><span class='line'>mv ../../*.MAP*.tar.gz .
</span><span class='line'>tar -xvf *MAP*.tar.gz
</span><span class='line'>
</span><span class='line'>cd compiling
</span><span class='line'>vim driver_makefile&lt;&lt;EOF
</span><span class='line'>
</span><span class='line'>----- FAST_DIR     = ../Source
</span><span class='line'>+++++ FAST_DIR     = /paper/FAST-816/
</span><span class='line'>
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>cd ../src/
</span><span class='line'>
</span><span class='line'>vim makefile&lt;&lt;EOF
</span><span class='line'>
</span><span class='line'>----- BITS = -m64
</span><span class='line'>+++++ BITS = -m32  32bit系统
</span><span class='line'>
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>make#################something error here</span></code></pre></td></tr></table></div></figure>


<h3>make Libmap.so something error here</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a.o mapinit.o maperror.o lineroutines.o numeric.o outputstream.o mapapi.o lmroutines.o jacobian.o residual.o  -lm -llapacke 
</span><span class='line'>/usr/bin/ld: 找不到 -llapacke
</span><span class='line'>/usr/bin/ld: 找不到 -llapacke
</span><span class='line'>collect2: error: ld returned 1 exit status
</span><span class='line'>makefile:81: recipe for target 'all' failed
</span><span class='line'>make: *** [all] Error 1
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://jueqingsizhe66.github.io/blog/2016/04/15/ubuntu15-dot-10-32bit-an-zhuang-fastv8-dot-15/">fixed it</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install lapacke-dev*</span></code></pre></td></tr></table></div></figure>


<h3>make again</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>make ### OK generate libmap-1.2.so
</span><span class='line'>
</span><span class='line'>mkdir /paper/FAST-816/bin
</span><span class='line'>cp libmap-1.20.10.so /paper/FAST-816/bin
</span></code></pre></td></tr></table></div></figure>


<h3>3. Now Install FAST</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /paper/FAST-816/compiling/
</span><span class='line'>make 
</span><span class='line'>make -f makefile_DISCON_DLL ## for Test18-26.fst case</span></code></pre></td></tr></table></div></figure>


<p><strong>gcc -fbacktrack FAST_Subs 可能再gcc-6会有点问题，部分f90文件得删除该选项</strong>
删掉-fbacktrace测试通过</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> 2 ❯ make
</span><span class='line'>gfortran -I Obj_lin32 -O2 -m32 -fbacktrace -ffree-line-length-none -x f95-cpp-input -DNO_LibLoad -DUSE_DLL_INTERFACE -c ../Source/FAST_Subs.f90 -o Obj_lin32/FAST_Subs.o -J Obj_lin32 -B Obj_lin32
</span><span class='line'>gfortran: internal compiler error: 已杀死 (program f951)
</span><span class='line'>Please submit a full bug report,
</span><span class='line'>with preprocessed source if appropriate.
</span><span class='line'>See &lt;file:///usr/share/doc/gcc-6/README.Bugs&gt; for instructions.
</span><span class='line'>makefile:416: recipe for target 'FAST_Subs.o' failed
</span><span class='line'>make: *** [FAST_Subs.o] Error 4
</span></code></pre></td></tr></table></div></figure>


<h3>4. Run Test1-18.fst</h3>

<p>You can go to /paper/FAST-816/bin to check whether FAST_Glin32 and libmap.so have been generated or not</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /paper/FAST-816/bin
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>❯ ./FAST_glin32 ../CertTest/Test02.fst
</span><span class='line'>
</span><span class='line'> **************************************************************************************************
</span><span class='line'> FAST (v8.16.00a-bjj, 27-Jul-2016)
</span><span class='line'>
</span><span class='line'> Copyright (C) 2016 National Renewable Energy Laboratory
</span><span class='line'>
</span><span class='line'> This program comes with ABSOLUTELY NO WARRANTY. See the "license.txt" file distributed with this
</span><span class='line'> software for details.
</span><span class='line'> **************************************************************************************************
</span><span class='line'>
</span><span class='line'>  Running FAST (v8.16.00a-bjj, 27-Jul-2016), compiled as a 32-bit application using single
</span><span class='line'>  precision
</span><span class='line'>  linked with NWTC Subroutine Library (v2.09.00, 23-Jul-2016)
</span><span class='line'>
</span><span class='line'>  Heading of the FAST input file:
</span><span class='line'>    FAST Certification Test #02: AWT-27CR2 with many DOFs with startup and shutdown and steady wind
</span><span class='line'>
</span><span class='line'>  Running ElastoDyn (v1.04.00a-bjj, 26-Jul-2016).
</span><span class='line'>
</span><span class='line'>  Running AeroDyn (v15.03.00, 27-Jul-2016).
</span><span class='line'>
</span><span class='line'>  Running AirfoilInfo (v1.01.00a-bjj, 5-Apr-2016).
</span><span class='line'>
</span><span class='line'>  Running BEM (v1.02.00, 29-Jun-2016).
</span><span class='line'>
</span><span class='line'>  Running InflowWind (v3.03.00, 26-Jul-2016).
</span><span class='line'>  Opening InflowWind input file:  ../CertTest/AWT27/Test02_InflowWind.dat
</span><span class='line'>
</span><span class='line'>  Running ServoDyn (v1.06.00a-bjj, 26-Jul-2016).
</span><span class='line'>  Timestep: 0 of 20 seconds.
</span><span class='line'>
</span><span class='line'> Timestep: 2 of 20 seconds. Estimated final completion at 16:05:13.                               
</span><span class='line'> Timestep: 4 of 20 seconds. Estimated final completion at 16:05:12.    </span></code></pre></td></tr></table></div></figure>


<h3>5. Modify the ServoData for servo module</h3>

<p><a href="http://jueqingsizhe66.github.io/blog/2015/10/22/fast-in-ubuntu64bit-bian-yi-zhu-yi-shi-xiang/">DISON_DLL running</a>
因为FAST在运行Test18-26.fst的case时候会去读取5MW_BASELINE[只针对的是5MW]底下的ServoData的文件,
所以对应dll-filename得修改一下。</p>

<ol>
<li>make DISCON SO file</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>❯ make -f makefile_DISCON_DLL
</span><span class='line'>gfortran  -O2 -m32 -fbacktrace -ffree-line-length-none -x f95-cpp-input -C -DIMPLICIT_DLLEXPORT -fPIC -c ../CertTest/5MW_Baseline/ServoData/Source/DISCON.f90 -o Obj_lin32/DISCON.obj -J Obj_lin32 -B Obj_lin32
</span><span class='line'>gfortran -shared -O2 -m32 -fbacktrace -fPIC -I Obj_lin32 -o ../CertTest/5MW_Baseline/ServoData/DISCON_glin32.so \
</span><span class='line'> Obj_lin32/DISCON.obj
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Change DLL_FileName in the configure data file</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /paper/FAST-816/CertTest/5MW_Baseline
</span><span class='line'>vim NRELOffshrBsline5MW_Onshore_ServoDyn.dat 
</span><span class='line'>
</span><span class='line'>修改DLL_FileName为 ServoData/DISCON_glin32.so</span></code></pre></td></tr></table></div></figure>


<p>Test RESULT:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  Running BeamDyn (v1.01.04, 26-Jul-2016).
</span><span class='line'>
</span><span class='line'>  Running AeroDyn (v15.03.00, 27-Jul-2016).
</span><span class='line'>
</span><span class='line'>  Running AirfoilInfo (v1.01.00a-bjj, 5-Apr-2016).
</span><span class='line'>
</span><span class='line'>  Running BEM (v1.02.00, 29-Jun-2016).
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 1, Blade = 1
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 2, Blade = 1
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 3, Blade = 1
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 4, Blade = 1
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 1, Blade = 2
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 2, Blade = 2
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 3, Blade = 2
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 4, Blade = 2
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 1, Blade = 3
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 2, Blade = 3
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 3, Blade = 3
</span><span class='line'> Warning: Turning off Unsteady Aerodynamics because C_nalpha is 0.  BladeNode = 4, Blade = 3
</span><span class='line'>
</span><span class='line'>  Running InflowWind (v3.03.00, 26-Jul-2016).
</span><span class='line'>  Opening InflowWind input file:  ../CertTest/5MW_Baseline/NRELOffshrBsline5MW_InflowWind_12mps.dat
</span><span class='line'>
</span><span class='line'>    Reading a 31x31 grid (145 m wide, 17.5 m to 162.5 m above ground) with a characteristic wind
</span><span class='line'>    speed of 12 m/s. This full-field file was generated by TurbSim (v1.06.00, 21-Sep-2012) on
</span><span class='line'>    07-Jan-2014 at 12:50:45.
</span><span class='line'>
</span><span class='line'>    Processed 1442 time steps of 20-Hz full-field data (72.05 seconds).
</span><span class='line'>
</span><span class='line'>  Running ServoDyn (v1.06.00a-bjj, 26-Jul-2016).
</span><span class='line'>
</span><span class='line'>  Running ServoDyn Interface for Bladed Controllers (using GNU Fortran for Linux, 14-Oct-2015).
</span><span class='line'>  Timestep: 0 of 20 seconds.
</span><span class='line'>
</span><span class='line'> FAST_Solution0:CalcOutputs_And_SolveForInputs:SolveOption2:SrvD_CalcOutput:Running with torque
</span><span class='line'> and pitch control of the NREL offshore 5MW baseline wind turbine from DISCON.dll as written by J.
</span><span class='line'> Jonkman of NREL/NWTC for use in the IEA Annex XXIII OC3 studies.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> Timestep: 1 of 20 seconds. Estimated final completion at 16:20:36.                               
</span></code></pre></td></tr></table></div></figure>


<p>Okay, All things have been done.</p>

<p>Happy FAST programming.</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/05/19/ubuntu17-dot-04-install-fast8-dot-16/'>http://jueqingsizhe66.github.io/blog/2017/05/19/ubuntu17-dot-04-install-fast8-dot-16/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[See From NoteExpress]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/05/18/see-from-noteexpress/"/>
    <updated>2017-05-18T22:03:06+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/05/18/see-from-noteexpress</id>
    <content type="html"><![CDATA[<p><a href="http://www.inoteexpress.com/aegean/"> NoteExpress </a>是一个文档管理软件，用于管理参考文件，可以方便的word等进行关联插入相关参考文献。
然而他有一个样式编辑器,很普通，却是让我有点触动。</p>

<!--more-->


<h3>三个定义</h3>

<ol>
<li>过滤系统：让你的程序获得合适的数据，在运算系统之前.[struts的拦截器];你需要进行过滤，才能得到满足运算需要的<strong>数据</strong></li>
<li>运算系统：合适的数据进行算法运算，矩阵运算等</li>
<li>样式系统: 运算完的数据进行输出,很多美化的工作。</li>
</ol>


<p>linux的ls可以有很多选项，可以让你的结果不一样，这个选项的效果其实跟样式系统的效果是一致的，都是你对
现实的输出不满意，于是修改，使得你的输出更加perfect</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls 
</span><span class='line'>ls -ls 
</span><span class='line'>ls -lsh  # 显示文件大小按照人类比较好识别的方式
</span><span class='line'>ls -lsha # 显示隐藏文件</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html"> awk </a>是linux重要的过滤工具，他就好象是一个鱼网过滤器一样，按照孔的形状过滤字段, 也叫做字段级别过滤器。
<a href="http://www.iteye.com/topic/587673"> sed </a>是一个行修改工具，行级别过滤器, <a href="http://blog.csdn.net/itsenlin/article/details/21129405"> 有几种典型的模式 </a>s,p,d,x,g,h etc</p>

<p>但就是这么简单的几个系统，却是组成了很多业务系统的实现过程的定义，你可以很容易把它替换成为你当前正在处理的阶段，see here to there.</p>

<h3>One Sentence</h3>

<p>每个人都应该有自己的样式系统，this is your style, nobody can change you!
Different Style System makes you different.
人应该有点脾气.</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/05/18/see-from-noteexpress/'>http://jueqingsizhe66.github.io/blog/2017/05/18/see-from-noteexpress/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Can You See Them From Here?]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/05/18/can-you-see-them-from-here/"/>
    <updated>2017-05-18T20:44:59+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/05/18/can-you-see-them-from-here</id>
    <content type="html"><![CDATA[<h2>[[<strong>Here Song</strong>]]</h2>

<pre><code>I am here to look forward,
Nothing or many things?
I am embarrassed.

what should I do here?
What is your plan? what is your target?
Come on,Come on!
Be confident, do and do it at the best,
so you can see more from here

Life is a road with many ups and downs.
Looking at the stars in the sky, Doing at the desk in the grounds.
</code></pre>

<!--more-->


<h2>理解你的Here，才能到达There</h2>

<p>Go there Base on Here !</p>

<pre><code>千里之行，始于足下;
百层高楼，起于垒土;
</code></pre>

<p>You are Here!</p>

<ol>
<li><a href="http://think-like-a-git.net/sections/rebase-from-the-ground-up/a-helpful-mnemonic-for-git-rebase-arguments.html">git rebase Here There</a></li>
</ol>


<p><img src="http://jueqingsizhe66.github.io/images/linux/gitflow.png" alt="gitFlow" /></p>

<p>The home faraway
<img src="http://jueqingsizhe66.github.io/images/linux/railway.jpg" alt="railway" /></p>

<p>See the sumrise, here to go! Let&rsquo;s go!
<img src="http://jueqingsizhe66.github.io/images/linux/time.jpg" alt="sumrise" /></p>

<ol>
<li>somethings added later</li>
</ol>


<p><a href="http://people.csail.mit.edu/sperezde/pre-print-oopsla16.pdf"> To this point </a> , you should understand that use <code>to this point</code> to let your draft become a beautiful road way in your paper.</p>

<p>To this point , you should understand why you do this action at the current time!
To this point , we can realized that there are a rule about the yaw aerodynamic characteristic.</p>

<p>With time goes on or from now on, maybe the result before us show me some infos. See from history.</p>

<p>Your need to find the failure time in the history, understand it, understand why.</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/05/18/can-you-see-them-from-here/'>http://jueqingsizhe66.github.io/blog/2017/05/18/can-you-see-them-from-here/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql乱码回顾]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/13/mysqlluan-ma-hui-gu/"/>
    <updated>2017-02-13T08:50:12+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/13/mysqlluan-ma-hui-gu</id>
    <content type="html"><![CDATA[<p>mysql是一个中型的数据库操作系统平台,他的<a href="http://www.linuxidc.com/Linux/2013-04/83581.htm">基本组成</a>由存储引擎、各个命令模块、优化器、缓存器、解析器、用户模块、链接器(connector)等组成，
<img src="http://jueqingsizhe66.github.io/images/java/mysql/mysql-archetype.png" alt="mysql architect" /></p>

<p>其中存储引擎现在一般选用innodb居多(具体可以查看<a href="http://c.biancheng.net/cpp/html/1465.html">各个存储引擎的区别</a>)</p>

<!--more-->


<p>mysql操作级别：</p>

<ol>
<li>数据库级别</li>
<li>表级别</li>
<li>字段级别</li>
</ol>


<p>而这三个级别就影响这数据库的乱码级别。
一般事先使用<code>show variables like '%char%'</code> 来查看mysql的所有字符信息，参考<a href="http://www.jb51.net/article/74769.htm">mysql乱码解决</a>,
根据该文基本上可以解决问题，另外可以进一步查看各个字符集和mysql查询涉及到的<a href="http://www.jb51.net/article/31135.htm">各个字符集的关系(对应命令的求解)</a>,
查阅了<a href="http://www.pc6.com/infoview/Article_63586.html">多个链接</a>,都显示<code>set names gbk</code>对最终的显示有影响，根据我的使用经验来讲，</p>

<p><font color="red">当你使用<code>set names gbk</code>则可以显示正常，而<code>set names utf8</code>则出现乱码</font></p>

<p>我在建立数据库的时候也使用了<code>create database rupeng chracter set utf8</code>等，但试过一遍只有最终加上<code>set names gbk</code>有效果。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set character_set_database=utf8;
</span><span class='line'>set character_set_server=utf8;
</span><span class='line'>set character_set_client=gbk;
</span><span class='line'>set character_set_connection=gbk;</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>系统变量：
</span><span class='line'>client    为客户端使用的字符集。
</span><span class='line'>connection    为连接数据库的字符集设置类型，如果程序没有指明连接数据库使用的字符集类型则按照服务器端默认的字符集设置。
</span><span class='line'>database  为数据库服务器中某个库使用的字符集设定，如果建库时没有指明，将使用服务器安装时指定的字符集设置。
</span><span class='line'>results   为数据库给客户端返回时使用的字符集设定，如果没有指明，使用服务器默认的字符集。
</span><span class='line'>server    为服务器安装时指定的默认字符集设定。
</span><span class='line'>system    为数据库系统使用的字符集设定。
</span><span class='line'>
</span><span class='line'>– character_set_client：客户端来源数据使用的字符集
</span><span class='line'>– character_set_connection：连接层字符集
</span><span class='line'>– character_set_database：当前选中数据库的默认字符集
</span><span class='line'>– character_set_results：查询结果字符集
</span><span class='line'>– character_set_server：默认的内部操作字符集
</span><span class='line'>– character_set_system：系统元数据(字段名等)字符集
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://blog.csdn.net/sunqing0316/article/details/46680617">mysql字符集转换过程</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>1. MySQL Server收到请求时将请求数据从character_set_client转换为character_set_connection；
</span><span class='line'>2. 进行内部操作前将请求数据从character_set_connection转换为内部操作字符集，其确定方法如下：
</span><span class='line'>• 使用每个数据字段的CHARACTER SET设定值；
</span><span class='line'>• 若上述值不存在，则使用对应数据表的DEFAULT CHARACTER SET设定值(MySQL扩展，非SQL标准)；
</span><span class='line'>• 若上述值不存在，则使用对应数据库的DEFAULT CHARACTER SET设定值；
</span><span class='line'>• 若上述值不存在，则使用character_set_server设定值。
</span><span class='line'>3. 将操作结果从内部操作字符集转换为character_set_results。</span></code></pre></td></tr></table></div></figure>


<p>参考<a href="http://www.2cto.com/database/201410/341144.html">myeclipse-mysql</a>,有一个原则就是不要让你的character出现<code>latin1</code>编码即可</p>

<p>我们操作所有数据库<a href="http://mysql.com/">mysql中型</a>,<a href="https://www.sqlite.org/">sqlite</a>,<a href="https://www.postgresql.org/">postgreSql流行</a>,<a href="http://www.ibm.com/analytics/us/en/technology/db2/">db2(IBM)企业级</a>,<a href="https://www.oracle.com/index.html">oracle大型运用企业级</a>,<a href="https://www.ibm.com/analytics/us/en/technology/informix/">informix(IBM)</a>,
<a href="https://www.microsoft.com/zh-cn/sql-server/">sql server</a></p>

<ul>
<li><a href="http://www.yiibai.com/mysql/mysql_quick_start.html">mysql快速入门学习</a></li>
<li><a href="http://www.w3school.com.cn/sql/sql_intro.asp">W3C sql入门教程</a></li>
<li><a href="http://blog.csdn.net/hgd613/article/details/50433135">左连接</a></li>
<li><a href="http://database.51cto.com/art/200511/12708.htm">51cto数据库论坛</a></li>
</ul>


<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/13/mysqlluan-ma-hui-gu/'>http://jueqingsizhe66.github.io/blog/2017/02/13/mysqlluan-ma-hui-gu/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java开发nexus私服搭建]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/10/javakai-fa-nexussi-fu-da-jian/"/>
    <updated>2017-02-10T00:04:33+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/10/javakai-fa-nexussi-fu-da-jian</id>
    <content type="html"><![CDATA[<p>针对一台全新的电脑，安装java开发的maven私服，记录如下，并在IDEA中进行测试。</p>

<p>涉及到javase安装，maven安装，nexus私服安装，nexus本地配置，nexus界面介绍</p>

<!--more-->


<ol>
<li>安装JAVA jdk ,下载<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">javaSE安装包</a>,注意JDK和JRE不要放在同一文件夹下</li>
<li>配置JAVA_HOME为JDk目录，并添加JDK的bin目录(%JAVA_HOME%\bin)到path中
<img src="http://jueqingsizhe66.github.io/images/java/nexus/java.png" alt="java" /></li>
<li>下载<a href="http://maven.apache.org/">maven</a>,并解压缩，配置MAVEN_HOME为maven的根目录，并添加%MAVEN_HOME%\bin到path
中
<img src="http://jueqingsizhe66.github.io/images/java/nexus/home.png" alt="home" />
<img src="http://jueqingsizhe66.github.io/images/java/nexus/bin.png" alt="bin" />
<img src="http://jueqingsizhe66.github.io/images/java/nexus/java.png" alt="mvn" /></li>
</ol>


<p>显示了<code>mvn -v</code>,也就表示装完了maven
4. 下载<a href="https://www.sonatype.com/download-oss-sonatype">nexus2.14</a>,在windows下使用管理员身份打开cmd，并cd到nexus的bin目录，进行安装</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nexus install
</span><span class='line'>nexus start</span></code></pre></td></tr></table></div></figure>


<p>注意一定得配置bin\jsw\wrapper.conf的java bin信息，否则出错。
<img src="http://jueqingsizhe66.github.io/images/java/nexus/wrapper.png" alt="wrapper" /></p>

<p>出现的错误为无法启动，
<img src="http://jueqingsizhe66.github.io/images/java/nexus/success.png" alt="success" /></p>

<hr/>


<p>做完前面的几步之后只是，把配置环境弄完了，还得进行私服镜像配置。
首先打开nexus私服页面，使用<code>http://localhost:8089/nexus/#welcome</code></p>

<p><img src="http://jueqingsizhe66.github.io/images/java/nexus/nexus.png" alt="nexus" /></p>

<p>默认的登陆密码是</p>

<pre><code>账号：admin
密码：admin123
</code></pre>

<p>登陆完的界面
<img src="http://jueqingsizhe66.github.io/images/java/nexus/repositories.png" alt="login" /></p>

<p>配置中心仓库:</p>

<p>中心仓库设置download remote indexes为真，为设置本地私服提供源。
<img src="http://jueqingsizhe66.github.io/images/java/nexus/central.png" alt="central" /></p>

<p>配置了release和snapshot仓库
<img src="http://jueqingsizhe66.github.io/images/java/nexus/release.png" alt="release" />
<img src="http://jueqingsizhe66.github.io/images/java/nexus/snapshot.png" alt="snapshot" /></p>

<p>然后配置了第三方插件
<img src="http://jueqingsizhe66.github.io/images/java/nexus/third.png" alt="third" /></p>

<p><strong>进入最关键的public Repositories设置</strong></p>

<p><img src="http://jueqingsizhe66.github.io/images/java/nexus/public.png" alt="public" /></p>

<p>有时候可以使用试用Scheduled Tasks观看库的index是否正常进行。
<img src="http://jueqingsizhe66.github.io/images/java/nexus/schedule.png" alt="scheduled" /></p>

<hr/>




<h2 id="imp">镜像私服配置</h2>


<p>maven中的settings.xml登陆私服的账户密码设置
<img src="http://jueqingsizhe66.github.io/images/java/nexus/user.png" alt="user" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;servers&gt;
</span><span class='line'>    &lt;server&gt; 
</span><span class='line'>        &lt;id&gt;nexus-release&lt;/id&gt;
</span><span class='line'>        &lt;username&gt;admin&lt;/username&gt;
</span><span class='line'>        &lt;password&gt;admin123&lt;/password&gt;
</span><span class='line'>    &lt;/server&gt; 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    &lt;server&gt; 
</span><span class='line'>        &lt;id&gt;nexus-snapshot&lt;/id&gt;
</span><span class='line'>        &lt;username&gt;admin&lt;/username&gt;
</span><span class='line'>        &lt;password&gt;admin123&lt;/password&gt;
</span><span class='line'>    &lt;/server&gt; 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    &lt;server&gt; 
</span><span class='line'>        &lt;id&gt;nexus&lt;/id&gt;
</span><span class='line'>        &lt;username&gt;admin&lt;/username&gt;
</span><span class='line'>        &lt;password&gt;admin123&lt;/password&gt;
</span><span class='line'>    &lt;/server&gt; 
</span><span class='line'>      &lt;!-- server
</span><span class='line'>     | Specifies the authentication information to use when connecting to a particular server, identified by
</span><span class='line'>     | a unique name within the system (referred to by the 'id' attribute below).
</span><span class='line'>     |
</span><span class='line'>     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are
</span><span class='line'>     |       used together.
</span><span class='line'>     |
</span><span class='line'>    &lt;server&gt;
</span><span class='line'>      &lt;id&gt;deploymentRepo&lt;/id&gt;
</span><span class='line'>      &lt;username&gt;repouser&lt;/username&gt;
</span><span class='line'>      &lt;password&gt;repopwd&lt;/password&gt;
</span><span class='line'>    &lt;/server&gt;
</span><span class='line'>    --&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- Another sample, using keys to authenticate.
</span><span class='line'>    &lt;server&gt;
</span><span class='line'>      &lt;id&gt;siteServer&lt;/id&gt;
</span><span class='line'>      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;
</span><span class='line'>      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;
</span><span class='line'>    &lt;/server&gt;
</span><span class='line'>    --&gt;
</span><span class='line'>  &lt;/servers&gt;
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p><strong>镜像配置</strong></p>

<p>注意url链接的端口设置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;mirrors&gt;
</span><span class='line'>&lt;mirror&gt;
</span><span class='line'>    &lt;id&gt;nexus&lt;/id&gt;
</span><span class='line'>    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
</span><span class='line'>    &lt;url&gt;http://localhost:8089/nexus/content/groups/public/&lt;/url&gt;
</span><span class='line'>&lt;/mirror&gt;
</span><span class='line'>&lt;/mirrors&gt;
</span><span class='line'>&lt;profiles&gt;
</span><span class='line'>&lt;profile&gt;
</span><span class='line'>    &lt;id&gt;nexus&lt;/id&gt;
</span><span class='line'>&lt;repositories&gt;
</span><span class='line'>    &lt;repository&gt;
</span><span class='line'>        &lt;id&gt;central&lt;/id&gt;
</span><span class='line'>        &lt;url&gt;http://central&lt;/url&gt;
</span><span class='line'>        &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
</span><span class='line'>        &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
</span><span class='line'>    &lt;/repository&gt;
</span><span class='line'>&lt;/repositories&gt;
</span><span class='line'>&lt;pluginRepositories&gt;
</span><span class='line'>    &lt;pluginRepository&gt;
</span><span class='line'>        &lt;id&gt;central&lt;/id&gt;
</span><span class='line'>        &lt;url&gt;http://central&lt;/url&gt;
</span><span class='line'>        &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
</span><span class='line'>        &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
</span><span class='line'>    &lt;/pluginRepository&gt;
</span><span class='line'>&lt;/pluginRepositories&gt;
</span><span class='line'>&lt;/profile&gt;
</span><span class='line'>&lt;/profiles&gt;
</span><span class='line'>&lt;activeProfiles&gt;
</span><span class='line'>    &lt;activeProfile&gt;nexus&lt;/activeProfile&gt;
</span><span class='line'>&lt;/activeProfiles&gt;
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>在maven中一般是需要设置下载控件jar包放在哪里,在没有私服的情况下，我一般
可以在setting.xml中设置localRepository</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   | Default: ${user.home}/.m2/repository
</span><span class='line'>  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;
</span></code></pre></td></tr></table></div></figure>


<p>当然IDEA在导入项目或者新建项目的时候都会提醒Environment Variable,设置一下setting和local repository
(类似的思路需要在myeclipse配置)
<img src="http://jueqingsizhe66.github.io/images/java/nexus/setting.png" alt="impo" />
而私服nexus的存放地点，在nexus界面的时候就已经设置好了，所以也得在每台电脑操作一遍(<font color="red">一定不能错</font>)。</p>

<p>镜像的话，就不会执行maven的<code>mvn install</code>等命令还一直向外部仓库访问链接，结果是访问的链接
都是本地的，可看下节测试。</p>

<h2 id="ida">IDEA测试镜像私服</h2>


<p>现在只能通过这个激活了，下载license server
<img src="http://jueqingsizhe66.github.io/images/java/nexus/license.png" alt="license" /></p>

<p>测试结果如下:
<code>mvn site</code></p>

<p><img src="http://jueqingsizhe66.github.io/images/java/nexus/idea.png" alt="idea" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>INFO] artifact org.springframework:spring-beans: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-context: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-context-support: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-core: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-expression: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-instrument: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-instrument-tomcat: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-jdbc: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-jms: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-orm: checking for updates from nexus
</span><span class='line'>[INFO] artifact org.springframework:spring-oxm: checking for updates from nexus</span></code></pre></td></tr></table></div></figure>




<h2 id="result">结论</h2>


<p>整个配置过程有效，测试通过，进一步可以参考<a href="http://vdisk.weibo.com/s/za2TN71LdL1tl">maven实战 许晓斌</a>,里面包含了maven的坐标空间概念等，详细介绍了
maven系统的各个组成和集成测试环境的搭建。</p>

<p>可以拓展阅读<a href="http://blog.csdn.net/c1481118216/article/category/6250182">java blog</a>
三个有用工具包:</p>

<ul>
<li><a href="https://github.com/venusdrogon/feilong-platform">飞龙 javase javaee(国产)</a></li>
<li><a href="http://feilong-core.mydoc.io/?t=149471">飞龙特别用心的手册</a></li>
<li><a href="https://github.com/venusdrogon/feilong-core/wiki/install">可以玩玩feilong-platform平台的安装 以及mvn site产生好看的javadoc</a></li>
<li><a href="https://github.com/looly/hutool">Hutool javase(国产)</a></li>
<li><a href="http://www.hutool.cn/apidocs/">hutool API手册</a>  <a href="http://hutool.mydoc.io/">Hutool Wiki</a></li>
<li><a href="http://ibeetl.com/guide/#beetl">闲大赋 beetl 好用的模板引擎(国产)</a></li>
<li><a href="http://cn.vuejs.org/">vue.js火热的前端js框架(国产)</a></li>
</ul>


<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/10/javakai-fa-nexussi-fu-da-jian/'>http://jueqingsizhe66.github.io/blog/2017/02/10/javakai-fa-nexussi-fu-da-jian/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fortran读取csv文件]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/08/fortrandu-qu-csvwen-jian/"/>
    <updated>2017-02-08T17:29:29+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/08/fortrandu-qu-csvwen-jian</id>
    <content type="html"><![CDATA[<p>本文只是简单对一个文件读取模块DFile_mod的一个运用，并读取逗号分隔的csv文件。</p>

<!--more-->


<p><img src="http://jueqingsizhe66.github.io/images/fortrandebug/csv/csv1.png" alt="csvread" /></p>

<p>FileMod.f90:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">Module </span><span class="nv">DFile_Mod</span>
</span><span class='line'>  <span class="k">Implicit None</span>
</span><span class='line'>  <span class="c">!!**************************************</span>
</span><span class='line'>  <span class="c">!*  识别文件的空格和逗号作为分隔符</span>
</span><span class='line'>  <span class="c">!!*************************************** </span>
</span><span class='line'><span class="k">contains </span>
</span><span class='line'>
</span><span class='line'><span class="k">subroutine </span><span class="nv">binaryStreamType</span>
</span><span class='line'><span class="k">implicit none</span>
</span><span class='line'><span class="kt">integer</span> <span class="kd">::</span> <span class="nv">File_Unit</span>
</span><span class='line'><span class="kt">integer</span> <span class="kd">::</span> <span class="nv">File_UnitOutput</span>
</span><span class='line'>   <span class="c">!!**************************************</span>
</span><span class='line'>    <span class="c">!* DFile_Mod 变量定义  100%</span>
</span><span class='line'>    <span class="c">!!*************************************** </span>
</span><span class='line'>    <span class="kt">Character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="mi">512</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">cLine</span>
</span><span class='line'>    <span class="kt">integer</span> <span class="kd">::</span> <span class="nv">nRow</span><span class="p">,</span> <span class="nv">nCol</span>
</span><span class='line'>    <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;yezhaoliang&quot;</span><span class="p">,</span><span class="nv">addr</span><span class="o">=</span><span class="s2">&quot;zhangzhou&quot;</span>
</span><span class='line'>    <span class="kt">INTEGER</span> <span class="kd">::</span> <span class="nv">I</span>
</span><span class='line'><span class="k">type</span> <span class="kd">::</span> <span class="nv">data_head</span>
</span><span class='line'><span class="kt">integer</span><span class="p">(</span><span class="nb">kind</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">column</span>
</span><span class='line'><span class="k">end type </span>
</span><span class='line'>
</span><span class='line'><span class="k">type</span><span class="p">(</span><span class="nv">data_head</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">FileHead</span>
</span><span class='line'><span class="c">!real,allocatable :: g(:,:)</span>
</span><span class='line'><span class="kt">real</span><span class="p">,</span><span class="k">allocatable</span> <span class="kd">::</span> <span class="nv">firstColumn</span><span class="p">(:)</span>
</span><span class='line'><span class="kt">real</span><span class="p">,</span><span class="k">allocatable</span> <span class="kd">::</span> <span class="nv">secondColumn</span><span class="p">(:)</span>
</span><span class='line'><span class="kt">real</span><span class="p">,</span><span class="k">allocatable</span> <span class="kd">::</span> <span class="nv">thirdColumn</span><span class="p">(:)</span>
</span><span class='line'>
</span><span class='line'> <span class="k">Open</span><span class="p">(</span> <span class="nv">NewUnit</span><span class="o">=</span><span class="nv">File_Unit</span> <span class="p">,</span> <span class="nv">File</span> <span class="o">=</span> <span class="s1">&#39;./data/myfile.csv&#39;</span> <span class="p">)</span>
</span><span class='line'> <span class="k">Open</span><span class="p">(</span> <span class="nv">NewUnit</span><span class="o">=</span><span class="nv">File_UnitOutput</span> <span class="p">,</span> <span class="nv">File</span> <span class="o">=</span> <span class="s1">&#39;./data/myfile12.csv&#39;</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">nRow</span> <span class="o">=</span> <span class="nv">GetFileN</span><span class="p">(</span> <span class="nv">File_Unit</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span> <span class="o">*</span> <span class="p">,</span> <span class="o">*</span> <span class="p">)</span> <span class="s1">&#39;文件共&#39;</span><span class="p">,</span><span class="nv">nRow</span><span class="p">,</span><span class="s1">&#39;行！&#39;</span>
</span><span class='line'>  <span class="k">read</span><span class="p">(</span><span class="nv">File_Unit</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="nv">FileHead</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;m=&#39;</span><span class="p">,</span><span class="nv">FileHead</span><span class="p">%</span><span class="nv">column</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">allocate</span><span class="p">(</span><span class="nv">firstColumn</span><span class="p">(</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="k">allocate</span><span class="p">(</span><span class="nv">secondColumn</span><span class="p">(</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="k">allocate</span><span class="p">(</span><span class="nv">thirdColumn</span><span class="p">(</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">!! 流方式读取</span>
</span><span class='line'><span class="c">!  READ(File_Unit) g</span>
</span><span class='line'>
</span><span class='line'><span class="mi">250</span> <span class="k">format</span><span class="p">(</span><span class="mi">3</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="mi">251</span> <span class="k">format</span><span class="p">(</span><span class="nv">I4</span><span class="p">,</span><span class="nv">I4</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="mi">252</span> <span class="k">format</span> <span class="p">(</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="mi">253</span> <span class="k">format</span> <span class="p">(</span><span class="nv">I4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">I4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="k">Do </span><span class="nv">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="k">read</span><span class="p">(</span><span class="nv">File_Unit</span><span class="p">,</span><span class="mi">251</span><span class="p">)</span> <span class="nv">firstColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">),</span><span class="nv">secondColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">),</span><span class="nv">thirdColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span>
</span><span class='line'> <span class="k">end Do</span>
</span><span class='line'><span class="k">  DO </span><span class="nv">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">,</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>   <span class="c">!write(*,&#39;(f10.4,A,f10.4,A,f10.4)&#39;)  firstColumn(i),&#39;,&#39;,secondColumn(i),&#39;,&#39;,thirdColumn(i)</span>
</span><span class='line'>   <span class="k">write</span><span class="p">(</span><span class="nv">File_UnitOutput</span><span class="p">,</span><span class="mi">253</span><span class="p">)</span>  <span class="nv">firstColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="s1">&#39;,--&#39;</span><span class="p">,</span><span class="nv">secondColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="s1">&#39;,--&#39;</span><span class="p">,</span><span class="nv">thirdColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end do</span>
</span><span class='line'>
</span><span class='line'><span class="k">deallocate</span><span class="p">(</span><span class="nv">firstColumn</span><span class="p">)</span>
</span><span class='line'><span class="k">deallocate</span><span class="p">(</span><span class="nv">secondColumn</span><span class="p">)</span>
</span><span class='line'><span class="k">deallocate</span><span class="p">(</span><span class="nv">thirdColumn</span><span class="p">)</span>
</span><span class='line'><span class="k">close</span><span class="p">(</span><span class="nv">File_Unit</span><span class="p">)</span>
</span><span class='line'><span class="k">close</span><span class="p">(</span><span class="nv">File_UnitOutput</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">!Do i = 1, nRow</span>
</span><span class='line'>  <span class="c">!  Do j = 1, FileHead%column</span>
</span><span class='line'>  <span class="c">!</span>
</span><span class='line'>  <span class="c">!  end do</span>
</span><span class='line'>  <span class="c">!end do</span>
</span><span class='line'>
</span><span class='line'><span class="k">end subroutine </span><span class="nv">binaryStreamType</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">subroutine </span><span class="nv">testType</span>
</span><span class='line'><span class="k">implicit none</span>
</span><span class='line'><span class="kt">integer</span> <span class="kd">::</span> <span class="nv">File_Unit</span>
</span><span class='line'><span class="kt">integer</span> <span class="kd">::</span> <span class="nv">File_UnitOutput</span>
</span><span class='line'>   <span class="c">!!**************************************</span>
</span><span class='line'>    <span class="c">!* DFile_Mod 变量定义  100%</span>
</span><span class='line'>    <span class="c">!!*************************************** </span>
</span><span class='line'>    <span class="kt">Character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="mi">512</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">cLine</span>
</span><span class='line'>    <span class="kt">integer</span> <span class="kd">::</span> <span class="nv">nRow</span><span class="p">,</span> <span class="nv">nCol</span>
</span><span class='line'>    <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;yezhaoliang&quot;</span><span class="p">,</span><span class="nv">addr</span><span class="o">=</span><span class="s2">&quot;zhangzhou&quot;</span>
</span><span class='line'>    <span class="kt">INTEGER</span> <span class="kd">::</span> <span class="nv">I</span>
</span><span class='line'><span class="k">type</span> <span class="kd">::</span> <span class="nv">data_head</span>
</span><span class='line'><span class="kt">integer</span><span class="p">(</span><span class="nb">kind</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">column</span>
</span><span class='line'><span class="k">end type </span>
</span><span class='line'>
</span><span class='line'><span class="k">type</span><span class="p">(</span><span class="nv">data_head</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">FileHead</span>
</span><span class='line'><span class="c">!real,allocatable :: g(:,:)</span>
</span><span class='line'><span class="kt">real</span><span class="p">,</span><span class="k">allocatable</span> <span class="kd">::</span> <span class="nv">firstColumn</span><span class="p">(:)</span>
</span><span class='line'><span class="kt">real</span><span class="p">,</span><span class="k">allocatable</span> <span class="kd">::</span> <span class="nv">secondColumn</span><span class="p">(:)</span>
</span><span class='line'><span class="kt">real</span><span class="p">,</span><span class="k">allocatable</span> <span class="kd">::</span> <span class="nv">thirdColumn</span><span class="p">(:)</span>
</span><span class='line'>
</span><span class='line'> <span class="k">Open</span><span class="p">(</span> <span class="nv">NewUnit</span><span class="o">=</span><span class="nv">File_Unit</span> <span class="p">,</span> <span class="nv">File</span> <span class="o">=</span> <span class="s1">&#39;./data/A001.csv&#39;</span> <span class="p">)</span>
</span><span class='line'> <span class="k">Open</span><span class="p">(</span> <span class="nv">NewUnit</span><span class="o">=</span><span class="nv">File_UnitOutput</span> <span class="p">,</span> <span class="nv">File</span> <span class="o">=</span> <span class="s1">&#39;./data/A0012.csv&#39;</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">nRow</span> <span class="o">=</span> <span class="nv">GetFileN</span><span class="p">(</span> <span class="nv">File_Unit</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span> <span class="o">*</span> <span class="p">,</span> <span class="o">*</span> <span class="p">)</span> <span class="s1">&#39;文件共&#39;</span><span class="p">,</span><span class="nv">nRow</span><span class="p">,</span><span class="s1">&#39;行！&#39;</span>
</span><span class='line'>  <span class="k">read</span><span class="p">(</span><span class="nv">File_Unit</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="nv">FileHead</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;m=&#39;</span><span class="p">,</span><span class="nv">FileHead</span><span class="p">%</span><span class="nv">column</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">allocate</span><span class="p">(</span><span class="nv">firstColumn</span><span class="p">(</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="k">allocate</span><span class="p">(</span><span class="nv">secondColumn</span><span class="p">(</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="k">allocate</span><span class="p">(</span><span class="nv">thirdColumn</span><span class="p">(</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">!! 流方式读取</span>
</span><span class='line'><span class="c">!  READ(File_Unit) g</span>
</span><span class='line'>
</span><span class='line'><span class="mi">250</span> <span class="k">format</span><span class="p">(</span><span class="mi">3</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="mi">251</span> <span class="k">format</span><span class="p">(</span><span class="nv">I4</span><span class="p">,</span><span class="nv">I4</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="mi">252</span> <span class="k">format</span> <span class="p">(</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="mi">253</span> <span class="k">format</span> <span class="p">(</span><span class="nv">I4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">I4</span><span class="p">,</span><span class="nv">A</span><span class="p">,</span><span class="nv">f10</span><span class="mf">.4</span><span class="p">)</span>
</span><span class='line'><span class="k">Do </span><span class="nv">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="k">read</span><span class="p">(</span><span class="nv">File_Unit</span><span class="p">,</span><span class="mi">251</span><span class="p">)</span> <span class="nv">firstColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">),</span><span class="nv">secondColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">),</span><span class="nv">thirdColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span>
</span><span class='line'> <span class="k">end Do</span>
</span><span class='line'><span class="k">  DO </span><span class="nv">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">,</span><span class="nv">nRow</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>   <span class="c">!write(*,&#39;(f10.4,A,f10.4,A,f10.4)&#39;)  firstColumn(i),&#39;,&#39;,secondColumn(i),&#39;,&#39;,thirdColumn(i)</span>
</span><span class='line'>   <span class="k">write</span><span class="p">(</span><span class="nv">File_UnitOutput</span><span class="p">,</span><span class="mi">253</span><span class="p">)</span>  <span class="nv">firstColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="s1">&#39;,--&#39;</span><span class="p">,</span><span class="nv">secondColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="s1">&#39;,--&#39;</span><span class="p">,</span><span class="nv">thirdColumn</span><span class="p">(</span><span class="nv">i</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end do</span>
</span><span class='line'>
</span><span class='line'><span class="k">deallocate</span><span class="p">(</span><span class="nv">firstColumn</span><span class="p">)</span>
</span><span class='line'><span class="k">deallocate</span><span class="p">(</span><span class="nv">secondColumn</span><span class="p">)</span>
</span><span class='line'><span class="k">deallocate</span><span class="p">(</span><span class="nv">thirdColumn</span><span class="p">)</span>
</span><span class='line'><span class="k">close</span><span class="p">(</span><span class="nv">File_Unit</span><span class="p">)</span>
</span><span class='line'><span class="k">close</span><span class="p">(</span><span class="nv">File_UnitOutput</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">!Do i = 1, nRow</span>
</span><span class='line'>  <span class="c">!  Do j = 1, FileHead%column</span>
</span><span class='line'>  <span class="c">!</span>
</span><span class='line'>  <span class="c">!  end do</span>
</span><span class='line'>  <span class="c">!end do</span>
</span><span class='line'>
</span><span class='line'><span class="k">end subroutine </span><span class="nv">testType</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="kt">Integer </span><span class="k">Function </span><span class="nv">GetDataN</span><span class="p">(</span> <span class="nv">cStr</span> <span class="p">)</span>
</span><span class='line'>    <span class="kt">Character</span><span class="p">(</span> <span class="nb">Len</span> <span class="o">=</span> <span class="o">*</span> <span class="p">)</span> <span class="p">,</span> <span class="k">Intent</span><span class="p">(</span> <span class="nv">IN</span> <span class="p">)</span> <span class="kd">::</span> <span class="nv">cStr</span>
</span><span class='line'>    <span class="kt">Integer</span> <span class="kd">::</span> <span class="nv">i</span>
</span><span class='line'>    <span class="kt">Logical</span> <span class="kd">::</span> <span class="nv">bIsSeparator</span> <span class="p">,</span> <span class="nv">bIsQuote</span>
</span><span class='line'>    <span class="nv">GetDataN</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="nv">bIsSeparator</span> <span class="o">=</span> <span class="nb">.TRUE.</span>
</span><span class='line'>    <span class="nv">bIsQuote</span> <span class="o">=</span> <span class="nb">.FALSE.</span>
</span><span class='line'>    <span class="k">Do </span><span class="nv">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">,</span> <span class="nb">Len_Trim</span><span class="p">(</span> <span class="nv">cStr</span> <span class="p">)</span>
</span><span class='line'>      <span class="k">Select Case</span><span class="p">(</span> <span class="nv">cStr</span><span class="p">(</span><span class="nv">i</span><span class="p">:</span><span class="nv">i</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>      <span class="k">Case</span><span class="p">(</span> <span class="s1">&#39;&quot;&#39;</span> <span class="p">,</span> <span class="s2">&quot;&#39;&quot;</span> <span class="p">)</span> <span class="c">!// 如果遇到引号</span>
</span><span class='line'>        <span class="k">If</span> <span class="p">(</span> <span class="ow">.Not.</span><span class="nv">bIsQuote</span> <span class="p">)</span> <span class="nv">GetDataN</span> <span class="o">=</span> <span class="nv">GetDataN</span> <span class="o">+</span> <span class="mi">1</span>  <span class="c">!//如果不在引号中，则增加一个数据</span>
</span><span class='line'>        <span class="nv">bIsQuote</span> <span class="o">=</span> <span class="ow">.Not.</span><span class="nv">bIsQuote</span> <span class="c">!// 引号结束或开始</span>
</span><span class='line'>        <span class="nv">bIsSeparator</span> <span class="o">=</span> <span class="nb">.FALSE.</span>
</span><span class='line'>      <span class="k">Case</span><span class="p">(</span> <span class="s2">&quot; &quot;</span> <span class="p">,</span> <span class="s2">&quot;,&quot;</span> <span class="p">,</span> <span class="nb">char</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span> <span class="p">)</span> <span class="c">!// 如果遇到分隔符</span>
</span><span class='line'>        <span class="k">If</span> <span class="p">(</span> <span class="ow">.Not.</span><span class="nv">bIsQuote</span> <span class="p">)</span> <span class="k">then</span>  <span class="c">!// 分隔符如果不在引号中</span>
</span><span class='line'>          <span class="nv">bIsSeparator</span> <span class="o">=</span> <span class="nb">.TRUE.</span>
</span><span class='line'>        <span class="k">End If</span>
</span><span class='line'><span class="k">      Case </span><span class="nv">Default</span>
</span><span class='line'>        <span class="k">If</span> <span class="p">(</span> <span class="nv">bIsSeparator</span> <span class="p">)</span> <span class="k">then</span>
</span><span class='line'><span class="k">          </span><span class="nv">GetDataN</span> <span class="o">=</span> <span class="nv">GetDataN</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">End If</span>
</span><span class='line'><span class="k">        </span><span class="nv">bIsSeparator</span> <span class="o">=</span> <span class="nb">.FALSE.</span>
</span><span class='line'>      <span class="k">End Select</span>
</span><span class='line'><span class="k">    End Do</span>
</span><span class='line'><span class="k">  End Function </span><span class="nv">GetDataN</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">Function </span><span class="nv">f_numbervars</span><span class="p">(</span><span class="nv">vars</span><span class="p">)</span> <span class="nv">result</span><span class="p">(</span><span class="nv">numvars</span><span class="p">)</span>
</span><span class='line'>    <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=*</span><span class="p">),</span> <span class="k">intent</span><span class="p">(</span><span class="nv">in</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">vars</span>
</span><span class='line'>    <span class="kt">integer</span> <span class="kd">::</span> <span class="nv">numvars</span>
</span><span class='line'>    <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="nb">len</span><span class="p">(</span><span class="nv">vars</span><span class="p">))</span> <span class="kd">::</span> <span class="nv">tmpvars</span>
</span><span class='line'>    <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="mi">256</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">tmpvar</span>
</span><span class='line'>    <span class="nv">tmpvars</span> <span class="o">=</span> <span class="nb">trim</span><span class="p">(</span><span class="nb">adjustl</span><span class="p">(</span><span class="nv">vars</span><span class="p">))</span>
</span><span class='line'>    <span class="nv">numvars</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">do while</span> <span class="p">(</span><span class="nb">len_trim</span><span class="p">(</span><span class="nv">tmpvars</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="k">read</span><span class="p">(</span><span class="nv">tmpvars</span><span class="p">,</span> <span class="o">*</span><span class="p">)</span> <span class="nv">tmpvar</span>
</span><span class='line'>      <span class="nv">numvars</span> <span class="o">=</span> <span class="nv">numvars</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>      <span class="nv">tmpvars</span> <span class="o">=</span> <span class="nv">tmpvars</span><span class="p">(</span><span class="nb">index</span><span class="p">(</span><span class="nv">tmpvars</span><span class="p">,</span> <span class="nb">trim</span><span class="p">(</span><span class="nv">tmpvar</span><span class="p">))</span><span class="o">+</span><span class="nb">len_trim</span><span class="p">(</span><span class="nv">tmpvar</span><span class="p">):)</span>
</span><span class='line'>    <span class="k">end do</span>
</span><span class='line'><span class="k">  End Function </span><span class="nv">f_numbervars</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">Integer </span><span class="k">Function </span><span class="nv">GetFileN</span><span class="p">(</span> <span class="nv">iFileUnit</span> <span class="p">)</span>
</span><span class='line'>  <span class="c">!// 此函数应在打开文件后立即调用。调用后读取位置返回文件起始位置</span>
</span><span class='line'>    <span class="k">Implicit None</span>
</span><span class='line'><span class="k">    </span><span class="kt">Integer</span> <span class="p">,</span> <span class="k">Intent</span><span class="p">(</span> <span class="nv">IN</span> <span class="p">)</span> <span class="kd">::</span> <span class="nv">iFileUnit</span>
</span><span class='line'>    <span class="kt">character</span><span class="p">(</span> <span class="nb">Len</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">)</span> <span class="kd">::</span> <span class="nv">cDummy</span>
</span><span class='line'>    <span class="kt">integer</span> <span class="kd">::</span> <span class="nv">ierr</span>
</span><span class='line'>    <span class="nv">GetFileN</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">Rewind</span><span class="p">(</span> <span class="nv">iFileUnit</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">Do</span>
</span><span class='line'><span class="k">      Read</span><span class="p">(</span> <span class="nv">iFileUnit</span> <span class="p">,</span> <span class="o">*</span> <span class="p">,</span> <span class="nv">ioStat</span> <span class="o">=</span> <span class="nv">ierr</span> <span class="p">)</span> <span class="nv">cDummy</span>
</span><span class='line'>      <span class="k">If</span><span class="p">(</span> <span class="nv">ierr</span> <span class="o">/=</span> <span class="mi">0</span> <span class="p">)</span> <span class="k">Exit</span>
</span><span class='line'><span class="k">      </span><span class="nv">GetFileN</span> <span class="o">=</span> <span class="nv">GetFileN</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">End Do</span>
</span><span class='line'><span class="k">    Rewind</span><span class="p">(</span> <span class="nv">iFileUnit</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">End Function </span><span class="nv">GetFileN</span>
</span><span class='line'>
</span><span class='line'><span class="k">End Module </span><span class="nv">DFile_Mod</span>
</span></code></pre></td></tr></table></div></figure>


<p>主函数main.f90:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">program </span><span class="nv">Main</span>
</span><span class='line'>
</span><span class='line'><span class="k">use </span><span class="nv">DFile_Mod</span>
</span><span class='line'><span class="k">Implicit none</span>
</span><span class='line'>
</span><span class='line'><span class="k">   </span><span class="kt">INTEGER</span> <span class="kd">::</span> <span class="nv">I</span>
</span><span class='line'>   <span class="c">!!**************************************</span>
</span><span class='line'>    <span class="c">!* DFile_Mod 变量定义  100%</span>
</span><span class='line'>    <span class="c">!!*************************************** </span>
</span><span class='line'>    <span class="c">!Character(len=512) :: cLine</span>
</span><span class='line'>    <span class="c">!integer :: nRow, nCol</span>
</span><span class='line'>    <span class="c">!character(len=20) :: name=&quot;yezhaoliang&quot;,addr=&quot;zhangzhou&quot; </span>
</span><span class='line'>    <span class="c">!**************************************</span>
</span><span class='line'>    <span class="c">!*  测试DFile_Mod   100%</span>
</span><span class='line'>    <span class="c">!*************************************** </span>
</span><span class='line'>
</span><span class='line'> <span class="c">!Open( 53 , File = &#39;./data/in.txt&#39; )</span>
</span><span class='line'>  <span class="c">!Open( 53 , File = &#39;./data/myfile.csv&#39; )</span>
</span><span class='line'>  <span class="c">!</span>
</span><span class='line'>  <span class="c">!nRow = GetFileN( 53 )</span>
</span><span class='line'>  <span class="c">!write( * , * ) &#39;文件共&#39;,nRow,&#39;行！&#39;</span>
</span><span class='line'>  <span class="c">!Do i = 1 , nRow</span>
</span><span class='line'>  <span class="c">!  read( 53 , &#39;(a512)&#39; ) cLine</span>
</span><span class='line'>  <span class="c">!  nCol = GetDataN( cLine )</span>
</span><span class='line'>  <span class="c">!  !nCol = f_numbervars( cLine )</span>
</span><span class='line'>  <span class="c">!  write( * , * ) i,&#39;行有&#39;,nCol,&#39;个数据&#39;</span>
</span><span class='line'>  <span class="c">!End Do</span>
</span><span class='line'>  <span class="k">call </span><span class="nv">binaryStreamType</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">Close</span><span class="p">(</span> <span class="mi">53</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">end program </span><span class="nv">Main</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置文件in.txt:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="p">,</span> <span class="nv">fsd</span>
</span><span class='line'><span class="mi">4</span> <span class="mi">5</span> <span class="mi">6</span> <span class="mi">7</span> <span class="p">:</span> <span class="nv">asd</span>
</span><span class='line'><span class="mi">8</span> <span class="mi">9</span> <span class="mi">10</span> <span class="mi">11</span> <span class="mi">12</span>
</span><span class='line'><span class="mi">13</span> <span class="nv">f</span> <span class="nv">sadf</span> <span class="c">! gad</span>
</span><span class='line'><span class="mi">14</span> <span class="mi">15</span>
</span></code></pre></td></tr></table></div></figure>


<p>载入visual studio基本上就能运行。</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/08/fortrandu-qu-csvwen-jian/'>http://jueqingsizhe66.github.io/blog/2017/02/08/fortrandu-qu-csvwen-jian/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl读取mysql数据库]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/08/perldu-qu-mysqlshu-ju-ku/"/>
    <updated>2017-02-08T17:25:49+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/08/perldu-qu-mysqlshu-ju-ku</id>
    <content type="html"><![CDATA[<p>perl中常见的文件打开关闭有open和IO模块等，而有时候涉及大量的
数据保存和打开的时候，就得借助数据库的使用，提供缓存的功能，并
使得保存的数据占用量最少，访问更快捷。下面就perl的mysql数据库访问
做一个简要的介绍。</p>

<!--more-->




<h2 id="perldbi">1. 数据库访问原理</h2>


<ol>
<li>加载对应数据库驱动</li>
<li>获得相应的连接</li>
<li>准备需要的查询数据 删除数据 更新数据</li>
<li>执行sql语句</li>
<li>获得相应的结果</li>
</ol>


<h2 id="perldbi">2. perl DBI mysql实现</h2>


<p>What is DBI?</p>

<pre><code>"The DBI is the standard database interface module for Perl. 
It defines a set of methods, variables and conventions that provide a 
consistent database interface independent of the actual database being used."
-- Tim Bunce
</code></pre>

<ol>
<li>安装perl dbi</li>
<li>安装perl dbd:mysql驱动</li>
<li>加载数据库驱动dsn</li>
<li>从dsn获取相应的链接connect方法</li>
<li>执行相应的sql语句</li>
<li>注意，处理完毕最好做一个关闭操作(<font color="red"><strong>这是一个技术问题，也是德行问题和习惯问题，编程的很多技术都是需要打开和关闭两个过程配对呈现</strong></font>)</li>
</ol>


<p>具体可以参考</p>

<ul>
<li><a href="http://dbi.perl.org/">perl dbi官网手册</a></li>
<li><a href="http://log4think.com/perl_and_dbi/">Perl与数据库DBI快速入门</a></li>
<li><a href="http://www.perl.com/pub/1999/10/DBI.html">A short guid of the dbi programming</a></li>
<li><a href="http://www.cnblogs.com/homezzm/archive/2011/07/22/2113618.html">perl DBI 总结</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_54dd80920102v8f5.html">perl dbi链接mysql中文乱码</a></li>
<li><a href="http://www.jb51.net/article/65791.htm">使用Perl DBI操作MySQL的一些建议</a></li>
<li><a href="http://log4think.com/perl_fast_tutorial/">perl快速入门</a><font color="red"><strong> 给出了所有的技术语言都可以由main函数引出很多其他的, 把技术当成你的习惯</strong></font></li>
<li><a href="http://vdisk.weibo.com/s/ah8r1yUxop3dO">一本perl参考书: Programming_the_Perl_DBI </a>
该建议使用binmode解决乱码问题，</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="n">utf8</span><span class="p">;</span>
</span><span class='line'><span class="nb">binmode</span><span class="p">(</span><span class="bp">STDOUT</span><span class="p">,</span> <span class="s">&#39;:encoding(utf8)&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nb">binmode</span><span class="p">(</span><span class="bp">STDIN</span><span class="p">,</span> <span class="s">&#39;:encoding(utf8)&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nb">binmode</span><span class="p">(</span><span class="bp">STDERR</span><span class="p">,</span> <span class="s">&#39;:encoding(utf8)&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://blog.csdn.net/zzq900503/article/details/14454963">perl DBI使用详解</a></li>
</ul>


<p>也可以直接在命令行使用<code>perldoc dbi</code> 查看dbi文档信息</p>

<h2 id="perltest"> 3. 技术解决方案</h2>


<p>feiji.txt:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="err">汽车在高速行驶时，根据空气动力学原理，在行驶过程中会遇到空气阻力，围绕汽车重心同时产生纵向、侧向和垂直上升的三个方向的空气动力量，其中纵向为空气阻力。</span>
</span><span class='line'><span class="err">为了有效地减少并克服汽车高速行驶时空气阻力的影响，人们设计使用了汽车尾翼，其作用就是使空气对汽车产生第四种作用力，即产生较大的对地面的附着力，它能抵消一部分升力，有效控制汽车上浮，使风阻系数相应减小，使汽车能紧贴在道路地面行驶，从而提高行驶的稳定性能。</span>
</span><span class='line'>
</span><span class='line'><span class="err">工作原理</span>
</span><span class='line'><span class="err">汽车尾翼作用</span>
</span><span class='line'><span class="err">汽车尾翼的作用，就是在汽车高速行驶时，使空气阻力形成一个向下的压力，尽量抵消升力，有效控制气流下压力，使风阻系数相应减小，增加汽车的高速行驶稳定性；由于尾翼能降低汽车的空气阻力，因此高速汽车加装尾翼对于节省燃油也有一定的帮助；同时也使汽车的外形更加美观，起到一定的装饰作用。</span>
</span><span class='line'><span class="err">汽车尾翼分类</span>
</span><span class='line'><span class="err">玻璃钢尾翼：这类尾翼造型多样，有鸭舌状的、机翼状的，也有直板式的．比较好做造型，不过玻璃钢材质比较脆，韧性和刚性都较差，价格比较便宜。</span>
</span><span class='line'><span class="err">铝合金尾翼：这类尾翼导流和散热效果不错，而且价格适中，不过重量要比其他材质的尾翼稍重些。</span>
</span><span class='line'><span class="err">碳纤维尾翼：碳纤维尾翼刚性和耐久性都非常好．不仅重量轻而且也是最美观的一种尾翼．现在广泛被</span><span class="n">F1</span><span class="err">赛车采用不过价格比较昂贵。</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>source code for perl:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl </span>
</span><span class='line'><span class="c1">#===============================================================================</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#         FILE: testdbi.pl</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#        USAGE: ./testdbi.pl  </span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#  DESCRIPTION: </span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#      OPTIONS: ---</span>
</span><span class='line'><span class="c1"># REQUIREMENTS: ---</span>
</span><span class='line'><span class="c1">#         BUGS: ---</span>
</span><span class='line'><span class="c1">#        NOTES: ---</span>
</span><span class='line'><span class="c1">#    Author:  Ye Zhaoliang</span>
</span><span class='line'><span class="c1"># ORGANIZATION: </span>
</span><span class='line'><span class="c1">#      VERSION: 1.0</span>
</span><span class='line'><span class="c1">#      CREATED: 2016/12/31 1:44:24</span>
</span><span class='line'><span class="c1">#     REVISION: ---</span>
</span><span class='line'><span class="c1">#===============================================================================</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">utf8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nn">CGI::</span><span class="n">Carp</span> <span class="s">&quot;fatalsToBrowser&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">DBI</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">CGI</span> <span class="sx">qw (:standard </span><span class="n">escapeHTML</span> <span class="n">escape</span><span class="p">);</span>
</span><span class='line'><span class="k">my</span> <span class="p">(</span><span class="nv">$driver_name</span><span class="p">,</span> <span class="nv">$db_name</span><span class="p">,</span> <span class="nv">$db_host</span><span class="p">,</span> <span class="nv">$db_sock</span><span class="p">,</span> <span class="nv">$db_port</span><span class="p">,</span> <span class="nv">$db_user</span><span class="p">,</span> <span class="nv">$db_pswd</span><span class="p">,</span> <span class="nv">$dsn</span><span class="p">);</span>
</span><span class='line'><span class="nv">$driver_name</span> <span class="o">=</span> <span class="s">&#39;mysql&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$db_name</span> <span class="o">=</span> <span class="s">&#39;mysql&#39;</span><span class="p">;</span> <span class="c1"># database name</span>
</span><span class='line'><span class="nv">$db_host</span> <span class="o">=</span> <span class="s">&#39;localhost&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$db_sock</span> <span class="o">=</span> <span class="s">&#39;/tmp/mysql.sock&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$db_port</span> <span class="o">=</span> <span class="s">&#39;3306&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$db_user</span> <span class="o">=</span> <span class="s">&#39;root&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$db_pswd</span> <span class="o">=</span> <span class="s">&#39;root&#39;</span><span class="p">;</span>
</span><span class='line'><span class="c1"># data source</span>
</span><span class='line'><span class="nv">$dsn</span> <span class="o">=</span> <span class="s">&quot;dbi:mysql:database=${db_name};hostname=${db_host};mysql_socket=${db_sock};port=${db_port}&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1"># ... set up connection to database (not shown) ...</span>
</span><span class='line'><span class="c1"># connect mysql database</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$dbh</span> <span class="o">=</span> <span class="n">DBI</span> <span class="o">-&gt;</span> <span class="nb">connect</span> <span class="p">(</span><span class="nv">$dsn</span><span class="p">,</span> <span class="nv">$db_user</span><span class="p">,</span> <span class="nv">$db_pswd</span><span class="p">,</span>
</span><span class='line'><span class="p">{</span> <span class="n">RaiseError</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="n">PrintError</span> <span class="o">=&gt;</span> <span class="mi">0</span> <span class="p">});</span>
</span><span class='line'><span class="c1"># put out initial part of page</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$title</span> <span class="o">=</span> <span class="s">&quot;$db_name Database Browser&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1"># html header and start_html h1</span>
</span><span class='line'><span class="k">print</span> <span class="n">header</span> <span class="p">();</span>
</span><span class='line'><span class="k">print</span> <span class="n">start_html</span> <span class="p">(</span><span class="o">-</span><span class="n">titlk</span> <span class="o">=&gt;</span> <span class="nv">$title</span><span class="p">,</span> <span class="o">-</span><span class="n">bgcolor</span> <span class="o">=&gt;</span> <span class="s">&quot;white&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">print</span> <span class="n">h1</span> <span class="p">(</span><span class="nv">$title</span><span class="p">);</span>
</span><span class='line'><span class="c1"># parameters to look for in URL</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$tbl_name</span> <span class="o">=</span> <span class="n">param</span> <span class="p">(</span><span class="s">&quot;tbl_name&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$sort_col</span> <span class="o">=</span> <span class="n">param</span> <span class="p">(</span><span class="s">&quot;sort_col&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1"># If $tbl_name has no value, display a clickable list of tables.</span>
</span><span class='line'><span class="c1"># Otherwise, display contents of the given table. $sort_col, if</span>
</span><span class='line'><span class="c1"># set, indicates which column to sort by.</span>
</span><span class='line'>
</span><span class='line'><span class="o">!</span><span class="nb">defined</span> <span class="p">(</span><span class="nv">$tbl_name</span><span class="p">)</span> <span class="p">?</span> <span class="n">display_table_names</span> <span class="p">(</span><span class="nv">$dbh</span><span class="p">,</span> <span class="nv">$db_name</span><span class="p">)</span> <span class="p">:</span> <span class="n">display_table_contents</span> <span class="p">(</span><span class="nv">$dbh</span><span class="p">,</span> <span class="nv">$tbl_name</span><span class="p">,</span> <span class="nv">$sort_col</span><span class="p">);</span>
</span><span class='line'><span class="k">print</span> <span class="n">end_html</span> <span class="p">();</span>
</span><span class='line'><span class="k">sub </span><span class="nf">display_table_names</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">my</span> <span class="p">(</span><span class="nv">$dbh</span><span class="p">,</span> <span class="nv">$db_name</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## html p paragraph</span>
</span><span class='line'><span class="k">print</span> <span class="n">p</span> <span class="p">(</span><span class="s">&quot;Select a table by clicking on its name:&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1"># retrieve reference to single-column array of table names</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$ary_ref</span> <span class="o">=</span> <span class="nv">$dbh</span> <span class="o">-&gt;</span> <span class="n">selectcol_arrayref</span> <span class="p">(</span><span class="sx">qq{ SHOW TABLES FROM $db_name }</span><span class="p">);</span>
</span><span class='line'><span class="c1"># Construct a bullet list using the ul() (unordered list) and</span>
</span><span class='line'><span class="c1"># li() (list item) functions. Each item is a hyperlink that</span>
</span><span class='line'><span class="c1"># re-invokes the script to display a particular table.</span>
</span><span class='line'><span class="k">my</span> <span class="nv">@item</span><span class="p">;</span>
</span><span class='line'><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$tbl_name</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$ary_ref</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$url</span> <span class="o">=</span> <span class="nb">sprintf</span> <span class="p">(</span><span class="s">&quot;%s?tbl_name=%s&quot;</span><span class="p">,</span> <span class="n">url</span> <span class="p">(),</span> <span class="n">escape</span> <span class="p">(</span><span class="nv">$tbl_name</span><span class="p">));</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$link</span> <span class="o">=</span> <span class="n">a</span> <span class="p">({</span><span class="o">-</span><span class="n">href</span> <span class="o">=&gt;</span> <span class="nv">$url</span><span class="p">},</span> <span class="n">escapeHTML</span> <span class="p">(</span><span class="nv">$tbl_name</span><span class="p">));</span>
</span><span class='line'><span class="nb">push</span> <span class="p">(</span><span class="nv">@item</span><span class="p">,</span> <span class="n">li</span> <span class="p">(</span><span class="nv">$link</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">## list control</span>
</span><span class='line'><span class="k">print</span> <span class="n">ul</span> <span class="p">(</span><span class="nv">@item</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">sub </span><span class="nf">display_table_contents</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">my</span> <span class="p">(</span><span class="nv">$dbh</span><span class="p">,</span> <span class="nv">$tbl_name</span><span class="p">,</span> <span class="nv">$sort_col</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">@rows</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">@cells</span><span class="p">;</span>
</span><span class='line'><span class="c1"># if sort column not specified, use first column</span>
</span><span class='line'><span class="nv">$sort_col</span> <span class="o">=</span> <span class="s">&quot;1&quot;</span> <span class="k">if</span> <span class="o">!</span><span class="nb">defined</span> <span class="p">(</span><span class="nv">$sort_col</span><span class="p">);</span>
</span><span class='line'><span class="c1"># present a link that returns user to table list page</span>
</span><span class='line'><span class="c1"># p control widget</span>
</span><span class='line'><span class="k">print</span> <span class="n">p</span> <span class="p">(</span><span class="n">a</span> <span class="p">({</span><span class="o">-</span><span class="n">href</span> <span class="o">=&gt;</span> <span class="n">url</span> <span class="p">()},</span> <span class="s">&quot;Show Table List&quot;</span><span class="p">));</span>
</span><span class='line'><span class="k">print</span> <span class="n">p</span> <span class="p">(</span><span class="n">strong</span> <span class="p">(</span><span class="s">&quot;Contents of $tbl_name table:&quot;</span><span class="p">));</span>
</span><span class='line'><span class="c1">## select from database</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$sth</span> <span class="o">=</span> <span class="nv">$dbh</span> <span class="o">-&gt;</span> <span class="n">prepare</span> <span class="p">(</span><span class="sx">qq{</span>
</span><span class='line'><span class="sx">SELECT * FROM $tbl_name ORDER BY $sort_col</span>
</span><span class='line'><span class="sx">LIMIT 200</span>
</span><span class='line'><span class="sx">}</span><span class="p">);</span>
</span><span class='line'><span class="nv">$sth</span> <span class="o">-&gt;</span> <span class="n">execute</span> <span class="p">();</span>
</span><span class='line'><span class="c1"># Use the names of the columns in the database table as the</span>
</span><span class='line'><span class="c1"># headings in an HTML table. Make each name a hyperlink that</span>
</span><span class='line'><span class="c1"># causes the script to be reinvoked to redisplay the table,</span>
</span><span class='line'><span class="c1"># sorted by the named column.</span>
</span><span class='line'><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$col_name</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$sth</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">NAME</span><span class="p">}})</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$url</span> <span class="o">=</span> <span class="nb">sprintf</span> <span class="p">(</span><span class="s">&quot;%s?tbl_name=%s;sort_col=%s&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">url</span> <span class="p">(),</span>
</span><span class='line'><span class="n">escape</span> <span class="p">(</span><span class="nv">$tbl_name</span><span class="p">),</span>
</span><span class='line'><span class="n">escape</span> <span class="p">(</span><span class="nv">$col_name</span><span class="p">));</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$link</span> <span class="o">=</span> <span class="n">a</span> <span class="p">({</span><span class="o">-</span><span class="n">href</span> <span class="o">=&gt;</span> <span class="nv">$url</span><span class="p">},</span> <span class="n">escapeHTML</span> <span class="p">(</span><span class="nv">$col_name</span><span class="p">));</span>
</span><span class='line'><span class="nb">push</span> <span class="p">(</span><span class="nv">@cells</span><span class="p">,</span> <span class="n">th</span> <span class="p">(</span><span class="nv">$link</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">push</span> <span class="p">(</span><span class="nv">@rows</span><span class="p">,</span> <span class="n">Tr</span> <span class="p">(</span><span class="nv">@cells</span><span class="p">));</span>
</span><span class='line'><span class="c1"># display table rows</span>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="k">my</span> <span class="nv">@ary</span> <span class="o">=</span> <span class="nv">$sth</span> <span class="o">-&gt;</span> <span class="n">fetchrow_array</span> <span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nv">@cells</span> <span class="o">=</span> <span class="p">();</span>
</span><span class='line'><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$val</span> <span class="p">(</span><span class="nv">@ary</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1"># display value if non-empty, else display non-breaking space</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">defined</span> <span class="p">(</span><span class="nv">$val</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nv">$val</span> <span class="ow">ne</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nv">$val</span> <span class="o">=</span> <span class="n">escapeHTML</span> <span class="p">(</span><span class="nv">$val</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nv">$val</span> <span class="o">=</span> <span class="s">&quot; &quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">push</span> <span class="p">(</span><span class="nv">@cells</span><span class="p">,</span> <span class="n">td</span> <span class="p">(</span><span class="nv">$val</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">push</span> <span class="p">(</span><span class="nv">@rows</span><span class="p">,</span> <span class="n">Tr</span> <span class="p">(</span><span class="nv">@cells</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1"># display table with a border</span>
</span><span class='line'><span class="k">print</span> <span class="n">table</span> <span class="p">({</span><span class="o">-</span><span class="n">border</span> <span class="o">=&gt;</span> <span class="s">&quot;1&quot;</span><span class="p">},</span> <span class="nv">@rows</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/08/perldu-qu-mysqlshu-ju-ku/'>http://jueqingsizhe66.github.io/blog/2017/02/08/perldu-qu-mysqlshu-ju-ku/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl中文乱码问题]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/08/perlzhong-wen-luan-ma-wen-ti/"/>
    <updated>2017-02-08T17:23:58+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/08/perlzhong-wen-luan-ma-wen-ti</id>
    <content type="html"><![CDATA[<p>binmode可以很好的解决perl中问题，采用<a href="http://blog.chinaunix.net/uid-20735106-id-3438892.html">Encode1</a>,<a href="http://www.jb51.net/article/16041.htm">Encode</a>等方式不管用</p>

<!--more-->


<p>PerlFile.pl测试源码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl </span>
</span><span class='line'><span class="c1">#===============================================================================</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#         FILE: perlFile.pl</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#        USAGE: ./perlFile.pl  </span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#  DESCRIPTION: </span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#      OPTIONS: ---</span>
</span><span class='line'><span class="c1"># REQUIREMENTS: ---</span>
</span><span class='line'><span class="c1">#         BUGS: ---</span>
</span><span class='line'><span class="c1">#        NOTES: ---</span>
</span><span class='line'><span class="c1">#       AUTHOR: YOUR NAME (), </span>
</span><span class='line'><span class="c1"># ORGANIZATION: </span>
</span><span class='line'><span class="c1">#      VERSION: 1.0</span>
</span><span class='line'><span class="c1">#      CREATED: 2017/2/8 9:49:51</span>
</span><span class='line'><span class="c1">#     REVISION: ---</span>
</span><span class='line'><span class="c1">#===============================================================================</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">utf8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">binmode</span><span class="p">(</span><span class="bp">STDIN</span><span class="p">,</span><span class="s">&quot;:encoding(gb2312)&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">binmode</span><span class="p">(</span><span class="bp">STDOUT</span><span class="p">,</span><span class="s">&quot;:encoding(gb2312)&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span> <span class="o">&lt;&gt;</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">chomp</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="nv">$_</span><span class="p">,</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">last</span> <span class="k">if</span> <span class="nv">$_</span> <span class="o">=~</span> <span class="sr">m/q/xm</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">open</span><span class="p">(</span><span class="n">FEIJI</span><span class="p">,</span><span class="s">&quot;E:\\feiji.txt&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;can&#39;t open the file \n&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$car</span> <span class="o">=</span><span class="s">&quot;尾翼&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">•</span> <span class="nb">binmode</span><span class="p">(</span><span class="n">FEIJI</span><span class="p">,</span><span class="s">&quot;:encoding(gb2312)&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1"># binmode( STDIN,  &#39;:encoding(gbk2312)&#39; );</span>
</span><span class='line'> <span class="c1">#binmode( FEIJI,  &#39;:encoding(utf8)&#39; );</span>
</span><span class='line'> <span class="c1">#binmode( STDOUT, &#39;:encoding(gbk2312)&#39; );   </span>
</span><span class='line'> <span class="c1">#binmode( STDERR, &#39;:encoding(gbk2312)&#39; ); </span>
</span><span class='line'><span class="c1">#while( my $line = &lt;FEIJI&gt;){</span>
</span><span class='line'><span class="c1">#my $re = Encode::decode(&#39;GB2312&#39;,&#39;汽车&#39;);</span>
</span><span class='line'> <span class="k">my</span> <span class="nv">$count</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'> <span class="k">while</span><span class="p">(</span> <span class="sr">&lt;FEIJI&gt;</span><span class="p">){</span>
</span><span class='line'>     <span class="c1">#print &quot;$_ \n&quot; ;</span>
</span><span class='line'>    <span class="c1">#     print &quot;$_ \n&quot; if $_ =~ /.*$re.*/;</span>
</span><span class='line'><span class="c1">#    Encode::_utf8_on($_);</span>
</span><span class='line'>    <span class="c1">#    Encode::decode_utf8($_);</span>
</span><span class='line'>    <span class="c1">#print &quot;$_\n&quot; ;#if $_ =~ m/$car/xm;</span>
</span><span class='line'>    <span class="c1">#print &quot;$count: $_\n&quot; if $_ =~ m/$car/xm;</span>
</span><span class='line'>    <span class="c1">#$count +=1;</span>
</span><span class='line'>
</span><span class='line'>     <span class="sr">s/汽车/风力机/g</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/08/perlzhong-wen-luan-ma-wen-ti/'>http://jueqingsizhe66.github.io/blog/2017/02/08/perlzhong-wen-luan-ma-wen-ti/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一份有趣的fortran动态静态链接文]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/07/%5B%3F%5D-fen-you-qu-de-fortrandong-tai-jing-tai-lian-jie-wen/"/>
    <updated>2017-02-07T20:03:04+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/07/[?]-fen-you-qu-de-fortrandong-tai-jing-tai-lian-jie-wen</id>
    <content type="html"><![CDATA[<p>一张来自<a href="http://fcode.cn/">fcode</a>的有趣的静态和动态链接的比喻图，
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/usb.png" alt="staticdy" /></p>

<p>静态库是需要直接和exe文件打包在一起的，而动态库则是需要运行的时候才执行dll文件，
dll文件也是一个exe文件，只不过只能由对应的exe文件执行，无法人工执行。</p>

<ul>
<li><a href="#static">1. 静态链接</a></li>
<li><a href="#dynamic">2. 动态链接</a></li>
<li><a href="#compare">3. 两者比较</a></li>
<li><a href="#hun">4. fortran与c混编</a></li>
</ul>


<!--more-->




<h2 id="static">静态链接</h2>


<p>静态库lib,实际上是obj文件的集合，可认为是打包在一起的若干obj，</p>

<p>因此他的编译过程为：</p>

<ol>
<li><font color="red">编译子程序(f90)源代码，得到若干obj文件</font></li>
<li><font color="red">打包这些obj文件，成为<strong>lib静态库</strong></font></li>
</ol>


<p>他的使用比较简单：</p>

<p><font color="red">编译主程序(或其他子程序),链接时，<strong>带上lib</strong>文件即可</font>。</p>

<hr/>


<p><font color="red"><strong>注意</strong></font><br/>
在上面的f90源代码中可能包含了module片段。若干静态库中使用了module,那么编译还会产生mod内件。
<font color="green">每一个module对应一个同名的mod文件。</font></p>

<p>mod是什么？
mod文件可认为是module的&#8221;概述&#8221;,与c语言的&#8221;头文件&#8221;的做哟个相似，但与C语言需要自己书写头文件不同，
fortran的mod文件由编译器<font color="red"><strong>自动生成</strong></font>。</p>

<p>也就是说，当<code>use Module</code>时，编译器需<strong>能够</strong>找到对应的mod文件。因此有必要把静态库里产生的mod文件
保存起来，以便使用静态库时加载(<font color="red"><strong>mod文件一定得在lib目录下,这点很容易被遗忘。</strong></font>。</p>

<hr/>


<p><font color="green">提前准备公用的源代码:</font></p>

<p>sub.90:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">Subroutine </span><span class="nv">sub</span><span class="p">()</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;Xueqiu is a good man!&#39;</span>
</span><span class='line'><span class="k">End Subroutine </span><span class="nv">sub</span>
</span></code></pre></td></tr></table></div></figure>


<p>func.f90:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">MODULE </span><span class="nv">FUNCMOD</span>
</span><span class='line'>  <span class="k">IMPLICIT NONE</span>
</span><span class='line'>
</span><span class='line'><span class="k">CONTAINS</span>
</span><span class='line'>
</span><span class='line'><span class="k">  </span><span class="kt">INTEGER </span><span class="k">FUNCTION </span><span class="nv">FUNC</span><span class="p">()</span>
</span><span class='line'>    <span class="k">WRITE</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;THIS IS A FUNC!&#39;</span>
</span><span class='line'>    <span class="nv">FUNC</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">END FUNCTION </span><span class="nv">FUNC</span>
</span><span class='line'><span class="k">END MODULE </span><span class="nv">FUNCMOD</span>
</span></code></pre></td></tr></table></div></figure>


<p>main.f90:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">Program </span><span class="nv">testLib</span>
</span><span class='line'>  <span class="k">use </span><span class="nv">funcmod</span>
</span><span class='line'>  <span class="k">Implicit None</span>
</span><span class='line'><span class="k">  </span><span class="kt">integer</span> <span class="kd">::</span> <span class="nv">i</span>
</span><span class='line'>  <span class="nv">i</span> <span class="o">=</span> <span class="nv">func</span><span class="p">()</span>
</span><span class='line'>  <span class="k">call </span><span class="nv">sub</span><span class="p">()</span>
</span><span class='line'><span class="k">End Program </span><span class="nv">testLib</span>
</span></code></pre></td></tr></table></div></figure>


<hr/>


<hr/>


<hr/>


<h3> gfortran技术解决方案</h3>


<ul>
<li>第一步: 编译生成obj[和mod] 文件,</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="nv">gfortran</span> <span class="o">-</span><span class="nv">c</span> <span class="nv">sub</span><span class="err">.</span><span class="nv">f90</span> <span class="nv">func</span><span class="mf">.90</span>
</span></code></pre></td></tr></table></div></figure>


<p>生成文件列表如下:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="nv">funcmod</span><span class="err">.</span><span class="nb">mod</span>
</span><span class='line'><span class="nv">func</span><span class="err">.</span><span class="nv">o</span>
</span><span class='line'><span class="nv">sub</span><span class="err">.</span><span class="nv">o</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第二步: 然后再打包obj文件到lib文件</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="nv">ar</span> <span class="nv">rv</span> <span class="nv">my</span><span class="err">.</span><span class="nv">lib</span> <span class="nv">func</span><span class="err">.</span><span class="nv">o</span> <span class="nv">sub</span><span class="err">.</span><span class="nv">o</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后你现在就可以删掉func.o sub.o了(<code>rm -rf func.o sub.o</code>),
因为他们包含在my.lib中.</p>

<ul>
<li>第三步: 编译主文件，</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="nv">gfortran</span> <span class="o">-</span><span class="nv">c</span> <span class="nv">main</span><span class="err">.</span><span class="nv">f90</span>
</span><span class='line'><span class="nv">gfortran</span> <span class="nv">main</span><span class="err">.</span><span class="nv">o</span> <span class="nv">my</span><span class="err">.</span><span class="nv">lib</span> <span class="o">-</span><span class="nv">o</span> <span class="nv">main</span><span class="err">.</span><span class="nv">exe</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样就会生成对应的main.exe了。</p>

<hr/>


<hr/>


<hr/>




<h3> vs2015+ivf2017的技术解决方案:</h3>


<ul>
<li>第一步:</li>
</ul>


<p>新建一个static library项目,并添加sub.f90,func.f90到source文件夹下。</p>

<p><img src="http://jueqingsizhe66.github.io/images/fortrandebug/static/1.png" alt="static" /></p>

<ul>
<li>第二步: 生成解决方案</li>
</ul>


<p><img src="http://jueqingsizhe66.github.io/images/fortrandebug/static/2.png" alt="static2" />
这样就在debug目录下得到*.lib文件</p>

<p>注意：链接需要二个文件*.obj
和*.mod文件，而myfirstLib.lib仅仅是把*.obj打包了一下，所以
还得再ivf的<font color="red"><strong>Additional Include</strong></font>中添加mod文件路径</p>

<ul>
<li>第三步:</li>
</ul>


<p>新建一个testLib  console(/subsystem:console )的项目 用于测试myfirstlib</p>

<p><img src="http://jueqingsizhe66.github.io/images/fortrandebug/static/3.png" alt="test" />
注意由于在一个解决方案中存在多个项目所以得把test(包含主程序)设置为<font color="red">启动项目</font>。
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/static/4.png" alt="启动" /></p>

<ul>
<li>第四步:</li>
</ul>


<p>编译，生成解决方案。<font color="red"><strong>报错了</strong></font><br>。
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/static/5.png" alt="error" />
原因是没有找到*.o(func.o)包含的mod文件，解决方法是<font color="red">添加mod路径到additional include directories </font>
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/static/6.png" alt="correct" /></p>

<p>还有一个问题，我一般还需要<font color="red">生成的lib文件放在source目录下</font>，才可以编译成功，这点也需要小心。</p>

<p><font color="red"><strong>总结</strong></font>
设置lib路径的时候，在存在mod文件时候，一定得一同存在，否则未可能报符号丢失的错误。</p>

<hr/>


<hr/>


<hr/>




<h2 id="dynamic"> 动态链接</h2>


<p>动态库DLL,实际上也是可执行文件，与exe本质上是一样的。只不过dll通常
没有主程序而已（自己不能运行，只能由对应的主程序运行),他必须由exe在运行以后调用。</p>

<p>DLL的好处?
具有良好的可维护性，节约内存等特点。在windows(dll)，linux(so),mac等操作系统上，都
大量使用了DLL动态库。</p>

<p>动态链接库dll的编译过程是:</p>

<ol>
<li>编译子程序源代码，得到若干obj文件。</li>
<li>链接这些obj文件，得到dll文件（有可能带lib文件，如果是静态加载则无lib，如果是动态加载则有lib）</li>
<li>部分平台的编译器会得到导入库lib</li>
</ol>


<p>他的使用由两种方法(显示调用(动态),隐式调用(静态)):</p>

<ol>
<li>编译主程序(或其他子程序),链接时，带上导入库lib文件。</li>
<li>动态的利用系统函数加载DLL,如windows下的LoadLibrary和GetProcAddress。</li>
</ol>


<hr/>


<hr/>


<p>提前准备好公用的fortran源代码：</p>

<p><font color="red">sub.f90:</font></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">Subroutine </span><span class="nv">sub</span><span class="p">()</span>
</span><span class='line'>  <span class="c">!DEC$ ATTRIBUTES DLLEXPORT,ALIAS:&quot;sub&quot;::sub</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;Xueqiu is a good man!&#39;</span>
</span><span class='line'><span class="k">End Subroutine </span><span class="nv">sub</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意，!DEC$ ATTRIBUTES DLLEXPORT, ALIAS:&ldquo;sub&rdquo;::sub，是有用的exe间的符号对接。</strong></p>

<p><font color="red">func.f90:</font></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">Module </span><span class="nv">funcmod</span>
</span><span class='line'>  <span class="k">Implicit none</span>
</span><span class='line'>
</span><span class='line'><span class="k">contains</span>
</span><span class='line'>
</span><span class='line'><span class="k">  </span><span class="kt">Integer </span><span class="k">Function </span><span class="nv">func</span><span class="p">()</span>
</span><span class='line'>    <span class="c">!DEC$ ATTRIBUTES DLLEXPORT,ALIAS:&quot;func&quot;::func</span>
</span><span class='line'>    <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;This is a func!&#39;</span>
</span><span class='line'>    <span class="nv">func</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">End Function </span><span class="nv">func</span>
</span><span class='line'><span class="k">End Module </span><span class="nv">funcmod</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意，!DEC$ ATTRIBUTES DLLEXPORT, ALIAS:&ldquo;func&rdquo;::func，是有用的exe间的符号对接。</strong></p>

<p><font color="red">main.f90:</font>></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">Program </span><span class="nv">testDll</span>
</span><span class='line'>  <span class="k">use </span><span class="nv">funcmod</span>
</span><span class='line'>  <span class="k">Implicit None</span>
</span><span class='line'><span class="k">  </span><span class="kt">integer</span> <span class="kd">::</span> <span class="nv">i</span>
</span><span class='line'>  <span class="nv">i</span> <span class="o">=</span> <span class="nv">func</span><span class="p">()</span>
</span><span class='line'>  <span class="k">call </span><span class="nv">sub</span><span class="p">()</span>
</span><span class='line'><span class="k">End Program </span><span class="nv">testDll</span>
</span></code></pre></td></tr></table></div></figure>




<h3> gfortran的技术解决方案:</h3>


<ul>
<li>第一步: 生成so文件(linux下面)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="nv">gfotran</span> <span class="nv">sub</span><span class="err">.</span><span class="nv">f90</span> <span class="nv">func</span><span class="err">.</span><span class="nv">f90</span> <span class="o">-</span><span class="nv">shared</span> <span class="o">-</span><span class="nv">fPIC</span> <span class="o">-</span><span class="nv">o</span> <span class="nv">libmy</span><span class="err">.</span><span class="nv">so</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第二步: 直接引用即可</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="nv">gfortran</span> <span class="nv">main</span><span class="err">.</span><span class="nv">f90</span> <span class="nv">libmy</span><span class="err">.</span><span class="nv">so</span> <span class="o">-</span><span class="nv">o</span> <span class="nv">main</span><span class="err">.</span><span class="nv">exe</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第三步:直接运行main.exe
有可能报错，在linux下可能需要 <code>export LD_LIBRARY_PATH=./</code>
也就是把当前目录也当作查找so文件的一个地方。</li>
</ul>


<h3> vs2015+ivf2017的技术解决方案:</h3>


<ul>
<li>第一步：新建一个Dll project
然后类似静态的方法，把func.f90,sub.f90当作一个项目，再新建一个testDll项目，并添加lib等，也要include进来目录
比如，
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/dll/main.png" alt="main" />再次基础上，在添加include路径（把mod文件添加进来）
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/dll/include.png" alt="include" /></li>
</ul>


<p>在运行的时候有可能出现运行错误<img src="http://jueqingsizhe66.github.io/images/fortrandebug/dll/error.png" alt="error" />,这时候需要在Working Directory添加
运行dll路径，
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/dll/dll.png" alt="dll" />,</p>

<h2 id="compare"> 动态链接的静态加载和动态加载</h2>


<p><font color="blue">总之，静态库lib和动态库dll，是很多第三方库的主要形式。因此他们是学习第三方
函数库的基础知识，也是学习多种语言混编的基础。</font></p>

<ul>
<li><p>静态加载和动态加载的区别:</p></li>
<li><p>静态加载:不依赖ifort的运行库（可以到没有安装ifort的机器 上运行dll文件）  dll文件比较大</p></li>
<li>dll加载 :则会依赖ifort的运行库（dll比较小，但是如果没有ifort运行库 则会报dll错误（所以一般拷贝到别的机子的dll都是静态加载的
可采用depends walker这个软件，查看内部的dll信息。</li>
</ul>


<p>而我们可以用一张十分perfect的比较图，看出动态链接库的两种加载方式的不同，以及动态和静态的区别(10元)
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/dynamicstatic.png" alt="dynamicstatic" /></p>

<p>注意动态函数(subroutine)比静态多了一行<code>!DEC$ ATTRIBUTE DLLEXPORT,ALIAS:...</code></p>

<ul>
<li>动态加载例子
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/dll/load.png" alt="动态加载" /></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">Module </span><span class="nv">LoadDLL</span>
</span><span class='line'>  <span class="k">Implicit None</span>
</span><span class='line'><span class="k">  Interface</span>
</span><span class='line'><span class="k">    FUNCTION </span><span class="nv">GetProcAddress</span><span class="p">(</span> <span class="nv">hModule</span><span class="p">,</span> <span class="nv">lpProcName</span><span class="p">)</span>
</span><span class='line'>      <span class="c">!DEC$ ATTRIBUTES DEFAULT, STDCALL, DECORATE, ALIAS:&#39;GetProcAddress&#39; :: GetProcAddress</span>
</span><span class='line'>      <span class="k">use </span><span class="nb">ISO_C_Binding</span>
</span><span class='line'><span class="nb">      </span><span class="k">type</span><span class="p">(</span> <span class="kt">C_FUNPTR</span> <span class="p">)</span> <span class="kd">::</span> <span class="nv">GetProcAddress</span>
</span><span class='line'>      <span class="kt">integer </span><span class="nv">hModule</span>
</span><span class='line'>      <span class="kt">character</span><span class="p">(</span><span class="kt">C_CHAR</span><span class="p">)</span> <span class="p">,</span> <span class="k">dimension</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">lpProcName</span>
</span><span class='line'>    <span class="k">END FUNCTION </span><span class="nv">GetProcAddress</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">Integer </span><span class="k">Function </span><span class="nv">F_func</span><span class="p">()</span>
</span><span class='line'>    <span class="k">End Function </span><span class="nv">F_func</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">Subroutine </span><span class="nv">F_Sub</span><span class="p">()</span>
</span><span class='line'>    <span class="k">End Subroutine </span><span class="nv">F_Sub</span>
</span><span class='line'>  <span class="k">End Interface</span>
</span><span class='line'><span class="k">  </span>
</span><span class='line'><span class="k">End Module </span><span class="nv">LoadDLL</span>
</span><span class='line'>
</span><span class='line'><span class="k">Program </span><span class="nv">www_fcode_cn</span>
</span><span class='line'>  <span class="k">use </span><span class="nv">LoadDLL</span>
</span><span class='line'>  <span class="k">use </span><span class="nb">ISO_C_Binding</span>
</span><span class='line'><span class="nb">  </span><span class="k">use </span><span class="nv">Kernel32</span> <span class="p">,</span> <span class="nv">only</span> <span class="p">:</span> <span class="nv">LoadLibrary</span>
</span><span class='line'>  <span class="k">Implicit None</span>
</span><span class='line'><span class="k">  </span><span class="nv">Procedure</span><span class="p">(</span><span class="nv">F_func</span><span class="p">)</span> <span class="p">,</span> <span class="k">pointer</span> <span class="kd">::</span> <span class="nv">func</span>
</span><span class='line'>  <span class="nv">Procedure</span><span class="p">(</span><span class="nv">F_sub</span> <span class="p">)</span> <span class="p">,</span> <span class="k">pointer</span> <span class="kd">::</span> <span class="nv">sub</span>
</span><span class='line'>  <span class="k">type</span><span class="p">(</span> <span class="kt">C_FUNPTR</span> <span class="p">)</span> <span class="kd">::</span> <span class="nv">c_pointer</span>
</span><span class='line'>  <span class="kt">integer</span> <span class="kd">::</span> <span class="nv">hDLL</span> <span class="p">,</span> <span class="nv">i</span>
</span><span class='line'>  <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="kd">::</span> <span class="nv">dllname</span> <span class="p">,</span> <span class="nv">funcname</span>
</span><span class='line'>  <span class="k">Do</span>
</span><span class='line'><span class="k">    write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;您要调用哪个DLL？&#39;</span>
</span><span class='line'>    <span class="k">read</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="nv">dllname</span>
</span><span class='line'>    <span class="nv">hDLL</span> <span class="o">=</span> <span class="nv">LoadLibrary</span><span class="p">(</span> <span class="nb">trim</span><span class="p">(</span><span class="nv">dllname</span><span class="p">)</span><span class="o">//</span><span class="nb">c_null_char</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="nv">hDLL</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="p">)</span> <span class="k">then</span>
</span><span class='line'><span class="k">      write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;对不起，我好像无法找到 &#39;</span><span class="o">//</span><span class="nb">trim</span><span class="p">(</span><span class="nv">dllname</span><span class="p">)</span><span class="o">//</span><span class="s1">&#39; 哦~~！^_^&#39;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'><span class="k">      exit</span>
</span><span class='line'><span class="k">    end if</span>
</span><span class='line'><span class="k">  End Do</span>
</span><span class='line'><span class="k">  Do</span>
</span><span class='line'><span class="k">    write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;您要调用哪个函数？&#39;</span>
</span><span class='line'>    <span class="k">read</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="nv">funcname</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="nv">funcname</span><span class="o">==</span><span class="s2">&quot;quit&quot;</span> <span class="p">)</span> <span class="k">exit</span>
</span><span class='line'><span class="k">    </span><span class="nv">c_pointer</span> <span class="o">=</span> <span class="nv">GetProcAddress</span><span class="p">(</span> <span class="nv">hDLL</span> <span class="p">,</span> <span class="nb">trim</span><span class="p">(</span><span class="nv">funcname</span><span class="p">)</span><span class="o">//</span><span class="nb">c_null_char</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="ow">.not.</span><span class="nb">C_ASSOCIATED</span><span class="p">(</span><span class="nv">c_pointer</span><span class="p">)</span> <span class="p">)</span> <span class="k">then</span>
</span><span class='line'><span class="k">      write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="nb">trim</span><span class="p">(</span><span class="nv">dllname</span><span class="p">)</span><span class="o">//</span><span class="s1">&#39; 里面好像没有 &#39;</span><span class="o">//</span><span class="nb">trim</span><span class="p">(</span><span class="nv">funcname</span><span class="p">)</span><span class="o">//</span><span class="s1">&#39; 函数哦~~！^_^&#39;</span>
</span><span class='line'>      <span class="k">cycle</span>
</span><span class='line'><span class="k">    end if</span>
</span><span class='line'><span class="k">    If</span> <span class="p">(</span> <span class="nv">funcname</span><span class="o">==</span><span class="s2">&quot;func&quot;</span> <span class="p">)</span> <span class="k">then</span>
</span><span class='line'><span class="k">      call </span><span class="nv">C_F_ProcPointer</span><span class="p">(</span> <span class="nv">c_pointer</span> <span class="p">,</span> <span class="nv">func</span> <span class="p">)</span>
</span><span class='line'>      <span class="nv">i</span> <span class="o">=</span> <span class="nv">func</span><span class="p">()</span>
</span><span class='line'>    <span class="k">Else if</span> <span class="p">(</span> <span class="nv">funcname</span><span class="o">==</span><span class="s2">&quot;sub&quot;</span> <span class="p">)</span> <span class="k">then</span>
</span><span class='line'><span class="k">      call </span><span class="nv">C_F_ProcPointer</span><span class="p">(</span> <span class="nv">c_pointer</span> <span class="p">,</span> <span class="nv">sub</span> <span class="p">)</span>
</span><span class='line'>      <span class="k">call </span><span class="nv">sub</span><span class="p">()</span>
</span><span class='line'>    <span class="k">End If</span>
</span><span class='line'><span class="k">  End Do  </span>
</span><span class='line'><span class="k">End Program </span><span class="nv">www_fcode_cn</span>
</span></code></pre></td></tr></table></div></figure>




<h2 id="hun"> fortran与c混编</h2>


<p>源于此:<a href="http://bbs.fcode.cn/thread-1117-1-1.html">http://bbs.fcode.cn/thread-1117-1-1.html</a></p>

<p><img src="http://jueqingsizhe66.github.io/images/fortrandebug/hunbian/main.png" alt="混编主界面" />
混编时候注意两点:</p>

<ol>
<li>c 和 fortran 混编不需要 include</li>
<li>c/c++ 里面没有 module</li>
</ol>


<p>另外注意vc项目也得添加引用目录
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/hunbian/vcinclude.png" alt="引用目录" /></p>

<p>你也可能运行错误
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/hunbian/error.png" alt="errorV" />
注意上面红色的部分。
第一处：如果你强调必须 stdcall 协定，那么你需要在 fortran 中声明。（这个声明不是规范的，是IVF扩展的写法）
第二处：你的 C++ 里的 lens 是通过 strlen 计算出来的，而不是指针。所以 fortran 中必须加 value 修饰符，表示它是传值，而不是传址。（这是导致cpp_main.exe 中的 0x5d7005a9 (vlhm.dll) 处最可能的异常: 0xC0000005: 读取位置 0x00000021 时发生访问冲突）的原因。</p>

<p>最终正确结果如下:
<img src="http://jueqingsizhe66.github.io/images/fortrandebug/hunbian/final.png" alt="correctV" /></p>

<p>源码信息如下:</p>

<p>TestFortranCpp.cpp</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="c1">// TestFortranCpp.cpp : 定义控制台应用程序的入口点。</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;stdafx.h&quot;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span><span class="kt">void</span> <span class="n">_stdcall</span>   <span class="n">vlhm</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">,</span> <span class="kt">int</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="c1">//extern &quot;C&quot; {void vlhm(char *,int); }</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_tmain</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="n">_TCHAR</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">inputfile</span> <span class="o">=</span> <span class="s">&quot;E:</span><span class="se">\\</span><span class="s">phase6-power.opj&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//char *inputfile;</span>
</span><span class='line'>  <span class="c1">//char str[] = &quot;C:\\Users\\www\\Desktop\\\\31005700.tem&quot;;</span>
</span><span class='line'>  <span class="c1">//inputfile=&amp;str[0];</span>
</span><span class='line'>  <span class="n">vlhm</span><span class="p">(</span><span class="n">inputfile</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">inputfile</span><span class="p">));</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>fileNameCheck.f90:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">subroutine </span><span class="nv">vlhm</span><span class="p">(</span><span class="nv">pfilename</span><span class="p">,</span> <span class="nv">lens</span><span class="p">)</span> <span class="k">Bind</span><span class="p">(</span><span class="nv">C</span><span class="p">,</span><span class="nv">Name</span><span class="o">=</span><span class="s2">&quot;vlhm&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c">!DEC$ ATTRIBUTES STDCALL,DLLEXPORT::vlhm</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">use</span><span class="p">,</span>  <span class="k">Intrinsic</span> <span class="kd">::</span> <span class="nb">ISO_C_Binding</span>
</span><span class='line'><span class="c">!character(len=*)::filename            !c++主程序中传递进来的“Inputfile”变量</span>
</span><span class='line'><span class="c">!write(*,*)&quot;dll里的filename值是：&quot;</span>
</span><span class='line'><span class="c">!write(*,*)filename</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">type</span><span class="p">(</span><span class="kt">C_PTR</span><span class="p">)</span> <span class="p">,</span> <span class="k">value</span> <span class="kd">::</span> <span class="nv">pfilename</span> <span class="c">!c++主程序中传递进来的“Inputfile”变量，是C语言的指针</span>
</span><span class='line'>  <span class="kt">integer</span><span class="p">,</span> <span class="k">value</span><span class="kd">::</span><span class="nv">lens</span>                                      <span class="c">!传入的字符串长度</span>
</span><span class='line'>  <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="nv">lens</span><span class="p">),</span> <span class="k">target</span> <span class="kd">::</span> <span class="nv">filename_a</span>
</span><span class='line'>  <span class="c">!character(len=lens) :: filename_a !pointer &amp; target</span>
</span><span class='line'>  <span class="kt">character</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="nv">lens</span><span class="p">),</span><span class="k">pointer</span><span class="kd">::</span><span class="nv">filename</span>                     <span class="c">!这是Fortran的字符串</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">call </span><span class="nb">c_f_pointer</span><span class="p">(</span> <span class="nv">pfilename</span> <span class="p">,</span> <span class="nv">filename</span> <span class="p">)</span>                   <span class="c">!把c语言的指针转换成fortran字符串</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">filename_a</span> <span class="o">=</span> <span class="nv">filename</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span><span class="nv">filename</span>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span><span class="nv">filename_a</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="o">*</span><span class="p">)</span> <span class="s1">&#39;fine ok&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">end subroutine </span><span class="nv">vlhm</span>
</span></code></pre></td></tr></table></div></figure>


<p>进一步的细节资料可参考<a href="http://v.fcode.cn/video-library_dll.html">fcode视频官网</a>。</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/07/%5B%3F%5D-fen-you-qu-de-fortrandong-tai-jing-tai-lian-jie-wen/'>http://jueqingsizhe66.github.io/blog/2017/02/07/%5B%3F%5D-fen-you-qu-de-fortrandong-tai-jing-tai-lian-jie-wen/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FAST调试]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/07/fastdiao-shi/"/>
    <updated>2017-02-07T20:01:15+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/07/fastdiao-shi</id>
    <content type="html"><![CDATA[<p><a href="https://nwtc.nrel.gov/FAST8">NREL FAST</a>的调试一直存在问题，关键是不知道怎么设置选项，查阅了Visual Studio和一些基本知识整理了
NREL项目的调试方法。</p>

<!--more-->


<h2>fortran工作路径问题</h2>

<p><font color="green"><strong>工作路径对于任何的可执行文件都很重要。</strong></font></p>

<pre><code>当然事先可能得了解一下软件编译链接的过程（即编写源代码--调用编译器编译源代码--
&gt;调用链接器连接相关代码块生成可执行文件--&gt;运行可执行文件）(IDE隐藏了上述过程)
</code></pre>

<ul>
<li>如果不带任何路径，则被认为是当前路径(<font color="green"><strong>working directory</strong></font>)。</li>
<li>如果带相对路径，则以当前路径为基准。</li>
<li>通过命令行执行，当前路径一般在提示符上(或<font color="red">pwd</font>命令查看)</li>
<li>直接<font color="red"><strong>双击</strong></font>,当前路径在exe所在的文件夹。</li>
<li>通过<font color="red"><strong>IDE</strong></font>方式运行，当前路径一般在<font color="red"><strong>工程所在文件夹</strong></font></li>
<li>一些IDE还允许设置当前路径(只对IDE方式运行有效)。</li>
<li>右键exe名字也是可以指定运行路径的（这样就可以加载对应的配置文件)</li>
</ul>


<p>比如:<br/></p>

<p><img src="http://jueqingsizhe66.github.io/images/fortrandebug/idewd.png" alt="IDE working directory" /><br/></p>

<h2>代码层级改变文件路径</h2>

<p>在程序中可以通过一些手段，动态的更改当前路径。</p>

<ul>
<li>IVF: changeDirQQ</li>
<li>gfortran: ChDir</li>
</ul>


<p>也可以通过一些手段，获得当前路径，</p>

<ul>
<li>IVF/gforran: GetCWD</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="k">program </span><span class="nv">testDir</span>
</span><span class='line'>    <span class="k">Implicit none</span>
</span><span class='line'><span class="k">    </span><span class="kt">CHARACTER</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="mi">512</span><span class="p">)</span> <span class="kd">::</span>  <span class="nv">working_path</span>
</span><span class='line'>    <span class="k">call </span><span class="nb">GET_COMMAND_ARGUMENT</span><span class="p">(</span><span class="mi">0</span> <span class="p">,</span> <span class="nv">working_path</span><span class="p">);</span>
</span><span class='line'>    <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="s1">&#39;(a,/,a)&#39;</span><span class="p">)</span> <span class="s1">&#39;exe path: &#39;</span><span class="p">,</span> <span class="nb">trim</span><span class="p">(</span><span class="nv">working_path</span><span class="p">);</span>
</span><span class='line'>    <span class="k">call </span><span class="nb">GETCWD</span><span class="p">(</span><span class="nv">working_path</span><span class="p">)</span>
</span><span class='line'>    <span class="k">write</span><span class="p">(</span><span class="o">*</span><span class="p">,</span><span class="s1">&#39;(a,/,a)&#39;</span><span class="p">)</span> <span class="s1">&#39;Working Directory: &#39;</span><span class="p">,</span> <span class="nb">trim</span><span class="p">(</span><span class="nv">working_path</span><span class="p">);</span>
</span><span class='line'><span class="k">end program </span><span class="nv">testDir</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出:&lt;br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='fortran'><span class='line'><span class="nv">exe</span> <span class="nv">path</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="nv">D</span><span class="p">:</span><span class="err">\</span><span class="nv">testCWD</span><span class="err">\</span><span class="nv">Debug</span><span class="err">\</span><span class="nv">test_cwd</span><span class="err">.</span><span class="nv">exe</span>
</span><span class='line'>
</span><span class='line'><span class="nv">working</span> <span class="nv">directory</span><span class="p">:</span>
</span><span class='line'><span class="nv">D</span><span class="p">:</span><span class="err">\</span><span class="nv">testCWD</span>
</span></code></pre></td></tr></table></div></figure>


<h2>调试FAST</h2>

<p><img src="http://jueqingsizhe66.github.io/images/fortrandebug/fast.jpg" alt="fast" />
最关键的是一个对应两个设置</p>

<ul>
<li>一个对应指的是第二步的Linker的output File的exe名字和第三步的General底下的TargetName对应上</li>
<li>两个设置是指在Debuging对Command Arguments和Working Directory的设置。Command Argument指定文件名字
Working Directory指定文件路径。</li>
</ul>


<p>设置完就可以开始调试了。</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/07/fastdiao-shi/'>http://jueqingsizhe66.github.io/blog/2017/02/07/fastdiao-shi/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[文戏之分]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/02/01/wen-xi-zhi-fen/"/>
    <updated>2017-02-01T17:20:20+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/02/01/wen-xi-zhi-fen</id>
    <content type="html"><![CDATA[<p>偶尔，在《人间正道是沧桑》这部电视剧听到，</p>

<pre><code>文中有戏，戏中有文
识文者读文，识戏者读戏（杨立仁)
音中有调，调中有音
识音者听音，识调者听调(瞿霞)
</code></pre>

<p>背景是解放战争时期，杨和瞿的一次9年之后的相见。不知情者可能听得是美妙的
文字，优雅的声音，而背后却蕴含着另一场戏，老蒋总是那么爱玩。所有编程语言
我觉得也是如是。表面上看着是字母的排列组合，而背后却可能蕴含者优雅的艺术，
和那么一出出精彩绝伦的好戏。</p>

<!--more-->


<p>我觉得它影响了我，所以我记录了它。</p>

<p>在这部电视剧中，刻画的杨立青角色还给我另外一个特别深刻的印象</p>

<pre><code>所有的科学，都不能差一点，差一点和差很多都不好，99度的开水没有开花，只有到100度才有
科学要得是精确，而不是马虎

另外就是，他在绘图的过程说的，我绘制地图的目的是为了说服我自己，而不是让你们看，
我得先说服自己，仗才能好打。所以无论做什么都得先把背后的东西、背后的原理说服你自己
形成自己的理念，这样才能知己知彼。
</code></pre>

<p>文戏和音调，让我意识到了面和里的关系。</p>

<p>而在昨天与我姨丈的交流中，又对家庭和人生有了新的认识。
我拉着我的女朋友和我的朋友一起到小姨家做客，刚到家的时候，姨丈喝了不少（小憩中）。
我们几个人聊着，后来他慢慢醒过来，跟我们聊天，聊家常等。
我姨丈如是说：</p>

<pre><code>我们都是平常人，再伟大的人也是平凡人，再聪明的人也是平常人，也需要常回家看看，
也需要时不时的和家里人打个电话。家里人都会因为你偶尔的电话，感到温暖。年长的人
有谁不想者儿孙满堂，儿孙抱膝的，都希望，但不现实。长大了，都应该去闯闯，闯多大名堂，
不要紧，要紧的是有上进心。别人现在比你优秀，你可以慢慢来，只要自己有一颗平常心，心态
放好了，要想者对大家好，对同事好，对同学好，对家里好，对长辈好，对领导好，想着他们
好，而不是过多的抱怨，过多的叹气，一定不能这样。
平时多做点好事，多对他们好。
上至父母、下至儿孙、家庭和乐，和则万事兴，多么朴素的道理。
可以时而懒惰，但是绝不能没有上进心，有点进步是最好的，你们两个人一起进步，一起体恤
对方，彼此宽容，彼此经营自己的夫妻生活和两个家庭。
所以，平常心和好这个字都得做好。
</code></pre>

<p>听了这习话也让我看到现实社会中的另一种心态，而且是不错的心态和理念，而不是说比钱多，比房多等，
是一种希望子女好，希望朋友好的平常心心态。退一步则海阔天空。</p>

<p>参差多态才是幸福的本源，学会用包容心去感受你附近的心灵，照顾她们。</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/02/01/wen-xi-zhi-fen/'>http://jueqingsizhe66.github.io/blog/2017/02/01/wen-xi-zhi-fen/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl_Summary]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/01/22/perl-summary/"/>
    <updated>2017-01-22T19:18:50+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/01/22/perl-summary</id>
    <content type="html"><![CDATA[<p>why need perl? If you need strong text regex processing ,use perl!</p>

<p>One paragraph I copied from <code>perldoc perlintro</code>:</p>

<p>The language is intended to be <font color="red">practical</font> (easy to use, efficient,
complete) rather than beautiful (tiny, elegant, minimal). Its major
features are that it&rsquo;s easy to use, supports both procedural and
object-oriented (OO) programming, has powerful built-in support for text
processing, and has one of the world&rsquo;s most impressive collections of
third-party modules.</p>

<p>To me, perl means a report programmer with practical experience.</p>

<!--more-->


<ul>
<li><a href="http://www.cnblogs.com/leezx/p/5607753.html">perl基础</a></li>
<li><a href="http://www.cnblogs.com/leezx/p/5755237.html">perl语法速查</a></li>
<li><a href="http://www.cnblogs.com/leezx/p/5617239.html">perl高级特性</a></li>
<li><a href="http://www.cnblogs.com/leezx/p/5589602.html">some difference between &ndash;> and =></a></li>
<li><a href="http://storagebar.blog.51cto.com/211112/70680">How to Program Perl</a>
You need to practice ,think, and share(your final target).</li>
<li><a href="http://storagebar.blog.51cto.com/211112/70718">Teach yourself Programming in ten years</a>
You need to talk to other programmer, they are all good people(Just think they are).</li>
</ul>


<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/01/22/perl-summary/'>http://jueqingsizhe66.github.io/blog/2017/01/22/perl-summary/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How_to_learn_one_technique]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2017/01/22/how-to-learn-one-technique/"/>
    <updated>2017-01-22T19:16:42+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2017/01/22/how-to-learn-one-technique</id>
    <content type="html"><![CDATA[<p>You need talk to others about &ldquo;it&rdquo; with clear,fluent and easy way ,
to let them understand very well. So in the computer learning,you
should know how to talk with the books? how to learn from books(without consicious) which
come from other authors(with consicious), then get what you want to
overcome the problem or question you bump into.</p>

<p>So it is very necessary for you to learn some technique to analysis
the different knowledge point, in order to different them and remember
them, finally apply them to watch the phenomenon ,explain some phenomenon, and solve some tough science problem.</p>

<!--more-->


<h2>Logical sequence(from Hao Bin)</h2>

<ul>
<li><p>why need X?(solve the relation between first and two or between former and previous or between question and solution)
Time series:</p>

<p>+&mdash;&mdash;+many works between X+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+Now at X+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+maybe later Y+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p></li>
<li><p>what is X?(orient from ontology, what+how+howmany+where consist the basic ontology)
  It is very important to understand how to describe the question about what is X?
  Technique:</p>

<pre><code>  + Make sure the pattern: subject verb and object( the subject is it!!)(it is ....,,solve ....,do help us....First,second....)
  + You should describe its function(the question which it can solve. In the relatity,all things is problem driven), what's the advantage?
  + Finally, detail analysis: First, .... Second:....(it can consist many parts.)
</code></pre></li>
<li><p>how to use X?(as simple and clear as you can)</p></li>
<li>where you should take care when you use X? What&rsquo;s the point?</li>
<li>what&rsquo;s the factory scenery of the X? where you can put X into usage?</li>
<li>Advantage and disadvantage of X? Because of disadvantage,so you need Y.</li>
</ul>


<p>Technique:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. how to express your statement with layer?
</span><span class='line'>www 
</span><span class='line'>w: why (target: you should describe your background clearly) -------question which connect it and you or us!!
</span><span class='line'>w: what(what it is . Get clear of the concept) -------what **it** is---&gt; it(commonly without conscious)
</span><span class='line'>    --what can it do?
</span><span class='line'>w: how(how to use your X)  ----------**you** want to know how to use it? ---&gt; you(with conscious)
</span><span class='line'>    --what you are going to do?
</span><span class='line'>
</span><span class='line'>You may be ignored!!!</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<ul>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/07/21/about-thinking-process-and-knowledge-composition/">1. about-thinking-process-and-knowledge-composition</a></li>
<li><a href="http://jueqingsizhe66.github.io/blog/2016/09/28/jump-out-of-ontology/">2. jump-out-of-ontology</a></li>
</ul>


<p>Example:</p>

<ol>
<li>Please tell us your understanding of for recycle?</li>
</ol>


<p>Your answer:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>background(question): if you try to run one method 100 times, then you should write 100 lines code to call the method, very unefficiency and easy get fault.
</span><span class='line'>
</span><span class='line'>it: for recycle can solve the problem. for recycle can let the method execute recyclly.
</span><span class='line'>    for recycle consist three parts: initial value, condition adjust, and inrease part or decrease part which can let your recycle close to the outlet.
</span><span class='line'>You: so you can write the for then first edit the initial part, then write your condition, also third part. Finally in your for body ,you 
</span><span class='line'>can write your method which need to be call many times.</span></code></pre></td></tr></table></div></figure>


<h2>what&rsquo;s the difference between X and Y(From www.rupeng.com)</h2>

<p>The worst thing while you describe something, is you try to jump the thing without stop. You need to
concentrate your picture, and describe clearly that picture carefully .</p>

<p>Final goal: clear,fluent and easy to express your idea.
One requirement: practice the conscious process</p>

<p>Technique:
1. the common characteristic between X and Y
2. how many different characteristic between X and Y? first ,&hellip; second&hellip;. third&hellip;</p>

<p>Example:</p>

<p>what&rsquo;s the difference between Windows and Linux?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Common characteristic: they are all the operate system , which can do many computing and amusement work
</span><span class='line'>
</span><span class='line'>But there are three main difference between windows and Linux：
</span><span class='line'>First, money---- Windows is charged ,While Linux is uncharged.
</span><span class='line'>Second, open source---- windows is close source, while Linux is open source.
</span><span class='line'>Third, use scenario ---- windows is orient to desktop system, while Linux is orient to server system</span></code></pre></td></tr></table></div></figure>


<h2>how to deep into the knowledge?</h2>

<ul>
<li>when you ask yourself the question about the what,when,where, how many ,how much and so on.
you can continue asking yourself about the how and why(2w deep method) to get the whole information
about the X.</li>
</ul>


<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2017/01/22/how-to-learn-one-technique/'>http://jueqingsizhe66.github.io/blog/2017/01/22/how-to-learn-one-technique/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Little Java Note]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/10/09/a-little-java-note/"/>
    <updated>2016-10-09T01:58:39+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/10/09/a-little-java-note</id>
    <content type="html"><![CDATA[<div align="center">目录</div>


<ul>
<li><a href="#1">1. 基础部分</a></li>
<li><a href="#2">2. 通过构造函数，构造出Natural recursion</a></li>
<li><a href="#3">3. 重新设计RemAV RemFishV RemIntV</a></li>
<li><a href="#4">4. 下一步把PieD的字段放入到对应的参数当中</a></li>
<li><a href="#5">5. 引入 this 关键字，指代访问者本身，同步修改对应的访问者类</a></li>
<li><a href="#6">6. 需要进一步提取出visitor部分的函数    </a></li>
<li><a href="#7">7. 统一bTreeVisitorI itreevisitori ttreevisitori</a></li>
<li><a href="#8">8. 重新设计RemAV RemFishV  RemIntV 为RemV(用Object替换）    </a></li>
<li><a href="#9">9. 然后现在把Remv 和Subst重新放入PieD</a></li>
<li><a href="#10">10. 紧接着 我们还想着把Remv  SubstV放入参数的位置</a></li>
<li><a href="#11">11. 紧接着我们可以进行下一步抽象   </a></li>
<li><a href="#12">12. 紧接着我们发现rem和subst代码类似 </a></li>
<li><a href="#13">13. 然后再实现Set集合类型</a></li>
<li><a href="#14">14. SetEvalV直接继承IntEvalV不合理?   </a></li>
<li><a href="#15">15. IntEvalD 和SetEvalD很多相似之处   </a></li>
<li><a href="#16">16. 根据extends使用Override增加函数的丰富性  </a></li>
</ul>


<p>视角没想到可以分成不同的classes，并在此基础上进行extends和implement，最终new通过constructors创造不同的value。两级在于基础元件和功能元件两部分。两级也可以分为extends和implements。集于一个class。</p>

<!--more-->


<p>学完<a href="http://www.ccs.neu.edu/home/matthias/BALJ/">《a little java》</a>的心得,</p>

<ol>
<li>构造函数：new通过构造函数，产生了datatype的值；构造函数由此进行了natural recursion， 并通过一个基类退出循环（详见PieD).new create values.</li>
<li>This,一般指向当前对象，但是在函数式编程中，this可能指代的是当前对象之后的所有剩余对象
&ldquo;this&#8221;指代的是自指对象 也就是函数某某的实例化对象，并且是一直不变的。Just self-referential，because this is a RemV, and it is exactly what we need to complete the job. 所以this指代函数莫某的对象</li>
<li>Top某某函数询问某种来自函数某某的forTop功能 ，并传递构造函数的fields值(properties）以及该某某函数comsumes的objects（arguments)</li>
<li>  升级版本 the method accepts a visitor(该visitor接口包含了forTop forBot抽象方法，该接口统一了不同的函数某某，所以所有函数某某统称为accept函数某某）and ask for its services， so we call it accept， 而该接口的通常实例化对象也被叫做ask， ask for services.</li>
<li>Object类型可以抽象int boolean 其他类型</li>
<li>函数的抽象大体表现为参数数据类型，返回值数据类型和函数body的具体实现。

<ol type="a">
<li>参数数据类型</li>
<li>返回值数据类型</li>
<li>body具体实现</li>
</ol>
</li>
<li>简化（简洁）、拓展性、方便</li>
<li>当我们的参数值从method变到fields，我们就没必要在反复调用对象的方法的时候 需要不断地comsume，而同时又保证了this对象，也就是不断地自指（期间不产生新的fields）所以也就是使得计算加快了。这也是this存在的原因（并且该this对象只用在访问者对象中）</li>
<li>We know that a visitorI contains one method each for the Circle, Square, and Trans variants,. And each of these methods
Consumes the fields of the respective kinds of objects(objects of types)
某某对象的某某函数，（携带函数某某和字段） 询问函数某某的for对象某某功能，（携带对象某某）
某某对象的accept携带ask并内部由 ask 的for对象某某携带对象某某组成，而for对象某某携带对象某某并内部由对象某某的accept携带当前ask对象构成。
某某对象的accept携带ask并内部由 ask 的for对象某某组成，而for对象某某携带对象某某并内部由对象某某的accept组成。</li>
</ol>


<p>在对象内部，某某对象的accept携带ask并内部由 ask 的for对象某某携带对象某某组成，而在visitor内部，for对象某某携带对象某某并内部由对象某某（也就是consumes the fields of the respective kinds of objects 占据对象类型的字段属性）的accept携带当前ask对象构成。
We don&rsquo;t specify fields in interfaces. And in 7 W hatever.
any case, we don&rsquo;t want anybody else to
see p.
This and that在对象间传递，而consume在函数间传递（Hangs over back and forth(fields 在对象间传递，而consume在函数间传递)
10. 该书包含着TLS TSS 和prolog编程的思想(因为你要理解new Top new Bot等需要有fact and rule的意识)（仔细去品尝 go to absorb) 还有就是skeleton and techniques技术
11. Extends interface,this extension produces an interface that contains all the obligations(i.e. names of methods and what they consume and produce) of shapeVisitorI and the additional one named forUnion(所以换个角度说，one class can implement many interfaces.
12. 重载override 相同的名字带着不同的输入类型
13. 点号可以读作 from   点号之前叫做from who  点号之后叫做service
14. 解释的重点是什么？？？ 要点是什么</p>

<p><img src="http://jueqingsizhe66.github.io/images/alittlejava/duichen.png" alt="duichen" /></p>

<p>什么是思考力的三要素，讲这个问题之前我们先来了解一下什么是思考思维，首先思考是思维的一种探索活动，而在思维过程中产生的一种具有积极性和创造性的作用力这种就是思考力。据物理学理解，思考力具有三个基本要素：分别为大小、方向、作用点。思考力同样也离不开三个基本要素：分别为大小、方向、作用点。</p>

<ol>
<li>大小 ——思考力首先取决于思考者掌握的关于思考对象的知识和信息量（大小），如果没有相关的知识和信息，就不可能产生相关的思考活动。一般情况下，知识量和信息量越大，思考就越加具体、全面和完整，从而决定了思考的维度。</li>
<li>方向 ——我们这里所说的思考有别于妄想和幻想，而是一种有目的性和有计划性的思维活动，因此，这种思考需要有一定的价值导向，也就是思路——体现为目的性、方向性和一致性。漫无目的地思考难以发挥强有力的思考力，常常会把思考引进死胡同，导致思路夭折和无果而终。目的性、方向性、一致性和价值导向，决定着思考的角度和向度。</li>
<li>作用点 ——必须把思考集中在特定的对象上，并把握其中的关键点，这样的思考就会势如破竹。如果找不准思考的着力点，就会精力分散、思维紊乱、胡思乱想，出现东一榔头西一棒的现象。思考就会停留在事物的表面上浮光掠影，无法深刻认识事物的本质。思考在作用点上的集中性程度，决定着思考的强度和力度(广度和深度）。</li>
</ol>


<h3 id="1">基础部分</h3>


<p>理解分层。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">KebabD</span><span class="o">(</span><span class="n">chapter2</span><span class="o">)</span> <span class="err">烤肉</span>
</span><span class='line'>    <span class="n">isVeggie</span><span class="o">();</span>
</span><span class='line'>    <span class="n">whatHolder</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Holder</span> <span class="err">烤肉摆放工具</span>
</span><span class='line'>            <span class="n">Object</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Holder</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>            <span class="n">isVeggie</span><span class="o">();</span>
</span><span class='line'>            <span class="n">whatHolder</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Shallot</span>  <span class="err">葱</span>
</span><span class='line'>            <span class="n">KebabD</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Shallot</span><span class="o">(</span><span class="n">KebabD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">isVeggie</span><span class="o">();</span>
</span><span class='line'>            <span class="n">whatHolder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Shrimp</span> <span class="err">虾</span>
</span><span class='line'>            <span class="n">KebabD</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Shrimp</span> <span class="o">(</span><span class="n">KebabD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">isVeggie</span><span class="o">();</span>
</span><span class='line'>            <span class="n">whatHolder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Radish</span> <span class="err">萝卜</span>
</span><span class='line'>            <span class="n">KebabD</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Radish</span> <span class="o">(</span><span class="n">KebabD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">isVeggie</span><span class="o">();</span>
</span><span class='line'>            <span class="n">whatHolder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Pepper</span> <span class="err">胡椒粉</span>
</span><span class='line'>            <span class="n">KebabD</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Pepper</span> <span class="o">(</span><span class="n">KebabD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">isVeggie</span><span class="o">();</span>
</span><span class='line'>            <span class="n">whatHolder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Zucchini</span> <span class="err">西葫芦</span>
</span><span class='line'>            <span class="n">KebabD</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Zucchini</span> <span class="o">(</span><span class="n">KebabD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">isVeggie</span><span class="o">();</span>
</span><span class='line'>            <span class="n">whatHolder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">RodD</span><span class="o">(</span><span class="n">chapter2</span><span class="o">)</span> <span class="err">杆</span>  <span class="err">将烤肉串起来工具</span><span class="o">(</span><span class="err">烤肉摆放方式</span><span class="mi">1</span><span class="err">）</span>
</span><span class='line'>    <span class="n">Dagger</span> <span class="err">匕首</span>
</span><span class='line'>    <span class="n">Sabre</span> <span class="err">军刀</span>
</span><span class='line'>    <span class="n">Sword</span> <span class="err">剑</span>
</span><span class='line'>
</span><span class='line'><span class="n">PlateD</span><span class="o">(</span><span class="n">chapter2</span><span class="o">)</span> <span class="err">盘子</span>  <span class="err">（烤肉摆放方式</span><span class="mi">2</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Gold</span> <span class="err">金盘子</span>
</span><span class='line'>    <span class="n">Silver</span>
</span><span class='line'>    <span class="n">Brass</span> <span class="err">黄铜盘子</span>
</span><span class='line'>    <span class="n">Copper</span> <span class="err">镀铜盘子</span>
</span><span class='line'>    <span class="n">Wood</span>   <span class="err">木盘子</span>
</span><span class='line'>
</span><span class='line'><span class="n">PointD</span><span class="o">(</span><span class="n">chapter1</span><span class="o">,</span><span class="mi">2</span><span class="o">)</span> <span class="err">点</span>
</span><span class='line'>    <span class="n">distanceTo0</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span><span class="kt">int</span><span class="o">);</span> <span class="c1">//可以把它们移入到构造函数中</span>
</span><span class='line'>    <span class="n">closerTo0</span><span class="o">();</span>
</span><span class='line'>        <span class="n">CartesianPt</span> <span class="err">笛卡尔坐标</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="nf">CartesianPt</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span><span class="kt">int</span><span class="o">);</span>
</span><span class='line'>            <span class="n">distanceTo0</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Closeto0</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ManhattenPt</span> <span class="err">曼哈顿坐标</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="nf">ManhattenPt</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span><span class="kt">int</span><span class="o">);</span>
</span><span class='line'>            <span class="n">distanceTo0</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Closeto0</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="err">圆柱坐标系</span>
</span><span class='line'>        <span class="err">球坐标系</span>
</span><span class='line'>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">PizzaD</span><span class="err">（</span><span class="n">chapter3</span><span class="o">,</span><span class="mi">4</span><span class="err">）</span>
</span><span class='line'>    <span class="n">remA</span> <span class="err">去除比萨饼的凤尾鱼订料（防止过咸）</span>
</span><span class='line'>    <span class="n">topAwC</span><span class="o">()</span> <span class="err">在凤尾鱼顶料加上奶酪顶料（盖住咸味）</span>
</span><span class='line'>    <span class="n">subAbC</span><span class="o">()</span> <span class="err">将所有的凤尾鱼顶料换成奶酪顶料</span>
</span><span class='line'>        <span class="n">Crust</span> <span class="err">面包皮</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAbC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Cheese</span>  <span class="err">奶酪</span>
</span><span class='line'>            <span class="n">pizzaD</span>
</span><span class='line'>            <span class="nf">Cheese</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAbC</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Olive</span>   <span class="err">橄榄</span>
</span><span class='line'>            <span class="n">pizzaD</span>
</span><span class='line'>            <span class="nf">Olive</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAbC</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Anchovy</span> <span class="err">凤尾鱼</span>
</span><span class='line'>            <span class="n">pizzaD</span>
</span><span class='line'>            <span class="nf">Anchovy</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAbC</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Sausage</span> <span class="err">香肠</span>
</span><span class='line'>            <span class="n">pizzaD</span>
</span><span class='line'>            <span class="nf">Sausage</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAbC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Spinach</span> <span class="err">菠菜</span>
</span><span class='line'>            <span class="n">pizzaD</span>
</span><span class='line'>            <span class="nf">Spinach</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAbC</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Shape</span>
</span><span class='line'>
</span><span class='line'><span class="nf">Shish</span><span class="o">(</span><span class="n">chapter2</span><span class="err">，</span><span class="mi">4</span><span class="o">)</span> <span class="err">羊肉串</span>
</span><span class='line'>    <span class="n">onlyOnions</span><span class="o">();</span>
</span><span class='line'>    <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Skew</span> <span class="err">架子</span> <span class="err">烤肉叉子</span>
</span><span class='line'>        <span class="n">Onion</span> <span class="err">洋葱</span>
</span><span class='line'>        <span class="n">Lamb</span>  <span class="err">羔羊肉</span>
</span><span class='line'>        <span class="n">Tomato</span> <span class="err">西红柿</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Tree</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">SeasoningD</span> <span class="o">(</span><span class="n">chapter1</span><span class="o">)</span> <span class="err">调味品</span>
</span><span class='line'>    <span class="n">Sage</span><span class="o">(</span><span class="err">鼠尾草</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Pepper</span>
</span><span class='line'>    <span class="n">Salt</span>
</span><span class='line'>    <span class="nf">Thyme</span><span class="o">(</span><span class="err">百里香</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">NumD</span> <span class="o">(</span><span class="n">chapter1</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Zero</span>
</span><span class='line'>    <span class="n">OneMoreThan</span>
</span><span class='line'>
</span><span class='line'><span class="n">LayerD</span>
</span><span class='line'>    <span class="n">Base</span>
</span><span class='line'>    <span class="n">Slice</span>
</span><span class='line'>
</span><span class='line'><span class="n">FruitD</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>第二条建议</strong></p>

<pre><code>When writing a function over a datatype,
place a method in each of the variants that make up the datatype.
If a field of a variant belongs to the same datatype,
the method may call the corresponding method of the field in
computing the function.（疑问子类 每继承一次父类 都得重写三个父类的抽象函数 有点费事。。 ----那么访问者模式到底是如何解决的？）
</code></pre>

<p><strong>第八条建议</strong></p>

<pre><code>When extending a class, use overriding
to enrich its functionality.
</code></pre>

<p>根据以上建议， LtdSubstV 可以直接在 SubstV 类上进行继承和扩展。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Shish</span><span class="o">(</span><span class="n">chapter2</span><span class="err">，</span><span class="mi">4</span><span class="o">)</span> <span class="err">羊肉串</span>
</span><span class='line'>   <span class="n">OnlyOnionsV</span>
</span><span class='line'>   <span class="n">IsVegetarianV</span>
</span><span class='line'>   <span class="nf">onlyOnions</span><span class="o">();</span>
</span><span class='line'>   <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Skew</span> <span class="err">架子</span> <span class="err">烤肉叉子</span>
</span><span class='line'>            <span class="n">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Onion</span> <span class="err">洋葱</span>
</span><span class='line'>            <span class="n">ShishD</span>
</span><span class='line'>            <span class="nf">Onion</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Lamb</span>  <span class="err">羔羊肉</span>
</span><span class='line'>            <span class="n">ShishD</span>
</span><span class='line'>            <span class="nf">Lamb</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Tomato</span> <span class="err">西红柿</span>
</span><span class='line'>            <span class="n">ShishD</span>
</span><span class='line'>            <span class="nf">Tomato</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">OnlyOnionsV</span>
</span><span class='line'>    <span class="nf">forSkew</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forOnion</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forLamb</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forTomato</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">isVegetatianV</span>
</span><span class='line'>    <span class="nf">forSkew</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forOnion</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forLamb</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forTomato</span><span class="o">(</span><span class="n">ShishD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">ShishD</span>
</span><span class='line'>   <span class="n">OnlyOionsV</span> <span class="n">ooFn</span>
</span><span class='line'>   <span class="n">IsVegeterian</span> <span class="n">ivFn</span>
</span><span class='line'>   <span class="nf">onlyOnions</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>   <span class="n">isVegetarian</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Skew</span>
</span><span class='line'>            <span class="nf">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Onion</span>
</span><span class='line'>            <span class="nf">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Lamb</span>
</span><span class='line'>            <span class="nf">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Tomato</span>
</span><span class='line'>            <span class="nf">onlyOnions</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isVegetarian</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>




<h3 id="2">通过构造函数，构造出Natural recursion部分，形成递归，递归出口为skew</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">RemAV</span>
</span><span class='line'>    <span class="nf">forCurst</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forCheese</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forOlive</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forAnchovy</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forSausage</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">TopAwCV</span>
</span><span class='line'>    <span class="nf">forCurst</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forCheese</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forOlive</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forAnchovy</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forSausage</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">SubAbCV</span>
</span><span class='line'>    <span class="nf">forCurst</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forCheese</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forOlive</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forAnchovy</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forSausage</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">PizzaD</span>
</span><span class='line'>   <span class="n">RemAV</span> <span class="n">remFn</span>
</span><span class='line'>   <span class="n">TopAwCV</span> <span class="n">topFn</span>
</span><span class='line'>   <span class="n">SubAbCV</span>  <span class="n">subFn</span>
</span><span class='line'>   <span class="nf">remA</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>   <span class="n">topAwC</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>   <span class="n">subAbC</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Crust</span>
</span><span class='line'>            <span class="nf">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAwC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Cheese</span>
</span><span class='line'>            <span class="n">PizzaD</span>
</span><span class='line'>            <span class="nf">Cheese</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAwC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Olive</span>
</span><span class='line'>            <span class="n">PizzaD</span>
</span><span class='line'>            <span class="nf">Olive</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAwC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Anchovy</span>
</span><span class='line'>            <span class="n">PizzaD</span>
</span><span class='line'>            <span class="nf">Anchovy</span><span class="o">(</span><span class="n">PizzaD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAwC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Sausage</span>
</span><span class='line'>            <span class="n">PizzaD</span>
</span><span class='line'>            <span class="nf">Sausage</span><span class="o">(</span><span class="n">PizzaD</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">topAwC</span><span class="o">();</span>
</span><span class='line'>            <span class="n">subAwC</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="n">RemAV</span> <span class="n">raFn</span>
</span><span class='line'>    <span class="n">RemFish</span> <span class="n">rfFn</span>
</span><span class='line'>    <span class="nf">remA</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>    <span class="n">remFish</span><span class="o">(</span><span class="n">FishD</span><span class="o">)</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">remFish</span><span class="o">(</span><span class="n">FishD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">remFish</span><span class="o">(</span><span class="n">FishD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">FishD</span>
</span><span class='line'>    <span class="n">Salmon</span> <span class="err">鲑鱼</span>
</span><span class='line'>    <span class="n">Equals</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Anchovy</span> <span class="err">凤尾鱼</span>
</span><span class='line'>    <span class="n">Equals</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Tuna</span>  <span class="err">金枪鱼</span>
</span><span class='line'>    <span class="n">Equals</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">RemAV</span>
</span><span class='line'>    <span class="n">forBot</span>
</span><span class='line'>    <span class="nf">fotTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'><span class="n">RemFishV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">FishD</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">,</span>  <span class="n">FishD</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">RemIntV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">pieD</span><span class="o">,</span> <span class="n">Integer</span><span class="o">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3 id="3">重新设计RemAV RemFishV  RemIntV 为RemV(用Object替换）</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">RemV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">pieD</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>




<h3 id="4">下一步把PieD的字段放入到对应的参数当中</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">PieD</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">abstract</span> <span class="n">PieD</span> <span class="nf">rem</span><span class="o">(</span><span class="n">RemV</span> <span class="n">remFn</span><span class="o">,</span> <span class="n">Object</span> <span class="n">o</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">abstract</span> <span class="n">PieD</span> <span class="nf">subst</span><span class="o">(</span><span class="n">SubstV</span> <span class="n">substFn</span><span class="o">,</span> <span class="n">Object</span> <span class="n">n</span><span class="o">,</span> <span class="n">Object</span> <span class="n">o</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="nf">Rem</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>    <span class="n">Subst</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Rem</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">Bot</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Rem</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<h3 id="5">引入 this 关键字，指代访问者本身，同步修改对应的访问者类。</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="nf">Rem</span><span class="o">(</span><span class="n">Remv</span><span class="o">)</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>    <span class="n">Subst</span><span class="o">(</span><span class="n">Subst</span><span class="o">)</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Top</span>
</span><span class='line'>            <span class="n">Rem</span>
</span><span class='line'>            <span class="n">Subst</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="n">Bot</span>
</span><span class='line'>            <span class="n">Rem</span>
</span><span class='line'>            <span class="n">Subst</span>
</span></code></pre></td></tr></table></div></figure>


<h3 id="6">需要进一步提取出visitor部分的函数</h3>


<p>这样就可以把所有</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PieVisitorI</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Remv</span>
</span><span class='line'>            <span class="nf">forBot</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">();</span>
</span><span class='line'>        <span class="n">SubstV</span>
</span><span class='line'>            <span class="nf">forBot</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">pieD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">Accept</span><span class="o">(</span><span class="n">pieVisitorI</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="nf">Accept</span><span class="o">(</span><span class="n">pieVisitorI</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">FruitD</span>
</span><span class='line'>    <span class="n">Peach</span>
</span><span class='line'>    <span class="n">Apple</span>
</span><span class='line'>    <span class="n">Pear</span>
</span><span class='line'>    <span class="n">Lemon</span>
</span><span class='line'>    <span class="n">Fig</span> <span class="err">无花果</span>
</span><span class='line'>
</span><span class='line'><span class="n">TreeD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">bTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Accept</span><span class="o">(</span><span class="n">iTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Accept</span><span class="o">(</span><span class="n">tTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bub</span> <span class="err">芽</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">bTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">iTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">tTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Flat</span> <span class="err">平顶</span>
</span><span class='line'>            <span class="n">FruitD</span>
</span><span class='line'>            <span class="n">TreeD</span>
</span><span class='line'>            <span class="nf">Flat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">bTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">iTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">tTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Split</span> <span class="err">分枝</span>
</span><span class='line'>            <span class="n">TreeD</span>
</span><span class='line'>            <span class="n">TreeD</span>
</span><span class='line'>            <span class="nf">Split</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">bTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">iTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">tTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">bTreeVisitorI</span>
</span><span class='line'>    <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">bIsFlatV</span> <span class="kd">implements</span> <span class="n">bTreeVisitorI</span>
</span><span class='line'>            <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">bIsSplitV</span> <span class="kd">implements</span> <span class="n">bTreeVisitorI</span>
</span><span class='line'>            <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">bHasFruitV</span> <span class="kd">implements</span> <span class="n">bTreeVisitorI</span>
</span><span class='line'>            <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">iTreeVisitorI</span>
</span><span class='line'>    <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">iHeightV</span> <span class="kd">implements</span> <span class="n">iTreeVisitorI</span>
</span><span class='line'>            <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">iOccursV</span> <span class="kd">implements</span> <span class="n">iTreeVisitorI</span>
</span><span class='line'>            <span class="n">FruitD</span>
</span><span class='line'>            <span class="nf">iOccursV</span><span class="o">(</span><span class="n">FruitD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">tTreeVisitorI</span>
</span><span class='line'>    <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tSubstV</span> <span class="kd">implements</span> <span class="n">tTreeVisitorI</span>
</span><span class='line'>            <span class="n">FruitD</span>
</span><span class='line'>            <span class="n">FruitD</span>
</span><span class='line'>            <span class="nf">tSubstV</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">FruitD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>         <span class="n">iOccursV</span> <span class="kd">implements</span> <span class="n">tTreeVisitorI</span>
</span><span class='line'>            <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>




<h3 id="7">为了统一bTreeVisitorI 和 iTreeVisitorI   tTreeVisitorI</h3>


<p>（三个的不同就在于返回值分别为 boolean   int   treeD)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">TreeVisitorI</span>
</span><span class='line'>    <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">);</span>
</span><span class='line'>         <span class="n">IsFlatV</span> <span class="kd">implements</span> <span class="n">TreeVisitorI</span>
</span><span class='line'>            <span class="nf">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">OccursV</span> <span class="kd">implements</span> <span class="n">TreeVisitorI</span>
</span><span class='line'>            <span class="n">FruitD</span>
</span><span class='line'>            <span class="nf">OccursV</span><span class="o">(</span><span class="n">FruitD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBud</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forFlat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forSplit</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kd">class</span> <span class="nc">OccursV</span> <span class="kd">implements</span> <span class="n">TreeVisitorI</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">FruitD</span> <span class="n">a</span><span class="o">;</span>
</span><span class='line'>            <span class="n">OccursV</span><span class="o">(</span><span class="n">FruitD</span> <span class="n">_a</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">a</span> <span class="o">=</span> <span class="n">_a</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="kd">public</span> <span class="n">Object</span> <span class="nf">forBud</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">new</span> <span class="nf">Integer</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="kd">public</span> <span class="n">Object</span> <span class="nf">forFlat</span><span class="o">(</span><span class="n">FruitD</span> <span class="n">f</span><span class="o">,</span> <span class="n">TreeD</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">f</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">a</span><span class="o">))</span>
</span><span class='line'>                    <span class="k">return</span> <span class="k">new</span> <span class="nf">Integer</span><span class="o">(((</span><span class="n">Integer</span><span class="o">)(</span><span class="n">t</span><span class="o">.</span><span class="na">accept</span><span class="o">(</span><span class="k">this</span><span class="o">))).</span><span class="na">intValue</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">t</span><span class="o">.</span><span class="na">accept</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">forSplit</span><span class="o">(</span><span class="n">TreeD</span> <span class="n">l</span><span class="o">,</span> <span class="n">TreeD</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">new</span> <span class="nf">Integer</span><span class="o">(((</span><span class="n">Integer</span><span class="o">)(</span><span class="n">l</span><span class="o">.</span><span class="na">accept</span><span class="o">(</span><span class="k">this</span><span class="o">))).</span><span class="na">intValue</span><span class="o">()</span>
</span><span class='line'>                                   <span class="o">+</span>
</span><span class='line'>                                   <span class="o">((</span><span class="n">Integer</span><span class="o">)(</span><span class="n">r</span><span class="o">.</span><span class="na">accept</span><span class="o">(</span><span class="k">this</span><span class="o">))).</span><span class="na">intValue</span><span class="o">());</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">TreeD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">TreeVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bub</span> <span class="err">芽</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">TreeVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Flat</span> <span class="err">平顶</span>
</span><span class='line'>            <span class="n">FruitD</span>
</span><span class='line'>            <span class="n">TreeD</span>
</span><span class='line'>            <span class="nf">Flat</span><span class="o">(</span><span class="n">FruitD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">TreeVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Split</span> <span class="err">分枝</span>
</span><span class='line'>            <span class="n">TreeD</span>
</span><span class='line'>            <span class="n">TreeD</span>
</span><span class='line'>            <span class="nf">Split</span><span class="o">(</span><span class="n">TreeD</span><span class="o">,</span> <span class="n">TreeD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">tTreeVisitorI</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="n">RemAV</span> <span class="n">raFn</span>
</span><span class='line'>    <span class="n">RemFish</span> <span class="n">rfFn</span>
</span><span class='line'>    <span class="nf">remA</span><span class="o">()</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>    <span class="n">remFish</span><span class="o">(</span><span class="n">FishD</span><span class="o">)</span><span class="n">a</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">remFish</span><span class="o">(</span><span class="n">FishD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">remA</span><span class="o">();</span>
</span><span class='line'>            <span class="n">remFish</span><span class="o">(</span><span class="n">FishD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">FishD</span>
</span><span class='line'>    <span class="n">Salmon</span> <span class="err">鲑鱼</span>
</span><span class='line'>    <span class="n">Equals</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Anchovy</span> <span class="err">凤尾鱼</span>
</span><span class='line'>    <span class="n">Equals</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Tuna</span>  <span class="err">金枪鱼</span>
</span><span class='line'>    <span class="n">Equals</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">RemAV</span>
</span><span class='line'>    <span class="n">forBot</span>
</span><span class='line'>    <span class="nf">fotTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'><span class="n">RemFishV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">FishD</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">,</span>  <span class="n">FishD</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">RemIntV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">pieD</span><span class="o">,</span> <span class="n">Integer</span><span class="o">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>




<h3 id="8">重新设计RemAV RemFishV  RemIntV 为RemV(用Object替换）</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">RemV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">pieD</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="n">RemV</span>
</span><span class='line'>    <span class="nf">Rem</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">Rem</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Rem</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">SubstFishV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">FishD</span><span class="o">,</span> <span class="n">FishD</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span> <span class="o">,</span> <span class="n">PieD</span><span class="o">,</span> <span class="n">FishD</span><span class="o">,</span> <span class="n">FishO</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">SubstIntV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">Int</span><span class="o">,</span> <span class="n">Int</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span> <span class="o">,</span> <span class="n">PieD</span><span class="o">,</span> <span class="n">Int</span><span class="o">,</span> <span class="n">Int</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">SubstV</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span> <span class="o">,</span> <span class="n">PieD</span><span class="o">,</span> <span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3 id="9">然后现在把Remv 和Subst重新放入PieD</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="n">Remv</span>
</span><span class='line'>    <span class="n">SubstV</span>
</span><span class='line'>    <span class="nf">Rem</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Subst</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">Rem</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Rem</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>




<h3 id="9">紧接着 我们还想着把Remv  SubstV放入参数的位置</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="nf">Rem</span><span class="o">(</span><span class="n">Remv</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Subst</span><span class="o">(</span><span class="n">SubstV</span><span class="o">,</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">Rem</span><span class="o">(</span><span class="n">Renv</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">(</span><span class="n">Substv</span><span class="o">,</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Rem</span><span class="o">(</span><span class="n">RemV</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">(</span><span class="n">Substv</span><span class="o">,</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>




<h3 id="10">紧接着我们进一步比较RemV SubstV的实现(我们就得重新修改rem和subst了)</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">RemV</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Object</span> <span class="n">o</span><span class="o">;</span>
</span><span class='line'>    <span class="n">RemV</span><span class="o">(</span><span class="n">Object</span> <span class="n">_o</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">o</span> <span class="o">=</span> <span class="n">_o</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forBot</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">Bot</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forTop</span><span class="o">(</span><span class="n">Object</span> <span class="n">t</span><span class="o">,</span> <span class="n">PieD</span> <span class="n">r</span><span class="o">){</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">o</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">t</span><span class="o">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">r</span><span class="o">.</span><span class="na">rem</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">Top</span><span class="o">(</span><span class="n">t</span><span class="o">,</span> <span class="n">r</span><span class="o">.</span><span class="na">rem</span><span class="o">(</span><span class="k">this</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">RemV</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forBot</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">Bot</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forTop</span><span class="o">(</span><span class="n">Object</span> <span class="n">t</span><span class="o">,</span> <span class="n">PieD</span> <span class="n">r</span><span class="o">,</span> <span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">o</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">t</span><span class="o">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">r</span><span class="o">.</span><span class="na">rem</span><span class="o">(</span><span class="n">o</span><span class="o">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">Top</span><span class="o">(</span><span class="n">t</span><span class="o">,</span> <span class="n">r</span><span class="o">.</span><span class="na">rem</span><span class="o">(</span><span class="n">o</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">SubstV</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forBot</span><span class="o">(</span><span class="n">Object</span> <span class="n">n</span><span class="o">,</span> <span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">Bot</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forTop</span> <span class="o">(</span><span class="n">Object</span> <span class="n">t</span><span class="o">,</span> <span class="n">PieD</span> <span class="n">r</span><span class="o">,</span> <span class="n">Object</span> <span class="n">n</span><span class="o">,</span> <span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">o</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">t</span><span class="o">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">Top</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">r</span><span class="o">.</span><span class="na">subst</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">o</span><span class="o">));</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">Top</span><span class="o">(</span><span class="n">t</span><span class="o">,</span> <span class="n">r</span><span class="o">.</span><span class="na">subst</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">SubstV</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Object</span> <span class="n">n</span><span class="o">;</span>
</span><span class='line'>    <span class="n">Object</span> <span class="n">o</span><span class="o">;</span>
</span><span class='line'>    <span class="n">SubstV</span><span class="o">(</span><span class="n">Object</span> <span class="n">_n</span><span class="o">,</span> <span class="n">Object</span> <span class="n">_o</span><span class="o">){</span>
</span><span class='line'>        <span class="n">n</span> <span class="o">=</span> <span class="n">_n</span><span class="o">;</span>
</span><span class='line'>        <span class="n">o</span> <span class="o">=</span> <span class="n">_o</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forBot</span><span class="o">(</span><span class="n">Object</span> <span class="n">n</span><span class="o">,</span> <span class="n">Object</span> <span class="n">o</span><span class="o">){</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">Bot</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="n">PieD</span> <span class="nf">forTop</span><span class="o">(</span><span class="n">Object</span> <span class="n">t</span><span class="o">,</span> <span class="n">PieD</span> <span class="n">r</span><span class="o">){</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">o</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">t</span><span class="o">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">Top</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">r</span><span class="o">.</span><span class="na">subst</span><span class="o">(</span><span class="k">this</span><span class="o">));</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">new</span> <span class="nf">Top</span><span class="o">(</span><span class="n">t</span><span class="o">,</span> <span class="n">r</span><span class="o">.</span><span class="na">subst</span><span class="o">(</span><span class="k">this</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3 id="11">紧接着我们可以进行下一步抽象</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="nf">Rem</span><span class="o">(</span><span class="n">RemV</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Subst</span><span class="o">(</span><span class="n">SubstV</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Rem</span><span class="o">(</span><span class="n">RemV</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">(</span><span class="n">SubstV</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Bot</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Rem</span><span class="o">(</span><span class="n">RemV</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Subst</span><span class="o">(</span><span class="n">SubstV</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3 id="12">紧接着我们发现rem和subst代码类似</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PieVisitorI</span>
</span><span class='line'>    <span class="n">forBot</span>
</span><span class='line'>    <span class="n">forTop</span>
</span><span class='line'>        <span class="n">RemV</span> <span class="n">implement</span> <span class="n">PieVisitorI</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">RemV</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="err">）</span>
</span><span class='line'>        <span class="n">SubstV</span> <span class="n">implement</span> <span class="n">PieVisitorI</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">SubstV</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="err">）</span>
</span><span class='line'>        <span class="n">LtdSubstV</span> <span class="n">implement</span> <span class="n">PieVisitorI</span>
</span><span class='line'>            <span class="kt">int</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">LtdSubstV</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span> <span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="err">）</span>
</span><span class='line'>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bob</span>
</span><span class='line'>            <span class="nf">Accept</span><span class="o">(</span><span class="n">pieVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">ExprVisitorI</span>
</span><span class='line'>
</span><span class='line'><span class="n">ExprVisitorI</span>
</span><span class='line'>    <span class="nf">forPlus</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forDiff</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forProd</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forConst</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">IntEvalV</span> <span class="kd">implements</span>  <span class="n">ExprVisitorI</span>
</span><span class='line'>            <span class="nf">forPlus</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forDiff</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forProd</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forConst</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Plus</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Diff</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Prod</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">ExprD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">ExprVisitorI</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Plus</span>
</span><span class='line'>            <span class="n">ExprD</span>
</span><span class='line'>            <span class="n">ExprD</span>
</span><span class='line'>            <span class="nf">Plus</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">ExprVisitorI</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Diff</span>
</span><span class='line'>            <span class="n">ExprD</span>
</span><span class='line'>            <span class="n">ExprD</span>
</span><span class='line'>            <span class="nf">Diff</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">ExprVisitorI</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Prod</span>
</span><span class='line'>            <span class="n">ExprD</span>
</span><span class='line'>            <span class="n">ExprD</span>
</span><span class='line'>            <span class="nf">Prod</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">ExprVisitorI</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ConstD</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">ConstD</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">ExprVisitorI</span><span class="o">);</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h3 id="13">然后再实现Set集合的类型</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">SetD</span>
</span><span class='line'>    <span class="nf">Add</span><span class="o">(</span><span class="n">integer</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Mem</span><span class="o">(</span><span class="n">integer</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Plus</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Diff</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Prod</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Empty</span>
</span><span class='line'>            <span class="nf">Mem</span><span class="o">(</span><span class="n">integer</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Plus</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Diff</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Prod</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Add</span>
</span><span class='line'>            <span class="n">Integer</span><span class="o">;</span>
</span><span class='line'>            <span class="n">SetD</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Add</span><span class="o">(</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Mem</span><span class="o">(</span><span class="n">integer</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Plus</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Diff</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Prod</span><span class="o">(</span><span class="n">SetD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">ExprVisitorI</span>
</span><span class='line'>    <span class="nf">forPlus</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forDiff</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forProd</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forConst</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>        <span class="n">IntEvalV</span> <span class="kd">implements</span>  <span class="n">ExprVisitorI</span>
</span><span class='line'>            <span class="nf">forPlus</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forDiff</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forProd</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>            <span class="n">forConst</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Plus</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Diff</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Prod</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>                <span class="n">SetEvalV</span> <span class="kd">implements</span> <span class="n">IntEvalV</span>
</span><span class='line'>                    <span class="nf">Plus</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>                    <span class="n">Diff</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>                    <span class="n">Prod</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3 id="14">SetEvalV 直接集成IntEvalV不合理？</h3>


<p>从SetEvalV 和IntEvalV抽取出一个基类</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">EvalD</span> <span class="kd">implements</span> <span class="n">ExprVisitorI</span>
</span><span class='line'>    <span class="nf">forPlus</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forDiff</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forProd</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">forConst</span><span class="o">(</span><span class="n">ExprD</span><span class="o">,</span> <span class="n">ExprD</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Plus</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Diff</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Prod</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">IntEvalD</span>
</span><span class='line'>            <span class="nf">Plus</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span>     <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Diff</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Prod</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">SetEvalD</span>
</span><span class='line'>            <span class="nf">Plus</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Diff</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Prod</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>




<h3 id="15">IntEvalD 和SetEvalD很多相似之处</h3>


<p>于是我们进一步提取</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">SubstD</span> <span class="kd">implements</span> <span class="n">pieVisitorI</span>
</span><span class='line'>    <span class="n">Object</span>
</span><span class='line'>    <span class="n">Object</span>
</span><span class='line'>    <span class="nf">SubstD</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forBot</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="o">)</span>
</span><span class='line'><span class="n">SubstV</span>
</span><span class='line'>    <span class="nf">SubstV</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'><span class="n">LtdSubstV</span>
</span><span class='line'>    <span class="kt">int</span>
</span><span class='line'>    <span class="nf">LtdSubstV</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3 id="16">根据extends使用override增加函数的丰富性</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">SubstV</span> <span class="kd">implements</span> <span class="n">PieVisitorI</span>
</span><span class='line'>    <span class="n">Object</span>
</span><span class='line'>    <span class="n">Object</span>
</span><span class='line'>    <span class="nf">SubstV</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forBot</span><span class="o">()</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">LtdSubstV</span>
</span><span class='line'>    <span class="n">Int</span>
</span><span class='line'>    <span class="n">Object</span>
</span><span class='line'>    <span class="n">Object</span>
</span><span class='line'>    <span class="nf">LtdSubstV</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span> <span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>原来，抽象类可以有构造方法.抽象类只要有一个abstract函数就可以叫做抽象类
抽象类可以有构造方法，构造方法不可继承，但是可以供子类用super（）或者super（参数，参数。。。。）调用。
构造函数是对象的基本，没有构造函数就没有对象。
若果在父类中（这里就是你的抽象类）中显示的写了又参数的构造函数，在子类继承是就必须写一个构造函数来调用父类的构造函数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PointD</span>
</span><span class='line'><span class="nf">PointD</span><span class="o">(</span><span class="n">chapter1</span><span class="o">,</span><span class="mi">2</span><span class="o">)</span> <span class="err">点</span>
</span><span class='line'>    <span class="n">distanceTo0</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span><span class="kt">int</span><span class="o">);</span> <span class="c1">//可以把它们移入到构造函数中</span>
</span><span class='line'>    <span class="n">closerTo0</span><span class="o">();</span>
</span><span class='line'>    <span class="n">PointD</span> <span class="nf">minus</span><span class="o">(</span><span class="n">PointD</span><span class="o">)</span>
</span><span class='line'>    <span class="kt">int</span> <span class="nf">moveBy</span><span class="o">(</span><span class="kt">int</span> <span class="o">,</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>        <span class="n">CartesianPt</span> <span class="err">笛卡尔坐标</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="nf">CartesianPt</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span><span class="kt">int</span><span class="o">);</span>
</span><span class='line'>            <span class="n">distanceTo0</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Closeto0</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ManhattenPt</span> <span class="err">曼哈顿坐标</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="nf">ManhattenPt</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span><span class="kt">int</span><span class="o">);</span>
</span><span class='line'>            <span class="n">distanceTo0</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Closeto0</span><span class="o">();</span>
</span><span class='line'>        <span class="err">圆柱坐标系</span>
</span><span class='line'>        <span class="err">球坐标系</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">ShadowedCartesia</span>
</span><span class='line'>    <span class="n">Int</span>
</span><span class='line'>    <span class="n">Int</span>
</span><span class='line'>    <span class="nf">ShadowedCartesia</span><span class="o">(</span><span class="kt">int</span><span class="o">,</span> <span class="kt">int</span><span class="o">,</span> <span class="kt">int</span><span class="o">,</span> <span class="kt">int</span><span class="o">)</span>
</span><span class='line'>    <span class="n">distanceTo0</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">shapeVisitorI</span>
</span><span class='line'>    <span class="nf">forCircle</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forSquare</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>    <span class="n">forTrans</span><span class="o">(</span><span class="n">pointD</span><span class="o">,</span> <span class="n">ShapeD</span><span class="o">)</span>
</span><span class='line'>    <span class="n">UnionVisitorI</span>
</span><span class='line'>    <span class="nf">forUnion</span><span class="o">(</span><span class="n">ShapeD</span><span class="o">,</span> <span class="n">ShapeD</span><span class="o">)</span>
</span><span class='line'>        <span class="n">HasPtV</span> <span class="kd">implements</span> <span class="n">ShapeVisitorI</span>
</span><span class='line'>            <span class="n">PointD</span>
</span><span class='line'>            <span class="nf">HasPt</span><span class="o">(</span><span class="n">PointD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forCircle</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forSquare</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forTrans</span><span class="o">(</span><span class="n">PointD</span><span class="o">,</span> <span class="n">ShapeD</span><span class="o">)</span>
</span><span class='line'>        <span class="n">UnionHasPtV</span> <span class="kd">implements</span> <span class="n">ShapeVisitorI</span>
</span><span class='line'>            <span class="nf">UnionHasPtV</span><span class="o">(</span><span class="n">PointD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forUnion</span><span class="o">(</span><span class="n">ShapeD</span><span class="o">,</span> <span class="n">ShapeD</span><span class="o">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="na">accept</span><span class="o">(</span><span class="k">new</span> <span class="n">HasPtV</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">minus</span><span class="o">(</span><span class="n">q</span><span class="o">)));</span>
</span><span class='line'>        <span class="n">HasPtV</span> <span class="kd">implements</span> <span class="n">ShapeVisitorI</span>
</span><span class='line'>            <span class="n">PointD</span>
</span><span class='line'>            <span class="nf">HasPt</span><span class="o">(</span><span class="n">PointD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">ShapeVisitorI</span> <span class="nf">newHasPt</span><span class="o">(</span><span class="n">PointD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forCircle</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forSquare</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forTrans</span><span class="o">(</span><span class="n">PointD</span><span class="o">,</span> <span class="n">ShapeD</span><span class="o">)</span>
</span><span class='line'>        <span class="n">UnionHasPtV</span> <span class="kd">implements</span> <span class="n">unionVisitorI</span>
</span><span class='line'>            <span class="nf">UnionHasPtV</span><span class="o">(</span><span class="n">PointD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">ShapeVisitorI</span> <span class="nf">newHasPt</span><span class="o">(</span><span class="n">PointD</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>            <span class="n">forUnion</span><span class="o">(</span><span class="n">ShapeD</span><span class="o">,</span> <span class="n">ShapeD</span><span class="o">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="na">accept</span><span class="o">(</span><span class="n">newHasPtV</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">minus</span><span class="o">(</span><span class="n">q</span><span class="o">)));</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">ShapeD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">ShapeVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Circle</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="nf">Circle</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">ShapeVisitorI</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>        <span class="n">Square</span>
</span><span class='line'>            <span class="n">Int</span>
</span><span class='line'>            <span class="nf">Square</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">ShapeVisitorI</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>        <span class="n">Trans</span>
</span><span class='line'>            <span class="n">PointD</span>
</span><span class='line'>            <span class="n">ShapeD</span>
</span><span class='line'>            <span class="nf">Trans</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">ShapeVisitorI</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>        <span class="n">Union</span>
</span><span class='line'>            <span class="n">ShapeD</span>
</span><span class='line'>            <span class="n">ShapeD</span>
</span><span class='line'>            <span class="nf">Union</span><span class="o">(</span><span class="n">ShapeD</span><span class="o">,</span> <span class="n">ShapeD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accetp</span><span class="o">(</span><span class="n">ShapeVisitorI</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3 id="16">newHasPt和HasPtV are eta reduction</h3>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PieManI</span>
</span><span class='line'>    <span class="n">Int</span> <span class="nf">addTop</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Int</span> <span class="nf">remTop</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Int</span> <span class="nf">substTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>    <span class="n">Int</span> <span class="nf">occTop</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">PieManM</span> <span class="kd">implements</span> <span class="n">PieManI</span>
</span><span class='line'>    <span class="n">PieD</span>
</span><span class='line'>    <span class="nf">addTop</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span> <span class="n">_o</span>
</span><span class='line'>    <span class="n">remTop</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>    <span class="n">substTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>    <span class="n">occTop</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">PieVisitorI</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">();</span>
</span><span class='line'>    <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>        <span class="n">OccursV</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">OccursV</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">()</span><span class="n">_o</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>        <span class="n">SubstV</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">SubstV</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">();</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>        <span class="n">RemV</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">RemV</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">PieD</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">PieD</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>
</span><span class='line'><span class="n">PieVisitorI</span>
</span><span class='line'>    <span class="nf">forBot</span><span class="o">(</span><span class="n">Bot</span><span class="o">)</span>
</span><span class='line'>    <span class="n">foTop</span><span class="o">(</span><span class="n">Top</span><span class="o">)</span>
</span><span class='line'>        <span class="n">OccursV</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">OccursV</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">(</span><span class="n">Bot</span> <span class="n">that</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Top</span> <span class="n">that</span><span class="o">)</span>
</span><span class='line'>        <span class="n">SubstV</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">SubstV</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">(</span><span class="n">Bot</span> <span class="n">that</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forTop</span><span class="o">(</span><span class="n">Top</span> <span class="n">That</span><span class="o">)</span>
</span><span class='line'>        <span class="n">RemV</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">RemV</span><span class="o">(</span><span class="n">Object</span><span class="o">)</span>
</span><span class='line'>            <span class="n">forBot</span><span class="o">(</span><span class="n">Bot</span> <span class="n">that</span><span class="o">)</span>
</span><span class='line'>            <span class="n">fotTop</span><span class="o">(</span><span class="n">Top</span> <span class="n">that</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">PieD</span>
</span><span class='line'>    <span class="nf">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span>
</span><span class='line'>        <span class="n">Bot</span>
</span><span class='line'>            <span class="nf">Accept</span><span class="o">(</span><span class="n">PieVisitorI</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>        <span class="n">Top</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="n">Object</span>
</span><span class='line'>            <span class="nf">Top</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="n">Objct</span><span class="o">)</span>
</span><span class='line'>            <span class="n">Accept</span><span class="o">(</span><span class="n">PieVisitor</span><span class="o">)</span><span class="n">_o</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><strong>每天你只能不断去思考 事情的要点和第一步和第二步 才能取得进步.</strong></p>

<p>What’s the point of the visitor pattern? What’s the point of the software design?</p>

<ul>
<li>亮点</li>
<li>突破点，并按照一定的方向。。</li>
<li>关键点</li>
</ul>


<p><img src="http://jueqingsizhe66.github.io/images/alittlejava/closure.png" alt="closure" /></p>

<p><strong>Closure(Closure(this))</strong></p>

<p>具体java源代码参考<a href="https://github.com/jueqingsizhe66/ALittleJava">the little java</a></p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2016/10/09/a-little-java-note/'>http://jueqingsizhe66.github.io/blog/2016/10/09/a-little-java-note/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Physics and Maths]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/09/29/physics-and-maths/"/>
    <updated>2016-09-29T03:27:34+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/09/29/physics-and-maths</id>
    <content type="html"><![CDATA[<p><a href="http://baike.baidu.com/link?url=EAjClF31Nh45czy0-8dYscX-hkcI8qOxCzsmWWiXN6yDdhQh18-Avf_UAiwFBNk9F3vKh0dKTSBzitXzqYgmvn6w5e9hwmZ5_yvYP7g9ARnJbDG8vH9jEkSDwL7y8rIK">濮祖荫</a>(歌手朴树的父亲):&ldquo;数学背后有物理，物理需要通过数学来表达&#8221;。数学方程(表达式)需要你通过物理直觉去思考，去书写。</p>

<p>濮说做研究的过程都是提出一个模型，找到问题的本质，针对围绕本质的几个变量进行研究，来近似替代现实的复杂模型（这个简化的思想对我有帮助）</p>

<!--more-->


<p>Only some links for physics and maths,</p>

<p><a href="http://product.dangdang.com/22704132.html">数学物理方程 张鲁明</a></p>

<p><a href="https://zhidao.baidu.com/share/ffccde3e883cc1bfe96567f02492e004.html%E3%80%80">数学物理方程 复旦</a></p>

<p><a href="http://vdisk.weibo.com/s/uGXsmIpCxv5Ow">数学物理 微盘丛书</a></p>

<p><a href="http://wenku.baidu.com/link?url=zGOuK59qswS4oDW1W9aqndBgisaitwkHxeix_5_O7Elp3rBH3pidQd1V8KEubrCXeuE8p0Aw_P-FbfOK2stL3uraiUOoZiUCIcBHKUpLeHq">空间物理</a></p>

<p><a href="http://v.youku.com/v_show/id_XNzYwMDgyNjg=.html?spm=a2h0j.8191423.module_basic_relation.5~5!2~5~5!8~5!2~1~3~A">梁灿彬老师的微分流形和相对论</a>, &ldquo;以不变应万变，找出不变量(心领神会学科技术的不变量)，从而应问题领域中变化的东西,抓住不变的东西，反复琢磨(为什么还要反复琢磨)&rdquo;. &ldquo;相似矩阵的trace迹不变(矩阵对角元不变)&rdquo;
也就是需要通过不变的东西把所有变化的独立体（关系）都连接起来，形成一条链。</p>

<p>学任何东西，都得首先明确他的重点和意义（当然首先得基于你得有大局观，大的方向，大的框架 也就是不变的东西）。</p>

<p>从数学物理过程去解释现实中的现象，从大的误差逐步缩小他，直到能够清楚的解释现实中的现象，从理论上去解释实际的问题，也就是梁灿彬老师说的
天地连通(天:定义特别清楚地(并矢:张量积运算, ) 地:实际(现实)发生的现象,不清晰的，定义不明(并矢:两个矢量并排在一起,他是一个二阶张量,9个分量v1u1 v1u2 v1u3 v2u1 v2u2 v2u3 v3u1 v3u2 v3u3 列举出来)。 也就是说不清晰的版本肯定能够存在清晰的版本)。</p>

<p>更要紧的是，还得考虑<a href="http://jueqingsizhe66.github.io/blog/2016/09/28/jump-out-of-ontology/">物理之内和物理之外</a>的问题</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2016/09/29/physics-and-maths/'>http://jueqingsizhe66.github.io/blog/2016/09/29/physics-and-maths/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jump Out of Ontology]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/09/28/jump-out-of-ontology/"/>
    <updated>2016-09-28T23:21:06+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/09/28/jump-out-of-ontology</id>
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Tool">工具</a>(进一步可以参考<a href="https://zhidao.baidu.com/share/4ee9bd642cdd8cc40d654d3e6096b35d.html">The design of everyday things</a>)之内，讲究的是如何设计这个东西(制作者角度)，可能更多讲的是设计的东西，而不是完成的功能，更多用于写技术路线
<img src="http://jueqingsizhe66.github.io/images/ontology/inner.png" alt="inner1" /></p>

<!--more-->


<p>工具之外，讲究的是从工具的外头看这个东西（眼睛放在工具外面,使用者角度），从工具外看黑夹子的工具，看他在不同的工况下能够实现什么功能？ 所以更多用于写软件说明书。</p>

<p><img src="http://jueqingsizhe66.github.io/images/ontology/outer.png" alt="outer" /></p>

<p><a href="https://en.wikipedia.org/wiki/Language">语言</a>之内和语言之外（站在一个本不存在逻辑体之外）</p>

<p>语言之内 说的是语言如何创造出来，如何写一个解释器，怎么设计这门语言，添加那些语言特性<a href="http://jueqingsizhe66.github.io/blog/2016/02/27/the-fourth-interpreter-about-the-traceproc/">(参考EOPL语言特性)</a>，语言的语法怎么样等等</p>

<p>语言之外是指运用这门语言 我能够解决某个工况问题，某个实际问题，某个数值问题，</p>

<p><a href="https://en.wikipedia.org/wiki/Problem_solving">问题</a>之内是指解决这个问题，问题之外是指解决了这个问题之后还可以解决其他什么问题。</p>

<p>内是指内部链接，外是指外部链接</p>

<p><a href="https://en.wikipedia.org/wiki/Domain">领域</a>之内和领域之外， 领域之内是指从专业的角度进行介绍，领域之外是平民（不懂专业知识）的角度进行解释。</p>

<p>工具、语言、问题、领域等都可以归结为本体<a href="https://en.wikipedia.org/wiki/Ontology">ontology</a>论的<a href="https://en.wikipedia.org/wiki/Knowledge">知识</a>(进一步参考<a href="https://en.wikipedia.org/wiki/Knowledge_Graph">knowledge_graph</a>以及 <a href="https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning">knowledge-presentation and reasoning</a>)。
<a href="https://en.wikipedia.org/wiki/Ontology_(information_science)">Ontology (information science)</a></p>

<p><img src="http://jueqingsizhe66.github.io/images/ontology/ontology.jpg" alt="ontology" /></p>

<p>其中，亚里斯多德指出本体论</p>

<ul>
<li>what it is (its &lsquo;whatness&rsquo;, quidditas or essence)</li>
<li>how it is (its &lsquo;howness&rsquo; or qualitativeness)</li>
<li>how much it is (quantitativeness)</li>
<li><p>where it is, its relatedness to other beings<a href="http://jueqingsizhe66.github.io/blog/2016/02/27/the-fourth-interpreter-about-the-traceproc/">3</a></p></li>
<li><p>whatness指的是individuals from class(这边是指类 不是指<a href="http://jueqingsizhe66.github.io/blog/2016/09/28/machine-learning-some-search-record/">贝叶斯概率</a>中的class-predictor键值对，其中class指目标值，而predictor是指属性值，或者叫做表征值,比如表征天气情况：晴天 下雨天 多云)
也就是说whatness解决的是存在的<a href="https://en.wikipedia.org/wiki/Reason">原因</a>(whyness).</p></li>
</ul>


<p>经常我们会这样描述<code>What is A</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>明确主谓宾(忌讳缺乏主谓宾)
</span><span class='line'>
</span><span class='line'>A是一种***技术，解决了***问题，帮助我们实现了***，帮助我们简化了
</span><span class='line'>****。第一***，第二****，第三***；
</span><span class='line'>首先****，其次***,最后***,
</span><span class='line'>
</span><span class='line'>总的来说，A****
</span></code></pre></td></tr></table></div></figure>


<p>也就是我们需要<a href="https://en.wikipedia.org/wiki/Statement_(logic)">说明</a>(<a href="https://en.wikipedia.org/wiki/Declarative_programming">声明式语言</a>)</p>

<ol>
<li>确保主谓宾</li>
<li>说明它的功能，解决了什么问题(现实都是问题驱动 problem-driven),好处是什么？</li>
<li>可能的话在细化分析，第一，第二，第三，首先，其次等.</li>
</ol>


<p>任何一项技术的学习其实都有一个思路，</p>

<ol>
<li>这门技术是什么？</li>
<li>怎么使用这门技术？</li>
<li>使用过程中需要注意些什么？</li>
<li>这门技术和其他的优缺点？</li>
<li>这门技术的主要场所是在哪里？</li>
</ol>


<p>最好能够熟练地自己提问自己上面的5个问题。并反复运用说明方式组织好自己的逻辑语言。这大概是whatness该注意的大部分内容。</p>

<p>howness是从定性的角度分析该存在体，而howmuchness则是从定量的角度对存在体进行分析。</p>

<p>由于存在体有很多个，于是需要确定他们的存在关系，于是选用了whereness(也就是空间维度，每加一层维度都可以确定一个y=ax+b的关系，可以参考<a href="https://en.wikipedia.org/wiki/Support_vector_machine">SVM</a>,
所有的算法问题都最终可以归结为<a href="https://en.wikipedia.org/wiki/Reduction_(mathematics)">降阶</a>和<a href="https://en.wikipedia.org/wiki/Mathematical_optimization">优化</a>（优化只是一种思想）问题，而<a href="https://en.wikipedia.org/wiki/Least_squares">最小二乘法</a>却是贯穿始终，最小二乘法进一步其实original from y=ax+b)</p>

<p>关于最小二乘法的总结如下：</p>

<p><img src="http://jueqingsizhe66.github.io/images/ontology/leastSquare1.jpg" alt="leastsquare1" />
<img src="http://jueqingsizhe66.github.io/images/ontology/leastSquare2.jpg" alt="leastsquare2" />
<img src="http://jueqingsizhe66.github.io/images/ontology/leastSquare3.jpg" alt="leastsquare3" />
<img src="http://jueqingsizhe66.github.io/images/ontology/leastSquare4.jpg" alt="leastsquare4" /></p>

<p>最小二乘法另外一些描述</p>

<ol>
<li><a href="http://www.cnblogs.com/emanlee/archive/2011/08/03/2125712.html">最小二乘法 least square method </a></li>
<li><a href="http://mathworld.wolfram.com/LeastSquaresFitting.html">least_squares fitting</a></li>
<li><a href="http://jean-pierre.moreau.pagesperso-orange.fr/f_lstsqr.html">最小二乘法fortran实现 from 熊叉叉</a></li>
<li><a href="http://www.cnblogs.com/monoSLAM/p/5252917.html">最小二乘法介绍</a></li>
</ol>


<p>紧接着whereness，我觉得还需要引入一个时间维度也就是whenness，我觉得他很重要，因为机器学习的很多算法都是需要通过时间不断的训练，需要明确whenness,
现实当中约会、上课、上班、吃饭、睡觉等都有一个whenness，我们都生活在时间的单项维度当中，放眼在<a href="https://en.wikipedia.org/wiki/History">历史</a>的时间尺度来说，我们一个人真的是微不足道，而放眼到我们自己的局部时间尺度来说，我们却需要细细的
品味时光的间隙，体味其中的变化，记录可能需要表征的一类变化量，进一步可能会影响到其他的量的变化（所以任何东西是不是都有着<a href="https://en.wikipedia.org/wiki/Causality">因果论</a>,也就是说在历史的长河中，我们是渺小的一粒沙子，跌跌撞撞的前行。</p>

<p>某某美国总统<a href="https://en.wikipedia.org/wiki/Franklin_D._Roosevelt">罗斯福</a>曾说:&ldquo;Joint and separate ,which is the problem&rdquo;. 本体论就是用于解决个体之间的分类和具体关系。</p>

<p>所以最终，本体之外和本体之内？</p>

<p>那是你对自己的定位(在历史长河微不足道，在局部时间，精打细算。秉着科学的精神，踏实生活；挣点小钱，养家糊口; 钱不多，只求闲的时候可以写写岁月中的一些趣事)和取舍(保留需要的东西，舍弃糟粕), 以及你对<a href="https://en.wikipedia.org/wiki/World">世界</a>或者<a href="https://en.wikipedia.org/wiki/Cosmos">宇宙</a>的定位(要不然，不想了，想点当下)。</p>

<h2>Appendix</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">//fd</span><span class="k">p</span> <span class="o">-</span><span class="n">Tpdf</span> <span class="n">ontology</span><span class="o">.</span><span class="n">dot</span> <span class="o">-</span><span class="n">o</span> <span class="n">ontology</span><span class="o">.</span><span class="n">pdf</span>
</span><span class='line'>
</span><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">G</span><span class="p">{</span>
</span><span class='line'>    <span class="err">ontology[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;Ontology&quot;</span><span class="o">,</span> <span class="n">shape</span><span class="o">=</span><span class="n">box</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">rounded</span><span class="p">]</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">node[</span><span class="nv">style</span><span class="o">=</span><span class="s">&quot;rounded,filled&quot;</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">chartreuse</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">whatness[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;whatness&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">howness[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;howness&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">howmuchness[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;howmuchness&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">whereness[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;whereness&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">whenness[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;whenness&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">ontology{</span> <span class="err">whatness</span> <span class="err">howness</span> <span class="err">howmuchness</span> <span class="err">whereness</span> <span class="err">whenness}</span><span class="k">;</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook/">graphviz reference</a></p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2016/09/28/jump-out-of-ontology/'>http://jueqingsizhe66.github.io/blog/2016/09/28/jump-out-of-ontology/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Machine Learning Some Search Record]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/09/28/machine-learning-some-search-record/"/>
    <updated>2016-09-28T17:20:32+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/09/28/machine-learning-some-search-record</id>
    <content type="html"><![CDATA[<p>学习<a href="http://cs229.stanford.edu/">stanford Cs229机器学习</a>的一些资料汇总。</p>

<!--more-->


<p><a href="http://blog.csdn.net/alvine008/article/details/9097105">手把手教你实现SVM算法（一）</a></p>

<p><a href="http://blog.csdn.net/alvine008/article/details/9097109">详解2D-PCA （二维PCA）</a></p>

<p><a href="http://blog.csdn.net/alvine008/article/details/9097111">手把手教你实现SVM算法（二）</a></p>

<p>了解了一些机器学习，想到了prolog是一门人工智能算法，所以顺便搜索到了<a href="http://blog.csdn.net/baimafujinji/article/details/49745389">prolog九宫格</a> .
首先这段prolog代码显然是简短的、简单的（但是不友好 声明式语言一定得写的友好）。我们根本没有告诉计算机该怎么做，我们只是说现在我们有一个九宫格，并要求：</p>

<ul>
<li>（1）每个格都是从1到9中的一个整数；</li>
<li>（2）九宫格中的数字不会重复；</li>
<li>（3）每行的和都相等；</li>
<li>（4）每列的和都相等；</li>
<li>（5）两条对角线上的和也相等</li>
</ul>


<p><font color="red">现在运行还有点问题！待以后解决！</font></p>

<p><a href="http://wenku.baidu.com/link?url=H44D9f3eHZB-RqPf2tbICEIHtn3L5ZvCkLS6IcOg_uEhW-nmZocKYCoUGYBjQ6O_YXRbYptH2Yr4vsTtkwjB-36xpFnCAf1Ygyjo3zscoky">基于PDC_PROLOG自学习机器博弈 </a></p>

<p><font color=green>白马负金羁</font>的<a href="http://blog.csdn.net/baimafujinji/article/category/6048259">机器学习资料</a> （包含R语言，逻辑规约，HMM,卡尔曼滤波）</p>

<p><a href="http://blog.csdn.net/baimafujinji/article/details/6472337">MATLAB中进行基于SVM的数据分析</a></p>

<p><a href="http://blog.csdn.net/stark_summer/article/details/50364666">机器学习简史</a></p>

<p><a href="http://blog.csdn.net/stark_summer/article/details/50249943">机器学习概念</a></p>

<p><a href="https://www.analyticsvidhya.com/blog/2015/08/common-machine-learning-algorithms/#rd?sukey=e74171513d3453dd223d8ac2deeb49e1eac3a7c7511b955187120c332b0e4df30837b86c6940bf1967a7c57107306d2c">贝叶斯及其他常用机器学习算法 From analyticsvidhya</a>（<font color=red>相当棒</font>的一个机器学习算法介绍 好评不断  通过计算认识了贝叶斯算法）
并同时介绍了what is predicator?  what is Class Prior Probabilty?
what is Posterior Probability? what is Predictor Prior Probability?</p>

<p>下面是我的手写笔记(需要2min看懂)
<img src="http://jueqingsizhe66.github.io/images/MachineLearning/beya1.jpg" alt="bayes1" /></p>

<p><img src="http://jueqingsizhe66.github.io/images/MachineLearning/beya2.jpg" alt="bayes2" /></p>

<p><img src="http://jueqingsizhe66.github.io/images/MachineLearning/beya3.jpg" alt="bayes3" /></p>

<p><a href="https://www.analyticsvidhya.com/">Analyticsvidhya</a>,一个相当不错的计算机学习网站。</p>

<p><a href="https://en.wikipedia.org/wiki/Bayes%27_theorem">贝叶斯理论 From wikipedia</a></p>

<p><a href="http://mindhacks.cn/2008/09/21/the-magical-bayesian-method/">平凡而有神奇的贝叶斯 刘未鹏</a>， <font color=red>从这里开始认识到贝叶斯的美</font></p>

<p><a href="https://www.analyticsvidhya.com/blog/2016/04/complete-tutorial-tree-based-modeling-scratch-in-python/">A Complete Tutorial on Tree Based Modeling from Scratch (in R &amp; Python)</a>，<font color=red>十分清楚,需要一定时间理解</font></p>

<p>R语言和Python语言比较经常被人们用来做机器学习，其实包括lisp,prolog,java等都是可以的。
<a href="https://www.analyticsvidhya.com/blog/2016/02/complete-tutorial-learn-data-science-scratch/">完整的R语言教程</a></p>

<p><a href="https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/">完整的python语言教程</a></p>

<p><a href="http://blog.csdn.net/u013731339/article/details/40025373">ipython机器学习</a>.Ipython是一个比较有用的python IDE界面，提供比较友好的输出调试界面(网页上操作),所以顺便也查了一下怎么用。</p>

<p>尝试Notebook, 还需要下载一些其它咚咚
1) 下载安装 pyzmq, 在这里不建议使用pip, pip对pyzmq支持不太好，装不上。我尝试使用easy_install</p>

<pre><code>  c:&gt;easy_install.exe pyzmq
</code></pre>

<p>2) 下载安装 jinja2,</p>

<pre><code>  c:&gt;easy_install.exe jinja2        
</code></pre>

<p>3) 下载安装 tornado,</p>

<pre><code>  c:&gt;easy_install.exe tornado       
</code></pre>

<p>好了，使用下面命令就可以把Notebook起来：</p>

<pre><code>  c:&gt;ipython.exe notebook
</code></pre>

<p>十分友好的ipython notebook，在命令行敲一下会打开一个浏览器窗口，用于编写Python的语句</p>

<p>然而python和R并不是我的选择，我还是熟悉<font color="red">matlab</font>,打算选择matlab作为我机器学习的工具。</p>

<p>关于机器语言的一些常用算法</p>

<p><img src="http://jueqingsizhe66.github.io/images/MachineLearning/algo.jpg" alt="algo" /></p>

<ul>
<li>雷老师推荐的<a href="http://www.esat.kuleuven.be/sista/lssvmlab/">LS-SVM matlab</a>, <font color="red">结论是选择LS-SVM</font>.</li>
<li><a href="http://www.csie.ntu.edu.tw/~cjlin/libsvm/">台湾的林智仁(Lin Chih-Jen)教授等编写SVM模式识别和回归的软件包，多语言实现</a></li>
</ul>


<p>附带dot语言图片生成</p>

<p><a href="http://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook/">dot reference</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">G1</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">compound</span><span class="o">=</span><span class="n">true</span><span class="p">;</span>
</span><span class='line'>    <span class="err">grap</span><span class="k">h</span><span class="p">[</span><span class="n">fontname</span><span class="o">=</span><span class="n">Kaiti</span><span class="p">];</span>
</span><span class='line'>    <span class="err">edge[</span><span class="nv">fontname</span><span class="o">=</span><span class="n">SimSun</span><span class="p">];</span>
</span><span class='line'>    <span class="err">node[</span><span class="nv">fontname</span><span class="o">=</span><span class="n">SimSun</span><span class="p">];</span>
</span><span class='line'>    <span class="err">MachineLearning[</span><span class="nv">shape</span><span class="o">=</span><span class="n">box</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">rounded</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="s">&quot;#1f8842&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster_1</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="err">//</span>    <span class="err">SL[</span><span class="nv">shape</span><span class="o">=</span><span class="n">ellipse</span><span class="o">,</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;Supervised Learning&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="nv">label</span><span class="o">=</span><span class="s">&quot;Supervised Learning(This algorithm consist of a target / outcome </span>
</span><span class='line'>    <span class="err">\</span><span class="nf">nvariable</span> <span class="p">(</span><span class="n">or</span> <span class="n">dependent</span> <span class="n">variable</span><span class="p">)</span> <span class="n">which</span> <span class="n">is</span> <span class="n">to</span> <span class="n">be</span> <span class="n">predicted</span>
</span><span class='line'>    <span class="err">\nfrom</span> <span class="err">a</span> <span class="err">given</span> <span class="k">set</span> <span class="nb">of</span> <span class="nf">predictors</span> <span class="p">(</span><span class="n">independent</span> <span class="n">variables</span><span class="p">))</span><span class="s">&quot;;</span>
</span><span class='line'>    <span class="n">node</span><span class="p">[</span><span class="n">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">chartreuse</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">Reg[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;1. Linear Regression&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">LR[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;2. logistic Regression&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">DT[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;3. Decision Tree&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">SVM[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;4. Supported Vector Machine&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">RF[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;5. Random Forest&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">KNN[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;6. KNN&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">NB[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;7. Naive Bayes&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">Reg-&gt;LR-&gt;DT-&gt;SVM-&gt;RF-&gt;KNN-&gt;NB-&gt;Reg</span><span class="k">;</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster_2</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">chartreuse</span><span class="p">];</span>
</span><span class='line'>    <span class="err">//USL[</span><span class="nv">shape</span><span class="o">=</span><span class="n">ellipse</span><span class="o">,</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;UnSupervised Learning&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="nv">label</span><span class="o">=</span><span class="s">&quot;UnSupervised Learning(do not have any target or outcome variable to</span>
</span><span class='line'>    <span class="err">\</span><span class="n">npredict</span> <span class="o">/</span> <span class="n">estimate</span><span class="o">.</span>  <span class="n">It</span> <span class="n">is</span> <span class="n">used</span> <span class="n">for</span> <span class="n">clustering</span> <span class="n">population</span>
</span><span class='line'>    <span class="err">\nin</span> <span class="err">different</span> <span class="err">groups,</span> <span class="err">whic</span><span class="k">h</span> <span class="n">is</span> <span class="n">widely</span> <span class="n">used</span> <span class="n">for</span>
</span><span class='line'>    <span class="err">\nsegmenting</span> <span class="err">customers</span> <span class="err">in</span> <span class="err">different</span> <span class="err">groups</span> <span class="err">for</span> <span class="err">specific</span> <span class="err">intervention</span> <span class="err">)&quot;</span><span class="k">;</span>
</span><span class='line'>    <span class="err">AA[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;Apriori Alogirithm&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">KM[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;K-means&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster_3</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">chartreuse</span><span class="p">];</span>
</span><span class='line'>    <span class="nv">label</span><span class="o">=</span><span class="s">&quot;Reinforcement Learning(It works this way: the machine is </span>
</span><span class='line'>    <span class="err">\</span><span class="n">nexposed</span> <span class="n">to</span> <span class="n">an</span> <span class="n">environment</span> <span class="n">where</span> <span class="n">it</span>
</span><span class='line'>    <span class="err">\ntrains</span> <span class="err">itsel</span><span class="k">f</span> <span class="n">continually</span> <span class="nb">using</span> <span class="n">trial</span> <span class="n">and</span> <span class="n">error</span><span class="o">.</span>
</span><span class='line'>    <span class="err">\nT</span><span class="k">his</span> <span class="n">machine</span> <span class="n">learns</span> <span class="n">from</span> <span class="n">past</span> <span class="n">experience</span>
</span><span class='line'>    <span class="err">\nand</span> <span class="err">tries</span> <span class="err">to</span> <span class="err">captu</span><span class="k">re</span> <span class="n">the</span> <span class="n">best</span> <span class="n">possible</span> <span class="n">knowledge</span>
</span><span class='line'>    <span class="err">\nto</span> <span class="err">make</span> <span class="err">accurate</span> <span class="err">business</span> <span class="err">decisions</span> <span class="err">)&quot;</span><span class="k">;</span>
</span><span class='line'>    <span class="err">MDP[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;Markov Decision Process&quot;</span><span class="p">]</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="err">//MachineLearning-&gt;{SL</span> <span class="err">USL</span> <span class="err">RL}</span><span class="k">;</span>
</span><span class='line'>    <span class="err">MachineLearning-&gt;Reg[</span><span class="nv">lhead</span><span class="o">=</span><span class="n">cluster_1</span><span class="p">];</span>
</span><span class='line'>    <span class="err">MachineLearning-&gt;AA[</span><span class="nv">lhead</span><span class="o">=</span><span class="n">cluster_2</span><span class="p">];</span>
</span><span class='line'>    <span class="err">MachineLearning-&gt;MDP[</span><span class="nv">lhead</span><span class="o">=</span><span class="n">cluster_3</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2016/09/28/machine-learning-some-search-record/'>http://jueqingsizhe66.github.io/blog/2016/09/28/machine-learning-some-search-record/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Graphviz Notebook]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook/"/>
    <updated>2016-09-28T17:14:53+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook</id>
    <content type="html"><![CDATA[<p><a href="http://www.graphviz.org">graphviz</a>可用于帮助你绘制工具之外和工具之内的想法。关于绘图的历史可以参看<a href="http://www.merl.com/publications/TR2001-49">A short note of the graph drawing</a>.</p>

<!--more-->


<p><a href="http://graphviz.org/Download.php">graphviz下载链接</a>, 安装很方便，一步一步进行即可，一般是在<a href="http://graphviz.org/content/command-line-invocation">命令行使用</a>。</p>

<p>下面是我记录学习的一些graphviz的笔记。只用pdf输出<code>dot -Tpdf *.dot -o *.pdf</code>，
因为质量较好(矢量化输出)，但是特殊情况可以参考<a href="http://graphviz.org/content/command-line-invocation">output format</a>,
因为不同的输出会在<a href="http://graphviz.org/content/attrs">Node, Edge and Graph Attributes</a> 节点、边、图中表现出不同的样式出来。</p>

<p><img src="http://jueqingsizhe66.github.io/images/graphviz/main1.jpg" alt="main1" /></p>

<p><img src="http://jueqingsizhe66.github.io/images/graphviz/main2.jpg" alt="main2" /></p>

<h2>CFD</h2>

<p><img src="http://jueqingsizhe66.github.io/images/graphviz/CFD.jpg" alt="CFD" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">G</span><span class="p">{</span>
</span><span class='line'>    <span class="nv">compound</span><span class="o">=</span><span class="n">true</span><span class="p">;</span> <span class="err">//</span> <span class="err">这样lhead</span> <span class="err">ltai</span><span class="k">l</span><span class="err">指向</span><span class="n">cluster</span><span class="err">才有效</span>
</span><span class='line'>    <span class="err">edge</span> <span class="err">[</span><span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;SimSun&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">grap</span><span class="k">h</span><span class="p">[</span><span class="n">fontname</span><span class="o">=</span><span class="s">&quot;SimHei&quot;</span><span class="p">]</span>
</span><span class='line'>    <span class="err">node</span> <span class="err">[</span><span class="nv">shape</span><span class="o">=</span><span class="n">box</span><span class="o">,</span> <span class="n">fontname</span><span class="o">=</span><span class="s">&quot;KaiTi&quot;</span> <span class="n">size</span><span class="o">=</span><span class="s">&quot;5,5&quot;</span><span class="o">,</span> <span class="n">style</span><span class="o">=</span><span class="n">filld</span><span class="o">,</span> <span class="n">color</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;lightblue&quot;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">rankdir</span><span class="o">=</span><span class="n">LR</span><span class="p">;</span>
</span><span class='line'>    <span class="err">{</span>
</span><span class='line'>    <span class="nv">rank</span><span class="o">=</span><span class="n">same</span><span class="p">;</span>
</span><span class='line'>    <span class="err">befo</span><span class="k">re</span><span class="p">[</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;前处理&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">compute[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;计算&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">after[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;后处理&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster1</span><span class="p">{</span>
</span><span class='line'>        <span class="err">geometry[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;几何建模&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="err">me</span><span class="k">sh</span><span class="err">[</span><span class="nb">label</span><span class="err">=&quot;网格生成&quot;]</span><span class="p">;</span>
</span><span class='line'>        <span class="err">geometry-&gt;me</span><span class="k">sh</span><span class="err">;</span>
</span><span class='line'>        <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster2</span><span class="p">{</span>
</span><span class='line'>        <span class="err">initia</span><span class="k">l</span><span class="p">[</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;初始化&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="err">setting[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;设置&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="err">mode</span><span class="k">l</span><span class="p">[</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;湍流模型&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="err">output[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;输出&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="err">initia</span><span class="k">l</span><span class="o">-&gt;</span><span class="n">setting</span><span class="o">-&gt;</span><span class="n">model</span><span class="o">-&gt;</span><span class="n">output</span><span class="p">;</span>
</span><span class='line'>        <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster3</span><span class="p">{</span>
</span><span class='line'>       <span class="err">plane[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;截面&quot;</span><span class="p">];</span>
</span><span class='line'>       <span class="err">polyline[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;多边形线&quot;</span><span class="p">];</span>
</span><span class='line'>       <span class="err">chart[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;表格&quot;</span><span class="p">];</span>
</span><span class='line'>       <span class="err">pile[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;批处理&quot;</span><span class="p">];</span>
</span><span class='line'>       <span class="err">contour[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;云图&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="err">plane-&gt;polyline-&gt;chart</span><span class="k">;</span>
</span><span class='line'>        <span class="err">plane-&gt;contour</span><span class="k">;</span>
</span><span class='line'>        <span class="err">}</span>
</span><span class='line'>    <span class="err">befo</span><span class="k">re</span><span class="o">-&gt;</span><span class="n">compute</span><span class="o">-&gt;</span><span class="n">after</span><span class="p">;</span>
</span><span class='line'>    <span class="err">befo</span><span class="k">re</span><span class="o">-&gt;</span><span class="n">geometry</span><span class="p">[</span><span class="n">lhead</span><span class="o">=</span><span class="n">cluster1</span><span class="p">];</span>
</span><span class='line'>    <span class="err">compute-&gt;initia</span><span class="k">l</span><span class="p">[</span><span class="n">lhead</span><span class="o">=</span><span class="n">cluster2</span><span class="p">];</span>
</span><span class='line'>    <span class="err">after-&gt;plane[</span><span class="nv">lhead</span><span class="o">=</span><span class="n">cluster3</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>inner 图</h2>

<p>注意使用circo生成，需要有一个回环圆。</p>

<p>compound用于子图的lhead属性，不设置没效果。</p>

<p>concentrate这里没什么作用。</p>

<p><img src="http://jueqingsizhe66.github.io/images/graphviz/inner.jpg" alt="inner" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">//circo</span> <span class="err">-Tpd</span><span class="k">f</span> <span class="n">inner</span><span class="o">.</span><span class="n">dot</span> <span class="o">-</span><span class="n">o</span> <span class="n">inner</span><span class="o">.</span><span class="n">pdf</span>
</span><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">G</span><span class="p">{</span>
</span><span class='line'>    <span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;SimSun&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">compound</span><span class="o">=</span><span class="n">true</span><span class="p">;</span> <span class="err">//</span> <span class="err">这样lhead</span> <span class="err">ltai</span><span class="k">l</span><span class="err">指向</span><span class="n">cluster</span><span class="err">才有效</span>
</span><span class='line'>    <span class="err">edge[</span><span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;SimSun&quot;</span><span class="o">,</span><span class="n">arrowhead</span><span class="o">=</span><span class="n">vee</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="n">blue</span><span class="p">];</span>
</span><span class='line'>    <span class="err">grap</span><span class="k">h</span><span class="p">[</span><span class="n">fontname</span><span class="o">=</span><span class="s">&quot;SimHei&quot;</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="n">lightgray</span><span class="p">];</span>
</span><span class='line'>    <span class="err">node[</span><span class="nv">shape</span><span class="o">=</span><span class="n">box</span><span class="o">,</span> <span class="n">fontname</span><span class="o">=</span><span class="s">&quot;KaiTi&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">//</span><span class="nv">concentrate</span><span class="o">=</span><span class="n">true</span><span class="p">;</span>
</span><span class='line'>    <span class="err">//node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;lightblue&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="nv">arrowsize</span><span class="o">=</span><span class="mf">.5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">concentrate</span><span class="o">=</span><span class="n">true</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">nodesep</span><span class="o">=</span><span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">ranksep</span><span class="o">=</span><span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">rankdir</span><span class="o">=</span><span class="n">BU</span><span class="p">;</span>
</span><span class='line'>    <span class="err">//</span><span class="nv">rank</span><span class="o">=</span><span class="n">sink</span><span class="p">;</span>
</span><span class='line'>    <span class="err">//task[</span><span class="nv">shape</span><span class="o">=</span><span class="n">polygon</span><span class="o">,</span><span class="n">sides</span><span class="o">=</span><span class="mi">5</span><span class="o">,</span><span class="n">peripheries</span><span class="o">=</span><span class="mi">2</span><span class="o">,</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;图像处理&quot;</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="s">&quot;#F1C40F&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="err">/*</span>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster_0</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">innerpoint[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">innerpoint1[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">innerpoint2[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">innerpoint3[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">innerpoint4[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">innerpoint-&gt;innerpoint1-&gt;innerpoint2-&gt;innerpoint3-&gt;innerpoint4-&gt;innerpoint[</span><span class="nv">arrowsize</span><span class="o">=</span><span class="mf">0.1</span><span class="p">];</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">*/</span>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster_1</span><span class="p">{</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">rankdir</span><span class="o">=</span><span class="n">TB</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">label</span><span class="o">=</span><span class="s">&quot;内&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">fillcolor</span><span class="o">=</span><span class="n">lightgray</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">shape</span><span class="o">=</span><span class="n">ellpse</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//edge[</span><span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;SimSun&quot;</span><span class="o">,</span><span class="n">arrowhead</span><span class="o">=</span><span class="n">vee</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="n">blue</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">dashed</span><span class="p">];</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">fillcolor</span><span class="o">=</span><span class="n">lightgray</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">fillcolor</span><span class="o">=</span><span class="n">mintcream</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="err">{</span>
</span><span class='line'>            <span class="err">//node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;chartreuse&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">//node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;palegreen&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">//</span><span class="nv">rank</span><span class="o">=</span><span class="n">same</span><span class="p">;</span>
</span><span class='line'>            <span class="err">node[</span><span class="nv">color</span><span class="o">=</span><span class="n">red</span><span class="o">,</span><span class="n">shape</span><span class="o">=</span><span class="n">circle</span><span class="p">];</span>
</span><span class='line'>            <span class="err">edge[</span><span class="nv">color</span><span class="o">=</span><span class="n">green</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">dashed</span><span class="p">]</span>
</span><span class='line'>            <span class="err">subgoal1[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内1&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">step1[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内2&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">step2[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内3&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">step3[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内4&quot;</span><span class="p">]</span>
</span><span class='line'>            <span class="err">step4[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内n&quot;</span><span class="p">]</span>
</span><span class='line'>            <span class="err">subgoal1-&gt;</span> <span class="err">step1-&gt;step2-&gt;step3-&gt;step4-&gt;subgoal1</span><span class="k">;</span>
</span><span class='line'>        <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'> <span class="err">//</span>           <span class="err">innerpoint-&gt;{subgoal1</span> <span class="err">step1</span> <span class="err">step2</span> <span class="err">step3</span> <span class="err">step4}[</span><span class="nv">color</span><span class="o">=</span><span class="n">red</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">dotted</span><span class="o">,</span><span class="n">ltail</span><span class="o">=</span><span class="n">cluster_0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">outer1[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外1&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outer2[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外2&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outer3[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外3&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outer4[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外4&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outern[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外n&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">subgoal1-&gt;outern[</span><span class="nv">ltail</span><span class="o">=</span><span class="n">cluster_1</span><span class="p">];</span>
</span><span class='line'>    <span class="err">step1-&gt;outer1[</span><span class="nv">ltail</span><span class="o">=</span><span class="n">cluster_1</span><span class="p">];</span>
</span><span class='line'>    <span class="err">step2-&gt;outer2[</span><span class="nv">ltail</span><span class="o">=</span><span class="n">cluster_1</span><span class="p">];</span>
</span><span class='line'>    <span class="err">step3-&gt;outer3[</span><span class="nv">ltail</span><span class="o">=</span><span class="n">cluster_1</span><span class="p">];</span>
</span><span class='line'>    <span class="err">step4-&gt;outer4[</span><span class="nv">ltail</span><span class="o">=</span><span class="n">cluster_1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">outerf1[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerf2[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerf3[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerf4[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerfn[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">outer1-&gt;outerf1</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outer2-&gt;outerf2</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outer3-&gt;outerf3</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outer4-&gt;outerf4</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outern-&gt;outerfn</span><span class="k">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">//{</span><span class="nv">rank</span><span class="o">=</span><span class="n">same</span><span class="p">;</span> <span class="err">innerpoint</span> <span class="err">step4</span> <span class="err">outer4}</span><span class="k">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>outer图</h2>

<p><img src="http://jueqingsizhe66.github.io/images/graphviz/outer.jpg" alt="outer" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">//circo</span> <span class="err">-Tpd</span><span class="k">f</span> <span class="n">inner</span><span class="o">.</span><span class="n">dot</span> <span class="o">-</span><span class="n">o</span> <span class="n">inner</span><span class="o">.</span><span class="n">pdf</span>
</span><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">G</span><span class="p">{</span>
</span><span class='line'>    <span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;SimSun&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">compound</span><span class="o">=</span><span class="n">true</span><span class="p">;</span> <span class="err">//</span> <span class="err">这样lhead</span> <span class="err">ltai</span><span class="k">l</span><span class="err">指向</span><span class="n">cluster</span><span class="err">才有效</span>
</span><span class='line'>    <span class="err">edge[</span><span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;SimSun&quot;</span><span class="o">,</span><span class="n">arrowhead</span><span class="o">=</span><span class="n">vee</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="n">blue</span><span class="p">];</span>
</span><span class='line'>    <span class="err">grap</span><span class="k">h</span><span class="p">[</span><span class="n">fontname</span><span class="o">=</span><span class="s">&quot;SimHei&quot;</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="n">lightgray</span><span class="p">];</span>
</span><span class='line'>    <span class="err">node[</span><span class="nv">shape</span><span class="o">=</span><span class="n">box</span><span class="o">,</span> <span class="n">fontname</span><span class="o">=</span><span class="s">&quot;KaiTi&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">//</span><span class="nv">concentrate</span><span class="o">=</span><span class="n">true</span><span class="p">;</span>
</span><span class='line'>    <span class="err">//node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;lightblue&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="nv">arrowsize</span><span class="o">=</span><span class="mf">.5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">nodesep</span><span class="o">=</span><span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">ranksep</span><span class="o">=</span><span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">rankdir</span><span class="o">=</span><span class="n">BU</span><span class="p">;</span>
</span><span class='line'>    <span class="err">//</span><span class="nv">center</span><span class="o">=</span><span class="n">true</span><span class="p">;</span>
</span><span class='line'>    <span class="err">//</span><span class="nv">rank</span><span class="o">=</span><span class="n">sink</span><span class="p">;</span>
</span><span class='line'>    <span class="err">//task[</span><span class="nv">shape</span><span class="o">=</span><span class="n">polygon</span><span class="o">,</span><span class="n">sides</span><span class="o">=</span><span class="mi">5</span><span class="o">,</span><span class="n">peripheries</span><span class="o">=</span><span class="mi">2</span><span class="o">,</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;图像处理&quot;</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="s">&quot;#F1C40F&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster_1</span><span class="p">{</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">rankdir</span><span class="o">=</span><span class="n">TB</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">label</span><span class="o">=</span><span class="s">&quot;内&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">fillcolor</span><span class="o">=</span><span class="n">chartreuse</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">shape</span><span class="o">=</span><span class="n">ellpse</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//edge[</span><span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;SimSun&quot;</span><span class="o">,</span><span class="n">arrowhead</span><span class="o">=</span><span class="n">vee</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="n">blue</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">dashed</span><span class="p">];</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">fillcolor</span><span class="o">=</span><span class="n">lightgray</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">fillcolor</span><span class="o">=</span><span class="n">mintcream</span><span class="p">;</span>
</span><span class='line'>        <span class="err">//</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="err">{</span>
</span><span class='line'>            <span class="err">//node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;chartreuse&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">//node[</span><span class="nv">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;palegreen&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">//</span><span class="nv">rank</span><span class="o">=</span><span class="n">same</span><span class="p">;</span>
</span><span class='line'>            <span class="err">//innerpoint[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>            <span class="err">node[</span><span class="nv">color</span><span class="o">=</span><span class="n">red</span><span class="o">,</span><span class="n">shape</span><span class="o">=</span><span class="n">circle</span><span class="p">];</span>
</span><span class='line'>            <span class="err">edge[</span><span class="nv">color</span><span class="o">=</span><span class="s">&quot;green&quot;</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">dashed</span><span class="p">]</span>
</span><span class='line'>            <span class="err">subgoal1[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内1&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">step1[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内2&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">step2[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内3&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="err">step3[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内4&quot;</span><span class="p">]</span>
</span><span class='line'>            <span class="err">step4[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;内n&quot;</span><span class="p">]</span>
</span><span class='line'>            <span class="err">subgoal1-&gt;</span> <span class="err">step1-&gt;step2-&gt;step3-&gt;step4-&gt;subgoal1</span><span class="k">;</span>
</span><span class='line'>
</span><span class='line'>           <span class="err">//</span> <span class="err">{subgoal1</span> <span class="err">step1</span> <span class="err">step2</span> <span class="err">step3</span> <span class="err">step4}-&gt;innerpoint[</span><span class="nv">color</span><span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'><span class="err">subgrap</span><span class="k">h</span> <span class="n">cluster_0</span><span class="p">{</span>
</span><span class='line'>    <span class="err">outer1[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外1&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outer2[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外2&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outer3[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外3&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outer4[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外4&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outern[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;外n&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="err">//outer1-&gt;outer2-&gt;outer3-&gt;outer4-&gt;outern-&gt;outer1</span><span class="k">;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'>    <span class="err">outern-&gt;step3</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outer1-&gt;step4</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outer2-&gt;subgoal1</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outer3-&gt;step1</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outer4-&gt;step2</span><span class="k">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">outerf1[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerf2[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerf3[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerf4[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">outerfn[</span><span class="nv">shape</span><span class="o">=</span><span class="n">point</span><span class="o">,</span><span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="err">//outerf1-&gt;outerf2-&gt;outerf3-&gt;outerf4-&gt;outerfn-&gt;outerf1</span><span class="k">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">outerf1-&gt;outer3</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outerf2-&gt;outer2</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outerf3-&gt;outer1</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outerf4-&gt;outern</span><span class="k">;</span>
</span><span class='line'>    <span class="err">outerfn-&gt;outer4</span><span class="k">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>   <span class="err">//</span> <span class="err">outer1-&gt;outer2-&gt;outer3-&gt;outer4-&gt;outern-&gt;outer1</span><span class="k">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>算法绘制</h2>

<p><img src="http://jueqingsizhe66.github.io/images/graphviz/binary.jpg" alt="algo" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">ast</span><span class="p">{</span>
</span><span class='line'>    <span class="nv">size</span><span class="o">=</span><span class="s">&quot;4,4&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;Microsoft YaHei&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="err">node</span> <span class="err">[</span><span class="nv">shape</span><span class="o">=</span><span class="n">circle</span><span class="o">,</span> <span class="n">fontname</span><span class="o">=</span><span class="s">&quot;Microsoft YaHei&quot;</span><span class="o">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">];</span>
</span><span class='line'><span class="err">edge</span> <span class="err">[</span><span class="nv">fontname</span><span class="o">=</span><span class="s">&quot;Microsoft YaHei&quot;</span><span class="o">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">];</span>
</span><span class='line'><span class="err">node</span> <span class="err">[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;plaintext&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">mu</span><span class="k">l</span> <span class="p">[</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;mul(*)&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">add</span> <span class="err">[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;add(+)&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">add</span> <span class="err">-&gt;</span> <span class="err">3</span>
</span><span class='line'><span class="err">add</span> <span class="err">-&gt;</span> <span class="err">4</span><span class="k">;</span>
</span><span class='line'><span class="err">mu</span><span class="k">l</span> <span class="o">-&gt;</span> <span class="n">add</span><span class="p">;</span>
</span><span class='line'><span class="err">mu</span><span class="k">l</span> <span class="o">-&gt;</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>时序表制作</h2>

<p><img src="http://jueqingsizhe66.github.io/images/graphviz/sequence.jpg" alt="sequence" /></p>

<p>聪明的做法 是从图中隐藏了所有stepi（其实图像对象中是存在的，只不过打印不出来
并同时使用了plaintext的风格。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">G</span> <span class="p">{</span>
</span><span class='line'><span class="nv">rankdir</span><span class="o">=</span><span class="s">&quot;LR&quot;</span><span class="p">;</span>
</span><span class='line'><span class="err">node[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;point&quot;</span><span class="o">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="err">edge[</span><span class="nv">arrowhead</span><span class="o">=</span><span class="s">&quot;none&quot;</span><span class="o">,</span> <span class="n">style</span><span class="o">=</span><span class="s">&quot;dashed&quot;</span><span class="p">]</span>
</span><span class='line'><span class="err">{</span>
</span><span class='line'><span class="nv">rank</span><span class="o">=</span><span class="s">&quot;same&quot;</span><span class="p">;</span>
</span><span class='line'><span class="err">edge[</span><span class="nv">style</span><span class="o">=</span><span class="s">&quot;solid&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">LC[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;plaintext&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">LC</span> <span class="err">-&gt;</span> <span class="err">step00</span> <span class="err">-&gt;</span> <span class="err">step01</span> <span class="err">-&gt;</span> <span class="err">step02</span> <span class="err">-&gt;</span> <span class="err">step03</span> <span class="err">-&gt;</span> <span class="err">step04</span> <span class="err">-&gt;</span> <span class="err">step05</span><span class="k">;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'><span class="err">{</span>
</span><span class='line'><span class="nv">rank</span><span class="o">=</span><span class="s">&quot;same&quot;</span><span class="p">;</span>
</span><span class='line'><span class="err">edge[</span><span class="nv">style</span><span class="o">=</span><span class="s">&quot;solid&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">Agency[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;plaintext&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">Agency</span> <span class="err">-&gt;</span> <span class="err">step10</span> <span class="err">-&gt;</span> <span class="err">step11</span> <span class="err">-&gt;</span> <span class="err">step12</span> <span class="err">-&gt;</span> <span class="err">step13</span> <span class="err">-&gt;</span> <span class="err">step14</span> <span class="err">-&gt;</span> <span class="err">step15</span><span class="k">;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'><span class="err">{</span>
</span><span class='line'><span class="nv">rank</span><span class="o">=</span><span class="s">&quot;same&quot;</span><span class="p">;</span>
</span><span class='line'><span class="err">edge[</span><span class="nv">style</span><span class="o">=</span><span class="s">&quot;solid&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">Agent[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;plaintext&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">Agent</span> <span class="err">-&gt;</span> <span class="err">step20</span> <span class="err">-&gt;</span> <span class="err">step21</span> <span class="err">-&gt;</span> <span class="err">step22</span> <span class="err">-&gt;</span> <span class="err">step23</span> <span class="err">-&gt;</span> <span class="err">step24</span> <span class="err">-&gt;</span> <span class="err">step25</span><span class="k">;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'><span class="err">step00</span> <span class="err">-&gt;</span> <span class="err">step10</span> <span class="err">[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;sends email new custumer&quot;</span><span class="o">,</span> <span class="n">arrowhead</span><span class="o">=</span><span class="s">&quot;normal&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">step11</span> <span class="err">-&gt;</span> <span class="err">step01</span> <span class="err">[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;declines&quot;</span><span class="o">,</span> <span class="n">arrowhead</span><span class="o">=</span><span class="s">&quot;normal&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">step12</span> <span class="err">-&gt;</span> <span class="err">step02</span> <span class="err">[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;accepts&quot;</span><span class="o">,</span> <span class="n">arrowhead</span><span class="o">=</span><span class="s">&quot;normal&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">step13</span> <span class="err">-&gt;</span> <span class="err">step23</span> <span class="err">[</span><span class="nv">label</span><span class="o">=</span><span class="s">&quot;forward to&quot;</span><span class="o">,</span> <span class="n">arrowhead</span><span class="o">=</span><span class="s">&quot;normal&quot;</span><span class="p">];</span>
</span><span class='line'><span class="err">step24</span> <span class="err">-&gt;</span> <span class="err">step14</span><span class="k">;</span>
</span><span class='line'><span class="err">step14</span> <span class="err">-&gt;</span> <span class="err">step04</span> <span class="err">[</span><span class="nv">arrowhead</span><span class="o">=</span><span class="s">&quot;normal&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">//xinran[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;none&quot;</span><span class="o">,</span><span class="n">image</span><span class="o">=</span><span class="s">&quot;xinran2.jpg&quot;</span><span class="o">,</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">]</span>
</span><span class='line'><span class="err">betterline[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;record&quot;</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">chartreuse</span><span class="p">];</span>
</span><span class='line'><span class="err">betteredge[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;record&quot;</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">forestgreen</span><span class="p">];</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>reference</h2>

<ol>
<li><p>graphviz的<a href="http://www.graphviz.org/Documentation.php">在线文档</a>,</p></li>
<li><p>dot语言的<a href="http://www.graphviz.org/content/dot-language">在线文档</a>,</p></li>
<li><p><a href="http://www.tonyballantyne.com/graphs.html">drawing Graph using dot</a>介绍了一些图表中分层的概念。</p></li>
<li><p><a href="http://www.tuicool.com/articles/qeqeuyb">使用Graphviz绘制流程图和关系图</a>教会了关于图、节点、边的属性设置(attribute property predictor)，
其实也可以参考<a href="http://graphviz.org/content/attrs">Node, Edge and Graph Attributes</a>关于默认属性的设置，相关的还可以参考<a href="http://graphviz.org/content/node-shapes">node shapes</a>,
<a href="http://graphviz.org/content/arrow-shapes">Arrow Shapes</a>, <a href="http://graphviz.org/content/color-names">colors</a> 这也是比较会经常查看的参数属性设置。</p></li>
</ol>


<p>注意Mrecord不支持中文，为了实现<a href="http://www.graphviz.org/content/global-subgraph-style-statements">圆角</a>你可以使用<code>style=rounded</code>来实现(可以和filled叠加起来使用) <code>style="rounded,filled"</code>。
还可以参考<a href="http://stackoverflow.com/questions/7115870/creating-straight-edges-in-graphviz">Creating Straight Edges in Graphviz</a>,以及<a href="http://www.graphviz.org/content/attrs">官网属性文档style section</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>node与edge公用样式：<span class="s2">&quot;dashed&quot;</span>虚线, <span class="s2">&quot;dotted&quot;</span>点, <span class="s2">&quot;solid&quot;</span>固体框, <span class="s2">&quot;invis&quot;</span>隐藏 and <span class="s2">&quot;bold&quot;</span> 加粗
</span><span class='line'>edge 特有样式：<span class="s2">&quot;tapered&quot;</span> 锥形
</span><span class='line'>node 特有样式：<span class="s2">&quot;filled&quot;</span>填充, <span class="s2">&quot;diagonals&quot;</span>对角线 与 <span class="s2">&quot;rounded&quot;</span> 圆角
</span><span class='line'>cluster可使用样式：<span class="s2">&quot;filled&quot;</span>与<span class="s2">&quot;rounded&quot;</span>
</span><span class='line'> <span class="s2">&quot;radial&quot;</span>径向样式可被nodes, clusters 与graphs使用，如果使用需要指出一个径向渐变填充风格
</span></code></pre></td></tr></table></div></figure>


<p>graphviz也是支持插图的,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='gnuplot'><span class='line'><span class="err">digrap</span><span class="k">h</span> <span class="n">G</span> <span class="p">{</span>
</span><span class='line'><span class="nv">rankdir</span><span class="o">=</span><span class="s">&quot;LR&quot;</span><span class="p">;</span>
</span><span class='line'><span class="err">xinran[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;none&quot;</span><span class="o">,</span><span class="n">image</span><span class="o">=</span><span class="s">&quot;xinran2.jpg&quot;</span><span class="o">,</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">]</span>
</span><span class='line'><span class="err">betterline[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;record&quot;</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">chartreuse</span><span class="p">];</span>
</span><span class='line'><span class="err">betteredge[</span><span class="nv">shape</span><span class="o">=</span><span class="s">&quot;record&quot;</span><span class="o">,</span><span class="n">style</span><span class="o">=</span><span class="n">filled</span><span class="o">,</span><span class="n">fillcolor</span><span class="o">=</span><span class="n">forestgreen</span><span class="p">];</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://www.ibm.com/developerworks/cn/aix/library/au-aix-graphviz/index.html">使用 Graphviz 生成自动化系统图 </a>.</li>
<li><a href="http://lockriver.blog.163.com/blog/static/487232242010101761749383/">中文乱码</a>.</li>
<li><a href="http://lockriver.blog.163.com/blog/static/487232242010101761749383/">Using graph drawing </a> <font color=red>很详细，推荐</font></li>
</ol>


<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook/'>http://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash Special Annotation]]></title>
    <link href="http://jueqingsizhe66.github.io/blog/2016/09/25/bash-special-annotation/"/>
    <updated>2016-09-25T23:15:01+08:00</updated>
    <id>http://jueqingsizhe66.github.io/blog/2016/09/25/bash-special-annotation</id>
    <content type="html"><![CDATA[<p>关于shell的summary参看<a href="http://jueqingsizhe66.github.io/blog/2016/08/06/linux-shell-summary/#kernel">Linux Shell Summary</a></p>

<p>以下是关于bash的一些比较特殊的地方。</p>

<!--more-->


<h2>1. bash数组再理解</h2>

<p><code>declare -a</code>表示声明一个数组，类似于 <code>declare -i</code> 声明一个整数和<code>declare -x</code>声明一个环境变量。</p>

<p><font color="red">bash数组定义时候使用小括号来赋值，而在引用数组的时候反而使用中括号（不同于其他编程语言)</font></p>

<h3>定义数组</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">bash2</span><span class="o">=(</span><span class="s2">&quot;34&quot;</span>,<span class="s2">&quot;5&quot;</span>,<span class="s2">&quot;5&quot;</span>,<span class="s2">&quot;4&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>引用数组</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> <span class="k">${</span><span class="nv">array</span><span class="p">[n]</span><span class="k">}</span>
</span><span class='line'>遍历数组：
</span><span class='line'><span class="nv">filename</span><span class="o">=(</span><span class="sb">`</span>ls<span class="sb">`</span><span class="o">)</span>
</span><span class='line'><span class="k">for </span>var in <span class="k">${</span><span class="nv">filename</span><span class="p">[@]</span><span class="k">}</span>;<span class="k">do</span>
</span><span class='line'><span class="nb">echo</span> <span class="nv">$var</span>
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<h3>添加数组</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bash1+<span class="o">=</span><span class="s2">&quot;45&quot;</span>; <span class="c">#赋值两边不能有空格</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. bash变量截取和变量替换</h2>

<p><font color="red">bash使用井号代表开头(这和正则表达式有点不同，使用caret)
而结尾则使用百分号(不同于正则表达式的dollar符号$)。并且在当使用两个重叠的井号，表示最大长度（从头开始的最大删除都删掉）
而使用两个百分号则表达反方向的最大长度删除（从尾到头删除匹配字符串）</p>

<ol>
<li>#表示正向最短匹配，##表示正向最大匹配</li>
<li>%表示反向最短匹配，%%表示反向最大匹配</li>
</ol>


<p>而这一点也体现在变量替换当中，</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>子串替换：
</span><span class='line'><span class="k">${</span><span class="nv">string</span><span class="p">/substring/replacement</span><span class="k">}</span>
</span><span class='line'>使用<span class="nv">$replacement</span>来替换第一个匹配的<span class="nv">$substring</span>.
</span><span class='line'>
</span><span class='line'><span class="k">${</span><span class="nv">string</span><span class="p">//substring/replacement</span><span class="k">}</span>
</span><span class='line'>使用<span class="nv">$replacement</span>来替换所有匹配的<span class="nv">$substring</span>.
</span><span class='line'>
</span><span class='line'><span class="k">${</span><span class="nv">string</span><span class="p">/#substring/replacement</span><span class="k">}</span>
</span><span class='line'>如果<span class="nv">$substring</span>匹配<span class="nv">$string</span>的开头部分, 那么就用<span class="nv">$replacement</span>来替换<span class="nv">$substring</span>.
</span><span class='line'>
</span><span class='line'><span class="k">${</span><span class="nv">string</span><span class="p">/%substring/replacement</span><span class="k">}</span>
</span><span class='line'>如果<span class="nv">$substring</span>匹配<span class="nv">$string</span>的结尾部分, 那么就用<span class="nv">$replacement</span>来替换<span class="nv">$substring</span>.
</span><span class='line'>
</span><span class='line'>子串提取的方法主要有：直接到指定位置求子串，字符匹配求子串。
</span><span class='line'><span class="k">${</span><span class="nv">string</span><span class="p">:</span><span class="nv">position</span><span class="k">}</span>
</span><span class='line'>在<span class="nv">$string</span>中从位置<span class="nv">$position</span>开始提取子串.
</span><span class='line'>
</span><span class='line'>如果<span class="nv">$string</span>是<span class="s2">&quot;*&quot;</span>或者<span class="s2">&quot;@&quot;</span>, 那么将会提取从位置<span class="nv">$position</span>开始的位置参数.<span class="o">[</span>1<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">${</span><span class="nv">string</span><span class="p">:</span><span class="nv">position</span><span class="p">:</span><span class="nv">length</span><span class="k">}</span>
</span><span class='line'>在<span class="nv">$string</span>中从位置<span class="nv">$position</span>开始提取<span class="nv">$length</span>长度的子串.
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>除号表示最短替换，双除号表示最长替换</li>
<li>匹配项第一个位置出现#井号表示开头部分</li>
<li>匹配项最后一个位置出现%百分号表示结尾部分</li>
</ol>


<h2>3. bash接受键盘操作</h2>

<p>用一个read命令即可(类似于matlab的input命令)
通常的风格是 <code>read -p "prompt for reminding" variable-name</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>接收键盘输入：
</span><span class='line'>    <span class="nb">read</span> <span class="o">[</span>选项<span class="o">]</span> <span class="o">[</span>变量名<span class="o">]</span>
</span><span class='line'>    选项：
</span><span class='line'>        -p <span class="s2">&quot;提示信息&quot;</span>：在等待read输入时，输出提示信息
</span><span class='line'>        -t 秒数：read命令会一直等待用户输入，使用此选项可以指定等待时间
</span><span class='line'>        -n 字符数：read命令只接受指定的字符数，就会执行
</span><span class='line'>        -s：隐藏输入的数据，适用于机密信息的输入
</span><span class='line'>
</span><span class='line'>read.sh：
</span><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nb">read</span> -p <span class="s2">&quot;please input your name:&quot;</span> -t 30 name
</span><span class='line'><span class="nb">echo</span> <span class="nv">$name</span>
</span><span class='line'>
</span><span class='line'><span class="nb">read</span> -p <span class="s2">&quot;please input your passwd:&quot;</span> -s passwd
</span><span class='line'><span class="nb">echo</span> -e <span class="s2">&quot;\n&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="nv">$passwd</span>
</span><span class='line'>
</span><span class='line'><span class="nb">read</span> -p <span class="s2">&quot;please input your sex [M/F]:&quot;</span> sex
</span><span class='line'><span class="nb">echo</span> -e <span class="s2">&quot;\n&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="nv">$sex</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4. tac反向</h2>

<p>cat在bash中是打印文本信息的作用，而<a href="http://bbs.chinaunix.net/thread-250407-1-1.html">tac</a>则是反向输出文件流</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cat old_file|awk <span class="s1">&#39;{print NR,$0}&#39;</span>|sort -r -n|awk <span class="s1">&#39;{print $2}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>添加每行的行号</li>
<li>逆向排列</li>
<li>输出每行</li>
</ol>


<h2>5. if当中也可以使用双括号进行算术判断</h2>

<p>if并不是支持正则表达式？还是只有变量支持？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root at javazhao-N53SM <span class="o">[</span>13:26:46ä��午<span class="o">]</span> in /MyBashWork/clean on git:develop?
</span><span class='line'><span class="nv">$ </span><span class="k">if</span> <span class="o">[</span> -f <span class="s2">&quot;All.sh&quot;</span> <span class="o">]</span> ;<span class="k">then </span><span class="nb">echo</span> <span class="s2">&quot;hei&quot;</span>; <span class="k">else </span><span class="nb">echo</span> <span class="s2">&quot;no&quot;</span> ;<span class="k">fi</span>;
</span><span class='line'>
</span><span class='line'>hei
</span><span class='line'>
</span><span class='line'>root at javazhao-N53SM <span class="o">[</span>13:26:52ä��午<span class="o">]</span> in /MyBashWork/clean on git:develop?
</span><span class='line'><span class="nv">$ </span><span class="k">if</span> <span class="o">[</span> -f <span class="s2">&quot;*.sh&quot;</span> <span class="o">]</span> ;<span class="k">then </span><span class="nb">echo</span> <span class="s2">&quot;hei&quot;</span>; <span class="k">else </span><span class="nb">echo</span> <span class="s2">&quot;no&quot;</span> ;<span class="k">fi</span>;
</span><span class='line'>
</span><span class='line'>no
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>但是对于变量是可以的
</span><span class='line'><span class="o">[</span>root@bj_manager ~<span class="o">]</span><span class="c"># a=123a;if [[ $a =~ ^[0-9]+$ ]]; then echo ok; fi</span>
</span><span class='line'><span class="o">[</span>root@bj_manager ~<span class="o">]</span><span class="c"># a=123;if [[ $a =~ ^[0-9]+$ ]]; then echo ok; fi  </span>
</span></code></pre></td></tr></table></div></figure>


<p><font color="red">实际情况是只有在双中括号的时候才支持正则表达式</font>。<font color="green">一般是使用双中括号进行文件判断，目录判断，
文件大小判断等</font></p>

<p>if另外一个特殊地方就是使用双括号执行算术比较</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>708@708-PC MINGW64 /e/plGraphViz <span class="o">(</span>master<span class="o">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">((</span> 1&lt;2 <span class="o">))</span> ;<span class="k">then </span><span class="nb">echo</span> <span class="s2">&quot;zero&quot;</span>;   <span class="nb">echo</span> <span class="s2">&quot;a=2&quot;</span>; <span class="nb">echo</span> <span class="s2">&quot;a=3&quot;</span> ;<span class="k">else </span><span class="nb">echo</span> <span class="s2">&quot;no&quot;</span>; <span class="k">fi</span>;
</span><span class='line'>zero
</span><span class='line'><span class="nv">a</span><span class="o">=</span>2
</span><span class='line'><span class="nv">a</span><span class="o">=</span>3
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>708@708-PC MINGW64 /e/dot<span class="o">(</span>1<span class="o">)</span>/testByYe
</span><span class='line'><span class="nv">$ </span>  <span class="k">if</span> <span class="o">[[</span> 1&lt;2 <span class="o">]]</span> ;<span class="k">then </span><span class="nb">echo</span> <span class="s2">&quot;zero&quot;</span>;   <span class="nb">echo</span> <span class="s2">&quot;a=2&quot;</span>; <span class="nb">echo</span> <span class="s2">&quot;a=3&quot;</span> ;<span class="k">else </span><span class="nb">echo</span> <span class="s2">&quot;no&quot;</span>; <span class="k">fi</span>;
</span><span class='line'>bash: unexpected token 284 in conditional <span class="nb">command</span>
</span><span class='line'>bash: syntax error near <span class="sb">`</span>1&lt;<span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>而bash也一般是使用<code>$((...))</code> 进行算术的运算.</p>

<p class='post-footer'>
                        原始地址:<a href='http://jueqingsizhe66.github.io/blog/2016/09/25/bash-special-annotation/'>http://jueqingsizhe66.github.io/blog/2016/09/25/bash-special-annotation/</a><br/>&nbsp;written by <a href='http://jueqingsizhe66.github.io'>Ye Zhaoliang</a>&nbsp;posted at <a href='http://jueqingsizhe66.github.io'>http://jueqingsizhe66.github.io</a></p>

]]></content>
  </entry>
  
</feed>
